/******/ (function(modules) { // webpackBootstrap
/******/ 	// The module cache
/******/ 	var installedModules = {};

/******/ 	// The require function
/******/ 	function __webpack_require__(moduleId) {

/******/ 		// Check if module is in cache
/******/ 		if(installedModules[moduleId])
/******/ 			return installedModules[moduleId].exports;

/******/ 		// Create a new module (and put it into the cache)
/******/ 		var module = installedModules[moduleId] = {
/******/ 			exports: {},
/******/ 			id: moduleId,
/******/ 			loaded: false
/******/ 		};

/******/ 		// Execute the module function
/******/ 		modules[moduleId].call(module.exports, module, module.exports, __webpack_require__);

/******/ 		// Flag the module as loaded
/******/ 		module.loaded = true;

/******/ 		// Return the exports of the module
/******/ 		return module.exports;
/******/ 	}


/******/ 	// expose the modules object (__webpack_modules__)
/******/ 	__webpack_require__.m = modules;

/******/ 	// expose the module cache
/******/ 	__webpack_require__.c = installedModules;

/******/ 	// __webpack_public_path__
/******/ 	__webpack_require__.p = "";

/******/ 	// Load entry module and return exports
/******/ 	return __webpack_require__(0);
/******/ })
/************************************************************************/
/******/ ([
/* 0 */
/***/ function(module, exports, __webpack_require__) {

	module.exports = __webpack_require__(1);


/***/ },
/* 1 */
/***/ function(module, exports, __webpack_require__) {

	'use strict';

	var _react = __webpack_require__(2);

	var _react2 = _interopRequireDefault(_react);

	var _reactDom = __webpack_require__(34);

	var _reactDom2 = _interopRequireDefault(_reactDom);

	var _reactRouter = __webpack_require__(173);

	var _app = __webpack_require__(235);

	var _app2 = _interopRequireDefault(_app);

	var _company = __webpack_require__(246);

	var _company2 = _interopRequireDefault(_company);

	function _interopRequireDefault(obj) { return obj && obj.__esModule ? obj : { default: obj }; }

	document.addEventListener('DOMContentLoaded', function () {
	  _reactDom2.default.render(_react2.default.createElement(
	    _reactRouter.Router,
	    { history: _reactRouter.browserHistory },
	    _react2.default.createElement(
	      _reactRouter.Route,
	      { path: '/', component: _app2.default },
	      _react2.default.createElement(_reactRouter.Route, { path: 'home', component: _app2.default }),
	      _react2.default.createElement(_reactRouter.Route, { path: 'company', component: _company2.default })
	    )
	  ), document.getElementById('mainstreet'));
	});

	// React.createElement(AppComponent),

/***/ },
/* 2 */
/***/ function(module, exports, __webpack_require__) {

	'use strict';

	module.exports = __webpack_require__(3);


/***/ },
/* 3 */
/***/ function(module, exports, __webpack_require__) {

	/* WEBPACK VAR INJECTION */(function(process) {/**
	 * Copyright 2013-present, Facebook, Inc.
	 * All rights reserved.
	 *
	 * This source code is licensed under the BSD-style license found in the
	 * LICENSE file in the root directory of this source tree. An additional grant
	 * of patent rights can be found in the PATENTS file in the same directory.
	 *
	 * @providesModule React
	 */

	'use strict';

	var _assign = __webpack_require__(5);

	var ReactChildren = __webpack_require__(6);
	var ReactComponent = __webpack_require__(18);
	var ReactClass = __webpack_require__(21);
	var ReactDOMFactories = __webpack_require__(26);
	var ReactElement = __webpack_require__(10);
	var ReactPropTypes = __webpack_require__(31);
	var ReactVersion = __webpack_require__(32);

	var onlyChild = __webpack_require__(33);
	var warning = __webpack_require__(12);

	var createElement = ReactElement.createElement;
	var createFactory = ReactElement.createFactory;
	var cloneElement = ReactElement.cloneElement;

	if (process.env.NODE_ENV !== 'production') {
	  var ReactElementValidator = __webpack_require__(28);
	  createElement = ReactElementValidator.createElement;
	  createFactory = ReactElementValidator.createFactory;
	  cloneElement = ReactElementValidator.cloneElement;
	}

	var __spread = _assign;

	if (process.env.NODE_ENV !== 'production') {
	  var warned = false;
	  __spread = function () {
	    process.env.NODE_ENV !== 'production' ? warning(warned, 'React.__spread is deprecated and should not be used. Use ' + 'Object.assign directly or another helper function with similar ' + 'semantics. You may be seeing this warning due to your compiler. ' + 'See https://fb.me/react-spread-deprecation for more details.') : void 0;
	    warned = true;
	    return _assign.apply(null, arguments);
	  };
	}

	var React = {

	  // Modern

	  Children: {
	    map: ReactChildren.map,
	    forEach: ReactChildren.forEach,
	    count: ReactChildren.count,
	    toArray: ReactChildren.toArray,
	    only: onlyChild
	  },

	  Component: ReactComponent,

	  createElement: createElement,
	  cloneElement: cloneElement,
	  isValidElement: ReactElement.isValidElement,

	  // Classic

	  PropTypes: ReactPropTypes,
	  createClass: ReactClass.createClass,
	  createFactory: createFactory,
	  createMixin: function (mixin) {
	    // Currently a noop. Will be used to validate and trace mixins.
	    return mixin;
	  },

	  // This looks DOM specific but these are actually isomorphic helpers
	  // since they are just generating DOM strings.
	  DOM: ReactDOMFactories,

	  version: ReactVersion,

	  // Deprecated hook for JSX spread, don't use this for anything.
	  __spread: __spread
	};

	module.exports = React;
	/* WEBPACK VAR INJECTION */}.call(exports, __webpack_require__(4)))

/***/ },
/* 4 */
/***/ function(module, exports) {

	// shim for using process in browser

	var process = module.exports = {};

	// cached from whatever global is present so that test runners that stub it
	// don't break things.  But we need to wrap it in a try catch in case it is
	// wrapped in strict mode code which doesn't define any globals.  It's inside a
	// function because try/catches deoptimize in certain engines.

	var cachedSetTimeout;
	var cachedClearTimeout;

	(function () {
	  try {
	    cachedSetTimeout = setTimeout;
	  } catch (e) {
	    cachedSetTimeout = function () {
	      throw new Error('setTimeout is not defined');
	    }
	  }
	  try {
	    cachedClearTimeout = clearTimeout;
	  } catch (e) {
	    cachedClearTimeout = function () {
	      throw new Error('clearTimeout is not defined');
	    }
	  }
	} ())
	var queue = [];
	var draining = false;
	var currentQueue;
	var queueIndex = -1;

	function cleanUpNextTick() {
	    if (!draining || !currentQueue) {
	        return;
	    }
	    draining = false;
	    if (currentQueue.length) {
	        queue = currentQueue.concat(queue);
	    } else {
	        queueIndex = -1;
	    }
	    if (queue.length) {
	        drainQueue();
	    }
	}

	function drainQueue() {
	    if (draining) {
	        return;
	    }
	    var timeout = cachedSetTimeout(cleanUpNextTick);
	    draining = true;

	    var len = queue.length;
	    while(len) {
	        currentQueue = queue;
	        queue = [];
	        while (++queueIndex < len) {
	            if (currentQueue) {
	                currentQueue[queueIndex].run();
	            }
	        }
	        queueIndex = -1;
	        len = queue.length;
	    }
	    currentQueue = null;
	    draining = false;
	    cachedClearTimeout(timeout);
	}

	process.nextTick = function (fun) {
	    var args = new Array(arguments.length - 1);
	    if (arguments.length > 1) {
	        for (var i = 1; i < arguments.length; i++) {
	            args[i - 1] = arguments[i];
	        }
	    }
	    queue.push(new Item(fun, args));
	    if (queue.length === 1 && !draining) {
	        cachedSetTimeout(drainQueue, 0);
	    }
	};

	// v8 likes predictible objects
	function Item(fun, array) {
	    this.fun = fun;
	    this.array = array;
	}
	Item.prototype.run = function () {
	    this.fun.apply(null, this.array);
	};
	process.title = 'browser';
	process.browser = true;
	process.env = {};
	process.argv = [];
	process.version = ''; // empty string to avoid regexp issues
	process.versions = {};

	function noop() {}

	process.on = noop;
	process.addListener = noop;
	process.once = noop;
	process.off = noop;
	process.removeListener = noop;
	process.removeAllListeners = noop;
	process.emit = noop;

	process.binding = function (name) {
	    throw new Error('process.binding is not supported');
	};

	process.cwd = function () { return '/' };
	process.chdir = function (dir) {
	    throw new Error('process.chdir is not supported');
	};
	process.umask = function() { return 0; };


/***/ },
/* 5 */
/***/ function(module, exports) {

	'use strict';
	/* eslint-disable no-unused-vars */
	var hasOwnProperty = Object.prototype.hasOwnProperty;
	var propIsEnumerable = Object.prototype.propertyIsEnumerable;

	function toObject(val) {
		if (val === null || val === undefined) {
			throw new TypeError('Object.assign cannot be called with null or undefined');
		}

		return Object(val);
	}

	function shouldUseNative() {
		try {
			if (!Object.assign) {
				return false;
			}

			// Detect buggy property enumeration order in older V8 versions.

			// https://bugs.chromium.org/p/v8/issues/detail?id=4118
			var test1 = new String('abc');  // eslint-disable-line
			test1[5] = 'de';
			if (Object.getOwnPropertyNames(test1)[0] === '5') {
				return false;
			}

			// https://bugs.chromium.org/p/v8/issues/detail?id=3056
			var test2 = {};
			for (var i = 0; i < 10; i++) {
				test2['_' + String.fromCharCode(i)] = i;
			}
			var order2 = Object.getOwnPropertyNames(test2).map(function (n) {
				return test2[n];
			});
			if (order2.join('') !== '0123456789') {
				return false;
			}

			// https://bugs.chromium.org/p/v8/issues/detail?id=3056
			var test3 = {};
			'abcdefghijklmnopqrst'.split('').forEach(function (letter) {
				test3[letter] = letter;
			});
			if (Object.keys(Object.assign({}, test3)).join('') !==
					'abcdefghijklmnopqrst') {
				return false;
			}

			return true;
		} catch (e) {
			// We don't expect any of the above to throw, but better to be safe.
			return false;
		}
	}

	module.exports = shouldUseNative() ? Object.assign : function (target, source) {
		var from;
		var to = toObject(target);
		var symbols;

		for (var s = 1; s < arguments.length; s++) {
			from = Object(arguments[s]);

			for (var key in from) {
				if (hasOwnProperty.call(from, key)) {
					to[key] = from[key];
				}
			}

			if (Object.getOwnPropertySymbols) {
				symbols = Object.getOwnPropertySymbols(from);
				for (var i = 0; i < symbols.length; i++) {
					if (propIsEnumerable.call(from, symbols[i])) {
						to[symbols[i]] = from[symbols[i]];
					}
				}
			}
		}

		return to;
	};


/***/ },
/* 6 */
/***/ function(module, exports, __webpack_require__) {

	/**
	 * Copyright 2013-present, Facebook, Inc.
	 * All rights reserved.
	 *
	 * This source code is licensed under the BSD-style license found in the
	 * LICENSE file in the root directory of this source tree. An additional grant
	 * of patent rights can be found in the PATENTS file in the same directory.
	 *
	 * @providesModule ReactChildren
	 */

	'use strict';

	var PooledClass = __webpack_require__(7);
	var ReactElement = __webpack_require__(10);

	var emptyFunction = __webpack_require__(13);
	var traverseAllChildren = __webpack_require__(15);

	var twoArgumentPooler = PooledClass.twoArgumentPooler;
	var fourArgumentPooler = PooledClass.fourArgumentPooler;

	var userProvidedKeyEscapeRegex = /\/+/g;
	function escapeUserProvidedKey(text) {
	  return ('' + text).replace(userProvidedKeyEscapeRegex, '$&/');
	}

	/**
	 * PooledClass representing the bookkeeping associated with performing a child
	 * traversal. Allows avoiding binding callbacks.
	 *
	 * @constructor ForEachBookKeeping
	 * @param {!function} forEachFunction Function to perform traversal with.
	 * @param {?*} forEachContext Context to perform context with.
	 */
	function ForEachBookKeeping(forEachFunction, forEachContext) {
	  this.func = forEachFunction;
	  this.context = forEachContext;
	  this.count = 0;
	}
	ForEachBookKeeping.prototype.destructor = function () {
	  this.func = null;
	  this.context = null;
	  this.count = 0;
	};
	PooledClass.addPoolingTo(ForEachBookKeeping, twoArgumentPooler);

	function forEachSingleChild(bookKeeping, child, name) {
	  var func = bookKeeping.func;
	  var context = bookKeeping.context;

	  func.call(context, child, bookKeeping.count++);
	}

	/**
	 * Iterates through children that are typically specified as `props.children`.
	 *
	 * See https://facebook.github.io/react/docs/top-level-api.html#react.children.foreach
	 *
	 * The provided forEachFunc(child, index) will be called for each
	 * leaf child.
	 *
	 * @param {?*} children Children tree container.
	 * @param {function(*, int)} forEachFunc
	 * @param {*} forEachContext Context for forEachContext.
	 */
	function forEachChildren(children, forEachFunc, forEachContext) {
	  if (children == null) {
	    return children;
	  }
	  var traverseContext = ForEachBookKeeping.getPooled(forEachFunc, forEachContext);
	  traverseAllChildren(children, forEachSingleChild, traverseContext);
	  ForEachBookKeeping.release(traverseContext);
	}

	/**
	 * PooledClass representing the bookkeeping associated with performing a child
	 * mapping. Allows avoiding binding callbacks.
	 *
	 * @constructor MapBookKeeping
	 * @param {!*} mapResult Object containing the ordered map of results.
	 * @param {!function} mapFunction Function to perform mapping with.
	 * @param {?*} mapContext Context to perform mapping with.
	 */
	function MapBookKeeping(mapResult, keyPrefix, mapFunction, mapContext) {
	  this.result = mapResult;
	  this.keyPrefix = keyPrefix;
	  this.func = mapFunction;
	  this.context = mapContext;
	  this.count = 0;
	}
	MapBookKeeping.prototype.destructor = function () {
	  this.result = null;
	  this.keyPrefix = null;
	  this.func = null;
	  this.context = null;
	  this.count = 0;
	};
	PooledClass.addPoolingTo(MapBookKeeping, fourArgumentPooler);

	function mapSingleChildIntoContext(bookKeeping, child, childKey) {
	  var result = bookKeeping.result;
	  var keyPrefix = bookKeeping.keyPrefix;
	  var func = bookKeeping.func;
	  var context = bookKeeping.context;


	  var mappedChild = func.call(context, child, bookKeeping.count++);
	  if (Array.isArray(mappedChild)) {
	    mapIntoWithKeyPrefixInternal(mappedChild, result, childKey, emptyFunction.thatReturnsArgument);
	  } else if (mappedChild != null) {
	    if (ReactElement.isValidElement(mappedChild)) {
	      mappedChild = ReactElement.cloneAndReplaceKey(mappedChild,
	      // Keep both the (mapped) and old keys if they differ, just as
	      // traverseAllChildren used to do for objects as children
	      keyPrefix + (mappedChild.key && (!child || child.key !== mappedChild.key) ? escapeUserProvidedKey(mappedChild.key) + '/' : '') + childKey);
	    }
	    result.push(mappedChild);
	  }
	}

	function mapIntoWithKeyPrefixInternal(children, array, prefix, func, context) {
	  var escapedPrefix = '';
	  if (prefix != null) {
	    escapedPrefix = escapeUserProvidedKey(prefix) + '/';
	  }
	  var traverseContext = MapBookKeeping.getPooled(array, escapedPrefix, func, context);
	  traverseAllChildren(children, mapSingleChildIntoContext, traverseContext);
	  MapBookKeeping.release(traverseContext);
	}

	/**
	 * Maps children that are typically specified as `props.children`.
	 *
	 * See https://facebook.github.io/react/docs/top-level-api.html#react.children.map
	 *
	 * The provided mapFunction(child, key, index) will be called for each
	 * leaf child.
	 *
	 * @param {?*} children Children tree container.
	 * @param {function(*, int)} func The map function.
	 * @param {*} context Context for mapFunction.
	 * @return {object} Object containing the ordered map of results.
	 */
	function mapChildren(children, func, context) {
	  if (children == null) {
	    return children;
	  }
	  var result = [];
	  mapIntoWithKeyPrefixInternal(children, result, null, func, context);
	  return result;
	}

	function forEachSingleChildDummy(traverseContext, child, name) {
	  return null;
	}

	/**
	 * Count the number of children that are typically specified as
	 * `props.children`.
	 *
	 * See https://facebook.github.io/react/docs/top-level-api.html#react.children.count
	 *
	 * @param {?*} children Children tree container.
	 * @return {number} The number of children.
	 */
	function countChildren(children, context) {
	  return traverseAllChildren(children, forEachSingleChildDummy, null);
	}

	/**
	 * Flatten a children object (typically specified as `props.children`) and
	 * return an array with appropriately re-keyed children.
	 *
	 * See https://facebook.github.io/react/docs/top-level-api.html#react.children.toarray
	 */
	function toArray(children) {
	  var result = [];
	  mapIntoWithKeyPrefixInternal(children, result, null, emptyFunction.thatReturnsArgument);
	  return result;
	}

	var ReactChildren = {
	  forEach: forEachChildren,
	  map: mapChildren,
	  mapIntoWithKeyPrefixInternal: mapIntoWithKeyPrefixInternal,
	  count: countChildren,
	  toArray: toArray
	};

	module.exports = ReactChildren;

/***/ },
/* 7 */
/***/ function(module, exports, __webpack_require__) {

	/* WEBPACK VAR INJECTION */(function(process) {/**
	 * Copyright 2013-present, Facebook, Inc.
	 * All rights reserved.
	 *
	 * This source code is licensed under the BSD-style license found in the
	 * LICENSE file in the root directory of this source tree. An additional grant
	 * of patent rights can be found in the PATENTS file in the same directory.
	 *
	 * @providesModule PooledClass
	 */

	'use strict';

	var _prodInvariant = __webpack_require__(8);

	var invariant = __webpack_require__(9);

	/**
	 * Static poolers. Several custom versions for each potential number of
	 * arguments. A completely generic pooler is easy to implement, but would
	 * require accessing the `arguments` object. In each of these, `this` refers to
	 * the Class itself, not an instance. If any others are needed, simply add them
	 * here, or in their own files.
	 */
	var oneArgumentPooler = function (copyFieldsFrom) {
	  var Klass = this;
	  if (Klass.instancePool.length) {
	    var instance = Klass.instancePool.pop();
	    Klass.call(instance, copyFieldsFrom);
	    return instance;
	  } else {
	    return new Klass(copyFieldsFrom);
	  }
	};

	var twoArgumentPooler = function (a1, a2) {
	  var Klass = this;
	  if (Klass.instancePool.length) {
	    var instance = Klass.instancePool.pop();
	    Klass.call(instance, a1, a2);
	    return instance;
	  } else {
	    return new Klass(a1, a2);
	  }
	};

	var threeArgumentPooler = function (a1, a2, a3) {
	  var Klass = this;
	  if (Klass.instancePool.length) {
	    var instance = Klass.instancePool.pop();
	    Klass.call(instance, a1, a2, a3);
	    return instance;
	  } else {
	    return new Klass(a1, a2, a3);
	  }
	};

	var fourArgumentPooler = function (a1, a2, a3, a4) {
	  var Klass = this;
	  if (Klass.instancePool.length) {
	    var instance = Klass.instancePool.pop();
	    Klass.call(instance, a1, a2, a3, a4);
	    return instance;
	  } else {
	    return new Klass(a1, a2, a3, a4);
	  }
	};

	var fiveArgumentPooler = function (a1, a2, a3, a4, a5) {
	  var Klass = this;
	  if (Klass.instancePool.length) {
	    var instance = Klass.instancePool.pop();
	    Klass.call(instance, a1, a2, a3, a4, a5);
	    return instance;
	  } else {
	    return new Klass(a1, a2, a3, a4, a5);
	  }
	};

	var standardReleaser = function (instance) {
	  var Klass = this;
	  !(instance instanceof Klass) ? process.env.NODE_ENV !== 'production' ? invariant(false, 'Trying to release an instance into a pool of a different type.') : _prodInvariant('25') : void 0;
	  instance.destructor();
	  if (Klass.instancePool.length < Klass.poolSize) {
	    Klass.instancePool.push(instance);
	  }
	};

	var DEFAULT_POOL_SIZE = 10;
	var DEFAULT_POOLER = oneArgumentPooler;

	/**
	 * Augments `CopyConstructor` to be a poolable class, augmenting only the class
	 * itself (statically) not adding any prototypical fields. Any CopyConstructor
	 * you give this may have a `poolSize` property, and will look for a
	 * prototypical `destructor` on instances.
	 *
	 * @param {Function} CopyConstructor Constructor that can be used to reset.
	 * @param {Function} pooler Customizable pooler.
	 */
	var addPoolingTo = function (CopyConstructor, pooler) {
	  var NewKlass = CopyConstructor;
	  NewKlass.instancePool = [];
	  NewKlass.getPooled = pooler || DEFAULT_POOLER;
	  if (!NewKlass.poolSize) {
	    NewKlass.poolSize = DEFAULT_POOL_SIZE;
	  }
	  NewKlass.release = standardReleaser;
	  return NewKlass;
	};

	var PooledClass = {
	  addPoolingTo: addPoolingTo,
	  oneArgumentPooler: oneArgumentPooler,
	  twoArgumentPooler: twoArgumentPooler,
	  threeArgumentPooler: threeArgumentPooler,
	  fourArgumentPooler: fourArgumentPooler,
	  fiveArgumentPooler: fiveArgumentPooler
	};

	module.exports = PooledClass;
	/* WEBPACK VAR INJECTION */}.call(exports, __webpack_require__(4)))

/***/ },
/* 8 */
/***/ function(module, exports) {

	/**
	 * Copyright (c) 2013-present, Facebook, Inc.
	 * All rights reserved.
	 *
	 * This source code is licensed under the BSD-style license found in the
	 * LICENSE file in the root directory of this source tree. An additional grant
	 * of patent rights can be found in the PATENTS file in the same directory.
	 *
	 * @providesModule reactProdInvariant
	 * 
	 */
	'use strict';

	/**
	 * WARNING: DO NOT manually require this module.
	 * This is a replacement for `invariant(...)` used by the error code system
	 * and will _only_ be required by the corresponding babel pass.
	 * It always throws.
	 */

	function reactProdInvariant(code) {
	  var argCount = arguments.length - 1;

	  var message = 'Minified React error #' + code + '; visit ' + 'http://facebook.github.io/react/docs/error-decoder.html?invariant=' + code;

	  for (var argIdx = 0; argIdx < argCount; argIdx++) {
	    message += '&args[]=' + encodeURIComponent(arguments[argIdx + 1]);
	  }

	  message += ' for the full message or use the non-minified dev environment' + ' for full errors and additional helpful warnings.';

	  var error = new Error(message);
	  error.name = 'Invariant Violation';
	  error.framesToPop = 1; // we don't care about reactProdInvariant's own frame

	  throw error;
	}

	module.exports = reactProdInvariant;

/***/ },
/* 9 */
/***/ function(module, exports, __webpack_require__) {

	/* WEBPACK VAR INJECTION */(function(process) {/**
	 * Copyright (c) 2013-present, Facebook, Inc.
	 * All rights reserved.
	 *
	 * This source code is licensed under the BSD-style license found in the
	 * LICENSE file in the root directory of this source tree. An additional grant
	 * of patent rights can be found in the PATENTS file in the same directory.
	 *
	 */

	'use strict';

	/**
	 * Use invariant() to assert state which your program assumes to be true.
	 *
	 * Provide sprintf-style format (only %s is supported) and arguments
	 * to provide information about what broke and what you were
	 * expecting.
	 *
	 * The invariant message will be stripped in production, but the invariant
	 * will remain to ensure logic does not differ in production.
	 */

	function invariant(condition, format, a, b, c, d, e, f) {
	  if (process.env.NODE_ENV !== 'production') {
	    if (format === undefined) {
	      throw new Error('invariant requires an error message argument');
	    }
	  }

	  if (!condition) {
	    var error;
	    if (format === undefined) {
	      error = new Error('Minified exception occurred; use the non-minified dev environment ' + 'for the full error message and additional helpful warnings.');
	    } else {
	      var args = [a, b, c, d, e, f];
	      var argIndex = 0;
	      error = new Error(format.replace(/%s/g, function () {
	        return args[argIndex++];
	      }));
	      error.name = 'Invariant Violation';
	    }

	    error.framesToPop = 1; // we don't care about invariant's own frame
	    throw error;
	  }
	}

	module.exports = invariant;
	/* WEBPACK VAR INJECTION */}.call(exports, __webpack_require__(4)))

/***/ },
/* 10 */
/***/ function(module, exports, __webpack_require__) {

	/* WEBPACK VAR INJECTION */(function(process) {/**
	 * Copyright 2014-present, Facebook, Inc.
	 * All rights reserved.
	 *
	 * This source code is licensed under the BSD-style license found in the
	 * LICENSE file in the root directory of this source tree. An additional grant
	 * of patent rights can be found in the PATENTS file in the same directory.
	 *
	 * @providesModule ReactElement
	 */

	'use strict';

	var _assign = __webpack_require__(5);

	var ReactCurrentOwner = __webpack_require__(11);

	var warning = __webpack_require__(12);
	var canDefineProperty = __webpack_require__(14);
	var hasOwnProperty = Object.prototype.hasOwnProperty;

	// The Symbol used to tag the ReactElement type. If there is no native Symbol
	// nor polyfill, then a plain number is used for performance.
	var REACT_ELEMENT_TYPE = typeof Symbol === 'function' && Symbol['for'] && Symbol['for']('react.element') || 0xeac7;

	var RESERVED_PROPS = {
	  key: true,
	  ref: true,
	  __self: true,
	  __source: true
	};

	var specialPropKeyWarningShown, specialPropRefWarningShown;

	function hasValidRef(config) {
	  if (process.env.NODE_ENV !== 'production') {
	    if (hasOwnProperty.call(config, 'ref')) {
	      var getter = Object.getOwnPropertyDescriptor(config, 'ref').get;
	      if (getter && getter.isReactWarning) {
	        return false;
	      }
	    }
	  }
	  return config.ref !== undefined;
	}

	function hasValidKey(config) {
	  if (process.env.NODE_ENV !== 'production') {
	    if (hasOwnProperty.call(config, 'key')) {
	      var getter = Object.getOwnPropertyDescriptor(config, 'key').get;
	      if (getter && getter.isReactWarning) {
	        return false;
	      }
	    }
	  }
	  return config.key !== undefined;
	}

	/**
	 * Factory method to create a new React element. This no longer adheres to
	 * the class pattern, so do not use new to call it. Also, no instanceof check
	 * will work. Instead test $$typeof field against Symbol.for('react.element') to check
	 * if something is a React Element.
	 *
	 * @param {*} type
	 * @param {*} key
	 * @param {string|object} ref
	 * @param {*} self A *temporary* helper to detect places where `this` is
	 * different from the `owner` when React.createElement is called, so that we
	 * can warn. We want to get rid of owner and replace string `ref`s with arrow
	 * functions, and as long as `this` and owner are the same, there will be no
	 * change in behavior.
	 * @param {*} source An annotation object (added by a transpiler or otherwise)
	 * indicating filename, line number, and/or other information.
	 * @param {*} owner
	 * @param {*} props
	 * @internal
	 */
	var ReactElement = function (type, key, ref, self, source, owner, props) {
	  var element = {
	    // This tag allow us to uniquely identify this as a React Element
	    $$typeof: REACT_ELEMENT_TYPE,

	    // Built-in properties that belong on the element
	    type: type,
	    key: key,
	    ref: ref,
	    props: props,

	    // Record the component responsible for creating this element.
	    _owner: owner
	  };

	  if (process.env.NODE_ENV !== 'production') {
	    // The validation flag is currently mutative. We put it on
	    // an external backing store so that we can freeze the whole object.
	    // This can be replaced with a WeakMap once they are implemented in
	    // commonly used development environments.
	    element._store = {};

	    // To make comparing ReactElements easier for testing purposes, we make
	    // the validation flag non-enumerable (where possible, which should
	    // include every environment we run tests in), so the test framework
	    // ignores it.
	    if (canDefineProperty) {
	      Object.defineProperty(element._store, 'validated', {
	        configurable: false,
	        enumerable: false,
	        writable: true,
	        value: false
	      });
	      // self and source are DEV only properties.
	      Object.defineProperty(element, '_self', {
	        configurable: false,
	        enumerable: false,
	        writable: false,
	        value: self
	      });
	      // Two elements created in two different places should be considered
	      // equal for testing purposes and therefore we hide it from enumeration.
	      Object.defineProperty(element, '_source', {
	        configurable: false,
	        enumerable: false,
	        writable: false,
	        value: source
	      });
	    } else {
	      element._store.validated = false;
	      element._self = self;
	      element._source = source;
	    }
	    if (Object.freeze) {
	      Object.freeze(element.props);
	      Object.freeze(element);
	    }
	  }

	  return element;
	};

	/**
	 * Create and return a new ReactElement of the given type.
	 * See https://facebook.github.io/react/docs/top-level-api.html#react.createelement
	 */
	ReactElement.createElement = function (type, config, children) {
	  var propName;

	  // Reserved names are extracted
	  var props = {};

	  var key = null;
	  var ref = null;
	  var self = null;
	  var source = null;

	  if (config != null) {
	    if (process.env.NODE_ENV !== 'production') {
	      process.env.NODE_ENV !== 'production' ? warning(
	      /* eslint-disable no-proto */
	      config.__proto__ == null || config.__proto__ === Object.prototype,
	      /* eslint-enable no-proto */
	      'React.createElement(...): Expected props argument to be a plain object. ' + 'Properties defined in its prototype chain will be ignored.') : void 0;
	    }

	    if (hasValidRef(config)) {
	      ref = config.ref;
	    }
	    if (hasValidKey(config)) {
	      key = '' + config.key;
	    }

	    self = config.__self === undefined ? null : config.__self;
	    source = config.__source === undefined ? null : config.__source;
	    // Remaining properties are added to a new props object
	    for (propName in config) {
	      if (hasOwnProperty.call(config, propName) && !RESERVED_PROPS.hasOwnProperty(propName)) {
	        props[propName] = config[propName];
	      }
	    }
	  }

	  // Children can be more than one argument, and those are transferred onto
	  // the newly allocated props object.
	  var childrenLength = arguments.length - 2;
	  if (childrenLength === 1) {
	    props.children = children;
	  } else if (childrenLength > 1) {
	    var childArray = Array(childrenLength);
	    for (var i = 0; i < childrenLength; i++) {
	      childArray[i] = arguments[i + 2];
	    }
	    props.children = childArray;
	  }

	  // Resolve default props
	  if (type && type.defaultProps) {
	    var defaultProps = type.defaultProps;
	    for (propName in defaultProps) {
	      if (props[propName] === undefined) {
	        props[propName] = defaultProps[propName];
	      }
	    }
	  }
	  if (process.env.NODE_ENV !== 'production') {
	    var displayName = typeof type === 'function' ? type.displayName || type.name || 'Unknown' : type;

	    // Create dummy `key` and `ref` property to `props` to warn users against its use
	    var warnAboutAccessingKey = function () {
	      if (!specialPropKeyWarningShown) {
	        specialPropKeyWarningShown = true;
	        process.env.NODE_ENV !== 'production' ? warning(false, '%s: `key` is not a prop. Trying to access it will result ' + 'in `undefined` being returned. If you need to access the same ' + 'value within the child component, you should pass it as a different ' + 'prop. (https://fb.me/react-special-props)', displayName) : void 0;
	      }
	      return undefined;
	    };
	    warnAboutAccessingKey.isReactWarning = true;

	    var warnAboutAccessingRef = function () {
	      if (!specialPropRefWarningShown) {
	        specialPropRefWarningShown = true;
	        process.env.NODE_ENV !== 'production' ? warning(false, '%s: `ref` is not a prop. Trying to access it will result ' + 'in `undefined` being returned. If you need to access the same ' + 'value within the child component, you should pass it as a different ' + 'prop. (https://fb.me/react-special-props)', displayName) : void 0;
	      }
	      return undefined;
	    };
	    warnAboutAccessingRef.isReactWarning = true;

	    if (typeof props.$$typeof === 'undefined' || props.$$typeof !== REACT_ELEMENT_TYPE) {
	      if (!props.hasOwnProperty('key')) {
	        Object.defineProperty(props, 'key', {
	          get: warnAboutAccessingKey,
	          configurable: true
	        });
	      }
	      if (!props.hasOwnProperty('ref')) {
	        Object.defineProperty(props, 'ref', {
	          get: warnAboutAccessingRef,
	          configurable: true
	        });
	      }
	    }
	  }
	  return ReactElement(type, key, ref, self, source, ReactCurrentOwner.current, props);
	};

	/**
	 * Return a function that produces ReactElements of a given type.
	 * See https://facebook.github.io/react/docs/top-level-api.html#react.createfactory
	 */
	ReactElement.createFactory = function (type) {
	  var factory = ReactElement.createElement.bind(null, type);
	  // Expose the type on the factory and the prototype so that it can be
	  // easily accessed on elements. E.g. `<Foo />.type === Foo`.
	  // This should not be named `constructor` since this may not be the function
	  // that created the element, and it may not even be a constructor.
	  // Legacy hook TODO: Warn if this is accessed
	  factory.type = type;
	  return factory;
	};

	ReactElement.cloneAndReplaceKey = function (oldElement, newKey) {
	  var newElement = ReactElement(oldElement.type, newKey, oldElement.ref, oldElement._self, oldElement._source, oldElement._owner, oldElement.props);

	  return newElement;
	};

	/**
	 * Clone and return a new ReactElement using element as the starting point.
	 * See https://facebook.github.io/react/docs/top-level-api.html#react.cloneelement
	 */
	ReactElement.cloneElement = function (element, config, children) {
	  var propName;

	  // Original props are copied
	  var props = _assign({}, element.props);

	  // Reserved names are extracted
	  var key = element.key;
	  var ref = element.ref;
	  // Self is preserved since the owner is preserved.
	  var self = element._self;
	  // Source is preserved since cloneElement is unlikely to be targeted by a
	  // transpiler, and the original source is probably a better indicator of the
	  // true owner.
	  var source = element._source;

	  // Owner will be preserved, unless ref is overridden
	  var owner = element._owner;

	  if (config != null) {
	    if (process.env.NODE_ENV !== 'production') {
	      process.env.NODE_ENV !== 'production' ? warning(
	      /* eslint-disable no-proto */
	      config.__proto__ == null || config.__proto__ === Object.prototype,
	      /* eslint-enable no-proto */
	      'React.cloneElement(...): Expected props argument to be a plain object. ' + 'Properties defined in its prototype chain will be ignored.') : void 0;
	    }

	    if (hasValidRef(config)) {
	      // Silently steal the ref from the parent.
	      ref = config.ref;
	      owner = ReactCurrentOwner.current;
	    }
	    if (hasValidKey(config)) {
	      key = '' + config.key;
	    }

	    // Remaining properties override existing props
	    var defaultProps;
	    if (element.type && element.type.defaultProps) {
	      defaultProps = element.type.defaultProps;
	    }
	    for (propName in config) {
	      if (hasOwnProperty.call(config, propName) && !RESERVED_PROPS.hasOwnProperty(propName)) {
	        if (config[propName] === undefined && defaultProps !== undefined) {
	          // Resolve default props
	          props[propName] = defaultProps[propName];
	        } else {
	          props[propName] = config[propName];
	        }
	      }
	    }
	  }

	  // Children can be more than one argument, and those are transferred onto
	  // the newly allocated props object.
	  var childrenLength = arguments.length - 2;
	  if (childrenLength === 1) {
	    props.children = children;
	  } else if (childrenLength > 1) {
	    var childArray = Array(childrenLength);
	    for (var i = 0; i < childrenLength; i++) {
	      childArray[i] = arguments[i + 2];
	    }
	    props.children = childArray;
	  }

	  return ReactElement(element.type, key, ref, self, source, owner, props);
	};

	/**
	 * Verifies the object is a ReactElement.
	 * See https://facebook.github.io/react/docs/top-level-api.html#react.isvalidelement
	 * @param {?object} object
	 * @return {boolean} True if `object` is a valid component.
	 * @final
	 */
	ReactElement.isValidElement = function (object) {
	  return typeof object === 'object' && object !== null && object.$$typeof === REACT_ELEMENT_TYPE;
	};

	ReactElement.REACT_ELEMENT_TYPE = REACT_ELEMENT_TYPE;

	module.exports = ReactElement;
	/* WEBPACK VAR INJECTION */}.call(exports, __webpack_require__(4)))

/***/ },
/* 11 */
/***/ function(module, exports) {

	/**
	 * Copyright 2013-present, Facebook, Inc.
	 * All rights reserved.
	 *
	 * This source code is licensed under the BSD-style license found in the
	 * LICENSE file in the root directory of this source tree. An additional grant
	 * of patent rights can be found in the PATENTS file in the same directory.
	 *
	 * @providesModule ReactCurrentOwner
	 */

	'use strict';

	/**
	 * Keeps track of the current owner.
	 *
	 * The current owner is the component who should own any components that are
	 * currently being constructed.
	 */

	var ReactCurrentOwner = {

	  /**
	   * @internal
	   * @type {ReactComponent}
	   */
	  current: null

	};

	module.exports = ReactCurrentOwner;

/***/ },
/* 12 */
/***/ function(module, exports, __webpack_require__) {

	/* WEBPACK VAR INJECTION */(function(process) {/**
	 * Copyright 2014-2015, Facebook, Inc.
	 * All rights reserved.
	 *
	 * This source code is licensed under the BSD-style license found in the
	 * LICENSE file in the root directory of this source tree. An additional grant
	 * of patent rights can be found in the PATENTS file in the same directory.
	 *
	 */

	'use strict';

	var emptyFunction = __webpack_require__(13);

	/**
	 * Similar to invariant but only logs a warning if the condition is not met.
	 * This can be used to log issues in development environments in critical
	 * paths. Removing the logging code for production environments will keep the
	 * same logic and follow the same code paths.
	 */

	var warning = emptyFunction;

	if (process.env.NODE_ENV !== 'production') {
	  warning = function warning(condition, format) {
	    for (var _len = arguments.length, args = Array(_len > 2 ? _len - 2 : 0), _key = 2; _key < _len; _key++) {
	      args[_key - 2] = arguments[_key];
	    }

	    if (format === undefined) {
	      throw new Error('`warning(condition, format, ...args)` requires a warning ' + 'message argument');
	    }

	    if (format.indexOf('Failed Composite propType: ') === 0) {
	      return; // Ignore CompositeComponent proptype check.
	    }

	    if (!condition) {
	      var argIndex = 0;
	      var message = 'Warning: ' + format.replace(/%s/g, function () {
	        return args[argIndex++];
	      });
	      if (typeof console !== 'undefined') {
	        console.error(message);
	      }
	      try {
	        // --- Welcome to debugging React ---
	        // This error was thrown as a convenience so that you can use this stack
	        // to find the callsite that caused this warning to fire.
	        throw new Error(message);
	      } catch (x) {}
	    }
	  };
	}

	module.exports = warning;
	/* WEBPACK VAR INJECTION */}.call(exports, __webpack_require__(4)))

/***/ },
/* 13 */
/***/ function(module, exports) {

	"use strict";

	/**
	 * Copyright (c) 2013-present, Facebook, Inc.
	 * All rights reserved.
	 *
	 * This source code is licensed under the BSD-style license found in the
	 * LICENSE file in the root directory of this source tree. An additional grant
	 * of patent rights can be found in the PATENTS file in the same directory.
	 *
	 * 
	 */

	function makeEmptyFunction(arg) {
	  return function () {
	    return arg;
	  };
	}

	/**
	 * This function accepts and discards inputs; it has no side effects. This is
	 * primarily useful idiomatically for overridable function endpoints which
	 * always need to be callable, since JS lacks a null-call idiom ala Cocoa.
	 */
	var emptyFunction = function emptyFunction() {};

	emptyFunction.thatReturns = makeEmptyFunction;
	emptyFunction.thatReturnsFalse = makeEmptyFunction(false);
	emptyFunction.thatReturnsTrue = makeEmptyFunction(true);
	emptyFunction.thatReturnsNull = makeEmptyFunction(null);
	emptyFunction.thatReturnsThis = function () {
	  return this;
	};
	emptyFunction.thatReturnsArgument = function (arg) {
	  return arg;
	};

	module.exports = emptyFunction;

/***/ },
/* 14 */
/***/ function(module, exports, __webpack_require__) {

	/* WEBPACK VAR INJECTION */(function(process) {/**
	 * Copyright 2013-present, Facebook, Inc.
	 * All rights reserved.
	 *
	 * This source code is licensed under the BSD-style license found in the
	 * LICENSE file in the root directory of this source tree. An additional grant
	 * of patent rights can be found in the PATENTS file in the same directory.
	 *
	 * @providesModule canDefineProperty
	 */

	'use strict';

	var canDefineProperty = false;
	if (process.env.NODE_ENV !== 'production') {
	  try {
	    Object.defineProperty({}, 'x', { get: function () {} });
	    canDefineProperty = true;
	  } catch (x) {
	    // IE will fail on defineProperty
	  }
	}

	module.exports = canDefineProperty;
	/* WEBPACK VAR INJECTION */}.call(exports, __webpack_require__(4)))

/***/ },
/* 15 */
/***/ function(module, exports, __webpack_require__) {

	/* WEBPACK VAR INJECTION */(function(process) {/**
	 * Copyright 2013-present, Facebook, Inc.
	 * All rights reserved.
	 *
	 * This source code is licensed under the BSD-style license found in the
	 * LICENSE file in the root directory of this source tree. An additional grant
	 * of patent rights can be found in the PATENTS file in the same directory.
	 *
	 * @providesModule traverseAllChildren
	 */

	'use strict';

	var _prodInvariant = __webpack_require__(8);

	var ReactCurrentOwner = __webpack_require__(11);
	var ReactElement = __webpack_require__(10);

	var getIteratorFn = __webpack_require__(16);
	var invariant = __webpack_require__(9);
	var KeyEscapeUtils = __webpack_require__(17);
	var warning = __webpack_require__(12);

	var SEPARATOR = '.';
	var SUBSEPARATOR = ':';

	/**
	 * TODO: Test that a single child and an array with one item have the same key
	 * pattern.
	 */

	var didWarnAboutMaps = false;

	/**
	 * Generate a key string that identifies a component within a set.
	 *
	 * @param {*} component A component that could contain a manual key.
	 * @param {number} index Index that is used if a manual key is not provided.
	 * @return {string}
	 */
	function getComponentKey(component, index) {
	  // Do some typechecking here since we call this blindly. We want to ensure
	  // that we don't block potential future ES APIs.
	  if (component && typeof component === 'object' && component.key != null) {
	    // Explicit key
	    return KeyEscapeUtils.escape(component.key);
	  }
	  // Implicit key determined by the index in the set
	  return index.toString(36);
	}

	/**
	 * @param {?*} children Children tree container.
	 * @param {!string} nameSoFar Name of the key path so far.
	 * @param {!function} callback Callback to invoke with each child found.
	 * @param {?*} traverseContext Used to pass information throughout the traversal
	 * process.
	 * @return {!number} The number of children in this subtree.
	 */
	function traverseAllChildrenImpl(children, nameSoFar, callback, traverseContext) {
	  var type = typeof children;

	  if (type === 'undefined' || type === 'boolean') {
	    // All of the above are perceived as null.
	    children = null;
	  }

	  if (children === null || type === 'string' || type === 'number' || ReactElement.isValidElement(children)) {
	    callback(traverseContext, children,
	    // If it's the only child, treat the name as if it was wrapped in an array
	    // so that it's consistent if the number of children grows.
	    nameSoFar === '' ? SEPARATOR + getComponentKey(children, 0) : nameSoFar);
	    return 1;
	  }

	  var child;
	  var nextName;
	  var subtreeCount = 0; // Count of children found in the current subtree.
	  var nextNamePrefix = nameSoFar === '' ? SEPARATOR : nameSoFar + SUBSEPARATOR;

	  if (Array.isArray(children)) {
	    for (var i = 0; i < children.length; i++) {
	      child = children[i];
	      nextName = nextNamePrefix + getComponentKey(child, i);
	      subtreeCount += traverseAllChildrenImpl(child, nextName, callback, traverseContext);
	    }
	  } else {
	    var iteratorFn = getIteratorFn(children);
	    if (iteratorFn) {
	      var iterator = iteratorFn.call(children);
	      var step;
	      if (iteratorFn !== children.entries) {
	        var ii = 0;
	        while (!(step = iterator.next()).done) {
	          child = step.value;
	          nextName = nextNamePrefix + getComponentKey(child, ii++);
	          subtreeCount += traverseAllChildrenImpl(child, nextName, callback, traverseContext);
	        }
	      } else {
	        if (process.env.NODE_ENV !== 'production') {
	          process.env.NODE_ENV !== 'production' ? warning(didWarnAboutMaps, 'Using Maps as children is not yet fully supported. It is an ' + 'experimental feature that might be removed. Convert it to a ' + 'sequence / iterable of keyed ReactElements instead.') : void 0;
	          didWarnAboutMaps = true;
	        }
	        // Iterator will provide entry [k,v] tuples rather than values.
	        while (!(step = iterator.next()).done) {
	          var entry = step.value;
	          if (entry) {
	            child = entry[1];
	            nextName = nextNamePrefix + KeyEscapeUtils.escape(entry[0]) + SUBSEPARATOR + getComponentKey(child, 0);
	            subtreeCount += traverseAllChildrenImpl(child, nextName, callback, traverseContext);
	          }
	        }
	      }
	    } else if (type === 'object') {
	      var addendum = '';
	      if (process.env.NODE_ENV !== 'production') {
	        addendum = ' If you meant to render a collection of children, use an array ' + 'instead or wrap the object using createFragment(object) from the ' + 'React add-ons.';
	        if (children._isReactElement) {
	          addendum = ' It looks like you\'re using an element created by a different ' + 'version of React. Make sure to use only one copy of React.';
	        }
	        if (ReactCurrentOwner.current) {
	          var name = ReactCurrentOwner.current.getName();
	          if (name) {
	            addendum += ' Check the render method of `' + name + '`.';
	          }
	        }
	      }
	      var childrenString = String(children);
	       true ? process.env.NODE_ENV !== 'production' ? invariant(false, 'Objects are not valid as a React child (found: %s).%s', childrenString === '[object Object]' ? 'object with keys {' + Object.keys(children).join(', ') + '}' : childrenString, addendum) : _prodInvariant('31', childrenString === '[object Object]' ? 'object with keys {' + Object.keys(children).join(', ') + '}' : childrenString, addendum) : void 0;
	    }
	  }

	  return subtreeCount;
	}

	/**
	 * Traverses children that are typically specified as `props.children`, but
	 * might also be specified through attributes:
	 *
	 * - `traverseAllChildren(this.props.children, ...)`
	 * - `traverseAllChildren(this.props.leftPanelChildren, ...)`
	 *
	 * The `traverseContext` is an optional argument that is passed through the
	 * entire traversal. It can be used to store accumulations or anything else that
	 * the callback might find relevant.
	 *
	 * @param {?*} children Children tree object.
	 * @param {!function} callback To invoke upon traversing each child.
	 * @param {?*} traverseContext Context for traversal.
	 * @return {!number} The number of children in this subtree.
	 */
	function traverseAllChildren(children, callback, traverseContext) {
	  if (children == null) {
	    return 0;
	  }

	  return traverseAllChildrenImpl(children, '', callback, traverseContext);
	}

	module.exports = traverseAllChildren;
	/* WEBPACK VAR INJECTION */}.call(exports, __webpack_require__(4)))

/***/ },
/* 16 */
/***/ function(module, exports) {

	/**
	 * Copyright 2013-present, Facebook, Inc.
	 * All rights reserved.
	 *
	 * This source code is licensed under the BSD-style license found in the
	 * LICENSE file in the root directory of this source tree. An additional grant
	 * of patent rights can be found in the PATENTS file in the same directory.
	 *
	 * @providesModule getIteratorFn
	 * 
	 */

	'use strict';

	/* global Symbol */

	var ITERATOR_SYMBOL = typeof Symbol === 'function' && Symbol.iterator;
	var FAUX_ITERATOR_SYMBOL = '@@iterator'; // Before Symbol spec.

	/**
	 * Returns the iterator method function contained on the iterable object.
	 *
	 * Be sure to invoke the function with the iterable as context:
	 *
	 *     var iteratorFn = getIteratorFn(myIterable);
	 *     if (iteratorFn) {
	 *       var iterator = iteratorFn.call(myIterable);
	 *       ...
	 *     }
	 *
	 * @param {?object} maybeIterable
	 * @return {?function}
	 */
	function getIteratorFn(maybeIterable) {
	  var iteratorFn = maybeIterable && (ITERATOR_SYMBOL && maybeIterable[ITERATOR_SYMBOL] || maybeIterable[FAUX_ITERATOR_SYMBOL]);
	  if (typeof iteratorFn === 'function') {
	    return iteratorFn;
	  }
	}

	module.exports = getIteratorFn;

/***/ },
/* 17 */
/***/ function(module, exports) {

	/**
	 * Copyright 2013-present, Facebook, Inc.
	 * All rights reserved.
	 *
	 * This source code is licensed under the BSD-style license found in the
	 * LICENSE file in the root directory of this source tree. An additional grant
	 * of patent rights can be found in the PATENTS file in the same directory.
	 *
	 * @providesModule KeyEscapeUtils
	 * 
	 */

	'use strict';

	/**
	 * Escape and wrap key so it is safe to use as a reactid
	 *
	 * @param {string} key to be escaped.
	 * @return {string} the escaped key.
	 */

	function escape(key) {
	  var escapeRegex = /[=:]/g;
	  var escaperLookup = {
	    '=': '=0',
	    ':': '=2'
	  };
	  var escapedString = ('' + key).replace(escapeRegex, function (match) {
	    return escaperLookup[match];
	  });

	  return '$' + escapedString;
	}

	/**
	 * Unescape and unwrap key for human-readable display
	 *
	 * @param {string} key to unescape.
	 * @return {string} the unescaped key.
	 */
	function unescape(key) {
	  var unescapeRegex = /(=0|=2)/g;
	  var unescaperLookup = {
	    '=0': '=',
	    '=2': ':'
	  };
	  var keySubstring = key[0] === '.' && key[1] === '$' ? key.substring(2) : key.substring(1);

	  return ('' + keySubstring).replace(unescapeRegex, function (match) {
	    return unescaperLookup[match];
	  });
	}

	var KeyEscapeUtils = {
	  escape: escape,
	  unescape: unescape
	};

	module.exports = KeyEscapeUtils;

/***/ },
/* 18 */
/***/ function(module, exports, __webpack_require__) {

	/* WEBPACK VAR INJECTION */(function(process) {/**
	 * Copyright 2013-present, Facebook, Inc.
	 * All rights reserved.
	 *
	 * This source code is licensed under the BSD-style license found in the
	 * LICENSE file in the root directory of this source tree. An additional grant
	 * of patent rights can be found in the PATENTS file in the same directory.
	 *
	 * @providesModule ReactComponent
	 */

	'use strict';

	var _prodInvariant = __webpack_require__(8);

	var ReactNoopUpdateQueue = __webpack_require__(19);

	var canDefineProperty = __webpack_require__(14);
	var emptyObject = __webpack_require__(20);
	var invariant = __webpack_require__(9);
	var warning = __webpack_require__(12);

	/**
	 * Base class helpers for the updating state of a component.
	 */
	function ReactComponent(props, context, updater) {
	  this.props = props;
	  this.context = context;
	  this.refs = emptyObject;
	  // We initialize the default updater but the real one gets injected by the
	  // renderer.
	  this.updater = updater || ReactNoopUpdateQueue;
	}

	ReactComponent.prototype.isReactComponent = {};

	/**
	 * Sets a subset of the state. Always use this to mutate
	 * state. You should treat `this.state` as immutable.
	 *
	 * There is no guarantee that `this.state` will be immediately updated, so
	 * accessing `this.state` after calling this method may return the old value.
	 *
	 * There is no guarantee that calls to `setState` will run synchronously,
	 * as they may eventually be batched together.  You can provide an optional
	 * callback that will be executed when the call to setState is actually
	 * completed.
	 *
	 * When a function is provided to setState, it will be called at some point in
	 * the future (not synchronously). It will be called with the up to date
	 * component arguments (state, props, context). These values can be different
	 * from this.* because your function may be called after receiveProps but before
	 * shouldComponentUpdate, and this new state, props, and context will not yet be
	 * assigned to this.
	 *
	 * @param {object|function} partialState Next partial state or function to
	 *        produce next partial state to be merged with current state.
	 * @param {?function} callback Called after state is updated.
	 * @final
	 * @protected
	 */
	ReactComponent.prototype.setState = function (partialState, callback) {
	  !(typeof partialState === 'object' || typeof partialState === 'function' || partialState == null) ? process.env.NODE_ENV !== 'production' ? invariant(false, 'setState(...): takes an object of state variables to update or a function which returns an object of state variables.') : _prodInvariant('85') : void 0;
	  this.updater.enqueueSetState(this, partialState);
	  if (callback) {
	    this.updater.enqueueCallback(this, callback, 'setState');
	  }
	};

	/**
	 * Forces an update. This should only be invoked when it is known with
	 * certainty that we are **not** in a DOM transaction.
	 *
	 * You may want to call this when you know that some deeper aspect of the
	 * component's state has changed but `setState` was not called.
	 *
	 * This will not invoke `shouldComponentUpdate`, but it will invoke
	 * `componentWillUpdate` and `componentDidUpdate`.
	 *
	 * @param {?function} callback Called after update is complete.
	 * @final
	 * @protected
	 */
	ReactComponent.prototype.forceUpdate = function (callback) {
	  this.updater.enqueueForceUpdate(this);
	  if (callback) {
	    this.updater.enqueueCallback(this, callback, 'forceUpdate');
	  }
	};

	/**
	 * Deprecated APIs. These APIs used to exist on classic React classes but since
	 * we would like to deprecate them, we're not going to move them over to this
	 * modern base class. Instead, we define a getter that warns if it's accessed.
	 */
	if (process.env.NODE_ENV !== 'production') {
	  var deprecatedAPIs = {
	    isMounted: ['isMounted', 'Instead, make sure to clean up subscriptions and pending requests in ' + 'componentWillUnmount to prevent memory leaks.'],
	    replaceState: ['replaceState', 'Refactor your code to use setState instead (see ' + 'https://github.com/facebook/react/issues/3236).']
	  };
	  var defineDeprecationWarning = function (methodName, info) {
	    if (canDefineProperty) {
	      Object.defineProperty(ReactComponent.prototype, methodName, {
	        get: function () {
	          process.env.NODE_ENV !== 'production' ? warning(false, '%s(...) is deprecated in plain JavaScript React classes. %s', info[0], info[1]) : void 0;
	          return undefined;
	        }
	      });
	    }
	  };
	  for (var fnName in deprecatedAPIs) {
	    if (deprecatedAPIs.hasOwnProperty(fnName)) {
	      defineDeprecationWarning(fnName, deprecatedAPIs[fnName]);
	    }
	  }
	}

	module.exports = ReactComponent;
	/* WEBPACK VAR INJECTION */}.call(exports, __webpack_require__(4)))

/***/ },
/* 19 */
/***/ function(module, exports, __webpack_require__) {

	/* WEBPACK VAR INJECTION */(function(process) {/**
	 * Copyright 2015-present, Facebook, Inc.
	 * All rights reserved.
	 *
	 * This source code is licensed under the BSD-style license found in the
	 * LICENSE file in the root directory of this source tree. An additional grant
	 * of patent rights can be found in the PATENTS file in the same directory.
	 *
	 * @providesModule ReactNoopUpdateQueue
	 */

	'use strict';

	var warning = __webpack_require__(12);

	function warnNoop(publicInstance, callerName) {
	  if (process.env.NODE_ENV !== 'production') {
	    var constructor = publicInstance.constructor;
	    process.env.NODE_ENV !== 'production' ? warning(false, '%s(...): Can only update a mounted or mounting component. ' + 'This usually means you called %s() on an unmounted component. ' + 'This is a no-op. Please check the code for the %s component.', callerName, callerName, constructor && (constructor.displayName || constructor.name) || 'ReactClass') : void 0;
	  }
	}

	/**
	 * This is the abstract API for an update queue.
	 */
	var ReactNoopUpdateQueue = {

	  /**
	   * Checks whether or not this composite component is mounted.
	   * @param {ReactClass} publicInstance The instance we want to test.
	   * @return {boolean} True if mounted, false otherwise.
	   * @protected
	   * @final
	   */
	  isMounted: function (publicInstance) {
	    return false;
	  },

	  /**
	   * Enqueue a callback that will be executed after all the pending updates
	   * have processed.
	   *
	   * @param {ReactClass} publicInstance The instance to use as `this` context.
	   * @param {?function} callback Called after state is updated.
	   * @internal
	   */
	  enqueueCallback: function (publicInstance, callback) {},

	  /**
	   * Forces an update. This should only be invoked when it is known with
	   * certainty that we are **not** in a DOM transaction.
	   *
	   * You may want to call this when you know that some deeper aspect of the
	   * component's state has changed but `setState` was not called.
	   *
	   * This will not invoke `shouldComponentUpdate`, but it will invoke
	   * `componentWillUpdate` and `componentDidUpdate`.
	   *
	   * @param {ReactClass} publicInstance The instance that should rerender.
	   * @internal
	   */
	  enqueueForceUpdate: function (publicInstance) {
	    warnNoop(publicInstance, 'forceUpdate');
	  },

	  /**
	   * Replaces all of the state. Always use this or `setState` to mutate state.
	   * You should treat `this.state` as immutable.
	   *
	   * There is no guarantee that `this.state` will be immediately updated, so
	   * accessing `this.state` after calling this method may return the old value.
	   *
	   * @param {ReactClass} publicInstance The instance that should rerender.
	   * @param {object} completeState Next state.
	   * @internal
	   */
	  enqueueReplaceState: function (publicInstance, completeState) {
	    warnNoop(publicInstance, 'replaceState');
	  },

	  /**
	   * Sets a subset of the state. This only exists because _pendingState is
	   * internal. This provides a merging strategy that is not available to deep
	   * properties which is confusing. TODO: Expose pendingState or don't use it
	   * during the merge.
	   *
	   * @param {ReactClass} publicInstance The instance that should rerender.
	   * @param {object} partialState Next partial state to be merged with state.
	   * @internal
	   */
	  enqueueSetState: function (publicInstance, partialState) {
	    warnNoop(publicInstance, 'setState');
	  }
	};

	module.exports = ReactNoopUpdateQueue;
	/* WEBPACK VAR INJECTION */}.call(exports, __webpack_require__(4)))

/***/ },
/* 20 */
/***/ function(module, exports, __webpack_require__) {

	/* WEBPACK VAR INJECTION */(function(process) {/**
	 * Copyright (c) 2013-present, Facebook, Inc.
	 * All rights reserved.
	 *
	 * This source code is licensed under the BSD-style license found in the
	 * LICENSE file in the root directory of this source tree. An additional grant
	 * of patent rights can be found in the PATENTS file in the same directory.
	 *
	 */

	'use strict';

	var emptyObject = {};

	if (process.env.NODE_ENV !== 'production') {
	  Object.freeze(emptyObject);
	}

	module.exports = emptyObject;
	/* WEBPACK VAR INJECTION */}.call(exports, __webpack_require__(4)))

/***/ },
/* 21 */
/***/ function(module, exports, __webpack_require__) {

	/* WEBPACK VAR INJECTION */(function(process) {/**
	 * Copyright 2013-present, Facebook, Inc.
	 * All rights reserved.
	 *
	 * This source code is licensed under the BSD-style license found in the
	 * LICENSE file in the root directory of this source tree. An additional grant
	 * of patent rights can be found in the PATENTS file in the same directory.
	 *
	 * @providesModule ReactClass
	 */

	'use strict';

	var _prodInvariant = __webpack_require__(8),
	    _assign = __webpack_require__(5);

	var ReactComponent = __webpack_require__(18);
	var ReactElement = __webpack_require__(10);
	var ReactPropTypeLocations = __webpack_require__(22);
	var ReactPropTypeLocationNames = __webpack_require__(24);
	var ReactNoopUpdateQueue = __webpack_require__(19);

	var emptyObject = __webpack_require__(20);
	var invariant = __webpack_require__(9);
	var keyMirror = __webpack_require__(23);
	var keyOf = __webpack_require__(25);
	var warning = __webpack_require__(12);

	var MIXINS_KEY = keyOf({ mixins: null });

	/**
	 * Policies that describe methods in `ReactClassInterface`.
	 */
	var SpecPolicy = keyMirror({
	  /**
	   * These methods may be defined only once by the class specification or mixin.
	   */
	  DEFINE_ONCE: null,
	  /**
	   * These methods may be defined by both the class specification and mixins.
	   * Subsequent definitions will be chained. These methods must return void.
	   */
	  DEFINE_MANY: null,
	  /**
	   * These methods are overriding the base class.
	   */
	  OVERRIDE_BASE: null,
	  /**
	   * These methods are similar to DEFINE_MANY, except we assume they return
	   * objects. We try to merge the keys of the return values of all the mixed in
	   * functions. If there is a key conflict we throw.
	   */
	  DEFINE_MANY_MERGED: null
	});

	var injectedMixins = [];

	/**
	 * Composite components are higher-level components that compose other composite
	 * or host components.
	 *
	 * To create a new type of `ReactClass`, pass a specification of
	 * your new class to `React.createClass`. The only requirement of your class
	 * specification is that you implement a `render` method.
	 *
	 *   var MyComponent = React.createClass({
	 *     render: function() {
	 *       return <div>Hello World</div>;
	 *     }
	 *   });
	 *
	 * The class specification supports a specific protocol of methods that have
	 * special meaning (e.g. `render`). See `ReactClassInterface` for
	 * more the comprehensive protocol. Any other properties and methods in the
	 * class specification will be available on the prototype.
	 *
	 * @interface ReactClassInterface
	 * @internal
	 */
	var ReactClassInterface = {

	  /**
	   * An array of Mixin objects to include when defining your component.
	   *
	   * @type {array}
	   * @optional
	   */
	  mixins: SpecPolicy.DEFINE_MANY,

	  /**
	   * An object containing properties and methods that should be defined on
	   * the component's constructor instead of its prototype (static methods).
	   *
	   * @type {object}
	   * @optional
	   */
	  statics: SpecPolicy.DEFINE_MANY,

	  /**
	   * Definition of prop types for this component.
	   *
	   * @type {object}
	   * @optional
	   */
	  propTypes: SpecPolicy.DEFINE_MANY,

	  /**
	   * Definition of context types for this component.
	   *
	   * @type {object}
	   * @optional
	   */
	  contextTypes: SpecPolicy.DEFINE_MANY,

	  /**
	   * Definition of context types this component sets for its children.
	   *
	   * @type {object}
	   * @optional
	   */
	  childContextTypes: SpecPolicy.DEFINE_MANY,

	  // ==== Definition methods ====

	  /**
	   * Invoked when the component is mounted. Values in the mapping will be set on
	   * `this.props` if that prop is not specified (i.e. using an `in` check).
	   *
	   * This method is invoked before `getInitialState` and therefore cannot rely
	   * on `this.state` or use `this.setState`.
	   *
	   * @return {object}
	   * @optional
	   */
	  getDefaultProps: SpecPolicy.DEFINE_MANY_MERGED,

	  /**
	   * Invoked once before the component is mounted. The return value will be used
	   * as the initial value of `this.state`.
	   *
	   *   getInitialState: function() {
	   *     return {
	   *       isOn: false,
	   *       fooBaz: new BazFoo()
	   *     }
	   *   }
	   *
	   * @return {object}
	   * @optional
	   */
	  getInitialState: SpecPolicy.DEFINE_MANY_MERGED,

	  /**
	   * @return {object}
	   * @optional
	   */
	  getChildContext: SpecPolicy.DEFINE_MANY_MERGED,

	  /**
	   * Uses props from `this.props` and state from `this.state` to render the
	   * structure of the component.
	   *
	   * No guarantees are made about when or how often this method is invoked, so
	   * it must not have side effects.
	   *
	   *   render: function() {
	   *     var name = this.props.name;
	   *     return <div>Hello, {name}!</div>;
	   *   }
	   *
	   * @return {ReactComponent}
	   * @nosideeffects
	   * @required
	   */
	  render: SpecPolicy.DEFINE_ONCE,

	  // ==== Delegate methods ====

	  /**
	   * Invoked when the component is initially created and about to be mounted.
	   * This may have side effects, but any external subscriptions or data created
	   * by this method must be cleaned up in `componentWillUnmount`.
	   *
	   * @optional
	   */
	  componentWillMount: SpecPolicy.DEFINE_MANY,

	  /**
	   * Invoked when the component has been mounted and has a DOM representation.
	   * However, there is no guarantee that the DOM node is in the document.
	   *
	   * Use this as an opportunity to operate on the DOM when the component has
	   * been mounted (initialized and rendered) for the first time.
	   *
	   * @param {DOMElement} rootNode DOM element representing the component.
	   * @optional
	   */
	  componentDidMount: SpecPolicy.DEFINE_MANY,

	  /**
	   * Invoked before the component receives new props.
	   *
	   * Use this as an opportunity to react to a prop transition by updating the
	   * state using `this.setState`. Current props are accessed via `this.props`.
	   *
	   *   componentWillReceiveProps: function(nextProps, nextContext) {
	   *     this.setState({
	   *       likesIncreasing: nextProps.likeCount > this.props.likeCount
	   *     });
	   *   }
	   *
	   * NOTE: There is no equivalent `componentWillReceiveState`. An incoming prop
	   * transition may cause a state change, but the opposite is not true. If you
	   * need it, you are probably looking for `componentWillUpdate`.
	   *
	   * @param {object} nextProps
	   * @optional
	   */
	  componentWillReceiveProps: SpecPolicy.DEFINE_MANY,

	  /**
	   * Invoked while deciding if the component should be updated as a result of
	   * receiving new props, state and/or context.
	   *
	   * Use this as an opportunity to `return false` when you're certain that the
	   * transition to the new props/state/context will not require a component
	   * update.
	   *
	   *   shouldComponentUpdate: function(nextProps, nextState, nextContext) {
	   *     return !equal(nextProps, this.props) ||
	   *       !equal(nextState, this.state) ||
	   *       !equal(nextContext, this.context);
	   *   }
	   *
	   * @param {object} nextProps
	   * @param {?object} nextState
	   * @param {?object} nextContext
	   * @return {boolean} True if the component should update.
	   * @optional
	   */
	  shouldComponentUpdate: SpecPolicy.DEFINE_ONCE,

	  /**
	   * Invoked when the component is about to update due to a transition from
	   * `this.props`, `this.state` and `this.context` to `nextProps`, `nextState`
	   * and `nextContext`.
	   *
	   * Use this as an opportunity to perform preparation before an update occurs.
	   *
	   * NOTE: You **cannot** use `this.setState()` in this method.
	   *
	   * @param {object} nextProps
	   * @param {?object} nextState
	   * @param {?object} nextContext
	   * @param {ReactReconcileTransaction} transaction
	   * @optional
	   */
	  componentWillUpdate: SpecPolicy.DEFINE_MANY,

	  /**
	   * Invoked when the component's DOM representation has been updated.
	   *
	   * Use this as an opportunity to operate on the DOM when the component has
	   * been updated.
	   *
	   * @param {object} prevProps
	   * @param {?object} prevState
	   * @param {?object} prevContext
	   * @param {DOMElement} rootNode DOM element representing the component.
	   * @optional
	   */
	  componentDidUpdate: SpecPolicy.DEFINE_MANY,

	  /**
	   * Invoked when the component is about to be removed from its parent and have
	   * its DOM representation destroyed.
	   *
	   * Use this as an opportunity to deallocate any external resources.
	   *
	   * NOTE: There is no `componentDidUnmount` since your component will have been
	   * destroyed by that point.
	   *
	   * @optional
	   */
	  componentWillUnmount: SpecPolicy.DEFINE_MANY,

	  // ==== Advanced methods ====

	  /**
	   * Updates the component's currently mounted DOM representation.
	   *
	   * By default, this implements React's rendering and reconciliation algorithm.
	   * Sophisticated clients may wish to override this.
	   *
	   * @param {ReactReconcileTransaction} transaction
	   * @internal
	   * @overridable
	   */
	  updateComponent: SpecPolicy.OVERRIDE_BASE

	};

	/**
	 * Mapping from class specification keys to special processing functions.
	 *
	 * Although these are declared like instance properties in the specification
	 * when defining classes using `React.createClass`, they are actually static
	 * and are accessible on the constructor instead of the prototype. Despite
	 * being static, they must be defined outside of the "statics" key under
	 * which all other static methods are defined.
	 */
	var RESERVED_SPEC_KEYS = {
	  displayName: function (Constructor, displayName) {
	    Constructor.displayName = displayName;
	  },
	  mixins: function (Constructor, mixins) {
	    if (mixins) {
	      for (var i = 0; i < mixins.length; i++) {
	        mixSpecIntoComponent(Constructor, mixins[i]);
	      }
	    }
	  },
	  childContextTypes: function (Constructor, childContextTypes) {
	    if (process.env.NODE_ENV !== 'production') {
	      validateTypeDef(Constructor, childContextTypes, ReactPropTypeLocations.childContext);
	    }
	    Constructor.childContextTypes = _assign({}, Constructor.childContextTypes, childContextTypes);
	  },
	  contextTypes: function (Constructor, contextTypes) {
	    if (process.env.NODE_ENV !== 'production') {
	      validateTypeDef(Constructor, contextTypes, ReactPropTypeLocations.context);
	    }
	    Constructor.contextTypes = _assign({}, Constructor.contextTypes, contextTypes);
	  },
	  /**
	   * Special case getDefaultProps which should move into statics but requires
	   * automatic merging.
	   */
	  getDefaultProps: function (Constructor, getDefaultProps) {
	    if (Constructor.getDefaultProps) {
	      Constructor.getDefaultProps = createMergedResultFunction(Constructor.getDefaultProps, getDefaultProps);
	    } else {
	      Constructor.getDefaultProps = getDefaultProps;
	    }
	  },
	  propTypes: function (Constructor, propTypes) {
	    if (process.env.NODE_ENV !== 'production') {
	      validateTypeDef(Constructor, propTypes, ReactPropTypeLocations.prop);
	    }
	    Constructor.propTypes = _assign({}, Constructor.propTypes, propTypes);
	  },
	  statics: function (Constructor, statics) {
	    mixStaticSpecIntoComponent(Constructor, statics);
	  },
	  autobind: function () {} };

	// noop
	function validateTypeDef(Constructor, typeDef, location) {
	  for (var propName in typeDef) {
	    if (typeDef.hasOwnProperty(propName)) {
	      // use a warning instead of an invariant so components
	      // don't show up in prod but only in __DEV__
	      process.env.NODE_ENV !== 'production' ? warning(typeof typeDef[propName] === 'function', '%s: %s type `%s` is invalid; it must be a function, usually from ' + 'React.PropTypes.', Constructor.displayName || 'ReactClass', ReactPropTypeLocationNames[location], propName) : void 0;
	    }
	  }
	}

	function validateMethodOverride(isAlreadyDefined, name) {
	  var specPolicy = ReactClassInterface.hasOwnProperty(name) ? ReactClassInterface[name] : null;

	  // Disallow overriding of base class methods unless explicitly allowed.
	  if (ReactClassMixin.hasOwnProperty(name)) {
	    !(specPolicy === SpecPolicy.OVERRIDE_BASE) ? process.env.NODE_ENV !== 'production' ? invariant(false, 'ReactClassInterface: You are attempting to override `%s` from your class specification. Ensure that your method names do not overlap with React methods.', name) : _prodInvariant('73', name) : void 0;
	  }

	  // Disallow defining methods more than once unless explicitly allowed.
	  if (isAlreadyDefined) {
	    !(specPolicy === SpecPolicy.DEFINE_MANY || specPolicy === SpecPolicy.DEFINE_MANY_MERGED) ? process.env.NODE_ENV !== 'production' ? invariant(false, 'ReactClassInterface: You are attempting to define `%s` on your component more than once. This conflict may be due to a mixin.', name) : _prodInvariant('74', name) : void 0;
	  }
	}

	/**
	 * Mixin helper which handles policy validation and reserved
	 * specification keys when building React classes.
	 */
	function mixSpecIntoComponent(Constructor, spec) {
	  if (!spec) {
	    return;
	  }

	  !(typeof spec !== 'function') ? process.env.NODE_ENV !== 'production' ? invariant(false, 'ReactClass: You\'re attempting to use a component class or function as a mixin. Instead, just use a regular object.') : _prodInvariant('75') : void 0;
	  !!ReactElement.isValidElement(spec) ? process.env.NODE_ENV !== 'production' ? invariant(false, 'ReactClass: You\'re attempting to use a component as a mixin. Instead, just use a regular object.') : _prodInvariant('76') : void 0;

	  var proto = Constructor.prototype;
	  var autoBindPairs = proto.__reactAutoBindPairs;

	  // By handling mixins before any other properties, we ensure the same
	  // chaining order is applied to methods with DEFINE_MANY policy, whether
	  // mixins are listed before or after these methods in the spec.
	  if (spec.hasOwnProperty(MIXINS_KEY)) {
	    RESERVED_SPEC_KEYS.mixins(Constructor, spec.mixins);
	  }

	  for (var name in spec) {
	    if (!spec.hasOwnProperty(name)) {
	      continue;
	    }

	    if (name === MIXINS_KEY) {
	      // We have already handled mixins in a special case above.
	      continue;
	    }

	    var property = spec[name];
	    var isAlreadyDefined = proto.hasOwnProperty(name);
	    validateMethodOverride(isAlreadyDefined, name);

	    if (RESERVED_SPEC_KEYS.hasOwnProperty(name)) {
	      RESERVED_SPEC_KEYS[name](Constructor, property);
	    } else {
	      // Setup methods on prototype:
	      // The following member methods should not be automatically bound:
	      // 1. Expected ReactClass methods (in the "interface").
	      // 2. Overridden methods (that were mixed in).
	      var isReactClassMethod = ReactClassInterface.hasOwnProperty(name);
	      var isFunction = typeof property === 'function';
	      var shouldAutoBind = isFunction && !isReactClassMethod && !isAlreadyDefined && spec.autobind !== false;

	      if (shouldAutoBind) {
	        autoBindPairs.push(name, property);
	        proto[name] = property;
	      } else {
	        if (isAlreadyDefined) {
	          var specPolicy = ReactClassInterface[name];

	          // These cases should already be caught by validateMethodOverride.
	          !(isReactClassMethod && (specPolicy === SpecPolicy.DEFINE_MANY_MERGED || specPolicy === SpecPolicy.DEFINE_MANY)) ? process.env.NODE_ENV !== 'production' ? invariant(false, 'ReactClass: Unexpected spec policy %s for key %s when mixing in component specs.', specPolicy, name) : _prodInvariant('77', specPolicy, name) : void 0;

	          // For methods which are defined more than once, call the existing
	          // methods before calling the new property, merging if appropriate.
	          if (specPolicy === SpecPolicy.DEFINE_MANY_MERGED) {
	            proto[name] = createMergedResultFunction(proto[name], property);
	          } else if (specPolicy === SpecPolicy.DEFINE_MANY) {
	            proto[name] = createChainedFunction(proto[name], property);
	          }
	        } else {
	          proto[name] = property;
	          if (process.env.NODE_ENV !== 'production') {
	            // Add verbose displayName to the function, which helps when looking
	            // at profiling tools.
	            if (typeof property === 'function' && spec.displayName) {
	              proto[name].displayName = spec.displayName + '_' + name;
	            }
	          }
	        }
	      }
	    }
	  }
	}

	function mixStaticSpecIntoComponent(Constructor, statics) {
	  if (!statics) {
	    return;
	  }
	  for (var name in statics) {
	    var property = statics[name];
	    if (!statics.hasOwnProperty(name)) {
	      continue;
	    }

	    var isReserved = name in RESERVED_SPEC_KEYS;
	    !!isReserved ? process.env.NODE_ENV !== 'production' ? invariant(false, 'ReactClass: You are attempting to define a reserved property, `%s`, that shouldn\'t be on the "statics" key. Define it as an instance property instead; it will still be accessible on the constructor.', name) : _prodInvariant('78', name) : void 0;

	    var isInherited = name in Constructor;
	    !!isInherited ? process.env.NODE_ENV !== 'production' ? invariant(false, 'ReactClass: You are attempting to define `%s` on your component more than once. This conflict may be due to a mixin.', name) : _prodInvariant('79', name) : void 0;
	    Constructor[name] = property;
	  }
	}

	/**
	 * Merge two objects, but throw if both contain the same key.
	 *
	 * @param {object} one The first object, which is mutated.
	 * @param {object} two The second object
	 * @return {object} one after it has been mutated to contain everything in two.
	 */
	function mergeIntoWithNoDuplicateKeys(one, two) {
	  !(one && two && typeof one === 'object' && typeof two === 'object') ? process.env.NODE_ENV !== 'production' ? invariant(false, 'mergeIntoWithNoDuplicateKeys(): Cannot merge non-objects.') : _prodInvariant('80') : void 0;

	  for (var key in two) {
	    if (two.hasOwnProperty(key)) {
	      !(one[key] === undefined) ? process.env.NODE_ENV !== 'production' ? invariant(false, 'mergeIntoWithNoDuplicateKeys(): Tried to merge two objects with the same key: `%s`. This conflict may be due to a mixin; in particular, this may be caused by two getInitialState() or getDefaultProps() methods returning objects with clashing keys.', key) : _prodInvariant('81', key) : void 0;
	      one[key] = two[key];
	    }
	  }
	  return one;
	}

	/**
	 * Creates a function that invokes two functions and merges their return values.
	 *
	 * @param {function} one Function to invoke first.
	 * @param {function} two Function to invoke second.
	 * @return {function} Function that invokes the two argument functions.
	 * @private
	 */
	function createMergedResultFunction(one, two) {
	  return function mergedResult() {
	    var a = one.apply(this, arguments);
	    var b = two.apply(this, arguments);
	    if (a == null) {
	      return b;
	    } else if (b == null) {
	      return a;
	    }
	    var c = {};
	    mergeIntoWithNoDuplicateKeys(c, a);
	    mergeIntoWithNoDuplicateKeys(c, b);
	    return c;
	  };
	}

	/**
	 * Creates a function that invokes two functions and ignores their return vales.
	 *
	 * @param {function} one Function to invoke first.
	 * @param {function} two Function to invoke second.
	 * @return {function} Function that invokes the two argument functions.
	 * @private
	 */
	function createChainedFunction(one, two) {
	  return function chainedFunction() {
	    one.apply(this, arguments);
	    two.apply(this, arguments);
	  };
	}

	/**
	 * Binds a method to the component.
	 *
	 * @param {object} component Component whose method is going to be bound.
	 * @param {function} method Method to be bound.
	 * @return {function} The bound method.
	 */
	function bindAutoBindMethod(component, method) {
	  var boundMethod = method.bind(component);
	  if (process.env.NODE_ENV !== 'production') {
	    boundMethod.__reactBoundContext = component;
	    boundMethod.__reactBoundMethod = method;
	    boundMethod.__reactBoundArguments = null;
	    var componentName = component.constructor.displayName;
	    var _bind = boundMethod.bind;
	    boundMethod.bind = function (newThis) {
	      for (var _len = arguments.length, args = Array(_len > 1 ? _len - 1 : 0), _key = 1; _key < _len; _key++) {
	        args[_key - 1] = arguments[_key];
	      }

	      // User is trying to bind() an autobound method; we effectively will
	      // ignore the value of "this" that the user is trying to use, so
	      // let's warn.
	      if (newThis !== component && newThis !== null) {
	        process.env.NODE_ENV !== 'production' ? warning(false, 'bind(): React component methods may only be bound to the ' + 'component instance. See %s', componentName) : void 0;
	      } else if (!args.length) {
	        process.env.NODE_ENV !== 'production' ? warning(false, 'bind(): You are binding a component method to the component. ' + 'React does this for you automatically in a high-performance ' + 'way, so you can safely remove this call. See %s', componentName) : void 0;
	        return boundMethod;
	      }
	      var reboundMethod = _bind.apply(boundMethod, arguments);
	      reboundMethod.__reactBoundContext = component;
	      reboundMethod.__reactBoundMethod = method;
	      reboundMethod.__reactBoundArguments = args;
	      return reboundMethod;
	    };
	  }
	  return boundMethod;
	}

	/**
	 * Binds all auto-bound methods in a component.
	 *
	 * @param {object} component Component whose method is going to be bound.
	 */
	function bindAutoBindMethods(component) {
	  var pairs = component.__reactAutoBindPairs;
	  for (var i = 0; i < pairs.length; i += 2) {
	    var autoBindKey = pairs[i];
	    var method = pairs[i + 1];
	    component[autoBindKey] = bindAutoBindMethod(component, method);
	  }
	}

	/**
	 * Add more to the ReactClass base class. These are all legacy features and
	 * therefore not already part of the modern ReactComponent.
	 */
	var ReactClassMixin = {

	  /**
	   * TODO: This will be deprecated because state should always keep a consistent
	   * type signature and the only use case for this, is to avoid that.
	   */
	  replaceState: function (newState, callback) {
	    this.updater.enqueueReplaceState(this, newState);
	    if (callback) {
	      this.updater.enqueueCallback(this, callback, 'replaceState');
	    }
	  },

	  /**
	   * Checks whether or not this composite component is mounted.
	   * @return {boolean} True if mounted, false otherwise.
	   * @protected
	   * @final
	   */
	  isMounted: function () {
	    return this.updater.isMounted(this);
	  }
	};

	var ReactClassComponent = function () {};
	_assign(ReactClassComponent.prototype, ReactComponent.prototype, ReactClassMixin);

	/**
	 * Module for creating composite components.
	 *
	 * @class ReactClass
	 */
	var ReactClass = {

	  /**
	   * Creates a composite component class given a class specification.
	   * See https://facebook.github.io/react/docs/top-level-api.html#react.createclass
	   *
	   * @param {object} spec Class specification (which must define `render`).
	   * @return {function} Component constructor function.
	   * @public
	   */
	  createClass: function (spec) {
	    var Constructor = function (props, context, updater) {
	      // This constructor gets overridden by mocks. The argument is used
	      // by mocks to assert on what gets mounted.

	      if (process.env.NODE_ENV !== 'production') {
	        process.env.NODE_ENV !== 'production' ? warning(this instanceof Constructor, 'Something is calling a React component directly. Use a factory or ' + 'JSX instead. See: https://fb.me/react-legacyfactory') : void 0;
	      }

	      // Wire up auto-binding
	      if (this.__reactAutoBindPairs.length) {
	        bindAutoBindMethods(this);
	      }

	      this.props = props;
	      this.context = context;
	      this.refs = emptyObject;
	      this.updater = updater || ReactNoopUpdateQueue;

	      this.state = null;

	      // ReactClasses doesn't have constructors. Instead, they use the
	      // getInitialState and componentWillMount methods for initialization.

	      var initialState = this.getInitialState ? this.getInitialState() : null;
	      if (process.env.NODE_ENV !== 'production') {
	        // We allow auto-mocks to proceed as if they're returning null.
	        if (initialState === undefined && this.getInitialState._isMockFunction) {
	          // This is probably bad practice. Consider warning here and
	          // deprecating this convenience.
	          initialState = null;
	        }
	      }
	      !(typeof initialState === 'object' && !Array.isArray(initialState)) ? process.env.NODE_ENV !== 'production' ? invariant(false, '%s.getInitialState(): must return an object or null', Constructor.displayName || 'ReactCompositeComponent') : _prodInvariant('82', Constructor.displayName || 'ReactCompositeComponent') : void 0;

	      this.state = initialState;
	    };
	    Constructor.prototype = new ReactClassComponent();
	    Constructor.prototype.constructor = Constructor;
	    Constructor.prototype.__reactAutoBindPairs = [];

	    injectedMixins.forEach(mixSpecIntoComponent.bind(null, Constructor));

	    mixSpecIntoComponent(Constructor, spec);

	    // Initialize the defaultProps property after all mixins have been merged.
	    if (Constructor.getDefaultProps) {
	      Constructor.defaultProps = Constructor.getDefaultProps();
	    }

	    if (process.env.NODE_ENV !== 'production') {
	      // This is a tag to indicate that the use of these method names is ok,
	      // since it's used with createClass. If it's not, then it's likely a
	      // mistake so we'll warn you to use the static property, property
	      // initializer or constructor respectively.
	      if (Constructor.getDefaultProps) {
	        Constructor.getDefaultProps.isReactClassApproved = {};
	      }
	      if (Constructor.prototype.getInitialState) {
	        Constructor.prototype.getInitialState.isReactClassApproved = {};
	      }
	    }

	    !Constructor.prototype.render ? process.env.NODE_ENV !== 'production' ? invariant(false, 'createClass(...): Class specification must implement a `render` method.') : _prodInvariant('83') : void 0;

	    if (process.env.NODE_ENV !== 'production') {
	      process.env.NODE_ENV !== 'production' ? warning(!Constructor.prototype.componentShouldUpdate, '%s has a method called ' + 'componentShouldUpdate(). Did you mean shouldComponentUpdate()? ' + 'The name is phrased as a question because the function is ' + 'expected to return a value.', spec.displayName || 'A component') : void 0;
	      process.env.NODE_ENV !== 'production' ? warning(!Constructor.prototype.componentWillRecieveProps, '%s has a method called ' + 'componentWillRecieveProps(). Did you mean componentWillReceiveProps()?', spec.displayName || 'A component') : void 0;
	    }

	    // Reduce time spent doing lookups by setting these on the prototype.
	    for (var methodName in ReactClassInterface) {
	      if (!Constructor.prototype[methodName]) {
	        Constructor.prototype[methodName] = null;
	      }
	    }

	    return Constructor;
	  },

	  injection: {
	    injectMixin: function (mixin) {
	      injectedMixins.push(mixin);
	    }
	  }

	};

	module.exports = ReactClass;
	/* WEBPACK VAR INJECTION */}.call(exports, __webpack_require__(4)))

/***/ },
/* 22 */
/***/ function(module, exports, __webpack_require__) {

	/**
	 * Copyright 2013-present, Facebook, Inc.
	 * All rights reserved.
	 *
	 * This source code is licensed under the BSD-style license found in the
	 * LICENSE file in the root directory of this source tree. An additional grant
	 * of patent rights can be found in the PATENTS file in the same directory.
	 *
	 * @providesModule ReactPropTypeLocations
	 */

	'use strict';

	var keyMirror = __webpack_require__(23);

	var ReactPropTypeLocations = keyMirror({
	  prop: null,
	  context: null,
	  childContext: null
	});

	module.exports = ReactPropTypeLocations;

/***/ },
/* 23 */
/***/ function(module, exports, __webpack_require__) {

	/* WEBPACK VAR INJECTION */(function(process) {/**
	 * Copyright (c) 2013-present, Facebook, Inc.
	 * All rights reserved.
	 *
	 * This source code is licensed under the BSD-style license found in the
	 * LICENSE file in the root directory of this source tree. An additional grant
	 * of patent rights can be found in the PATENTS file in the same directory.
	 *
	 * @typechecks static-only
	 */

	'use strict';

	var invariant = __webpack_require__(9);

	/**
	 * Constructs an enumeration with keys equal to their value.
	 *
	 * For example:
	 *
	 *   var COLORS = keyMirror({blue: null, red: null});
	 *   var myColor = COLORS.blue;
	 *   var isColorValid = !!COLORS[myColor];
	 *
	 * The last line could not be performed if the values of the generated enum were
	 * not equal to their keys.
	 *
	 *   Input:  {key1: val1, key2: val2}
	 *   Output: {key1: key1, key2: key2}
	 *
	 * @param {object} obj
	 * @return {object}
	 */
	var keyMirror = function keyMirror(obj) {
	  var ret = {};
	  var key;
	  !(obj instanceof Object && !Array.isArray(obj)) ? process.env.NODE_ENV !== 'production' ? invariant(false, 'keyMirror(...): Argument must be an object.') : invariant(false) : void 0;
	  for (key in obj) {
	    if (!obj.hasOwnProperty(key)) {
	      continue;
	    }
	    ret[key] = key;
	  }
	  return ret;
	};

	module.exports = keyMirror;
	/* WEBPACK VAR INJECTION */}.call(exports, __webpack_require__(4)))

/***/ },
/* 24 */
/***/ function(module, exports, __webpack_require__) {

	/* WEBPACK VAR INJECTION */(function(process) {/**
	 * Copyright 2013-present, Facebook, Inc.
	 * All rights reserved.
	 *
	 * This source code is licensed under the BSD-style license found in the
	 * LICENSE file in the root directory of this source tree. An additional grant
	 * of patent rights can be found in the PATENTS file in the same directory.
	 *
	 * @providesModule ReactPropTypeLocationNames
	 */

	'use strict';

	var ReactPropTypeLocationNames = {};

	if (process.env.NODE_ENV !== 'production') {
	  ReactPropTypeLocationNames = {
	    prop: 'prop',
	    context: 'context',
	    childContext: 'child context'
	  };
	}

	module.exports = ReactPropTypeLocationNames;
	/* WEBPACK VAR INJECTION */}.call(exports, __webpack_require__(4)))

/***/ },
/* 25 */
/***/ function(module, exports) {

	"use strict";

	/**
	 * Copyright (c) 2013-present, Facebook, Inc.
	 * All rights reserved.
	 *
	 * This source code is licensed under the BSD-style license found in the
	 * LICENSE file in the root directory of this source tree. An additional grant
	 * of patent rights can be found in the PATENTS file in the same directory.
	 *
	 */

	/**
	 * Allows extraction of a minified key. Let's the build system minify keys
	 * without losing the ability to dynamically use key strings as values
	 * themselves. Pass in an object with a single key/val pair and it will return
	 * you the string key of that single record. Suppose you want to grab the
	 * value for a key 'className' inside of an object. Key/val minification may
	 * have aliased that key to be 'xa12'. keyOf({className: null}) will return
	 * 'xa12' in that case. Resolve keys you want to use once at startup time, then
	 * reuse those resolutions.
	 */
	var keyOf = function keyOf(oneKeyObj) {
	  var key;
	  for (key in oneKeyObj) {
	    if (!oneKeyObj.hasOwnProperty(key)) {
	      continue;
	    }
	    return key;
	  }
	  return null;
	};

	module.exports = keyOf;

/***/ },
/* 26 */
/***/ function(module, exports, __webpack_require__) {

	/* WEBPACK VAR INJECTION */(function(process) {/**
	 * Copyright 2013-present, Facebook, Inc.
	 * All rights reserved.
	 *
	 * This source code is licensed under the BSD-style license found in the
	 * LICENSE file in the root directory of this source tree. An additional grant
	 * of patent rights can be found in the PATENTS file in the same directory.
	 *
	 * @providesModule ReactDOMFactories
	 */

	'use strict';

	var ReactElement = __webpack_require__(10);

	var mapObject = __webpack_require__(27);

	/**
	 * Create a factory that creates HTML tag elements.
	 *
	 * @param {string} tag Tag name (e.g. `div`).
	 * @private
	 */
	function createDOMFactory(tag) {
	  if (process.env.NODE_ENV !== 'production') {
	    var ReactElementValidator = __webpack_require__(28);
	    return ReactElementValidator.createFactory(tag);
	  }
	  return ReactElement.createFactory(tag);
	}

	/**
	 * Creates a mapping from supported HTML tags to `ReactDOMComponent` classes.
	 * This is also accessible via `React.DOM`.
	 *
	 * @public
	 */
	var ReactDOMFactories = mapObject({
	  a: 'a',
	  abbr: 'abbr',
	  address: 'address',
	  area: 'area',
	  article: 'article',
	  aside: 'aside',
	  audio: 'audio',
	  b: 'b',
	  base: 'base',
	  bdi: 'bdi',
	  bdo: 'bdo',
	  big: 'big',
	  blockquote: 'blockquote',
	  body: 'body',
	  br: 'br',
	  button: 'button',
	  canvas: 'canvas',
	  caption: 'caption',
	  cite: 'cite',
	  code: 'code',
	  col: 'col',
	  colgroup: 'colgroup',
	  data: 'data',
	  datalist: 'datalist',
	  dd: 'dd',
	  del: 'del',
	  details: 'details',
	  dfn: 'dfn',
	  dialog: 'dialog',
	  div: 'div',
	  dl: 'dl',
	  dt: 'dt',
	  em: 'em',
	  embed: 'embed',
	  fieldset: 'fieldset',
	  figcaption: 'figcaption',
	  figure: 'figure',
	  footer: 'footer',
	  form: 'form',
	  h1: 'h1',
	  h2: 'h2',
	  h3: 'h3',
	  h4: 'h4',
	  h5: 'h5',
	  h6: 'h6',
	  head: 'head',
	  header: 'header',
	  hgroup: 'hgroup',
	  hr: 'hr',
	  html: 'html',
	  i: 'i',
	  iframe: 'iframe',
	  img: 'img',
	  input: 'input',
	  ins: 'ins',
	  kbd: 'kbd',
	  keygen: 'keygen',
	  label: 'label',
	  legend: 'legend',
	  li: 'li',
	  link: 'link',
	  main: 'main',
	  map: 'map',
	  mark: 'mark',
	  menu: 'menu',
	  menuitem: 'menuitem',
	  meta: 'meta',
	  meter: 'meter',
	  nav: 'nav',
	  noscript: 'noscript',
	  object: 'object',
	  ol: 'ol',
	  optgroup: 'optgroup',
	  option: 'option',
	  output: 'output',
	  p: 'p',
	  param: 'param',
	  picture: 'picture',
	  pre: 'pre',
	  progress: 'progress',
	  q: 'q',
	  rp: 'rp',
	  rt: 'rt',
	  ruby: 'ruby',
	  s: 's',
	  samp: 'samp',
	  script: 'script',
	  section: 'section',
	  select: 'select',
	  small: 'small',
	  source: 'source',
	  span: 'span',
	  strong: 'strong',
	  style: 'style',
	  sub: 'sub',
	  summary: 'summary',
	  sup: 'sup',
	  table: 'table',
	  tbody: 'tbody',
	  td: 'td',
	  textarea: 'textarea',
	  tfoot: 'tfoot',
	  th: 'th',
	  thead: 'thead',
	  time: 'time',
	  title: 'title',
	  tr: 'tr',
	  track: 'track',
	  u: 'u',
	  ul: 'ul',
	  'var': 'var',
	  video: 'video',
	  wbr: 'wbr',

	  // SVG
	  circle: 'circle',
	  clipPath: 'clipPath',
	  defs: 'defs',
	  ellipse: 'ellipse',
	  g: 'g',
	  image: 'image',
	  line: 'line',
	  linearGradient: 'linearGradient',
	  mask: 'mask',
	  path: 'path',
	  pattern: 'pattern',
	  polygon: 'polygon',
	  polyline: 'polyline',
	  radialGradient: 'radialGradient',
	  rect: 'rect',
	  stop: 'stop',
	  svg: 'svg',
	  text: 'text',
	  tspan: 'tspan'

	}, createDOMFactory);

	module.exports = ReactDOMFactories;
	/* WEBPACK VAR INJECTION */}.call(exports, __webpack_require__(4)))

/***/ },
/* 27 */
/***/ function(module, exports) {

	/**
	 * Copyright (c) 2013-present, Facebook, Inc.
	 * All rights reserved.
	 *
	 * This source code is licensed under the BSD-style license found in the
	 * LICENSE file in the root directory of this source tree. An additional grant
	 * of patent rights can be found in the PATENTS file in the same directory.
	 *
	 */

	'use strict';

	var hasOwnProperty = Object.prototype.hasOwnProperty;

	/**
	 * Executes the provided `callback` once for each enumerable own property in the
	 * object and constructs a new object from the results. The `callback` is
	 * invoked with three arguments:
	 *
	 *  - the property value
	 *  - the property name
	 *  - the object being traversed
	 *
	 * Properties that are added after the call to `mapObject` will not be visited
	 * by `callback`. If the values of existing properties are changed, the value
	 * passed to `callback` will be the value at the time `mapObject` visits them.
	 * Properties that are deleted before being visited are not visited.
	 *
	 * @grep function objectMap()
	 * @grep function objMap()
	 *
	 * @param {?object} object
	 * @param {function} callback
	 * @param {*} context
	 * @return {?object}
	 */
	function mapObject(object, callback, context) {
	  if (!object) {
	    return null;
	  }
	  var result = {};
	  for (var name in object) {
	    if (hasOwnProperty.call(object, name)) {
	      result[name] = callback.call(context, object[name], name, object);
	    }
	  }
	  return result;
	}

	module.exports = mapObject;

/***/ },
/* 28 */
/***/ function(module, exports, __webpack_require__) {

	/* WEBPACK VAR INJECTION */(function(process) {/**
	 * Copyright 2014-present, Facebook, Inc.
	 * All rights reserved.
	 *
	 * This source code is licensed under the BSD-style license found in the
	 * LICENSE file in the root directory of this source tree. An additional grant
	 * of patent rights can be found in the PATENTS file in the same directory.
	 *
	 * @providesModule ReactElementValidator
	 */

	/**
	 * ReactElementValidator provides a wrapper around a element factory
	 * which validates the props passed to the element. This is intended to be
	 * used only in DEV and could be replaced by a static type checker for languages
	 * that support it.
	 */

	'use strict';

	var ReactCurrentOwner = __webpack_require__(11);
	var ReactComponentTreeDevtool = __webpack_require__(29);
	var ReactElement = __webpack_require__(10);
	var ReactPropTypeLocations = __webpack_require__(22);

	var checkReactTypeSpec = __webpack_require__(30);

	var canDefineProperty = __webpack_require__(14);
	var getIteratorFn = __webpack_require__(16);
	var warning = __webpack_require__(12);

	function getDeclarationErrorAddendum() {
	  if (ReactCurrentOwner.current) {
	    var name = ReactCurrentOwner.current.getName();
	    if (name) {
	      return ' Check the render method of `' + name + '`.';
	    }
	  }
	  return '';
	}

	/**
	 * Warn if there's no key explicitly set on dynamic arrays of children or
	 * object keys are not valid. This allows us to keep track of children between
	 * updates.
	 */
	var ownerHasKeyUseWarning = {};

	function getCurrentComponentErrorInfo(parentType) {
	  var info = getDeclarationErrorAddendum();

	  if (!info) {
	    var parentName = typeof parentType === 'string' ? parentType : parentType.displayName || parentType.name;
	    if (parentName) {
	      info = ' Check the top-level render call using <' + parentName + '>.';
	    }
	  }
	  return info;
	}

	/**
	 * Warn if the element doesn't have an explicit key assigned to it.
	 * This element is in an array. The array could grow and shrink or be
	 * reordered. All children that haven't already been validated are required to
	 * have a "key" property assigned to it. Error statuses are cached so a warning
	 * will only be shown once.
	 *
	 * @internal
	 * @param {ReactElement} element Element that requires a key.
	 * @param {*} parentType element's parent's type.
	 */
	function validateExplicitKey(element, parentType) {
	  if (!element._store || element._store.validated || element.key != null) {
	    return;
	  }
	  element._store.validated = true;

	  var memoizer = ownerHasKeyUseWarning.uniqueKey || (ownerHasKeyUseWarning.uniqueKey = {});

	  var currentComponentErrorInfo = getCurrentComponentErrorInfo(parentType);
	  if (memoizer[currentComponentErrorInfo]) {
	    return;
	  }
	  memoizer[currentComponentErrorInfo] = true;

	  // Usually the current owner is the offender, but if it accepts children as a
	  // property, it may be the creator of the child that's responsible for
	  // assigning it a key.
	  var childOwner = '';
	  if (element && element._owner && element._owner !== ReactCurrentOwner.current) {
	    // Give the component that originally created this child.
	    childOwner = ' It was passed a child from ' + element._owner.getName() + '.';
	  }

	  process.env.NODE_ENV !== 'production' ? warning(false, 'Each child in an array or iterator should have a unique "key" prop.' + '%s%s See https://fb.me/react-warning-keys for more information.%s', currentComponentErrorInfo, childOwner, ReactComponentTreeDevtool.getCurrentStackAddendum(element)) : void 0;
	}

	/**
	 * Ensure that every element either is passed in a static location, in an
	 * array with an explicit keys property defined, or in an object literal
	 * with valid key property.
	 *
	 * @internal
	 * @param {ReactNode} node Statically passed child of any type.
	 * @param {*} parentType node's parent's type.
	 */
	function validateChildKeys(node, parentType) {
	  if (typeof node !== 'object') {
	    return;
	  }
	  if (Array.isArray(node)) {
	    for (var i = 0; i < node.length; i++) {
	      var child = node[i];
	      if (ReactElement.isValidElement(child)) {
	        validateExplicitKey(child, parentType);
	      }
	    }
	  } else if (ReactElement.isValidElement(node)) {
	    // This element was passed in a valid location.
	    if (node._store) {
	      node._store.validated = true;
	    }
	  } else if (node) {
	    var iteratorFn = getIteratorFn(node);
	    // Entry iterators provide implicit keys.
	    if (iteratorFn) {
	      if (iteratorFn !== node.entries) {
	        var iterator = iteratorFn.call(node);
	        var step;
	        while (!(step = iterator.next()).done) {
	          if (ReactElement.isValidElement(step.value)) {
	            validateExplicitKey(step.value, parentType);
	          }
	        }
	      }
	    }
	  }
	}

	/**
	 * Given an element, validate that its props follow the propTypes definition,
	 * provided by the type.
	 *
	 * @param {ReactElement} element
	 */
	function validatePropTypes(element) {
	  var componentClass = element.type;
	  if (typeof componentClass !== 'function') {
	    return;
	  }
	  var name = componentClass.displayName || componentClass.name;
	  if (componentClass.propTypes) {
	    checkReactTypeSpec(componentClass.propTypes, element.props, ReactPropTypeLocations.prop, name, element, null);
	  }
	  if (typeof componentClass.getDefaultProps === 'function') {
	    process.env.NODE_ENV !== 'production' ? warning(componentClass.getDefaultProps.isReactClassApproved, 'getDefaultProps is only used on classic React.createClass ' + 'definitions. Use a static property named `defaultProps` instead.') : void 0;
	  }
	}

	var ReactElementValidator = {

	  createElement: function (type, props, children) {
	    var validType = typeof type === 'string' || typeof type === 'function';
	    // We warn in this case but don't throw. We expect the element creation to
	    // succeed and there will likely be errors in render.
	    process.env.NODE_ENV !== 'production' ? warning(validType, 'React.createElement: type should not be null, undefined, boolean, or ' + 'number. It should be a string (for DOM elements) or a ReactClass ' + '(for composite components).%s', getDeclarationErrorAddendum()) : void 0;

	    var element = ReactElement.createElement.apply(this, arguments);

	    // The result can be nullish if a mock or a custom function is used.
	    // TODO: Drop this when these are no longer allowed as the type argument.
	    if (element == null) {
	      return element;
	    }

	    // Skip key warning if the type isn't valid since our key validation logic
	    // doesn't expect a non-string/function type and can throw confusing errors.
	    // We don't want exception behavior to differ between dev and prod.
	    // (Rendering will throw with a helpful message and as soon as the type is
	    // fixed, the key warnings will appear.)
	    if (validType) {
	      for (var i = 2; i < arguments.length; i++) {
	        validateChildKeys(arguments[i], type);
	      }
	    }

	    validatePropTypes(element);

	    return element;
	  },

	  createFactory: function (type) {
	    var validatedFactory = ReactElementValidator.createElement.bind(null, type);
	    // Legacy hook TODO: Warn if this is accessed
	    validatedFactory.type = type;

	    if (process.env.NODE_ENV !== 'production') {
	      if (canDefineProperty) {
	        Object.defineProperty(validatedFactory, 'type', {
	          enumerable: false,
	          get: function () {
	            process.env.NODE_ENV !== 'production' ? warning(false, 'Factory.type is deprecated. Access the class directly ' + 'before passing it to createFactory.') : void 0;
	            Object.defineProperty(this, 'type', {
	              value: type
	            });
	            return type;
	          }
	        });
	      }
	    }

	    return validatedFactory;
	  },

	  cloneElement: function (element, props, children) {
	    var newElement = ReactElement.cloneElement.apply(this, arguments);
	    for (var i = 2; i < arguments.length; i++) {
	      validateChildKeys(arguments[i], newElement.type);
	    }
	    validatePropTypes(newElement);
	    return newElement;
	  }

	};

	module.exports = ReactElementValidator;
	/* WEBPACK VAR INJECTION */}.call(exports, __webpack_require__(4)))

/***/ },
/* 29 */
/***/ function(module, exports, __webpack_require__) {

	/* WEBPACK VAR INJECTION */(function(process) {/**
	 * Copyright 2016-present, Facebook, Inc.
	 * All rights reserved.
	 *
	 * This source code is licensed under the BSD-style license found in the
	 * LICENSE file in the root directory of this source tree. An additional grant
	 * of patent rights can be found in the PATENTS file in the same directory.
	 *
	 * @providesModule ReactComponentTreeDevtool
	 */

	'use strict';

	var _prodInvariant = __webpack_require__(8);

	var ReactCurrentOwner = __webpack_require__(11);

	var invariant = __webpack_require__(9);
	var warning = __webpack_require__(12);

	var tree = {};
	var unmountedIDs = {};
	var rootIDs = {};

	function updateTree(id, update) {
	  if (!tree[id]) {
	    tree[id] = {
	      element: null,
	      parentID: null,
	      ownerID: null,
	      text: null,
	      childIDs: [],
	      displayName: 'Unknown',
	      isMounted: false,
	      updateCount: 0
	    };
	  }
	  update(tree[id]);
	}

	function purgeDeep(id) {
	  var item = tree[id];
	  if (item) {
	    var childIDs = item.childIDs;

	    delete tree[id];
	    childIDs.forEach(purgeDeep);
	  }
	}

	function describeComponentFrame(name, source, ownerName) {
	  return '\n    in ' + name + (source ? ' (at ' + source.fileName.replace(/^.*[\\\/]/, '') + ':' + source.lineNumber + ')' : ownerName ? ' (created by ' + ownerName + ')' : '');
	}

	function describeID(id) {
	  var name = ReactComponentTreeDevtool.getDisplayName(id);
	  var element = ReactComponentTreeDevtool.getElement(id);
	  var ownerID = ReactComponentTreeDevtool.getOwnerID(id);
	  var ownerName;
	  if (ownerID) {
	    ownerName = ReactComponentTreeDevtool.getDisplayName(ownerID);
	  }
	  process.env.NODE_ENV !== 'production' ? warning(element, 'ReactComponentTreeDevtool: Missing React element for debugID %s when ' + 'building stack', id) : void 0;
	  return describeComponentFrame(name, element && element._source, ownerName);
	}

	var ReactComponentTreeDevtool = {
	  onSetDisplayName: function (id, displayName) {
	    updateTree(id, function (item) {
	      return item.displayName = displayName;
	    });
	  },
	  onSetChildren: function (id, nextChildIDs) {
	    updateTree(id, function (item) {
	      item.childIDs = nextChildIDs;

	      nextChildIDs.forEach(function (nextChildID) {
	        var nextChild = tree[nextChildID];
	        !nextChild ? process.env.NODE_ENV !== 'production' ? invariant(false, 'Expected devtool events to fire for the child before its parent includes it in onSetChildren().') : _prodInvariant('68') : void 0;
	        !(nextChild.displayName != null) ? process.env.NODE_ENV !== 'production' ? invariant(false, 'Expected onSetDisplayName() to fire for the child before its parent includes it in onSetChildren().') : _prodInvariant('69') : void 0;
	        !(nextChild.childIDs != null || nextChild.text != null) ? process.env.NODE_ENV !== 'production' ? invariant(false, 'Expected onSetChildren() or onSetText() to fire for the child before its parent includes it in onSetChildren().') : _prodInvariant('70') : void 0;
	        !nextChild.isMounted ? process.env.NODE_ENV !== 'production' ? invariant(false, 'Expected onMountComponent() to fire for the child before its parent includes it in onSetChildren().') : _prodInvariant('71') : void 0;
	        if (nextChild.parentID == null) {
	          nextChild.parentID = id;
	          // TODO: This shouldn't be necessary but mounting a new root during in
	          // componentWillMount currently causes not-yet-mounted components to
	          // be purged from our tree data so their parent ID is missing.
	        }
	        !(nextChild.parentID === id) ? process.env.NODE_ENV !== 'production' ? invariant(false, 'Expected onSetParent() and onSetChildren() to be consistent (%s has parents %s and %s).', nextChildID, nextChild.parentID, id) : _prodInvariant('72', nextChildID, nextChild.parentID, id) : void 0;
	      });
	    });
	  },
	  onSetOwner: function (id, ownerID) {
	    updateTree(id, function (item) {
	      return item.ownerID = ownerID;
	    });
	  },
	  onSetParent: function (id, parentID) {
	    updateTree(id, function (item) {
	      return item.parentID = parentID;
	    });
	  },
	  onSetText: function (id, text) {
	    updateTree(id, function (item) {
	      return item.text = text;
	    });
	  },
	  onBeforeMountComponent: function (id, element) {
	    updateTree(id, function (item) {
	      return item.element = element;
	    });
	  },
	  onBeforeUpdateComponent: function (id, element) {
	    updateTree(id, function (item) {
	      return item.element = element;
	    });
	  },
	  onMountComponent: function (id) {
	    updateTree(id, function (item) {
	      return item.isMounted = true;
	    });
	  },
	  onMountRootComponent: function (id) {
	    rootIDs[id] = true;
	  },
	  onUpdateComponent: function (id) {
	    updateTree(id, function (item) {
	      return item.updateCount++;
	    });
	  },
	  onUnmountComponent: function (id) {
	    updateTree(id, function (item) {
	      return item.isMounted = false;
	    });
	    unmountedIDs[id] = true;
	    delete rootIDs[id];
	  },
	  purgeUnmountedComponents: function () {
	    if (ReactComponentTreeDevtool._preventPurging) {
	      // Should only be used for testing.
	      return;
	    }

	    for (var id in unmountedIDs) {
	      purgeDeep(id);
	    }
	    unmountedIDs = {};
	  },
	  isMounted: function (id) {
	    var item = tree[id];
	    return item ? item.isMounted : false;
	  },
	  getCurrentStackAddendum: function (topElement) {
	    var info = '';
	    if (topElement) {
	      var type = topElement.type;
	      var name = typeof type === 'function' ? type.displayName || type.name : type;
	      var owner = topElement._owner;
	      info += describeComponentFrame(name || 'Unknown', topElement._source, owner && owner.getName());
	    }

	    var currentOwner = ReactCurrentOwner.current;
	    var id = currentOwner && currentOwner._debugID;

	    info += ReactComponentTreeDevtool.getStackAddendumByID(id);
	    return info;
	  },
	  getStackAddendumByID: function (id) {
	    var info = '';
	    while (id) {
	      info += describeID(id);
	      id = ReactComponentTreeDevtool.getParentID(id);
	    }
	    return info;
	  },
	  getChildIDs: function (id) {
	    var item = tree[id];
	    return item ? item.childIDs : [];
	  },
	  getDisplayName: function (id) {
	    var item = tree[id];
	    return item ? item.displayName : 'Unknown';
	  },
	  getElement: function (id) {
	    var item = tree[id];
	    return item ? item.element : null;
	  },
	  getOwnerID: function (id) {
	    var item = tree[id];
	    return item ? item.ownerID : null;
	  },
	  getParentID: function (id) {
	    var item = tree[id];
	    return item ? item.parentID : null;
	  },
	  getSource: function (id) {
	    var item = tree[id];
	    var element = item ? item.element : null;
	    var source = element != null ? element._source : null;
	    return source;
	  },
	  getText: function (id) {
	    var item = tree[id];
	    return item ? item.text : null;
	  },
	  getUpdateCount: function (id) {
	    var item = tree[id];
	    return item ? item.updateCount : 0;
	  },
	  getRootIDs: function () {
	    return Object.keys(rootIDs);
	  },
	  getRegisteredIDs: function () {
	    return Object.keys(tree);
	  }
	};

	module.exports = ReactComponentTreeDevtool;
	/* WEBPACK VAR INJECTION */}.call(exports, __webpack_require__(4)))

/***/ },
/* 30 */
/***/ function(module, exports, __webpack_require__) {

	/* WEBPACK VAR INJECTION */(function(process) {/**
	 * Copyright 2013-present, Facebook, Inc.
	 * All rights reserved.
	 *
	 * This source code is licensed under the BSD-style license found in the
	 * LICENSE file in the root directory of this source tree. An additional grant
	 * of patent rights can be found in the PATENTS file in the same directory.
	 *
	 * @providesModule checkReactTypeSpec
	 */

	'use strict';

	var _prodInvariant = __webpack_require__(8);

	var ReactPropTypeLocationNames = __webpack_require__(24);

	var invariant = __webpack_require__(9);
	var warning = __webpack_require__(12);

	var loggedTypeFailures = {};

	/**
	 * Assert that the values match with the type specs.
	 * Error messages are memorized and will only be shown once.
	 *
	 * @param {object} typeSpecs Map of name to a ReactPropType
	 * @param {object} values Runtime values that need to be type-checked
	 * @param {string} location e.g. "prop", "context", "child context"
	 * @param {string} componentName Name of the component for error messages.
	 * @param {?object} element The React element that is being type-checked
	 * @param {?number} debugID The React component instance that is being type-checked
	 * @private
	 */
	function checkReactTypeSpec(typeSpecs, values, location, componentName, element, debugID) {
	  for (var typeSpecName in typeSpecs) {
	    if (typeSpecs.hasOwnProperty(typeSpecName)) {
	      var error;
	      // Prop type validation may throw. In case they do, we don't want to
	      // fail the render phase where it didn't fail before. So we log it.
	      // After these have been cleaned up, we'll let them throw.
	      try {
	        // This is intentionally an invariant that gets caught. It's the same
	        // behavior as without this statement except with a better message.
	        !(typeof typeSpecs[typeSpecName] === 'function') ? process.env.NODE_ENV !== 'production' ? invariant(false, '%s: %s type `%s` is invalid; it must be a function, usually from React.PropTypes.', componentName || 'React class', ReactPropTypeLocationNames[location], typeSpecName) : _prodInvariant('84', componentName || 'React class', ReactPropTypeLocationNames[location], typeSpecName) : void 0;
	        error = typeSpecs[typeSpecName](values, typeSpecName, componentName, location);
	      } catch (ex) {
	        error = ex;
	      }
	      process.env.NODE_ENV !== 'production' ? warning(!error || error instanceof Error, '%s: type specification of %s `%s` is invalid; the type checker ' + 'function must return `null` or an `Error` but returned a %s. ' + 'You may have forgotten to pass an argument to the type checker ' + 'creator (arrayOf, instanceOf, objectOf, oneOf, oneOfType, and ' + 'shape all require an argument).', componentName || 'React class', ReactPropTypeLocationNames[location], typeSpecName, typeof error) : void 0;
	      if (error instanceof Error && !(error.message in loggedTypeFailures)) {
	        // Only monitor this failure once because there tends to be a lot of the
	        // same error.
	        loggedTypeFailures[error.message] = true;

	        var componentStackInfo = '';

	        if (process.env.NODE_ENV !== 'production') {
	          var ReactComponentTreeDevtool = __webpack_require__(29);
	          if (debugID !== null) {
	            componentStackInfo = ReactComponentTreeDevtool.getStackAddendumByID(debugID);
	          } else if (element !== null) {
	            componentStackInfo = ReactComponentTreeDevtool.getCurrentStackAddendum(element);
	          }
	        }

	        process.env.NODE_ENV !== 'production' ? warning(false, 'Failed %s type: %s%s', location, error.message, componentStackInfo) : void 0;
	      }
	    }
	  }
	}

	module.exports = checkReactTypeSpec;
	/* WEBPACK VAR INJECTION */}.call(exports, __webpack_require__(4)))

/***/ },
/* 31 */
/***/ function(module, exports, __webpack_require__) {

	/**
	 * Copyright 2013-present, Facebook, Inc.
	 * All rights reserved.
	 *
	 * This source code is licensed under the BSD-style license found in the
	 * LICENSE file in the root directory of this source tree. An additional grant
	 * of patent rights can be found in the PATENTS file in the same directory.
	 *
	 * @providesModule ReactPropTypes
	 */

	'use strict';

	var ReactElement = __webpack_require__(10);
	var ReactPropTypeLocationNames = __webpack_require__(24);

	var emptyFunction = __webpack_require__(13);
	var getIteratorFn = __webpack_require__(16);

	/**
	 * Collection of methods that allow declaration and validation of props that are
	 * supplied to React components. Example usage:
	 *
	 *   var Props = require('ReactPropTypes');
	 *   var MyArticle = React.createClass({
	 *     propTypes: {
	 *       // An optional string prop named "description".
	 *       description: Props.string,
	 *
	 *       // A required enum prop named "category".
	 *       category: Props.oneOf(['News','Photos']).isRequired,
	 *
	 *       // A prop named "dialog" that requires an instance of Dialog.
	 *       dialog: Props.instanceOf(Dialog).isRequired
	 *     },
	 *     render: function() { ... }
	 *   });
	 *
	 * A more formal specification of how these methods are used:
	 *
	 *   type := array|bool|func|object|number|string|oneOf([...])|instanceOf(...)
	 *   decl := ReactPropTypes.{type}(.isRequired)?
	 *
	 * Each and every declaration produces a function with the same signature. This
	 * allows the creation of custom validation functions. For example:
	 *
	 *  var MyLink = React.createClass({
	 *    propTypes: {
	 *      // An optional string or URI prop named "href".
	 *      href: function(props, propName, componentName) {
	 *        var propValue = props[propName];
	 *        if (propValue != null && typeof propValue !== 'string' &&
	 *            !(propValue instanceof URI)) {
	 *          return new Error(
	 *            'Expected a string or an URI for ' + propName + ' in ' +
	 *            componentName
	 *          );
	 *        }
	 *      }
	 *    },
	 *    render: function() {...}
	 *  });
	 *
	 * @internal
	 */

	var ANONYMOUS = '<<anonymous>>';

	var ReactPropTypes = {
	  array: createPrimitiveTypeChecker('array'),
	  bool: createPrimitiveTypeChecker('boolean'),
	  func: createPrimitiveTypeChecker('function'),
	  number: createPrimitiveTypeChecker('number'),
	  object: createPrimitiveTypeChecker('object'),
	  string: createPrimitiveTypeChecker('string'),
	  symbol: createPrimitiveTypeChecker('symbol'),

	  any: createAnyTypeChecker(),
	  arrayOf: createArrayOfTypeChecker,
	  element: createElementTypeChecker(),
	  instanceOf: createInstanceTypeChecker,
	  node: createNodeChecker(),
	  objectOf: createObjectOfTypeChecker,
	  oneOf: createEnumTypeChecker,
	  oneOfType: createUnionTypeChecker,
	  shape: createShapeTypeChecker
	};

	/**
	 * inlined Object.is polyfill to avoid requiring consumers ship their own
	 * https://developer.mozilla.org/en-US/docs/Web/JavaScript/Reference/Global_Objects/Object/is
	 */
	/*eslint-disable no-self-compare*/
	function is(x, y) {
	  // SameValue algorithm
	  if (x === y) {
	    // Steps 1-5, 7-10
	    // Steps 6.b-6.e: +0 != -0
	    return x !== 0 || 1 / x === 1 / y;
	  } else {
	    // Step 6.a: NaN == NaN
	    return x !== x && y !== y;
	  }
	}
	/*eslint-enable no-self-compare*/

	function createChainableTypeChecker(validate) {
	  function checkType(isRequired, props, propName, componentName, location, propFullName) {
	    componentName = componentName || ANONYMOUS;
	    propFullName = propFullName || propName;
	    if (props[propName] == null) {
	      var locationName = ReactPropTypeLocationNames[location];
	      if (isRequired) {
	        return new Error('Required ' + locationName + ' `' + propFullName + '` was not specified in ' + ('`' + componentName + '`.'));
	      }
	      return null;
	    } else {
	      return validate(props, propName, componentName, location, propFullName);
	    }
	  }

	  var chainedCheckType = checkType.bind(null, false);
	  chainedCheckType.isRequired = checkType.bind(null, true);

	  return chainedCheckType;
	}

	function createPrimitiveTypeChecker(expectedType) {
	  function validate(props, propName, componentName, location, propFullName) {
	    var propValue = props[propName];
	    var propType = getPropType(propValue);
	    if (propType !== expectedType) {
	      var locationName = ReactPropTypeLocationNames[location];
	      // `propValue` being instance of, say, date/regexp, pass the 'object'
	      // check, but we can offer a more precise error message here rather than
	      // 'of type `object`'.
	      var preciseType = getPreciseType(propValue);

	      return new Error('Invalid ' + locationName + ' `' + propFullName + '` of type ' + ('`' + preciseType + '` supplied to `' + componentName + '`, expected ') + ('`' + expectedType + '`.'));
	    }
	    return null;
	  }
	  return createChainableTypeChecker(validate);
	}

	function createAnyTypeChecker() {
	  return createChainableTypeChecker(emptyFunction.thatReturns(null));
	}

	function createArrayOfTypeChecker(typeChecker) {
	  function validate(props, propName, componentName, location, propFullName) {
	    if (typeof typeChecker !== 'function') {
	      return new Error('Property `' + propFullName + '` of component `' + componentName + '` has invalid PropType notation inside arrayOf.');
	    }
	    var propValue = props[propName];
	    if (!Array.isArray(propValue)) {
	      var locationName = ReactPropTypeLocationNames[location];
	      var propType = getPropType(propValue);
	      return new Error('Invalid ' + locationName + ' `' + propFullName + '` of type ' + ('`' + propType + '` supplied to `' + componentName + '`, expected an array.'));
	    }
	    for (var i = 0; i < propValue.length; i++) {
	      var error = typeChecker(propValue, i, componentName, location, propFullName + '[' + i + ']');
	      if (error instanceof Error) {
	        return error;
	      }
	    }
	    return null;
	  }
	  return createChainableTypeChecker(validate);
	}

	function createElementTypeChecker() {
	  function validate(props, propName, componentName, location, propFullName) {
	    if (!ReactElement.isValidElement(props[propName])) {
	      var locationName = ReactPropTypeLocationNames[location];
	      return new Error('Invalid ' + locationName + ' `' + propFullName + '` supplied to ' + ('`' + componentName + '`, expected a single ReactElement.'));
	    }
	    return null;
	  }
	  return createChainableTypeChecker(validate);
	}

	function createInstanceTypeChecker(expectedClass) {
	  function validate(props, propName, componentName, location, propFullName) {
	    if (!(props[propName] instanceof expectedClass)) {
	      var locationName = ReactPropTypeLocationNames[location];
	      var expectedClassName = expectedClass.name || ANONYMOUS;
	      var actualClassName = getClassName(props[propName]);
	      return new Error('Invalid ' + locationName + ' `' + propFullName + '` of type ' + ('`' + actualClassName + '` supplied to `' + componentName + '`, expected ') + ('instance of `' + expectedClassName + '`.'));
	    }
	    return null;
	  }
	  return createChainableTypeChecker(validate);
	}

	function createEnumTypeChecker(expectedValues) {
	  if (!Array.isArray(expectedValues)) {
	    return createChainableTypeChecker(function () {
	      return new Error('Invalid argument supplied to oneOf, expected an instance of array.');
	    });
	  }

	  function validate(props, propName, componentName, location, propFullName) {
	    var propValue = props[propName];
	    for (var i = 0; i < expectedValues.length; i++) {
	      if (is(propValue, expectedValues[i])) {
	        return null;
	      }
	    }

	    var locationName = ReactPropTypeLocationNames[location];
	    var valuesString = JSON.stringify(expectedValues);
	    return new Error('Invalid ' + locationName + ' `' + propFullName + '` of value `' + propValue + '` ' + ('supplied to `' + componentName + '`, expected one of ' + valuesString + '.'));
	  }
	  return createChainableTypeChecker(validate);
	}

	function createObjectOfTypeChecker(typeChecker) {
	  function validate(props, propName, componentName, location, propFullName) {
	    if (typeof typeChecker !== 'function') {
	      return new Error('Property `' + propFullName + '` of component `' + componentName + '` has invalid PropType notation inside objectOf.');
	    }
	    var propValue = props[propName];
	    var propType = getPropType(propValue);
	    if (propType !== 'object') {
	      var locationName = ReactPropTypeLocationNames[location];
	      return new Error('Invalid ' + locationName + ' `' + propFullName + '` of type ' + ('`' + propType + '` supplied to `' + componentName + '`, expected an object.'));
	    }
	    for (var key in propValue) {
	      if (propValue.hasOwnProperty(key)) {
	        var error = typeChecker(propValue, key, componentName, location, propFullName + '.' + key);
	        if (error instanceof Error) {
	          return error;
	        }
	      }
	    }
	    return null;
	  }
	  return createChainableTypeChecker(validate);
	}

	function createUnionTypeChecker(arrayOfTypeCheckers) {
	  if (!Array.isArray(arrayOfTypeCheckers)) {
	    return createChainableTypeChecker(function () {
	      return new Error('Invalid argument supplied to oneOfType, expected an instance of array.');
	    });
	  }

	  function validate(props, propName, componentName, location, propFullName) {
	    for (var i = 0; i < arrayOfTypeCheckers.length; i++) {
	      var checker = arrayOfTypeCheckers[i];
	      if (checker(props, propName, componentName, location, propFullName) == null) {
	        return null;
	      }
	    }

	    var locationName = ReactPropTypeLocationNames[location];
	    return new Error('Invalid ' + locationName + ' `' + propFullName + '` supplied to ' + ('`' + componentName + '`.'));
	  }
	  return createChainableTypeChecker(validate);
	}

	function createNodeChecker() {
	  function validate(props, propName, componentName, location, propFullName) {
	    if (!isNode(props[propName])) {
	      var locationName = ReactPropTypeLocationNames[location];
	      return new Error('Invalid ' + locationName + ' `' + propFullName + '` supplied to ' + ('`' + componentName + '`, expected a ReactNode.'));
	    }
	    return null;
	  }
	  return createChainableTypeChecker(validate);
	}

	function createShapeTypeChecker(shapeTypes) {
	  function validate(props, propName, componentName, location, propFullName) {
	    var propValue = props[propName];
	    var propType = getPropType(propValue);
	    if (propType !== 'object') {
	      var locationName = ReactPropTypeLocationNames[location];
	      return new Error('Invalid ' + locationName + ' `' + propFullName + '` of type `' + propType + '` ' + ('supplied to `' + componentName + '`, expected `object`.'));
	    }
	    for (var key in shapeTypes) {
	      var checker = shapeTypes[key];
	      if (!checker) {
	        continue;
	      }
	      var error = checker(propValue, key, componentName, location, propFullName + '.' + key);
	      if (error) {
	        return error;
	      }
	    }
	    return null;
	  }
	  return createChainableTypeChecker(validate);
	}

	function isNode(propValue) {
	  switch (typeof propValue) {
	    case 'number':
	    case 'string':
	    case 'undefined':
	      return true;
	    case 'boolean':
	      return !propValue;
	    case 'object':
	      if (Array.isArray(propValue)) {
	        return propValue.every(isNode);
	      }
	      if (propValue === null || ReactElement.isValidElement(propValue)) {
	        return true;
	      }

	      var iteratorFn = getIteratorFn(propValue);
	      if (iteratorFn) {
	        var iterator = iteratorFn.call(propValue);
	        var step;
	        if (iteratorFn !== propValue.entries) {
	          while (!(step = iterator.next()).done) {
	            if (!isNode(step.value)) {
	              return false;
	            }
	          }
	        } else {
	          // Iterator will provide entry [k,v] tuples rather than values.
	          while (!(step = iterator.next()).done) {
	            var entry = step.value;
	            if (entry) {
	              if (!isNode(entry[1])) {
	                return false;
	              }
	            }
	          }
	        }
	      } else {
	        return false;
	      }

	      return true;
	    default:
	      return false;
	  }
	}

	function isSymbol(propType, propValue) {
	  // Native Symbol.
	  if (propType === 'symbol') {
	    return true;
	  }

	  // 19.4.3.5 Symbol.prototype[@@toStringTag] === 'Symbol'
	  if (propValue['@@toStringTag'] === 'Symbol') {
	    return true;
	  }

	  // Fallback for non-spec compliant Symbols which are polyfilled.
	  if (typeof Symbol === 'function' && propValue instanceof Symbol) {
	    return true;
	  }

	  return false;
	}

	// Equivalent of `typeof` but with special handling for array and regexp.
	function getPropType(propValue) {
	  var propType = typeof propValue;
	  if (Array.isArray(propValue)) {
	    return 'array';
	  }
	  if (propValue instanceof RegExp) {
	    // Old webkits (at least until Android 4.0) return 'function' rather than
	    // 'object' for typeof a RegExp. We'll normalize this here so that /bla/
	    // passes PropTypes.object.
	    return 'object';
	  }
	  if (isSymbol(propType, propValue)) {
	    return 'symbol';
	  }
	  return propType;
	}

	// This handles more types than `getPropType`. Only used for error messages.
	// See `createPrimitiveTypeChecker`.
	function getPreciseType(propValue) {
	  var propType = getPropType(propValue);
	  if (propType === 'object') {
	    if (propValue instanceof Date) {
	      return 'date';
	    } else if (propValue instanceof RegExp) {
	      return 'regexp';
	    }
	  }
	  return propType;
	}

	// Returns class name of the object, if any.
	function getClassName(propValue) {
	  if (!propValue.constructor || !propValue.constructor.name) {
	    return ANONYMOUS;
	  }
	  return propValue.constructor.name;
	}

	module.exports = ReactPropTypes;

/***/ },
/* 32 */
/***/ function(module, exports) {

	/**
	 * Copyright 2013-present, Facebook, Inc.
	 * All rights reserved.
	 *
	 * This source code is licensed under the BSD-style license found in the
	 * LICENSE file in the root directory of this source tree. An additional grant
	 * of patent rights can be found in the PATENTS file in the same directory.
	 *
	 * @providesModule ReactVersion
	 */

	'use strict';

	module.exports = '15.2.1';

/***/ },
/* 33 */
/***/ function(module, exports, __webpack_require__) {

	/* WEBPACK VAR INJECTION */(function(process) {/**
	 * Copyright 2013-present, Facebook, Inc.
	 * All rights reserved.
	 *
	 * This source code is licensed under the BSD-style license found in the
	 * LICENSE file in the root directory of this source tree. An additional grant
	 * of patent rights can be found in the PATENTS file in the same directory.
	 *
	 * @providesModule onlyChild
	 */
	'use strict';

	var _prodInvariant = __webpack_require__(8);

	var ReactElement = __webpack_require__(10);

	var invariant = __webpack_require__(9);

	/**
	 * Returns the first child in a collection of children and verifies that there
	 * is only one child in the collection.
	 *
	 * See https://facebook.github.io/react/docs/top-level-api.html#react.children.only
	 *
	 * The current implementation of this function assumes that a single child gets
	 * passed without a wrapper, but the purpose of this helper function is to
	 * abstract away the particular structure of children.
	 *
	 * @param {?object} children Child collection structure.
	 * @return {ReactElement} The first and only `ReactElement` contained in the
	 * structure.
	 */
	function onlyChild(children) {
	  !ReactElement.isValidElement(children) ? process.env.NODE_ENV !== 'production' ? invariant(false, 'onlyChild must be passed a children with exactly one child.') : _prodInvariant('23') : void 0;
	  return children;
	}

	module.exports = onlyChild;
	/* WEBPACK VAR INJECTION */}.call(exports, __webpack_require__(4)))

/***/ },
/* 34 */
/***/ function(module, exports, __webpack_require__) {

	'use strict';

	module.exports = __webpack_require__(35);


/***/ },
/* 35 */
/***/ function(module, exports, __webpack_require__) {

	/* WEBPACK VAR INJECTION */(function(process) {/**
	 * Copyright 2013-present, Facebook, Inc.
	 * All rights reserved.
	 *
	 * This source code is licensed under the BSD-style license found in the
	 * LICENSE file in the root directory of this source tree. An additional grant
	 * of patent rights can be found in the PATENTS file in the same directory.
	 *
	 * @providesModule ReactDOM
	 */

	/* globals __REACT_DEVTOOLS_GLOBAL_HOOK__*/

	'use strict';

	var ReactDOMComponentTree = __webpack_require__(36);
	var ReactDefaultInjection = __webpack_require__(39);
	var ReactMount = __webpack_require__(165);
	var ReactReconciler = __webpack_require__(59);
	var ReactUpdates = __webpack_require__(56);
	var ReactVersion = __webpack_require__(32);

	var findDOMNode = __webpack_require__(170);
	var getHostComponentFromComposite = __webpack_require__(171);
	var renderSubtreeIntoContainer = __webpack_require__(172);
	var warning = __webpack_require__(12);

	ReactDefaultInjection.inject();

	var React = {
	  findDOMNode: findDOMNode,
	  render: ReactMount.render,
	  unmountComponentAtNode: ReactMount.unmountComponentAtNode,
	  version: ReactVersion,

	  /* eslint-disable camelcase */
	  unstable_batchedUpdates: ReactUpdates.batchedUpdates,
	  unstable_renderSubtreeIntoContainer: renderSubtreeIntoContainer
	};

	// Inject the runtime into a devtools global hook regardless of browser.
	// Allows for debugging when the hook is injected on the page.
	/* eslint-enable camelcase */
	if (typeof __REACT_DEVTOOLS_GLOBAL_HOOK__ !== 'undefined' && typeof __REACT_DEVTOOLS_GLOBAL_HOOK__.inject === 'function') {
	  __REACT_DEVTOOLS_GLOBAL_HOOK__.inject({
	    ComponentTree: {
	      getClosestInstanceFromNode: ReactDOMComponentTree.getClosestInstanceFromNode,
	      getNodeFromInstance: function (inst) {
	        // inst is an internal instance (but could be a composite)
	        if (inst._renderedComponent) {
	          inst = getHostComponentFromComposite(inst);
	        }
	        if (inst) {
	          return ReactDOMComponentTree.getNodeFromInstance(inst);
	        } else {
	          return null;
	        }
	      }
	    },
	    Mount: ReactMount,
	    Reconciler: ReactReconciler
	  });
	}

	if (process.env.NODE_ENV !== 'production') {
	  var ExecutionEnvironment = __webpack_require__(49);
	  if (ExecutionEnvironment.canUseDOM && window.top === window.self) {

	    // First check if devtools is not installed
	    if (typeof __REACT_DEVTOOLS_GLOBAL_HOOK__ === 'undefined') {
	      // If we're in Chrome or Firefox, provide a download link if not installed.
	      if (navigator.userAgent.indexOf('Chrome') > -1 && navigator.userAgent.indexOf('Edge') === -1 || navigator.userAgent.indexOf('Firefox') > -1) {
	        // Firefox does not have the issue with devtools loaded over file://
	        var showFileUrlMessage = window.location.protocol.indexOf('http') === -1 && navigator.userAgent.indexOf('Firefox') === -1;
	        console.debug('Download the React DevTools ' + (showFileUrlMessage ? 'and use an HTTP server (instead of a file: URL) ' : '') + 'for a better development experience: ' + 'https://fb.me/react-devtools');
	      }
	    }

	    var testFunc = function testFn() {};
	    process.env.NODE_ENV !== 'production' ? warning((testFunc.name || testFunc.toString()).indexOf('testFn') !== -1, 'It looks like you\'re using a minified copy of the development build ' + 'of React. When deploying React apps to production, make sure to use ' + 'the production build which skips development warnings and is faster. ' + 'See https://fb.me/react-minification for more details.') : void 0;

	    // If we're in IE8, check to see if we are in compatibility mode and provide
	    // information on preventing compatibility mode
	    var ieCompatibilityMode = document.documentMode && document.documentMode < 8;

	    process.env.NODE_ENV !== 'production' ? warning(!ieCompatibilityMode, 'Internet Explorer is running in compatibility mode; please add the ' + 'following tag to your HTML to prevent this from happening: ' + '<meta http-equiv="X-UA-Compatible" content="IE=edge" />') : void 0;

	    var expectedFeatures = [
	    // shims
	    Array.isArray, Array.prototype.every, Array.prototype.forEach, Array.prototype.indexOf, Array.prototype.map, Date.now, Function.prototype.bind, Object.keys, String.prototype.split, String.prototype.trim];

	    for (var i = 0; i < expectedFeatures.length; i++) {
	      if (!expectedFeatures[i]) {
	        process.env.NODE_ENV !== 'production' ? warning(false, 'One or more ES5 shims expected by React are not available: ' + 'https://fb.me/react-warning-polyfills') : void 0;
	        break;
	      }
	    }
	  }
	}

	module.exports = React;
	/* WEBPACK VAR INJECTION */}.call(exports, __webpack_require__(4)))

/***/ },
/* 36 */
/***/ function(module, exports, __webpack_require__) {

	/* WEBPACK VAR INJECTION */(function(process) {/**
	 * Copyright 2013-present, Facebook, Inc.
	 * All rights reserved.
	 *
	 * This source code is licensed under the BSD-style license found in the
	 * LICENSE file in the root directory of this source tree. An additional grant
	 * of patent rights can be found in the PATENTS file in the same directory.
	 *
	 * @providesModule ReactDOMComponentTree
	 */

	'use strict';

	var _prodInvariant = __webpack_require__(8);

	var DOMProperty = __webpack_require__(37);
	var ReactDOMComponentFlags = __webpack_require__(38);

	var invariant = __webpack_require__(9);

	var ATTR_NAME = DOMProperty.ID_ATTRIBUTE_NAME;
	var Flags = ReactDOMComponentFlags;

	var internalInstanceKey = '__reactInternalInstance$' + Math.random().toString(36).slice(2);

	/**
	 * Drill down (through composites and empty components) until we get a host or
	 * host text component.
	 *
	 * This is pretty polymorphic but unavoidable with the current structure we have
	 * for `_renderedChildren`.
	 */
	function getRenderedHostOrTextFromComponent(component) {
	  var rendered;
	  while (rendered = component._renderedComponent) {
	    component = rendered;
	  }
	  return component;
	}

	/**
	 * Populate `_hostNode` on the rendered host/text component with the given
	 * DOM node. The passed `inst` can be a composite.
	 */
	function precacheNode(inst, node) {
	  var hostInst = getRenderedHostOrTextFromComponent(inst);
	  hostInst._hostNode = node;
	  node[internalInstanceKey] = hostInst;
	}

	function uncacheNode(inst) {
	  var node = inst._hostNode;
	  if (node) {
	    delete node[internalInstanceKey];
	    inst._hostNode = null;
	  }
	}

	/**
	 * Populate `_hostNode` on each child of `inst`, assuming that the children
	 * match up with the DOM (element) children of `node`.
	 *
	 * We cache entire levels at once to avoid an n^2 problem where we access the
	 * children of a node sequentially and have to walk from the start to our target
	 * node every time.
	 *
	 * Since we update `_renderedChildren` and the actual DOM at (slightly)
	 * different times, we could race here and see a newer `_renderedChildren` than
	 * the DOM nodes we see. To avoid this, ReactMultiChild calls
	 * `prepareToManageChildren` before we change `_renderedChildren`, at which
	 * time the container's child nodes are always cached (until it unmounts).
	 */
	function precacheChildNodes(inst, node) {
	  if (inst._flags & Flags.hasCachedChildNodes) {
	    return;
	  }
	  var children = inst._renderedChildren;
	  var childNode = node.firstChild;
	  outer: for (var name in children) {
	    if (!children.hasOwnProperty(name)) {
	      continue;
	    }
	    var childInst = children[name];
	    var childID = getRenderedHostOrTextFromComponent(childInst)._domID;
	    if (childID == null) {
	      // We're currently unmounting this child in ReactMultiChild; skip it.
	      continue;
	    }
	    // We assume the child nodes are in the same order as the child instances.
	    for (; childNode !== null; childNode = childNode.nextSibling) {
	      if (childNode.nodeType === 1 && childNode.getAttribute(ATTR_NAME) === String(childID) || childNode.nodeType === 8 && childNode.nodeValue === ' react-text: ' + childID + ' ' || childNode.nodeType === 8 && childNode.nodeValue === ' react-empty: ' + childID + ' ') {
	        precacheNode(childInst, childNode);
	        continue outer;
	      }
	    }
	    // We reached the end of the DOM children without finding an ID match.
	     true ? process.env.NODE_ENV !== 'production' ? invariant(false, 'Unable to find element with ID %s.', childID) : _prodInvariant('32', childID) : void 0;
	  }
	  inst._flags |= Flags.hasCachedChildNodes;
	}

	/**
	 * Given a DOM node, return the closest ReactDOMComponent or
	 * ReactDOMTextComponent instance ancestor.
	 */
	function getClosestInstanceFromNode(node) {
	  if (node[internalInstanceKey]) {
	    return node[internalInstanceKey];
	  }

	  // Walk up the tree until we find an ancestor whose instance we have cached.
	  var parents = [];
	  while (!node[internalInstanceKey]) {
	    parents.push(node);
	    if (node.parentNode) {
	      node = node.parentNode;
	    } else {
	      // Top of the tree. This node must not be part of a React tree (or is
	      // unmounted, potentially).
	      return null;
	    }
	  }

	  var closest;
	  var inst;
	  for (; node && (inst = node[internalInstanceKey]); node = parents.pop()) {
	    closest = inst;
	    if (parents.length) {
	      precacheChildNodes(inst, node);
	    }
	  }

	  return closest;
	}

	/**
	 * Given a DOM node, return the ReactDOMComponent or ReactDOMTextComponent
	 * instance, or null if the node was not rendered by this React.
	 */
	function getInstanceFromNode(node) {
	  var inst = getClosestInstanceFromNode(node);
	  if (inst != null && inst._hostNode === node) {
	    return inst;
	  } else {
	    return null;
	  }
	}

	/**
	 * Given a ReactDOMComponent or ReactDOMTextComponent, return the corresponding
	 * DOM node.
	 */
	function getNodeFromInstance(inst) {
	  // Without this first invariant, passing a non-DOM-component triggers the next
	  // invariant for a missing parent, which is super confusing.
	  !(inst._hostNode !== undefined) ? process.env.NODE_ENV !== 'production' ? invariant(false, 'getNodeFromInstance: Invalid argument.') : _prodInvariant('33') : void 0;

	  if (inst._hostNode) {
	    return inst._hostNode;
	  }

	  // Walk up the tree until we find an ancestor whose DOM node we have cached.
	  var parents = [];
	  while (!inst._hostNode) {
	    parents.push(inst);
	    !inst._hostParent ? process.env.NODE_ENV !== 'production' ? invariant(false, 'React DOM tree root should always have a node reference.') : _prodInvariant('34') : void 0;
	    inst = inst._hostParent;
	  }

	  // Now parents contains each ancestor that does *not* have a cached native
	  // node, and `inst` is the deepest ancestor that does.
	  for (; parents.length; inst = parents.pop()) {
	    precacheChildNodes(inst, inst._hostNode);
	  }

	  return inst._hostNode;
	}

	var ReactDOMComponentTree = {
	  getClosestInstanceFromNode: getClosestInstanceFromNode,
	  getInstanceFromNode: getInstanceFromNode,
	  getNodeFromInstance: getNodeFromInstance,
	  precacheChildNodes: precacheChildNodes,
	  precacheNode: precacheNode,
	  uncacheNode: uncacheNode
	};

	module.exports = ReactDOMComponentTree;
	/* WEBPACK VAR INJECTION */}.call(exports, __webpack_require__(4)))

/***/ },
/* 37 */
/***/ function(module, exports, __webpack_require__) {

	/* WEBPACK VAR INJECTION */(function(process) {/**
	 * Copyright 2013-present, Facebook, Inc.
	 * All rights reserved.
	 *
	 * This source code is licensed under the BSD-style license found in the
	 * LICENSE file in the root directory of this source tree. An additional grant
	 * of patent rights can be found in the PATENTS file in the same directory.
	 *
	 * @providesModule DOMProperty
	 */

	'use strict';

	var _prodInvariant = __webpack_require__(8);

	var invariant = __webpack_require__(9);

	function checkMask(value, bitmask) {
	  return (value & bitmask) === bitmask;
	}

	var DOMPropertyInjection = {
	  /**
	   * Mapping from normalized, camelcased property names to a configuration that
	   * specifies how the associated DOM property should be accessed or rendered.
	   */
	  MUST_USE_PROPERTY: 0x1,
	  HAS_BOOLEAN_VALUE: 0x4,
	  HAS_NUMERIC_VALUE: 0x8,
	  HAS_POSITIVE_NUMERIC_VALUE: 0x10 | 0x8,
	  HAS_OVERLOADED_BOOLEAN_VALUE: 0x20,

	  /**
	   * Inject some specialized knowledge about the DOM. This takes a config object
	   * with the following properties:
	   *
	   * isCustomAttribute: function that given an attribute name will return true
	   * if it can be inserted into the DOM verbatim. Useful for data-* or aria-*
	   * attributes where it's impossible to enumerate all of the possible
	   * attribute names,
	   *
	   * Properties: object mapping DOM property name to one of the
	   * DOMPropertyInjection constants or null. If your attribute isn't in here,
	   * it won't get written to the DOM.
	   *
	   * DOMAttributeNames: object mapping React attribute name to the DOM
	   * attribute name. Attribute names not specified use the **lowercase**
	   * normalized name.
	   *
	   * DOMAttributeNamespaces: object mapping React attribute name to the DOM
	   * attribute namespace URL. (Attribute names not specified use no namespace.)
	   *
	   * DOMPropertyNames: similar to DOMAttributeNames but for DOM properties.
	   * Property names not specified use the normalized name.
	   *
	   * DOMMutationMethods: Properties that require special mutation methods. If
	   * `value` is undefined, the mutation method should unset the property.
	   *
	   * @param {object} domPropertyConfig the config as described above.
	   */
	  injectDOMPropertyConfig: function (domPropertyConfig) {
	    var Injection = DOMPropertyInjection;
	    var Properties = domPropertyConfig.Properties || {};
	    var DOMAttributeNamespaces = domPropertyConfig.DOMAttributeNamespaces || {};
	    var DOMAttributeNames = domPropertyConfig.DOMAttributeNames || {};
	    var DOMPropertyNames = domPropertyConfig.DOMPropertyNames || {};
	    var DOMMutationMethods = domPropertyConfig.DOMMutationMethods || {};

	    if (domPropertyConfig.isCustomAttribute) {
	      DOMProperty._isCustomAttributeFunctions.push(domPropertyConfig.isCustomAttribute);
	    }

	    for (var propName in Properties) {
	      !!DOMProperty.properties.hasOwnProperty(propName) ? process.env.NODE_ENV !== 'production' ? invariant(false, 'injectDOMPropertyConfig(...): You\'re trying to inject DOM property \'%s\' which has already been injected. You may be accidentally injecting the same DOM property config twice, or you may be injecting two configs that have conflicting property names.', propName) : _prodInvariant('48', propName) : void 0;

	      var lowerCased = propName.toLowerCase();
	      var propConfig = Properties[propName];

	      var propertyInfo = {
	        attributeName: lowerCased,
	        attributeNamespace: null,
	        propertyName: propName,
	        mutationMethod: null,

	        mustUseProperty: checkMask(propConfig, Injection.MUST_USE_PROPERTY),
	        hasBooleanValue: checkMask(propConfig, Injection.HAS_BOOLEAN_VALUE),
	        hasNumericValue: checkMask(propConfig, Injection.HAS_NUMERIC_VALUE),
	        hasPositiveNumericValue: checkMask(propConfig, Injection.HAS_POSITIVE_NUMERIC_VALUE),
	        hasOverloadedBooleanValue: checkMask(propConfig, Injection.HAS_OVERLOADED_BOOLEAN_VALUE)
	      };
	      !(propertyInfo.hasBooleanValue + propertyInfo.hasNumericValue + propertyInfo.hasOverloadedBooleanValue <= 1) ? process.env.NODE_ENV !== 'production' ? invariant(false, 'DOMProperty: Value can be one of boolean, overloaded boolean, or numeric value, but not a combination: %s', propName) : _prodInvariant('50', propName) : void 0;

	      if (process.env.NODE_ENV !== 'production') {
	        DOMProperty.getPossibleStandardName[lowerCased] = propName;
	      }

	      if (DOMAttributeNames.hasOwnProperty(propName)) {
	        var attributeName = DOMAttributeNames[propName];
	        propertyInfo.attributeName = attributeName;
	        if (process.env.NODE_ENV !== 'production') {
	          DOMProperty.getPossibleStandardName[attributeName] = propName;
	        }
	      }

	      if (DOMAttributeNamespaces.hasOwnProperty(propName)) {
	        propertyInfo.attributeNamespace = DOMAttributeNamespaces[propName];
	      }

	      if (DOMPropertyNames.hasOwnProperty(propName)) {
	        propertyInfo.propertyName = DOMPropertyNames[propName];
	      }

	      if (DOMMutationMethods.hasOwnProperty(propName)) {
	        propertyInfo.mutationMethod = DOMMutationMethods[propName];
	      }

	      DOMProperty.properties[propName] = propertyInfo;
	    }
	  }
	};

	/* eslint-disable max-len */
	var ATTRIBUTE_NAME_START_CHAR = ':A-Z_a-z\\u00C0-\\u00D6\\u00D8-\\u00F6\\u00F8-\\u02FF\\u0370-\\u037D\\u037F-\\u1FFF\\u200C-\\u200D\\u2070-\\u218F\\u2C00-\\u2FEF\\u3001-\\uD7FF\\uF900-\\uFDCF\\uFDF0-\\uFFFD';
	/* eslint-enable max-len */

	/**
	 * DOMProperty exports lookup objects that can be used like functions:
	 *
	 *   > DOMProperty.isValid['id']
	 *   true
	 *   > DOMProperty.isValid['foobar']
	 *   undefined
	 *
	 * Although this may be confusing, it performs better in general.
	 *
	 * @see http://jsperf.com/key-exists
	 * @see http://jsperf.com/key-missing
	 */
	var DOMProperty = {

	  ID_ATTRIBUTE_NAME: 'data-reactid',
	  ROOT_ATTRIBUTE_NAME: 'data-reactroot',

	  ATTRIBUTE_NAME_START_CHAR: ATTRIBUTE_NAME_START_CHAR,
	  ATTRIBUTE_NAME_CHAR: ATTRIBUTE_NAME_START_CHAR + '\\-.0-9\\u00B7\\u0300-\\u036F\\u203F-\\u2040',

	  /**
	   * Map from property "standard name" to an object with info about how to set
	   * the property in the DOM. Each object contains:
	   *
	   * attributeName:
	   *   Used when rendering markup or with `*Attribute()`.
	   * attributeNamespace
	   * propertyName:
	   *   Used on DOM node instances. (This includes properties that mutate due to
	   *   external factors.)
	   * mutationMethod:
	   *   If non-null, used instead of the property or `setAttribute()` after
	   *   initial render.
	   * mustUseProperty:
	   *   Whether the property must be accessed and mutated as an object property.
	   * hasBooleanValue:
	   *   Whether the property should be removed when set to a falsey value.
	   * hasNumericValue:
	   *   Whether the property must be numeric or parse as a numeric and should be
	   *   removed when set to a falsey value.
	   * hasPositiveNumericValue:
	   *   Whether the property must be positive numeric or parse as a positive
	   *   numeric and should be removed when set to a falsey value.
	   * hasOverloadedBooleanValue:
	   *   Whether the property can be used as a flag as well as with a value.
	   *   Removed when strictly equal to false; present without a value when
	   *   strictly equal to true; present with a value otherwise.
	   */
	  properties: {},

	  /**
	   * Mapping from lowercase property names to the properly cased version, used
	   * to warn in the case of missing properties. Available only in __DEV__.
	   * @type {Object}
	   */
	  getPossibleStandardName: process.env.NODE_ENV !== 'production' ? {} : null,

	  /**
	   * All of the isCustomAttribute() functions that have been injected.
	   */
	  _isCustomAttributeFunctions: [],

	  /**
	   * Checks whether a property name is a custom attribute.
	   * @method
	   */
	  isCustomAttribute: function (attributeName) {
	    for (var i = 0; i < DOMProperty._isCustomAttributeFunctions.length; i++) {
	      var isCustomAttributeFn = DOMProperty._isCustomAttributeFunctions[i];
	      if (isCustomAttributeFn(attributeName)) {
	        return true;
	      }
	    }
	    return false;
	  },

	  injection: DOMPropertyInjection
	};

	module.exports = DOMProperty;
	/* WEBPACK VAR INJECTION */}.call(exports, __webpack_require__(4)))

/***/ },
/* 38 */
/***/ function(module, exports) {

	/**
	 * Copyright 2015-present, Facebook, Inc.
	 * All rights reserved.
	 *
	 * This source code is licensed under the BSD-style license found in the
	 * LICENSE file in the root directory of this source tree. An additional grant
	 * of patent rights can be found in the PATENTS file in the same directory.
	 *
	 * @providesModule ReactDOMComponentFlags
	 */

	'use strict';

	var ReactDOMComponentFlags = {
	  hasCachedChildNodes: 1 << 0
	};

	module.exports = ReactDOMComponentFlags;

/***/ },
/* 39 */
/***/ function(module, exports, __webpack_require__) {

	/**
	 * Copyright 2013-present, Facebook, Inc.
	 * All rights reserved.
	 *
	 * This source code is licensed under the BSD-style license found in the
	 * LICENSE file in the root directory of this source tree. An additional grant
	 * of patent rights can be found in the PATENTS file in the same directory.
	 *
	 * @providesModule ReactDefaultInjection
	 */

	'use strict';

	var BeforeInputEventPlugin = __webpack_require__(40);
	var ChangeEventPlugin = __webpack_require__(55);
	var DefaultEventPluginOrder = __webpack_require__(72);
	var EnterLeaveEventPlugin = __webpack_require__(73);
	var HTMLDOMPropertyConfig = __webpack_require__(78);
	var ReactComponentBrowserEnvironment = __webpack_require__(79);
	var ReactDOMComponent = __webpack_require__(93);
	var ReactDOMComponentTree = __webpack_require__(36);
	var ReactDOMEmptyComponent = __webpack_require__(136);
	var ReactDOMTreeTraversal = __webpack_require__(137);
	var ReactDOMTextComponent = __webpack_require__(138);
	var ReactDefaultBatchingStrategy = __webpack_require__(139);
	var ReactEventListener = __webpack_require__(140);
	var ReactInjection = __webpack_require__(143);
	var ReactReconcileTransaction = __webpack_require__(144);
	var SVGDOMPropertyConfig = __webpack_require__(152);
	var SelectEventPlugin = __webpack_require__(153);
	var SimpleEventPlugin = __webpack_require__(154);

	var alreadyInjected = false;

	function inject() {
	  if (alreadyInjected) {
	    // TODO: This is currently true because these injections are shared between
	    // the client and the server package. They should be built independently
	    // and not share any injection state. Then this problem will be solved.
	    return;
	  }
	  alreadyInjected = true;

	  ReactInjection.EventEmitter.injectReactEventListener(ReactEventListener);

	  /**
	   * Inject modules for resolving DOM hierarchy and plugin ordering.
	   */
	  ReactInjection.EventPluginHub.injectEventPluginOrder(DefaultEventPluginOrder);
	  ReactInjection.EventPluginUtils.injectComponentTree(ReactDOMComponentTree);
	  ReactInjection.EventPluginUtils.injectTreeTraversal(ReactDOMTreeTraversal);

	  /**
	   * Some important event plugins included by default (without having to require
	   * them).
	   */
	  ReactInjection.EventPluginHub.injectEventPluginsByName({
	    SimpleEventPlugin: SimpleEventPlugin,
	    EnterLeaveEventPlugin: EnterLeaveEventPlugin,
	    ChangeEventPlugin: ChangeEventPlugin,
	    SelectEventPlugin: SelectEventPlugin,
	    BeforeInputEventPlugin: BeforeInputEventPlugin
	  });

	  ReactInjection.HostComponent.injectGenericComponentClass(ReactDOMComponent);

	  ReactInjection.HostComponent.injectTextComponentClass(ReactDOMTextComponent);

	  ReactInjection.DOMProperty.injectDOMPropertyConfig(HTMLDOMPropertyConfig);
	  ReactInjection.DOMProperty.injectDOMPropertyConfig(SVGDOMPropertyConfig);

	  ReactInjection.EmptyComponent.injectEmptyComponentFactory(function (instantiate) {
	    return new ReactDOMEmptyComponent(instantiate);
	  });

	  ReactInjection.Updates.injectReconcileTransaction(ReactReconcileTransaction);
	  ReactInjection.Updates.injectBatchingStrategy(ReactDefaultBatchingStrategy);

	  ReactInjection.Component.injectEnvironment(ReactComponentBrowserEnvironment);
	}

	module.exports = {
	  inject: inject
	};

/***/ },
/* 40 */
/***/ function(module, exports, __webpack_require__) {

	/**
	 * Copyright 2013-present Facebook, Inc.
	 * All rights reserved.
	 *
	 * This source code is licensed under the BSD-style license found in the
	 * LICENSE file in the root directory of this source tree. An additional grant
	 * of patent rights can be found in the PATENTS file in the same directory.
	 *
	 * @providesModule BeforeInputEventPlugin
	 */

	'use strict';

	var EventConstants = __webpack_require__(41);
	var EventPropagators = __webpack_require__(42);
	var ExecutionEnvironment = __webpack_require__(49);
	var FallbackCompositionState = __webpack_require__(50);
	var SyntheticCompositionEvent = __webpack_require__(52);
	var SyntheticInputEvent = __webpack_require__(54);

	var keyOf = __webpack_require__(25);

	var END_KEYCODES = [9, 13, 27, 32]; // Tab, Return, Esc, Space
	var START_KEYCODE = 229;

	var canUseCompositionEvent = ExecutionEnvironment.canUseDOM && 'CompositionEvent' in window;

	var documentMode = null;
	if (ExecutionEnvironment.canUseDOM && 'documentMode' in document) {
	  documentMode = document.documentMode;
	}

	// Webkit offers a very useful `textInput` event that can be used to
	// directly represent `beforeInput`. The IE `textinput` event is not as
	// useful, so we don't use it.
	var canUseTextInputEvent = ExecutionEnvironment.canUseDOM && 'TextEvent' in window && !documentMode && !isPresto();

	// In IE9+, we have access to composition events, but the data supplied
	// by the native compositionend event may be incorrect. Japanese ideographic
	// spaces, for instance (\u3000) are not recorded correctly.
	var useFallbackCompositionData = ExecutionEnvironment.canUseDOM && (!canUseCompositionEvent || documentMode && documentMode > 8 && documentMode <= 11);

	/**
	 * Opera <= 12 includes TextEvent in window, but does not fire
	 * text input events. Rely on keypress instead.
	 */
	function isPresto() {
	  var opera = window.opera;
	  return typeof opera === 'object' && typeof opera.version === 'function' && parseInt(opera.version(), 10) <= 12;
	}

	var SPACEBAR_CODE = 32;
	var SPACEBAR_CHAR = String.fromCharCode(SPACEBAR_CODE);

	var topLevelTypes = EventConstants.topLevelTypes;

	// Events and their corresponding property names.
	var eventTypes = {
	  beforeInput: {
	    phasedRegistrationNames: {
	      bubbled: keyOf({ onBeforeInput: null }),
	      captured: keyOf({ onBeforeInputCapture: null })
	    },
	    dependencies: [topLevelTypes.topCompositionEnd, topLevelTypes.topKeyPress, topLevelTypes.topTextInput, topLevelTypes.topPaste]
	  },
	  compositionEnd: {
	    phasedRegistrationNames: {
	      bubbled: keyOf({ onCompositionEnd: null }),
	      captured: keyOf({ onCompositionEndCapture: null })
	    },
	    dependencies: [topLevelTypes.topBlur, topLevelTypes.topCompositionEnd, topLevelTypes.topKeyDown, topLevelTypes.topKeyPress, topLevelTypes.topKeyUp, topLevelTypes.topMouseDown]
	  },
	  compositionStart: {
	    phasedRegistrationNames: {
	      bubbled: keyOf({ onCompositionStart: null }),
	      captured: keyOf({ onCompositionStartCapture: null })
	    },
	    dependencies: [topLevelTypes.topBlur, topLevelTypes.topCompositionStart, topLevelTypes.topKeyDown, topLevelTypes.topKeyPress, topLevelTypes.topKeyUp, topLevelTypes.topMouseDown]
	  },
	  compositionUpdate: {
	    phasedRegistrationNames: {
	      bubbled: keyOf({ onCompositionUpdate: null }),
	      captured: keyOf({ onCompositionUpdateCapture: null })
	    },
	    dependencies: [topLevelTypes.topBlur, topLevelTypes.topCompositionUpdate, topLevelTypes.topKeyDown, topLevelTypes.topKeyPress, topLevelTypes.topKeyUp, topLevelTypes.topMouseDown]
	  }
	};

	// Track whether we've ever handled a keypress on the space key.
	var hasSpaceKeypress = false;

	/**
	 * Return whether a native keypress event is assumed to be a command.
	 * This is required because Firefox fires `keypress` events for key commands
	 * (cut, copy, select-all, etc.) even though no character is inserted.
	 */
	function isKeypressCommand(nativeEvent) {
	  return (nativeEvent.ctrlKey || nativeEvent.altKey || nativeEvent.metaKey) &&
	  // ctrlKey && altKey is equivalent to AltGr, and is not a command.
	  !(nativeEvent.ctrlKey && nativeEvent.altKey);
	}

	/**
	 * Translate native top level events into event types.
	 *
	 * @param {string} topLevelType
	 * @return {object}
	 */
	function getCompositionEventType(topLevelType) {
	  switch (topLevelType) {
	    case topLevelTypes.topCompositionStart:
	      return eventTypes.compositionStart;
	    case topLevelTypes.topCompositionEnd:
	      return eventTypes.compositionEnd;
	    case topLevelTypes.topCompositionUpdate:
	      return eventTypes.compositionUpdate;
	  }
	}

	/**
	 * Does our fallback best-guess model think this event signifies that
	 * composition has begun?
	 *
	 * @param {string} topLevelType
	 * @param {object} nativeEvent
	 * @return {boolean}
	 */
	function isFallbackCompositionStart(topLevelType, nativeEvent) {
	  return topLevelType === topLevelTypes.topKeyDown && nativeEvent.keyCode === START_KEYCODE;
	}

	/**
	 * Does our fallback mode think that this event is the end of composition?
	 *
	 * @param {string} topLevelType
	 * @param {object} nativeEvent
	 * @return {boolean}
	 */
	function isFallbackCompositionEnd(topLevelType, nativeEvent) {
	  switch (topLevelType) {
	    case topLevelTypes.topKeyUp:
	      // Command keys insert or clear IME input.
	      return END_KEYCODES.indexOf(nativeEvent.keyCode) !== -1;
	    case topLevelTypes.topKeyDown:
	      // Expect IME keyCode on each keydown. If we get any other
	      // code we must have exited earlier.
	      return nativeEvent.keyCode !== START_KEYCODE;
	    case topLevelTypes.topKeyPress:
	    case topLevelTypes.topMouseDown:
	    case topLevelTypes.topBlur:
	      // Events are not possible without cancelling IME.
	      return true;
	    default:
	      return false;
	  }
	}

	/**
	 * Google Input Tools provides composition data via a CustomEvent,
	 * with the `data` property populated in the `detail` object. If this
	 * is available on the event object, use it. If not, this is a plain
	 * composition event and we have nothing special to extract.
	 *
	 * @param {object} nativeEvent
	 * @return {?string}
	 */
	function getDataFromCustomEvent(nativeEvent) {
	  var detail = nativeEvent.detail;
	  if (typeof detail === 'object' && 'data' in detail) {
	    return detail.data;
	  }
	  return null;
	}

	// Track the current IME composition fallback object, if any.
	var currentComposition = null;

	/**
	 * @return {?object} A SyntheticCompositionEvent.
	 */
	function extractCompositionEvent(topLevelType, targetInst, nativeEvent, nativeEventTarget) {
	  var eventType;
	  var fallbackData;

	  if (canUseCompositionEvent) {
	    eventType = getCompositionEventType(topLevelType);
	  } else if (!currentComposition) {
	    if (isFallbackCompositionStart(topLevelType, nativeEvent)) {
	      eventType = eventTypes.compositionStart;
	    }
	  } else if (isFallbackCompositionEnd(topLevelType, nativeEvent)) {
	    eventType = eventTypes.compositionEnd;
	  }

	  if (!eventType) {
	    return null;
	  }

	  if (useFallbackCompositionData) {
	    // The current composition is stored statically and must not be
	    // overwritten while composition continues.
	    if (!currentComposition && eventType === eventTypes.compositionStart) {
	      currentComposition = FallbackCompositionState.getPooled(nativeEventTarget);
	    } else if (eventType === eventTypes.compositionEnd) {
	      if (currentComposition) {
	        fallbackData = currentComposition.getData();
	      }
	    }
	  }

	  var event = SyntheticCompositionEvent.getPooled(eventType, targetInst, nativeEvent, nativeEventTarget);

	  if (fallbackData) {
	    // Inject data generated from fallback path into the synthetic event.
	    // This matches the property of native CompositionEventInterface.
	    event.data = fallbackData;
	  } else {
	    var customData = getDataFromCustomEvent(nativeEvent);
	    if (customData !== null) {
	      event.data = customData;
	    }
	  }

	  EventPropagators.accumulateTwoPhaseDispatches(event);
	  return event;
	}

	/**
	 * @param {string} topLevelType Record from `EventConstants`.
	 * @param {object} nativeEvent Native browser event.
	 * @return {?string} The string corresponding to this `beforeInput` event.
	 */
	function getNativeBeforeInputChars(topLevelType, nativeEvent) {
	  switch (topLevelType) {
	    case topLevelTypes.topCompositionEnd:
	      return getDataFromCustomEvent(nativeEvent);
	    case topLevelTypes.topKeyPress:
	      /**
	       * If native `textInput` events are available, our goal is to make
	       * use of them. However, there is a special case: the spacebar key.
	       * In Webkit, preventing default on a spacebar `textInput` event
	       * cancels character insertion, but it *also* causes the browser
	       * to fall back to its default spacebar behavior of scrolling the
	       * page.
	       *
	       * Tracking at:
	       * https://code.google.com/p/chromium/issues/detail?id=355103
	       *
	       * To avoid this issue, use the keypress event as if no `textInput`
	       * event is available.
	       */
	      var which = nativeEvent.which;
	      if (which !== SPACEBAR_CODE) {
	        return null;
	      }

	      hasSpaceKeypress = true;
	      return SPACEBAR_CHAR;

	    case topLevelTypes.topTextInput:
	      // Record the characters to be added to the DOM.
	      var chars = nativeEvent.data;

	      // If it's a spacebar character, assume that we have already handled
	      // it at the keypress level and bail immediately. Android Chrome
	      // doesn't give us keycodes, so we need to blacklist it.
	      if (chars === SPACEBAR_CHAR && hasSpaceKeypress) {
	        return null;
	      }

	      return chars;

	    default:
	      // For other native event types, do nothing.
	      return null;
	  }
	}

	/**
	 * For browsers that do not provide the `textInput` event, extract the
	 * appropriate string to use for SyntheticInputEvent.
	 *
	 * @param {string} topLevelType Record from `EventConstants`.
	 * @param {object} nativeEvent Native browser event.
	 * @return {?string} The fallback string for this `beforeInput` event.
	 */
	function getFallbackBeforeInputChars(topLevelType, nativeEvent) {
	  // If we are currently composing (IME) and using a fallback to do so,
	  // try to extract the composed characters from the fallback object.
	  if (currentComposition) {
	    if (topLevelType === topLevelTypes.topCompositionEnd || isFallbackCompositionEnd(topLevelType, nativeEvent)) {
	      var chars = currentComposition.getData();
	      FallbackCompositionState.release(currentComposition);
	      currentComposition = null;
	      return chars;
	    }
	    return null;
	  }

	  switch (topLevelType) {
	    case topLevelTypes.topPaste:
	      // If a paste event occurs after a keypress, throw out the input
	      // chars. Paste events should not lead to BeforeInput events.
	      return null;
	    case topLevelTypes.topKeyPress:
	      /**
	       * As of v27, Firefox may fire keypress events even when no character
	       * will be inserted. A few possibilities:
	       *
	       * - `which` is `0`. Arrow keys, Esc key, etc.
	       *
	       * - `which` is the pressed key code, but no char is available.
	       *   Ex: 'AltGr + d` in Polish. There is no modified character for
	       *   this key combination and no character is inserted into the
	       *   document, but FF fires the keypress for char code `100` anyway.
	       *   No `input` event will occur.
	       *
	       * - `which` is the pressed key code, but a command combination is
	       *   being used. Ex: `Cmd+C`. No character is inserted, and no
	       *   `input` event will occur.
	       */
	      if (nativeEvent.which && !isKeypressCommand(nativeEvent)) {
	        return String.fromCharCode(nativeEvent.which);
	      }
	      return null;
	    case topLevelTypes.topCompositionEnd:
	      return useFallbackCompositionData ? null : nativeEvent.data;
	    default:
	      return null;
	  }
	}

	/**
	 * Extract a SyntheticInputEvent for `beforeInput`, based on either native
	 * `textInput` or fallback behavior.
	 *
	 * @return {?object} A SyntheticInputEvent.
	 */
	function extractBeforeInputEvent(topLevelType, targetInst, nativeEvent, nativeEventTarget) {
	  var chars;

	  if (canUseTextInputEvent) {
	    chars = getNativeBeforeInputChars(topLevelType, nativeEvent);
	  } else {
	    chars = getFallbackBeforeInputChars(topLevelType, nativeEvent);
	  }

	  // If no characters are being inserted, no BeforeInput event should
	  // be fired.
	  if (!chars) {
	    return null;
	  }

	  var event = SyntheticInputEvent.getPooled(eventTypes.beforeInput, targetInst, nativeEvent, nativeEventTarget);

	  event.data = chars;
	  EventPropagators.accumulateTwoPhaseDispatches(event);
	  return event;
	}

	/**
	 * Create an `onBeforeInput` event to match
	 * http://www.w3.org/TR/2013/WD-DOM-Level-3-Events-20131105/#events-inputevents.
	 *
	 * This event plugin is based on the native `textInput` event
	 * available in Chrome, Safari, Opera, and IE. This event fires after
	 * `onKeyPress` and `onCompositionEnd`, but before `onInput`.
	 *
	 * `beforeInput` is spec'd but not implemented in any browsers, and
	 * the `input` event does not provide any useful information about what has
	 * actually been added, contrary to the spec. Thus, `textInput` is the best
	 * available event to identify the characters that have actually been inserted
	 * into the target node.
	 *
	 * This plugin is also responsible for emitting `composition` events, thus
	 * allowing us to share composition fallback code for both `beforeInput` and
	 * `composition` event types.
	 */
	var BeforeInputEventPlugin = {

	  eventTypes: eventTypes,

	  extractEvents: function (topLevelType, targetInst, nativeEvent, nativeEventTarget) {
	    return [extractCompositionEvent(topLevelType, targetInst, nativeEvent, nativeEventTarget), extractBeforeInputEvent(topLevelType, targetInst, nativeEvent, nativeEventTarget)];
	  }
	};

	module.exports = BeforeInputEventPlugin;

/***/ },
/* 41 */
/***/ function(module, exports, __webpack_require__) {

	/**
	 * Copyright 2013-present, Facebook, Inc.
	 * All rights reserved.
	 *
	 * This source code is licensed under the BSD-style license found in the
	 * LICENSE file in the root directory of this source tree. An additional grant
	 * of patent rights can be found in the PATENTS file in the same directory.
	 *
	 * @providesModule EventConstants
	 */

	'use strict';

	var keyMirror = __webpack_require__(23);

	var PropagationPhases = keyMirror({ bubbled: null, captured: null });

	/**
	 * Types of raw signals from the browser caught at the top level.
	 */
	var topLevelTypes = keyMirror({
	  topAbort: null,
	  topAnimationEnd: null,
	  topAnimationIteration: null,
	  topAnimationStart: null,
	  topBlur: null,
	  topCanPlay: null,
	  topCanPlayThrough: null,
	  topChange: null,
	  topClick: null,
	  topCompositionEnd: null,
	  topCompositionStart: null,
	  topCompositionUpdate: null,
	  topContextMenu: null,
	  topCopy: null,
	  topCut: null,
	  topDoubleClick: null,
	  topDrag: null,
	  topDragEnd: null,
	  topDragEnter: null,
	  topDragExit: null,
	  topDragLeave: null,
	  topDragOver: null,
	  topDragStart: null,
	  topDrop: null,
	  topDurationChange: null,
	  topEmptied: null,
	  topEncrypted: null,
	  topEnded: null,
	  topError: null,
	  topFocus: null,
	  topInput: null,
	  topInvalid: null,
	  topKeyDown: null,
	  topKeyPress: null,
	  topKeyUp: null,
	  topLoad: null,
	  topLoadedData: null,
	  topLoadedMetadata: null,
	  topLoadStart: null,
	  topMouseDown: null,
	  topMouseMove: null,
	  topMouseOut: null,
	  topMouseOver: null,
	  topMouseUp: null,
	  topPaste: null,
	  topPause: null,
	  topPlay: null,
	  topPlaying: null,
	  topProgress: null,
	  topRateChange: null,
	  topReset: null,
	  topScroll: null,
	  topSeeked: null,
	  topSeeking: null,
	  topSelectionChange: null,
	  topStalled: null,
	  topSubmit: null,
	  topSuspend: null,
	  topTextInput: null,
	  topTimeUpdate: null,
	  topTouchCancel: null,
	  topTouchEnd: null,
	  topTouchMove: null,
	  topTouchStart: null,
	  topTransitionEnd: null,
	  topVolumeChange: null,
	  topWaiting: null,
	  topWheel: null
	});

	var EventConstants = {
	  topLevelTypes: topLevelTypes,
	  PropagationPhases: PropagationPhases
	};

	module.exports = EventConstants;

/***/ },
/* 42 */
/***/ function(module, exports, __webpack_require__) {

	/* WEBPACK VAR INJECTION */(function(process) {/**
	 * Copyright 2013-present, Facebook, Inc.
	 * All rights reserved.
	 *
	 * This source code is licensed under the BSD-style license found in the
	 * LICENSE file in the root directory of this source tree. An additional grant
	 * of patent rights can be found in the PATENTS file in the same directory.
	 *
	 * @providesModule EventPropagators
	 */

	'use strict';

	var EventConstants = __webpack_require__(41);
	var EventPluginHub = __webpack_require__(43);
	var EventPluginUtils = __webpack_require__(45);

	var accumulateInto = __webpack_require__(47);
	var forEachAccumulated = __webpack_require__(48);
	var warning = __webpack_require__(12);

	var PropagationPhases = EventConstants.PropagationPhases;
	var getListener = EventPluginHub.getListener;

	/**
	 * Some event types have a notion of different registration names for different
	 * "phases" of propagation. This finds listeners by a given phase.
	 */
	function listenerAtPhase(inst, event, propagationPhase) {
	  var registrationName = event.dispatchConfig.phasedRegistrationNames[propagationPhase];
	  return getListener(inst, registrationName);
	}

	/**
	 * Tags a `SyntheticEvent` with dispatched listeners. Creating this function
	 * here, allows us to not have to bind or create functions for each event.
	 * Mutating the event's members allows us to not have to create a wrapping
	 * "dispatch" object that pairs the event with the listener.
	 */
	function accumulateDirectionalDispatches(inst, upwards, event) {
	  if (process.env.NODE_ENV !== 'production') {
	    process.env.NODE_ENV !== 'production' ? warning(inst, 'Dispatching inst must not be null') : void 0;
	  }
	  var phase = upwards ? PropagationPhases.bubbled : PropagationPhases.captured;
	  var listener = listenerAtPhase(inst, event, phase);
	  if (listener) {
	    event._dispatchListeners = accumulateInto(event._dispatchListeners, listener);
	    event._dispatchInstances = accumulateInto(event._dispatchInstances, inst);
	  }
	}

	/**
	 * Collect dispatches (must be entirely collected before dispatching - see unit
	 * tests). Lazily allocate the array to conserve memory.  We must loop through
	 * each event and perform the traversal for each one. We cannot perform a
	 * single traversal for the entire collection of events because each event may
	 * have a different target.
	 */
	function accumulateTwoPhaseDispatchesSingle(event) {
	  if (event && event.dispatchConfig.phasedRegistrationNames) {
	    EventPluginUtils.traverseTwoPhase(event._targetInst, accumulateDirectionalDispatches, event);
	  }
	}

	/**
	 * Same as `accumulateTwoPhaseDispatchesSingle`, but skips over the targetID.
	 */
	function accumulateTwoPhaseDispatchesSingleSkipTarget(event) {
	  if (event && event.dispatchConfig.phasedRegistrationNames) {
	    var targetInst = event._targetInst;
	    var parentInst = targetInst ? EventPluginUtils.getParentInstance(targetInst) : null;
	    EventPluginUtils.traverseTwoPhase(parentInst, accumulateDirectionalDispatches, event);
	  }
	}

	/**
	 * Accumulates without regard to direction, does not look for phased
	 * registration names. Same as `accumulateDirectDispatchesSingle` but without
	 * requiring that the `dispatchMarker` be the same as the dispatched ID.
	 */
	function accumulateDispatches(inst, ignoredDirection, event) {
	  if (event && event.dispatchConfig.registrationName) {
	    var registrationName = event.dispatchConfig.registrationName;
	    var listener = getListener(inst, registrationName);
	    if (listener) {
	      event._dispatchListeners = accumulateInto(event._dispatchListeners, listener);
	      event._dispatchInstances = accumulateInto(event._dispatchInstances, inst);
	    }
	  }
	}

	/**
	 * Accumulates dispatches on an `SyntheticEvent`, but only for the
	 * `dispatchMarker`.
	 * @param {SyntheticEvent} event
	 */
	function accumulateDirectDispatchesSingle(event) {
	  if (event && event.dispatchConfig.registrationName) {
	    accumulateDispatches(event._targetInst, null, event);
	  }
	}

	function accumulateTwoPhaseDispatches(events) {
	  forEachAccumulated(events, accumulateTwoPhaseDispatchesSingle);
	}

	function accumulateTwoPhaseDispatchesSkipTarget(events) {
	  forEachAccumulated(events, accumulateTwoPhaseDispatchesSingleSkipTarget);
	}

	function accumulateEnterLeaveDispatches(leave, enter, from, to) {
	  EventPluginUtils.traverseEnterLeave(from, to, accumulateDispatches, leave, enter);
	}

	function accumulateDirectDispatches(events) {
	  forEachAccumulated(events, accumulateDirectDispatchesSingle);
	}

	/**
	 * A small set of propagation patterns, each of which will accept a small amount
	 * of information, and generate a set of "dispatch ready event objects" - which
	 * are sets of events that have already been annotated with a set of dispatched
	 * listener functions/ids. The API is designed this way to discourage these
	 * propagation strategies from actually executing the dispatches, since we
	 * always want to collect the entire set of dispatches before executing event a
	 * single one.
	 *
	 * @constructor EventPropagators
	 */
	var EventPropagators = {
	  accumulateTwoPhaseDispatches: accumulateTwoPhaseDispatches,
	  accumulateTwoPhaseDispatchesSkipTarget: accumulateTwoPhaseDispatchesSkipTarget,
	  accumulateDirectDispatches: accumulateDirectDispatches,
	  accumulateEnterLeaveDispatches: accumulateEnterLeaveDispatches
	};

	module.exports = EventPropagators;
	/* WEBPACK VAR INJECTION */}.call(exports, __webpack_require__(4)))

/***/ },
/* 43 */
/***/ function(module, exports, __webpack_require__) {

	/* WEBPACK VAR INJECTION */(function(process) {/**
	 * Copyright 2013-present, Facebook, Inc.
	 * All rights reserved.
	 *
	 * This source code is licensed under the BSD-style license found in the
	 * LICENSE file in the root directory of this source tree. An additional grant
	 * of patent rights can be found in the PATENTS file in the same directory.
	 *
	 * @providesModule EventPluginHub
	 */

	'use strict';

	var _prodInvariant = __webpack_require__(8);

	var EventPluginRegistry = __webpack_require__(44);
	var EventPluginUtils = __webpack_require__(45);
	var ReactErrorUtils = __webpack_require__(46);

	var accumulateInto = __webpack_require__(47);
	var forEachAccumulated = __webpack_require__(48);
	var invariant = __webpack_require__(9);

	/**
	 * Internal store for event listeners
	 */
	var listenerBank = {};

	/**
	 * Internal queue of events that have accumulated their dispatches and are
	 * waiting to have their dispatches executed.
	 */
	var eventQueue = null;

	/**
	 * Dispatches an event and releases it back into the pool, unless persistent.
	 *
	 * @param {?object} event Synthetic event to be dispatched.
	 * @param {boolean} simulated If the event is simulated (changes exn behavior)
	 * @private
	 */
	var executeDispatchesAndRelease = function (event, simulated) {
	  if (event) {
	    EventPluginUtils.executeDispatchesInOrder(event, simulated);

	    if (!event.isPersistent()) {
	      event.constructor.release(event);
	    }
	  }
	};
	var executeDispatchesAndReleaseSimulated = function (e) {
	  return executeDispatchesAndRelease(e, true);
	};
	var executeDispatchesAndReleaseTopLevel = function (e) {
	  return executeDispatchesAndRelease(e, false);
	};

	/**
	 * This is a unified interface for event plugins to be installed and configured.
	 *
	 * Event plugins can implement the following properties:
	 *
	 *   `extractEvents` {function(string, DOMEventTarget, string, object): *}
	 *     Required. When a top-level event is fired, this method is expected to
	 *     extract synthetic events that will in turn be queued and dispatched.
	 *
	 *   `eventTypes` {object}
	 *     Optional, plugins that fire events must publish a mapping of registration
	 *     names that are used to register listeners. Values of this mapping must
	 *     be objects that contain `registrationName` or `phasedRegistrationNames`.
	 *
	 *   `executeDispatch` {function(object, function, string)}
	 *     Optional, allows plugins to override how an event gets dispatched. By
	 *     default, the listener is simply invoked.
	 *
	 * Each plugin that is injected into `EventsPluginHub` is immediately operable.
	 *
	 * @public
	 */
	var EventPluginHub = {

	  /**
	   * Methods for injecting dependencies.
	   */
	  injection: {

	    /**
	     * @param {array} InjectedEventPluginOrder
	     * @public
	     */
	    injectEventPluginOrder: EventPluginRegistry.injectEventPluginOrder,

	    /**
	     * @param {object} injectedNamesToPlugins Map from names to plugin modules.
	     */
	    injectEventPluginsByName: EventPluginRegistry.injectEventPluginsByName

	  },

	  /**
	   * Stores `listener` at `listenerBank[registrationName][id]`. Is idempotent.
	   *
	   * @param {object} inst The instance, which is the source of events.
	   * @param {string} registrationName Name of listener (e.g. `onClick`).
	   * @param {function} listener The callback to store.
	   */
	  putListener: function (inst, registrationName, listener) {
	    !(typeof listener === 'function') ? process.env.NODE_ENV !== 'production' ? invariant(false, 'Expected %s listener to be a function, instead got type %s', registrationName, typeof listener) : _prodInvariant('94', registrationName, typeof listener) : void 0;

	    var bankForRegistrationName = listenerBank[registrationName] || (listenerBank[registrationName] = {});
	    bankForRegistrationName[inst._rootNodeID] = listener;

	    var PluginModule = EventPluginRegistry.registrationNameModules[registrationName];
	    if (PluginModule && PluginModule.didPutListener) {
	      PluginModule.didPutListener(inst, registrationName, listener);
	    }
	  },

	  /**
	   * @param {object} inst The instance, which is the source of events.
	   * @param {string} registrationName Name of listener (e.g. `onClick`).
	   * @return {?function} The stored callback.
	   */
	  getListener: function (inst, registrationName) {
	    var bankForRegistrationName = listenerBank[registrationName];
	    return bankForRegistrationName && bankForRegistrationName[inst._rootNodeID];
	  },

	  /**
	   * Deletes a listener from the registration bank.
	   *
	   * @param {object} inst The instance, which is the source of events.
	   * @param {string} registrationName Name of listener (e.g. `onClick`).
	   */
	  deleteListener: function (inst, registrationName) {
	    var PluginModule = EventPluginRegistry.registrationNameModules[registrationName];
	    if (PluginModule && PluginModule.willDeleteListener) {
	      PluginModule.willDeleteListener(inst, registrationName);
	    }

	    var bankForRegistrationName = listenerBank[registrationName];
	    // TODO: This should never be null -- when is it?
	    if (bankForRegistrationName) {
	      delete bankForRegistrationName[inst._rootNodeID];
	    }
	  },

	  /**
	   * Deletes all listeners for the DOM element with the supplied ID.
	   *
	   * @param {object} inst The instance, which is the source of events.
	   */
	  deleteAllListeners: function (inst) {
	    for (var registrationName in listenerBank) {
	      if (!listenerBank.hasOwnProperty(registrationName)) {
	        continue;
	      }

	      if (!listenerBank[registrationName][inst._rootNodeID]) {
	        continue;
	      }

	      var PluginModule = EventPluginRegistry.registrationNameModules[registrationName];
	      if (PluginModule && PluginModule.willDeleteListener) {
	        PluginModule.willDeleteListener(inst, registrationName);
	      }

	      delete listenerBank[registrationName][inst._rootNodeID];
	    }
	  },

	  /**
	   * Allows registered plugins an opportunity to extract events from top-level
	   * native browser events.
	   *
	   * @return {*} An accumulation of synthetic events.
	   * @internal
	   */
	  extractEvents: function (topLevelType, targetInst, nativeEvent, nativeEventTarget) {
	    var events;
	    var plugins = EventPluginRegistry.plugins;
	    for (var i = 0; i < plugins.length; i++) {
	      // Not every plugin in the ordering may be loaded at runtime.
	      var possiblePlugin = plugins[i];
	      if (possiblePlugin) {
	        var extractedEvents = possiblePlugin.extractEvents(topLevelType, targetInst, nativeEvent, nativeEventTarget);
	        if (extractedEvents) {
	          events = accumulateInto(events, extractedEvents);
	        }
	      }
	    }
	    return events;
	  },

	  /**
	   * Enqueues a synthetic event that should be dispatched when
	   * `processEventQueue` is invoked.
	   *
	   * @param {*} events An accumulation of synthetic events.
	   * @internal
	   */
	  enqueueEvents: function (events) {
	    if (events) {
	      eventQueue = accumulateInto(eventQueue, events);
	    }
	  },

	  /**
	   * Dispatches all synthetic events on the event queue.
	   *
	   * @internal
	   */
	  processEventQueue: function (simulated) {
	    // Set `eventQueue` to null before processing it so that we can tell if more
	    // events get enqueued while processing.
	    var processingEventQueue = eventQueue;
	    eventQueue = null;
	    if (simulated) {
	      forEachAccumulated(processingEventQueue, executeDispatchesAndReleaseSimulated);
	    } else {
	      forEachAccumulated(processingEventQueue, executeDispatchesAndReleaseTopLevel);
	    }
	    !!eventQueue ? process.env.NODE_ENV !== 'production' ? invariant(false, 'processEventQueue(): Additional events were enqueued while processing an event queue. Support for this has not yet been implemented.') : _prodInvariant('95') : void 0;
	    // This would be a good time to rethrow if any of the event handlers threw.
	    ReactErrorUtils.rethrowCaughtError();
	  },

	  /**
	   * These are needed for tests only. Do not use!
	   */
	  __purge: function () {
	    listenerBank = {};
	  },

	  __getListenerBank: function () {
	    return listenerBank;
	  }

	};

	module.exports = EventPluginHub;
	/* WEBPACK VAR INJECTION */}.call(exports, __webpack_require__(4)))

/***/ },
/* 44 */
/***/ function(module, exports, __webpack_require__) {

	/* WEBPACK VAR INJECTION */(function(process) {/**
	 * Copyright 2013-present, Facebook, Inc.
	 * All rights reserved.
	 *
	 * This source code is licensed under the BSD-style license found in the
	 * LICENSE file in the root directory of this source tree. An additional grant
	 * of patent rights can be found in the PATENTS file in the same directory.
	 *
	 * @providesModule EventPluginRegistry
	 */

	'use strict';

	var _prodInvariant = __webpack_require__(8);

	var invariant = __webpack_require__(9);

	/**
	 * Injectable ordering of event plugins.
	 */
	var EventPluginOrder = null;

	/**
	 * Injectable mapping from names to event plugin modules.
	 */
	var namesToPlugins = {};

	/**
	 * Recomputes the plugin list using the injected plugins and plugin ordering.
	 *
	 * @private
	 */
	function recomputePluginOrdering() {
	  if (!EventPluginOrder) {
	    // Wait until an `EventPluginOrder` is injected.
	    return;
	  }
	  for (var pluginName in namesToPlugins) {
	    var PluginModule = namesToPlugins[pluginName];
	    var pluginIndex = EventPluginOrder.indexOf(pluginName);
	    !(pluginIndex > -1) ? process.env.NODE_ENV !== 'production' ? invariant(false, 'EventPluginRegistry: Cannot inject event plugins that do not exist in the plugin ordering, `%s`.', pluginName) : _prodInvariant('96', pluginName) : void 0;
	    if (EventPluginRegistry.plugins[pluginIndex]) {
	      continue;
	    }
	    !PluginModule.extractEvents ? process.env.NODE_ENV !== 'production' ? invariant(false, 'EventPluginRegistry: Event plugins must implement an `extractEvents` method, but `%s` does not.', pluginName) : _prodInvariant('97', pluginName) : void 0;
	    EventPluginRegistry.plugins[pluginIndex] = PluginModule;
	    var publishedEvents = PluginModule.eventTypes;
	    for (var eventName in publishedEvents) {
	      !publishEventForPlugin(publishedEvents[eventName], PluginModule, eventName) ? process.env.NODE_ENV !== 'production' ? invariant(false, 'EventPluginRegistry: Failed to publish event `%s` for plugin `%s`.', eventName, pluginName) : _prodInvariant('98', eventName, pluginName) : void 0;
	    }
	  }
	}

	/**
	 * Publishes an event so that it can be dispatched by the supplied plugin.
	 *
	 * @param {object} dispatchConfig Dispatch configuration for the event.
	 * @param {object} PluginModule Plugin publishing the event.
	 * @return {boolean} True if the event was successfully published.
	 * @private
	 */
	function publishEventForPlugin(dispatchConfig, PluginModule, eventName) {
	  !!EventPluginRegistry.eventNameDispatchConfigs.hasOwnProperty(eventName) ? process.env.NODE_ENV !== 'production' ? invariant(false, 'EventPluginHub: More than one plugin attempted to publish the same event name, `%s`.', eventName) : _prodInvariant('99', eventName) : void 0;
	  EventPluginRegistry.eventNameDispatchConfigs[eventName] = dispatchConfig;

	  var phasedRegistrationNames = dispatchConfig.phasedRegistrationNames;
	  if (phasedRegistrationNames) {
	    for (var phaseName in phasedRegistrationNames) {
	      if (phasedRegistrationNames.hasOwnProperty(phaseName)) {
	        var phasedRegistrationName = phasedRegistrationNames[phaseName];
	        publishRegistrationName(phasedRegistrationName, PluginModule, eventName);
	      }
	    }
	    return true;
	  } else if (dispatchConfig.registrationName) {
	    publishRegistrationName(dispatchConfig.registrationName, PluginModule, eventName);
	    return true;
	  }
	  return false;
	}

	/**
	 * Publishes a registration name that is used to identify dispatched events and
	 * can be used with `EventPluginHub.putListener` to register listeners.
	 *
	 * @param {string} registrationName Registration name to add.
	 * @param {object} PluginModule Plugin publishing the event.
	 * @private
	 */
	function publishRegistrationName(registrationName, PluginModule, eventName) {
	  !!EventPluginRegistry.registrationNameModules[registrationName] ? process.env.NODE_ENV !== 'production' ? invariant(false, 'EventPluginHub: More than one plugin attempted to publish the same registration name, `%s`.', registrationName) : _prodInvariant('100', registrationName) : void 0;
	  EventPluginRegistry.registrationNameModules[registrationName] = PluginModule;
	  EventPluginRegistry.registrationNameDependencies[registrationName] = PluginModule.eventTypes[eventName].dependencies;

	  if (process.env.NODE_ENV !== 'production') {
	    var lowerCasedName = registrationName.toLowerCase();
	    EventPluginRegistry.possibleRegistrationNames[lowerCasedName] = registrationName;

	    if (registrationName === 'onDoubleClick') {
	      EventPluginRegistry.possibleRegistrationNames.ondblclick = registrationName;
	    }
	  }
	}

	/**
	 * Registers plugins so that they can extract and dispatch events.
	 *
	 * @see {EventPluginHub}
	 */
	var EventPluginRegistry = {

	  /**
	   * Ordered list of injected plugins.
	   */
	  plugins: [],

	  /**
	   * Mapping from event name to dispatch config
	   */
	  eventNameDispatchConfigs: {},

	  /**
	   * Mapping from registration name to plugin module
	   */
	  registrationNameModules: {},

	  /**
	   * Mapping from registration name to event name
	   */
	  registrationNameDependencies: {},

	  /**
	   * Mapping from lowercase registration names to the properly cased version,
	   * used to warn in the case of missing event handlers. Available
	   * only in __DEV__.
	   * @type {Object}
	   */
	  possibleRegistrationNames: process.env.NODE_ENV !== 'production' ? {} : null,

	  /**
	   * Injects an ordering of plugins (by plugin name). This allows the ordering
	   * to be decoupled from injection of the actual plugins so that ordering is
	   * always deterministic regardless of packaging, on-the-fly injection, etc.
	   *
	   * @param {array} InjectedEventPluginOrder
	   * @internal
	   * @see {EventPluginHub.injection.injectEventPluginOrder}
	   */
	  injectEventPluginOrder: function (InjectedEventPluginOrder) {
	    !!EventPluginOrder ? process.env.NODE_ENV !== 'production' ? invariant(false, 'EventPluginRegistry: Cannot inject event plugin ordering more than once. You are likely trying to load more than one copy of React.') : _prodInvariant('101') : void 0;
	    // Clone the ordering so it cannot be dynamically mutated.
	    EventPluginOrder = Array.prototype.slice.call(InjectedEventPluginOrder);
	    recomputePluginOrdering();
	  },

	  /**
	   * Injects plugins to be used by `EventPluginHub`. The plugin names must be
	   * in the ordering injected by `injectEventPluginOrder`.
	   *
	   * Plugins can be injected as part of page initialization or on-the-fly.
	   *
	   * @param {object} injectedNamesToPlugins Map from names to plugin modules.
	   * @internal
	   * @see {EventPluginHub.injection.injectEventPluginsByName}
	   */
	  injectEventPluginsByName: function (injectedNamesToPlugins) {
	    var isOrderingDirty = false;
	    for (var pluginName in injectedNamesToPlugins) {
	      if (!injectedNamesToPlugins.hasOwnProperty(pluginName)) {
	        continue;
	      }
	      var PluginModule = injectedNamesToPlugins[pluginName];
	      if (!namesToPlugins.hasOwnProperty(pluginName) || namesToPlugins[pluginName] !== PluginModule) {
	        !!namesToPlugins[pluginName] ? process.env.NODE_ENV !== 'production' ? invariant(false, 'EventPluginRegistry: Cannot inject two different event plugins using the same name, `%s`.', pluginName) : _prodInvariant('102', pluginName) : void 0;
	        namesToPlugins[pluginName] = PluginModule;
	        isOrderingDirty = true;
	      }
	    }
	    if (isOrderingDirty) {
	      recomputePluginOrdering();
	    }
	  },

	  /**
	   * Looks up the plugin for the supplied event.
	   *
	   * @param {object} event A synthetic event.
	   * @return {?object} The plugin that created the supplied event.
	   * @internal
	   */
	  getPluginModuleForEvent: function (event) {
	    var dispatchConfig = event.dispatchConfig;
	    if (dispatchConfig.registrationName) {
	      return EventPluginRegistry.registrationNameModules[dispatchConfig.registrationName] || null;
	    }
	    for (var phase in dispatchConfig.phasedRegistrationNames) {
	      if (!dispatchConfig.phasedRegistrationNames.hasOwnProperty(phase)) {
	        continue;
	      }
	      var PluginModule = EventPluginRegistry.registrationNameModules[dispatchConfig.phasedRegistrationNames[phase]];
	      if (PluginModule) {
	        return PluginModule;
	      }
	    }
	    return null;
	  },

	  /**
	   * Exposed for unit testing.
	   * @private
	   */
	  _resetEventPlugins: function () {
	    EventPluginOrder = null;
	    for (var pluginName in namesToPlugins) {
	      if (namesToPlugins.hasOwnProperty(pluginName)) {
	        delete namesToPlugins[pluginName];
	      }
	    }
	    EventPluginRegistry.plugins.length = 0;

	    var eventNameDispatchConfigs = EventPluginRegistry.eventNameDispatchConfigs;
	    for (var eventName in eventNameDispatchConfigs) {
	      if (eventNameDispatchConfigs.hasOwnProperty(eventName)) {
	        delete eventNameDispatchConfigs[eventName];
	      }
	    }

	    var registrationNameModules = EventPluginRegistry.registrationNameModules;
	    for (var registrationName in registrationNameModules) {
	      if (registrationNameModules.hasOwnProperty(registrationName)) {
	        delete registrationNameModules[registrationName];
	      }
	    }

	    if (process.env.NODE_ENV !== 'production') {
	      var possibleRegistrationNames = EventPluginRegistry.possibleRegistrationNames;
	      for (var lowerCasedName in possibleRegistrationNames) {
	        if (possibleRegistrationNames.hasOwnProperty(lowerCasedName)) {
	          delete possibleRegistrationNames[lowerCasedName];
	        }
	      }
	    }
	  }

	};

	module.exports = EventPluginRegistry;
	/* WEBPACK VAR INJECTION */}.call(exports, __webpack_require__(4)))

/***/ },
/* 45 */
/***/ function(module, exports, __webpack_require__) {

	/* WEBPACK VAR INJECTION */(function(process) {/**
	 * Copyright 2013-present, Facebook, Inc.
	 * All rights reserved.
	 *
	 * This source code is licensed under the BSD-style license found in the
	 * LICENSE file in the root directory of this source tree. An additional grant
	 * of patent rights can be found in the PATENTS file in the same directory.
	 *
	 * @providesModule EventPluginUtils
	 */

	'use strict';

	var _prodInvariant = __webpack_require__(8);

	var EventConstants = __webpack_require__(41);
	var ReactErrorUtils = __webpack_require__(46);

	var invariant = __webpack_require__(9);
	var warning = __webpack_require__(12);

	/**
	 * Injected dependencies:
	 */

	/**
	 * - `ComponentTree`: [required] Module that can convert between React instances
	 *   and actual node references.
	 */
	var ComponentTree;
	var TreeTraversal;
	var injection = {
	  injectComponentTree: function (Injected) {
	    ComponentTree = Injected;
	    if (process.env.NODE_ENV !== 'production') {
	      process.env.NODE_ENV !== 'production' ? warning(Injected && Injected.getNodeFromInstance && Injected.getInstanceFromNode, 'EventPluginUtils.injection.injectComponentTree(...): Injected ' + 'module is missing getNodeFromInstance or getInstanceFromNode.') : void 0;
	    }
	  },
	  injectTreeTraversal: function (Injected) {
	    TreeTraversal = Injected;
	    if (process.env.NODE_ENV !== 'production') {
	      process.env.NODE_ENV !== 'production' ? warning(Injected && Injected.isAncestor && Injected.getLowestCommonAncestor, 'EventPluginUtils.injection.injectTreeTraversal(...): Injected ' + 'module is missing isAncestor or getLowestCommonAncestor.') : void 0;
	    }
	  }
	};

	var topLevelTypes = EventConstants.topLevelTypes;

	function isEndish(topLevelType) {
	  return topLevelType === topLevelTypes.topMouseUp || topLevelType === topLevelTypes.topTouchEnd || topLevelType === topLevelTypes.topTouchCancel;
	}

	function isMoveish(topLevelType) {
	  return topLevelType === topLevelTypes.topMouseMove || topLevelType === topLevelTypes.topTouchMove;
	}
	function isStartish(topLevelType) {
	  return topLevelType === topLevelTypes.topMouseDown || topLevelType === topLevelTypes.topTouchStart;
	}

	var validateEventDispatches;
	if (process.env.NODE_ENV !== 'production') {
	  validateEventDispatches = function (event) {
	    var dispatchListeners = event._dispatchListeners;
	    var dispatchInstances = event._dispatchInstances;

	    var listenersIsArr = Array.isArray(dispatchListeners);
	    var listenersLen = listenersIsArr ? dispatchListeners.length : dispatchListeners ? 1 : 0;

	    var instancesIsArr = Array.isArray(dispatchInstances);
	    var instancesLen = instancesIsArr ? dispatchInstances.length : dispatchInstances ? 1 : 0;

	    process.env.NODE_ENV !== 'production' ? warning(instancesIsArr === listenersIsArr && instancesLen === listenersLen, 'EventPluginUtils: Invalid `event`.') : void 0;
	  };
	}

	/**
	 * Dispatch the event to the listener.
	 * @param {SyntheticEvent} event SyntheticEvent to handle
	 * @param {boolean} simulated If the event is simulated (changes exn behavior)
	 * @param {function} listener Application-level callback
	 * @param {*} inst Internal component instance
	 */
	function executeDispatch(event, simulated, listener, inst) {
	  var type = event.type || 'unknown-event';
	  event.currentTarget = EventPluginUtils.getNodeFromInstance(inst);
	  if (simulated) {
	    ReactErrorUtils.invokeGuardedCallbackWithCatch(type, listener, event);
	  } else {
	    ReactErrorUtils.invokeGuardedCallback(type, listener, event);
	  }
	  event.currentTarget = null;
	}

	/**
	 * Standard/simple iteration through an event's collected dispatches.
	 */
	function executeDispatchesInOrder(event, simulated) {
	  var dispatchListeners = event._dispatchListeners;
	  var dispatchInstances = event._dispatchInstances;
	  if (process.env.NODE_ENV !== 'production') {
	    validateEventDispatches(event);
	  }
	  if (Array.isArray(dispatchListeners)) {
	    for (var i = 0; i < dispatchListeners.length; i++) {
	      if (event.isPropagationStopped()) {
	        break;
	      }
	      // Listeners and Instances are two parallel arrays that are always in sync.
	      executeDispatch(event, simulated, dispatchListeners[i], dispatchInstances[i]);
	    }
	  } else if (dispatchListeners) {
	    executeDispatch(event, simulated, dispatchListeners, dispatchInstances);
	  }
	  event._dispatchListeners = null;
	  event._dispatchInstances = null;
	}

	/**
	 * Standard/simple iteration through an event's collected dispatches, but stops
	 * at the first dispatch execution returning true, and returns that id.
	 *
	 * @return {?string} id of the first dispatch execution who's listener returns
	 * true, or null if no listener returned true.
	 */
	function executeDispatchesInOrderStopAtTrueImpl(event) {
	  var dispatchListeners = event._dispatchListeners;
	  var dispatchInstances = event._dispatchInstances;
	  if (process.env.NODE_ENV !== 'production') {
	    validateEventDispatches(event);
	  }
	  if (Array.isArray(dispatchListeners)) {
	    for (var i = 0; i < dispatchListeners.length; i++) {
	      if (event.isPropagationStopped()) {
	        break;
	      }
	      // Listeners and Instances are two parallel arrays that are always in sync.
	      if (dispatchListeners[i](event, dispatchInstances[i])) {
	        return dispatchInstances[i];
	      }
	    }
	  } else if (dispatchListeners) {
	    if (dispatchListeners(event, dispatchInstances)) {
	      return dispatchInstances;
	    }
	  }
	  return null;
	}

	/**
	 * @see executeDispatchesInOrderStopAtTrueImpl
	 */
	function executeDispatchesInOrderStopAtTrue(event) {
	  var ret = executeDispatchesInOrderStopAtTrueImpl(event);
	  event._dispatchInstances = null;
	  event._dispatchListeners = null;
	  return ret;
	}

	/**
	 * Execution of a "direct" dispatch - there must be at most one dispatch
	 * accumulated on the event or it is considered an error. It doesn't really make
	 * sense for an event with multiple dispatches (bubbled) to keep track of the
	 * return values at each dispatch execution, but it does tend to make sense when
	 * dealing with "direct" dispatches.
	 *
	 * @return {*} The return value of executing the single dispatch.
	 */
	function executeDirectDispatch(event) {
	  if (process.env.NODE_ENV !== 'production') {
	    validateEventDispatches(event);
	  }
	  var dispatchListener = event._dispatchListeners;
	  var dispatchInstance = event._dispatchInstances;
	  !!Array.isArray(dispatchListener) ? process.env.NODE_ENV !== 'production' ? invariant(false, 'executeDirectDispatch(...): Invalid `event`.') : _prodInvariant('103') : void 0;
	  event.currentTarget = dispatchListener ? EventPluginUtils.getNodeFromInstance(dispatchInstance) : null;
	  var res = dispatchListener ? dispatchListener(event) : null;
	  event.currentTarget = null;
	  event._dispatchListeners = null;
	  event._dispatchInstances = null;
	  return res;
	}

	/**
	 * @param {SyntheticEvent} event
	 * @return {boolean} True iff number of dispatches accumulated is greater than 0.
	 */
	function hasDispatches(event) {
	  return !!event._dispatchListeners;
	}

	/**
	 * General utilities that are useful in creating custom Event Plugins.
	 */
	var EventPluginUtils = {
	  isEndish: isEndish,
	  isMoveish: isMoveish,
	  isStartish: isStartish,

	  executeDirectDispatch: executeDirectDispatch,
	  executeDispatchesInOrder: executeDispatchesInOrder,
	  executeDispatchesInOrderStopAtTrue: executeDispatchesInOrderStopAtTrue,
	  hasDispatches: hasDispatches,

	  getInstanceFromNode: function (node) {
	    return ComponentTree.getInstanceFromNode(node);
	  },
	  getNodeFromInstance: function (node) {
	    return ComponentTree.getNodeFromInstance(node);
	  },
	  isAncestor: function (a, b) {
	    return TreeTraversal.isAncestor(a, b);
	  },
	  getLowestCommonAncestor: function (a, b) {
	    return TreeTraversal.getLowestCommonAncestor(a, b);
	  },
	  getParentInstance: function (inst) {
	    return TreeTraversal.getParentInstance(inst);
	  },
	  traverseTwoPhase: function (target, fn, arg) {
	    return TreeTraversal.traverseTwoPhase(target, fn, arg);
	  },
	  traverseEnterLeave: function (from, to, fn, argFrom, argTo) {
	    return TreeTraversal.traverseEnterLeave(from, to, fn, argFrom, argTo);
	  },

	  injection: injection
	};

	module.exports = EventPluginUtils;
	/* WEBPACK VAR INJECTION */}.call(exports, __webpack_require__(4)))

/***/ },
/* 46 */
/***/ function(module, exports, __webpack_require__) {

	/* WEBPACK VAR INJECTION */(function(process) {/**
	 * Copyright 2013-present, Facebook, Inc.
	 * All rights reserved.
	 *
	 * This source code is licensed under the BSD-style license found in the
	 * LICENSE file in the root directory of this source tree. An additional grant
	 * of patent rights can be found in the PATENTS file in the same directory.
	 *
	 * @providesModule ReactErrorUtils
	 */

	'use strict';

	var caughtError = null;

	/**
	 * Call a function while guarding against errors that happens within it.
	 *
	 * @param {?String} name of the guard to use for logging or debugging
	 * @param {Function} func The function to invoke
	 * @param {*} a First argument
	 * @param {*} b Second argument
	 */
	function invokeGuardedCallback(name, func, a, b) {
	  try {
	    return func(a, b);
	  } catch (x) {
	    if (caughtError === null) {
	      caughtError = x;
	    }
	    return undefined;
	  }
	}

	var ReactErrorUtils = {
	  invokeGuardedCallback: invokeGuardedCallback,

	  /**
	   * Invoked by ReactTestUtils.Simulate so that any errors thrown by the event
	   * handler are sure to be rethrown by rethrowCaughtError.
	   */
	  invokeGuardedCallbackWithCatch: invokeGuardedCallback,

	  /**
	   * During execution of guarded functions we will capture the first error which
	   * we will rethrow to be handled by the top level error handler.
	   */
	  rethrowCaughtError: function () {
	    if (caughtError) {
	      var error = caughtError;
	      caughtError = null;
	      throw error;
	    }
	  }
	};

	if (process.env.NODE_ENV !== 'production') {
	  /**
	   * To help development we can get better devtools integration by simulating a
	   * real browser event.
	   */
	  if (typeof window !== 'undefined' && typeof window.dispatchEvent === 'function' && typeof document !== 'undefined' && typeof document.createEvent === 'function') {
	    var fakeNode = document.createElement('react');
	    ReactErrorUtils.invokeGuardedCallback = function (name, func, a, b) {
	      var boundFunc = func.bind(null, a, b);
	      var evtType = 'react-' + name;
	      fakeNode.addEventListener(evtType, boundFunc, false);
	      var evt = document.createEvent('Event');
	      evt.initEvent(evtType, false, false);
	      fakeNode.dispatchEvent(evt);
	      fakeNode.removeEventListener(evtType, boundFunc, false);
	    };
	  }
	}

	module.exports = ReactErrorUtils;
	/* WEBPACK VAR INJECTION */}.call(exports, __webpack_require__(4)))

/***/ },
/* 47 */
/***/ function(module, exports, __webpack_require__) {

	/* WEBPACK VAR INJECTION */(function(process) {/**
	 * Copyright 2014-present, Facebook, Inc.
	 * All rights reserved.
	 *
	 * This source code is licensed under the BSD-style license found in the
	 * LICENSE file in the root directory of this source tree. An additional grant
	 * of patent rights can be found in the PATENTS file in the same directory.
	 *
	 * @providesModule accumulateInto
	 * 
	 */

	'use strict';

	var _prodInvariant = __webpack_require__(8);

	var invariant = __webpack_require__(9);

	/**
	 * Accumulates items that must not be null or undefined into the first one. This
	 * is used to conserve memory by avoiding array allocations, and thus sacrifices
	 * API cleanness. Since `current` can be null before being passed in and not
	 * null after this function, make sure to assign it back to `current`:
	 *
	 * `a = accumulateInto(a, b);`
	 *
	 * This API should be sparingly used. Try `accumulate` for something cleaner.
	 *
	 * @return {*|array<*>} An accumulation of items.
	 */

	function accumulateInto(current, next) {
	  !(next != null) ? process.env.NODE_ENV !== 'production' ? invariant(false, 'accumulateInto(...): Accumulated items must not be null or undefined.') : _prodInvariant('30') : void 0;

	  if (current == null) {
	    return next;
	  }

	  // Both are not empty. Warning: Never call x.concat(y) when you are not
	  // certain that x is an Array (x could be a string with concat method).
	  if (Array.isArray(current)) {
	    if (Array.isArray(next)) {
	      current.push.apply(current, next);
	      return current;
	    }
	    current.push(next);
	    return current;
	  }

	  if (Array.isArray(next)) {
	    // A bit too dangerous to mutate `next`.
	    return [current].concat(next);
	  }

	  return [current, next];
	}

	module.exports = accumulateInto;
	/* WEBPACK VAR INJECTION */}.call(exports, __webpack_require__(4)))

/***/ },
/* 48 */
/***/ function(module, exports) {

	/**
	 * Copyright 2013-present, Facebook, Inc.
	 * All rights reserved.
	 *
	 * This source code is licensed under the BSD-style license found in the
	 * LICENSE file in the root directory of this source tree. An additional grant
	 * of patent rights can be found in the PATENTS file in the same directory.
	 *
	 * @providesModule forEachAccumulated
	 * 
	 */

	'use strict';

	/**
	 * @param {array} arr an "accumulation" of items which is either an Array or
	 * a single item. Useful when paired with the `accumulate` module. This is a
	 * simple utility that allows us to reason about a collection of items, but
	 * handling the case when there is exactly one item (and we do not need to
	 * allocate an array).
	 */

	function forEachAccumulated(arr, cb, scope) {
	  if (Array.isArray(arr)) {
	    arr.forEach(cb, scope);
	  } else if (arr) {
	    cb.call(scope, arr);
	  }
	}

	module.exports = forEachAccumulated;

/***/ },
/* 49 */
/***/ function(module, exports) {

	/**
	 * Copyright (c) 2013-present, Facebook, Inc.
	 * All rights reserved.
	 *
	 * This source code is licensed under the BSD-style license found in the
	 * LICENSE file in the root directory of this source tree. An additional grant
	 * of patent rights can be found in the PATENTS file in the same directory.
	 *
	 */

	'use strict';

	var canUseDOM = !!(typeof window !== 'undefined' && window.document && window.document.createElement);

	/**
	 * Simple, lightweight module assisting with the detection and context of
	 * Worker. Helps avoid circular dependencies and allows code to reason about
	 * whether or not they are in a Worker, even if they never include the main
	 * `ReactWorker` dependency.
	 */
	var ExecutionEnvironment = {

	  canUseDOM: canUseDOM,

	  canUseWorkers: typeof Worker !== 'undefined',

	  canUseEventListeners: canUseDOM && !!(window.addEventListener || window.attachEvent),

	  canUseViewport: canUseDOM && !!window.screen,

	  isInWorker: !canUseDOM // For now, this is true - might change in the future.

	};

	module.exports = ExecutionEnvironment;

/***/ },
/* 50 */
/***/ function(module, exports, __webpack_require__) {

	/**
	 * Copyright 2013-present, Facebook, Inc.
	 * All rights reserved.
	 *
	 * This source code is licensed under the BSD-style license found in the
	 * LICENSE file in the root directory of this source tree. An additional grant
	 * of patent rights can be found in the PATENTS file in the same directory.
	 *
	 * @providesModule FallbackCompositionState
	 */

	'use strict';

	var _assign = __webpack_require__(5);

	var PooledClass = __webpack_require__(7);

	var getTextContentAccessor = __webpack_require__(51);

	/**
	 * This helper class stores information about text content of a target node,
	 * allowing comparison of content before and after a given event.
	 *
	 * Identify the node where selection currently begins, then observe
	 * both its text content and its current position in the DOM. Since the
	 * browser may natively replace the target node during composition, we can
	 * use its position to find its replacement.
	 *
	 * @param {DOMEventTarget} root
	 */
	function FallbackCompositionState(root) {
	  this._root = root;
	  this._startText = this.getText();
	  this._fallbackText = null;
	}

	_assign(FallbackCompositionState.prototype, {
	  destructor: function () {
	    this._root = null;
	    this._startText = null;
	    this._fallbackText = null;
	  },

	  /**
	   * Get current text of input.
	   *
	   * @return {string}
	   */
	  getText: function () {
	    if ('value' in this._root) {
	      return this._root.value;
	    }
	    return this._root[getTextContentAccessor()];
	  },

	  /**
	   * Determine the differing substring between the initially stored
	   * text content and the current content.
	   *
	   * @return {string}
	   */
	  getData: function () {
	    if (this._fallbackText) {
	      return this._fallbackText;
	    }

	    var start;
	    var startValue = this._startText;
	    var startLength = startValue.length;
	    var end;
	    var endValue = this.getText();
	    var endLength = endValue.length;

	    for (start = 0; start < startLength; start++) {
	      if (startValue[start] !== endValue[start]) {
	        break;
	      }
	    }

	    var minEnd = startLength - start;
	    for (end = 1; end <= minEnd; end++) {
	      if (startValue[startLength - end] !== endValue[endLength - end]) {
	        break;
	      }
	    }

	    var sliceTail = end > 1 ? 1 - end : undefined;
	    this._fallbackText = endValue.slice(start, sliceTail);
	    return this._fallbackText;
	  }
	});

	PooledClass.addPoolingTo(FallbackCompositionState);

	module.exports = FallbackCompositionState;

/***/ },
/* 51 */
/***/ function(module, exports, __webpack_require__) {

	/**
	 * Copyright 2013-present, Facebook, Inc.
	 * All rights reserved.
	 *
	 * This source code is licensed under the BSD-style license found in the
	 * LICENSE file in the root directory of this source tree. An additional grant
	 * of patent rights can be found in the PATENTS file in the same directory.
	 *
	 * @providesModule getTextContentAccessor
	 */

	'use strict';

	var ExecutionEnvironment = __webpack_require__(49);

	var contentKey = null;

	/**
	 * Gets the key used to access text content on a DOM node.
	 *
	 * @return {?string} Key used to access text content.
	 * @internal
	 */
	function getTextContentAccessor() {
	  if (!contentKey && ExecutionEnvironment.canUseDOM) {
	    // Prefer textContent to innerText because many browsers support both but
	    // SVG <text> elements don't support innerText even when <div> does.
	    contentKey = 'textContent' in document.documentElement ? 'textContent' : 'innerText';
	  }
	  return contentKey;
	}

	module.exports = getTextContentAccessor;

/***/ },
/* 52 */
/***/ function(module, exports, __webpack_require__) {

	/**
	 * Copyright 2013-present, Facebook, Inc.
	 * All rights reserved.
	 *
	 * This source code is licensed under the BSD-style license found in the
	 * LICENSE file in the root directory of this source tree. An additional grant
	 * of patent rights can be found in the PATENTS file in the same directory.
	 *
	 * @providesModule SyntheticCompositionEvent
	 */

	'use strict';

	var SyntheticEvent = __webpack_require__(53);

	/**
	 * @interface Event
	 * @see http://www.w3.org/TR/DOM-Level-3-Events/#events-compositionevents
	 */
	var CompositionEventInterface = {
	  data: null
	};

	/**
	 * @param {object} dispatchConfig Configuration used to dispatch this event.
	 * @param {string} dispatchMarker Marker identifying the event target.
	 * @param {object} nativeEvent Native browser event.
	 * @extends {SyntheticUIEvent}
	 */
	function SyntheticCompositionEvent(dispatchConfig, dispatchMarker, nativeEvent, nativeEventTarget) {
	  return SyntheticEvent.call(this, dispatchConfig, dispatchMarker, nativeEvent, nativeEventTarget);
	}

	SyntheticEvent.augmentClass(SyntheticCompositionEvent, CompositionEventInterface);

	module.exports = SyntheticCompositionEvent;

/***/ },
/* 53 */
/***/ function(module, exports, __webpack_require__) {

	/* WEBPACK VAR INJECTION */(function(process) {/**
	 * Copyright 2013-present, Facebook, Inc.
	 * All rights reserved.
	 *
	 * This source code is licensed under the BSD-style license found in the
	 * LICENSE file in the root directory of this source tree. An additional grant
	 * of patent rights can be found in the PATENTS file in the same directory.
	 *
	 * @providesModule SyntheticEvent
	 */

	'use strict';

	var _assign = __webpack_require__(5);

	var PooledClass = __webpack_require__(7);

	var emptyFunction = __webpack_require__(13);
	var warning = __webpack_require__(12);

	var didWarnForAddedNewProperty = false;
	var isProxySupported = typeof Proxy === 'function';

	var shouldBeReleasedProperties = ['dispatchConfig', '_targetInst', 'nativeEvent', 'isDefaultPrevented', 'isPropagationStopped', '_dispatchListeners', '_dispatchInstances'];

	/**
	 * @interface Event
	 * @see http://www.w3.org/TR/DOM-Level-3-Events/
	 */
	var EventInterface = {
	  type: null,
	  target: null,
	  // currentTarget is set when dispatching; no use in copying it here
	  currentTarget: emptyFunction.thatReturnsNull,
	  eventPhase: null,
	  bubbles: null,
	  cancelable: null,
	  timeStamp: function (event) {
	    return event.timeStamp || Date.now();
	  },
	  defaultPrevented: null,
	  isTrusted: null
	};

	/**
	 * Synthetic events are dispatched by event plugins, typically in response to a
	 * top-level event delegation handler.
	 *
	 * These systems should generally use pooling to reduce the frequency of garbage
	 * collection. The system should check `isPersistent` to determine whether the
	 * event should be released into the pool after being dispatched. Users that
	 * need a persisted event should invoke `persist`.
	 *
	 * Synthetic events (and subclasses) implement the DOM Level 3 Events API by
	 * normalizing browser quirks. Subclasses do not necessarily have to implement a
	 * DOM interface; custom application-specific events can also subclass this.
	 *
	 * @param {object} dispatchConfig Configuration used to dispatch this event.
	 * @param {*} targetInst Marker identifying the event target.
	 * @param {object} nativeEvent Native browser event.
	 * @param {DOMEventTarget} nativeEventTarget Target node.
	 */
	function SyntheticEvent(dispatchConfig, targetInst, nativeEvent, nativeEventTarget) {
	  if (process.env.NODE_ENV !== 'production') {
	    // these have a getter/setter for warnings
	    delete this.nativeEvent;
	    delete this.preventDefault;
	    delete this.stopPropagation;
	  }

	  this.dispatchConfig = dispatchConfig;
	  this._targetInst = targetInst;
	  this.nativeEvent = nativeEvent;

	  var Interface = this.constructor.Interface;
	  for (var propName in Interface) {
	    if (!Interface.hasOwnProperty(propName)) {
	      continue;
	    }
	    if (process.env.NODE_ENV !== 'production') {
	      delete this[propName]; // this has a getter/setter for warnings
	    }
	    var normalize = Interface[propName];
	    if (normalize) {
	      this[propName] = normalize(nativeEvent);
	    } else {
	      if (propName === 'target') {
	        this.target = nativeEventTarget;
	      } else {
	        this[propName] = nativeEvent[propName];
	      }
	    }
	  }

	  var defaultPrevented = nativeEvent.defaultPrevented != null ? nativeEvent.defaultPrevented : nativeEvent.returnValue === false;
	  if (defaultPrevented) {
	    this.isDefaultPrevented = emptyFunction.thatReturnsTrue;
	  } else {
	    this.isDefaultPrevented = emptyFunction.thatReturnsFalse;
	  }
	  this.isPropagationStopped = emptyFunction.thatReturnsFalse;
	  return this;
	}

	_assign(SyntheticEvent.prototype, {

	  preventDefault: function () {
	    this.defaultPrevented = true;
	    var event = this.nativeEvent;
	    if (!event) {
	      return;
	    }

	    if (event.preventDefault) {
	      event.preventDefault();
	    } else {
	      event.returnValue = false;
	    }
	    this.isDefaultPrevented = emptyFunction.thatReturnsTrue;
	  },

	  stopPropagation: function () {
	    var event = this.nativeEvent;
	    if (!event) {
	      return;
	    }

	    if (event.stopPropagation) {
	      event.stopPropagation();
	    } else {
	      event.cancelBubble = true;
	    }
	    this.isPropagationStopped = emptyFunction.thatReturnsTrue;
	  },

	  /**
	   * We release all dispatched `SyntheticEvent`s after each event loop, adding
	   * them back into the pool. This allows a way to hold onto a reference that
	   * won't be added back into the pool.
	   */
	  persist: function () {
	    this.isPersistent = emptyFunction.thatReturnsTrue;
	  },

	  /**
	   * Checks if this event should be released back into the pool.
	   *
	   * @return {boolean} True if this should not be released, false otherwise.
	   */
	  isPersistent: emptyFunction.thatReturnsFalse,

	  /**
	   * `PooledClass` looks for `destructor` on each instance it releases.
	   */
	  destructor: function () {
	    var Interface = this.constructor.Interface;
	    for (var propName in Interface) {
	      if (process.env.NODE_ENV !== 'production') {
	        Object.defineProperty(this, propName, getPooledWarningPropertyDefinition(propName, Interface[propName]));
	      } else {
	        this[propName] = null;
	      }
	    }
	    for (var i = 0; i < shouldBeReleasedProperties.length; i++) {
	      this[shouldBeReleasedProperties[i]] = null;
	    }
	    if (process.env.NODE_ENV !== 'production') {
	      Object.defineProperty(this, 'nativeEvent', getPooledWarningPropertyDefinition('nativeEvent', null));
	      Object.defineProperty(this, 'preventDefault', getPooledWarningPropertyDefinition('preventDefault', emptyFunction));
	      Object.defineProperty(this, 'stopPropagation', getPooledWarningPropertyDefinition('stopPropagation', emptyFunction));
	    }
	  }

	});

	SyntheticEvent.Interface = EventInterface;

	if (process.env.NODE_ENV !== 'production') {
	  if (isProxySupported) {
	    /*eslint-disable no-func-assign */
	    SyntheticEvent = new Proxy(SyntheticEvent, {
	      construct: function (target, args) {
	        return this.apply(target, Object.create(target.prototype), args);
	      },
	      apply: function (constructor, that, args) {
	        return new Proxy(constructor.apply(that, args), {
	          set: function (target, prop, value) {
	            if (prop !== 'isPersistent' && !target.constructor.Interface.hasOwnProperty(prop) && shouldBeReleasedProperties.indexOf(prop) === -1) {
	              process.env.NODE_ENV !== 'production' ? warning(didWarnForAddedNewProperty || target.isPersistent(), 'This synthetic event is reused for performance reasons. If you\'re ' + 'seeing this, you\'re adding a new property in the synthetic event object. ' + 'The property is never released. See ' + 'https://fb.me/react-event-pooling for more information.') : void 0;
	              didWarnForAddedNewProperty = true;
	            }
	            target[prop] = value;
	            return true;
	          }
	        });
	      }
	    });
	    /*eslint-enable no-func-assign */
	  }
	}
	/**
	 * Helper to reduce boilerplate when creating subclasses.
	 *
	 * @param {function} Class
	 * @param {?object} Interface
	 */
	SyntheticEvent.augmentClass = function (Class, Interface) {
	  var Super = this;

	  var E = function () {};
	  E.prototype = Super.prototype;
	  var prototype = new E();

	  _assign(prototype, Class.prototype);
	  Class.prototype = prototype;
	  Class.prototype.constructor = Class;

	  Class.Interface = _assign({}, Super.Interface, Interface);
	  Class.augmentClass = Super.augmentClass;

	  PooledClass.addPoolingTo(Class, PooledClass.fourArgumentPooler);
	};

	PooledClass.addPoolingTo(SyntheticEvent, PooledClass.fourArgumentPooler);

	module.exports = SyntheticEvent;

	/**
	  * Helper to nullify syntheticEvent instance properties when destructing
	  *
	  * @param {object} SyntheticEvent
	  * @param {String} propName
	  * @return {object} defineProperty object
	  */
	function getPooledWarningPropertyDefinition(propName, getVal) {
	  var isFunction = typeof getVal === 'function';
	  return {
	    configurable: true,
	    set: set,
	    get: get
	  };

	  function set(val) {
	    var action = isFunction ? 'setting the method' : 'setting the property';
	    warn(action, 'This is effectively a no-op');
	    return val;
	  }

	  function get() {
	    var action = isFunction ? 'accessing the method' : 'accessing the property';
	    var result = isFunction ? 'This is a no-op function' : 'This is set to null';
	    warn(action, result);
	    return getVal;
	  }

	  function warn(action, result) {
	    var warningCondition = false;
	    process.env.NODE_ENV !== 'production' ? warning(warningCondition, 'This synthetic event is reused for performance reasons. If you\'re seeing this, ' + 'you\'re %s `%s` on a released/nullified synthetic event. %s. ' + 'If you must keep the original synthetic event around, use event.persist(). ' + 'See https://fb.me/react-event-pooling for more information.', action, propName, result) : void 0;
	  }
	}
	/* WEBPACK VAR INJECTION */}.call(exports, __webpack_require__(4)))

/***/ },
/* 54 */
/***/ function(module, exports, __webpack_require__) {

	/**
	 * Copyright 2013-present, Facebook, Inc.
	 * All rights reserved.
	 *
	 * This source code is licensed under the BSD-style license found in the
	 * LICENSE file in the root directory of this source tree. An additional grant
	 * of patent rights can be found in the PATENTS file in the same directory.
	 *
	 * @providesModule SyntheticInputEvent
	 */

	'use strict';

	var SyntheticEvent = __webpack_require__(53);

	/**
	 * @interface Event
	 * @see http://www.w3.org/TR/2013/WD-DOM-Level-3-Events-20131105
	 *      /#events-inputevents
	 */
	var InputEventInterface = {
	  data: null
	};

	/**
	 * @param {object} dispatchConfig Configuration used to dispatch this event.
	 * @param {string} dispatchMarker Marker identifying the event target.
	 * @param {object} nativeEvent Native browser event.
	 * @extends {SyntheticUIEvent}
	 */
	function SyntheticInputEvent(dispatchConfig, dispatchMarker, nativeEvent, nativeEventTarget) {
	  return SyntheticEvent.call(this, dispatchConfig, dispatchMarker, nativeEvent, nativeEventTarget);
	}

	SyntheticEvent.augmentClass(SyntheticInputEvent, InputEventInterface);

	module.exports = SyntheticInputEvent;

/***/ },
/* 55 */
/***/ function(module, exports, __webpack_require__) {

	/**
	 * Copyright 2013-present, Facebook, Inc.
	 * All rights reserved.
	 *
	 * This source code is licensed under the BSD-style license found in the
	 * LICENSE file in the root directory of this source tree. An additional grant
	 * of patent rights can be found in the PATENTS file in the same directory.
	 *
	 * @providesModule ChangeEventPlugin
	 */

	'use strict';

	var EventConstants = __webpack_require__(41);
	var EventPluginHub = __webpack_require__(43);
	var EventPropagators = __webpack_require__(42);
	var ExecutionEnvironment = __webpack_require__(49);
	var ReactDOMComponentTree = __webpack_require__(36);
	var ReactUpdates = __webpack_require__(56);
	var SyntheticEvent = __webpack_require__(53);

	var getEventTarget = __webpack_require__(69);
	var isEventSupported = __webpack_require__(70);
	var isTextInputElement = __webpack_require__(71);
	var keyOf = __webpack_require__(25);

	var topLevelTypes = EventConstants.topLevelTypes;

	var eventTypes = {
	  change: {
	    phasedRegistrationNames: {
	      bubbled: keyOf({ onChange: null }),
	      captured: keyOf({ onChangeCapture: null })
	    },
	    dependencies: [topLevelTypes.topBlur, topLevelTypes.topChange, topLevelTypes.topClick, topLevelTypes.topFocus, topLevelTypes.topInput, topLevelTypes.topKeyDown, topLevelTypes.topKeyUp, topLevelTypes.topSelectionChange]
	  }
	};

	/**
	 * For IE shims
	 */
	var activeElement = null;
	var activeElementInst = null;
	var activeElementValue = null;
	var activeElementValueProp = null;

	/**
	 * SECTION: handle `change` event
	 */
	function shouldUseChangeEvent(elem) {
	  var nodeName = elem.nodeName && elem.nodeName.toLowerCase();
	  return nodeName === 'select' || nodeName === 'input' && elem.type === 'file';
	}

	var doesChangeEventBubble = false;
	if (ExecutionEnvironment.canUseDOM) {
	  // See `handleChange` comment below
	  doesChangeEventBubble = isEventSupported('change') && (!('documentMode' in document) || document.documentMode > 8);
	}

	function manualDispatchChangeEvent(nativeEvent) {
	  var event = SyntheticEvent.getPooled(eventTypes.change, activeElementInst, nativeEvent, getEventTarget(nativeEvent));
	  EventPropagators.accumulateTwoPhaseDispatches(event);

	  // If change and propertychange bubbled, we'd just bind to it like all the
	  // other events and have it go through ReactBrowserEventEmitter. Since it
	  // doesn't, we manually listen for the events and so we have to enqueue and
	  // process the abstract event manually.
	  //
	  // Batching is necessary here in order to ensure that all event handlers run
	  // before the next rerender (including event handlers attached to ancestor
	  // elements instead of directly on the input). Without this, controlled
	  // components don't work properly in conjunction with event bubbling because
	  // the component is rerendered and the value reverted before all the event
	  // handlers can run. See https://github.com/facebook/react/issues/708.
	  ReactUpdates.batchedUpdates(runEventInBatch, event);
	}

	function runEventInBatch(event) {
	  EventPluginHub.enqueueEvents(event);
	  EventPluginHub.processEventQueue(false);
	}

	function startWatchingForChangeEventIE8(target, targetInst) {
	  activeElement = target;
	  activeElementInst = targetInst;
	  activeElement.attachEvent('onchange', manualDispatchChangeEvent);
	}

	function stopWatchingForChangeEventIE8() {
	  if (!activeElement) {
	    return;
	  }
	  activeElement.detachEvent('onchange', manualDispatchChangeEvent);
	  activeElement = null;
	  activeElementInst = null;
	}

	function getTargetInstForChangeEvent(topLevelType, targetInst) {
	  if (topLevelType === topLevelTypes.topChange) {
	    return targetInst;
	  }
	}
	function handleEventsForChangeEventIE8(topLevelType, target, targetInst) {
	  if (topLevelType === topLevelTypes.topFocus) {
	    // stopWatching() should be a noop here but we call it just in case we
	    // missed a blur event somehow.
	    stopWatchingForChangeEventIE8();
	    startWatchingForChangeEventIE8(target, targetInst);
	  } else if (topLevelType === topLevelTypes.topBlur) {
	    stopWatchingForChangeEventIE8();
	  }
	}

	/**
	 * SECTION: handle `input` event
	 */
	var isInputEventSupported = false;
	if (ExecutionEnvironment.canUseDOM) {
	  // IE9 claims to support the input event but fails to trigger it when
	  // deleting text, so we ignore its input events.
	  // IE10+ fire input events to often, such when a placeholder
	  // changes or when an input with a placeholder is focused.
	  isInputEventSupported = isEventSupported('input') && (!('documentMode' in document) || document.documentMode > 11);
	}

	/**
	 * (For IE <=11) Replacement getter/setter for the `value` property that gets
	 * set on the active element.
	 */
	var newValueProp = {
	  get: function () {
	    return activeElementValueProp.get.call(this);
	  },
	  set: function (val) {
	    // Cast to a string so we can do equality checks.
	    activeElementValue = '' + val;
	    activeElementValueProp.set.call(this, val);
	  }
	};

	/**
	 * (For IE <=11) Starts tracking propertychange events on the passed-in element
	 * and override the value property so that we can distinguish user events from
	 * value changes in JS.
	 */
	function startWatchingForValueChange(target, targetInst) {
	  activeElement = target;
	  activeElementInst = targetInst;
	  activeElementValue = target.value;
	  activeElementValueProp = Object.getOwnPropertyDescriptor(target.constructor.prototype, 'value');

	  // Not guarded in a canDefineProperty check: IE8 supports defineProperty only
	  // on DOM elements
	  Object.defineProperty(activeElement, 'value', newValueProp);
	  if (activeElement.attachEvent) {
	    activeElement.attachEvent('onpropertychange', handlePropertyChange);
	  } else {
	    activeElement.addEventListener('propertychange', handlePropertyChange, false);
	  }
	}

	/**
	 * (For IE <=11) Removes the event listeners from the currently-tracked element,
	 * if any exists.
	 */
	function stopWatchingForValueChange() {
	  if (!activeElement) {
	    return;
	  }

	  // delete restores the original property definition
	  delete activeElement.value;

	  if (activeElement.detachEvent) {
	    activeElement.detachEvent('onpropertychange', handlePropertyChange);
	  } else {
	    activeElement.removeEventListener('propertychange', handlePropertyChange, false);
	  }

	  activeElement = null;
	  activeElementInst = null;
	  activeElementValue = null;
	  activeElementValueProp = null;
	}

	/**
	 * (For IE <=11) Handles a propertychange event, sending a `change` event if
	 * the value of the active element has changed.
	 */
	function handlePropertyChange(nativeEvent) {
	  if (nativeEvent.propertyName !== 'value') {
	    return;
	  }
	  var value = nativeEvent.srcElement.value;
	  if (value === activeElementValue) {
	    return;
	  }
	  activeElementValue = value;

	  manualDispatchChangeEvent(nativeEvent);
	}

	/**
	 * If a `change` event should be fired, returns the target's ID.
	 */
	function getTargetInstForInputEvent(topLevelType, targetInst) {
	  if (topLevelType === topLevelTypes.topInput) {
	    // In modern browsers (i.e., not IE8 or IE9), the input event is exactly
	    // what we want so fall through here and trigger an abstract event
	    return targetInst;
	  }
	}

	function handleEventsForInputEventIE(topLevelType, target, targetInst) {
	  if (topLevelType === topLevelTypes.topFocus) {
	    // In IE8, we can capture almost all .value changes by adding a
	    // propertychange handler and looking for events with propertyName
	    // equal to 'value'
	    // In IE9-11, propertychange fires for most input events but is buggy and
	    // doesn't fire when text is deleted, but conveniently, selectionchange
	    // appears to fire in all of the remaining cases so we catch those and
	    // forward the event if the value has changed
	    // In either case, we don't want to call the event handler if the value
	    // is changed from JS so we redefine a setter for `.value` that updates
	    // our activeElementValue variable, allowing us to ignore those changes
	    //
	    // stopWatching() should be a noop here but we call it just in case we
	    // missed a blur event somehow.
	    stopWatchingForValueChange();
	    startWatchingForValueChange(target, targetInst);
	  } else if (topLevelType === topLevelTypes.topBlur) {
	    stopWatchingForValueChange();
	  }
	}

	// For IE8 and IE9.
	function getTargetInstForInputEventIE(topLevelType, targetInst) {
	  if (topLevelType === topLevelTypes.topSelectionChange || topLevelType === topLevelTypes.topKeyUp || topLevelType === topLevelTypes.topKeyDown) {
	    // On the selectionchange event, the target is just document which isn't
	    // helpful for us so just check activeElement instead.
	    //
	    // 99% of the time, keydown and keyup aren't necessary. IE8 fails to fire
	    // propertychange on the first input event after setting `value` from a
	    // script and fires only keydown, keypress, keyup. Catching keyup usually
	    // gets it and catching keydown lets us fire an event for the first
	    // keystroke if user does a key repeat (it'll be a little delayed: right
	    // before the second keystroke). Other input methods (e.g., paste) seem to
	    // fire selectionchange normally.
	    if (activeElement && activeElement.value !== activeElementValue) {
	      activeElementValue = activeElement.value;
	      return activeElementInst;
	    }
	  }
	}

	/**
	 * SECTION: handle `click` event
	 */
	function shouldUseClickEvent(elem) {
	  // Use the `click` event to detect changes to checkbox and radio inputs.
	  // This approach works across all browsers, whereas `change` does not fire
	  // until `blur` in IE8.
	  return elem.nodeName && elem.nodeName.toLowerCase() === 'input' && (elem.type === 'checkbox' || elem.type === 'radio');
	}

	function getTargetInstForClickEvent(topLevelType, targetInst) {
	  if (topLevelType === topLevelTypes.topClick) {
	    return targetInst;
	  }
	}

	/**
	 * This plugin creates an `onChange` event that normalizes change events
	 * across form elements. This event fires at a time when it's possible to
	 * change the element's value without seeing a flicker.
	 *
	 * Supported elements are:
	 * - input (see `isTextInputElement`)
	 * - textarea
	 * - select
	 */
	var ChangeEventPlugin = {

	  eventTypes: eventTypes,

	  extractEvents: function (topLevelType, targetInst, nativeEvent, nativeEventTarget) {
	    var targetNode = targetInst ? ReactDOMComponentTree.getNodeFromInstance(targetInst) : window;

	    var getTargetInstFunc, handleEventFunc;
	    if (shouldUseChangeEvent(targetNode)) {
	      if (doesChangeEventBubble) {
	        getTargetInstFunc = getTargetInstForChangeEvent;
	      } else {
	        handleEventFunc = handleEventsForChangeEventIE8;
	      }
	    } else if (isTextInputElement(targetNode)) {
	      if (isInputEventSupported) {
	        getTargetInstFunc = getTargetInstForInputEvent;
	      } else {
	        getTargetInstFunc = getTargetInstForInputEventIE;
	        handleEventFunc = handleEventsForInputEventIE;
	      }
	    } else if (shouldUseClickEvent(targetNode)) {
	      getTargetInstFunc = getTargetInstForClickEvent;
	    }

	    if (getTargetInstFunc) {
	      var inst = getTargetInstFunc(topLevelType, targetInst);
	      if (inst) {
	        var event = SyntheticEvent.getPooled(eventTypes.change, inst, nativeEvent, nativeEventTarget);
	        event.type = 'change';
	        EventPropagators.accumulateTwoPhaseDispatches(event);
	        return event;
	      }
	    }

	    if (handleEventFunc) {
	      handleEventFunc(topLevelType, targetNode, targetInst);
	    }
	  }

	};

	module.exports = ChangeEventPlugin;

/***/ },
/* 56 */
/***/ function(module, exports, __webpack_require__) {

	/* WEBPACK VAR INJECTION */(function(process) {/**
	 * Copyright 2013-present, Facebook, Inc.
	 * All rights reserved.
	 *
	 * This source code is licensed under the BSD-style license found in the
	 * LICENSE file in the root directory of this source tree. An additional grant
	 * of patent rights can be found in the PATENTS file in the same directory.
	 *
	 * @providesModule ReactUpdates
	 */

	'use strict';

	var _prodInvariant = __webpack_require__(8),
	    _assign = __webpack_require__(5);

	var CallbackQueue = __webpack_require__(57);
	var PooledClass = __webpack_require__(7);
	var ReactFeatureFlags = __webpack_require__(58);
	var ReactReconciler = __webpack_require__(59);
	var Transaction = __webpack_require__(68);

	var invariant = __webpack_require__(9);

	var dirtyComponents = [];
	var updateBatchNumber = 0;
	var asapCallbackQueue = CallbackQueue.getPooled();
	var asapEnqueued = false;

	var batchingStrategy = null;

	function ensureInjected() {
	  !(ReactUpdates.ReactReconcileTransaction && batchingStrategy) ? process.env.NODE_ENV !== 'production' ? invariant(false, 'ReactUpdates: must inject a reconcile transaction class and batching strategy') : _prodInvariant('123') : void 0;
	}

	var NESTED_UPDATES = {
	  initialize: function () {
	    this.dirtyComponentsLength = dirtyComponents.length;
	  },
	  close: function () {
	    if (this.dirtyComponentsLength !== dirtyComponents.length) {
	      // Additional updates were enqueued by componentDidUpdate handlers or
	      // similar; before our own UPDATE_QUEUEING wrapper closes, we want to run
	      // these new updates so that if A's componentDidUpdate calls setState on
	      // B, B will update before the callback A's updater provided when calling
	      // setState.
	      dirtyComponents.splice(0, this.dirtyComponentsLength);
	      flushBatchedUpdates();
	    } else {
	      dirtyComponents.length = 0;
	    }
	  }
	};

	var UPDATE_QUEUEING = {
	  initialize: function () {
	    this.callbackQueue.reset();
	  },
	  close: function () {
	    this.callbackQueue.notifyAll();
	  }
	};

	var TRANSACTION_WRAPPERS = [NESTED_UPDATES, UPDATE_QUEUEING];

	function ReactUpdatesFlushTransaction() {
	  this.reinitializeTransaction();
	  this.dirtyComponentsLength = null;
	  this.callbackQueue = CallbackQueue.getPooled();
	  this.reconcileTransaction = ReactUpdates.ReactReconcileTransaction.getPooled(
	  /* useCreateElement */true);
	}

	_assign(ReactUpdatesFlushTransaction.prototype, Transaction.Mixin, {
	  getTransactionWrappers: function () {
	    return TRANSACTION_WRAPPERS;
	  },

	  destructor: function () {
	    this.dirtyComponentsLength = null;
	    CallbackQueue.release(this.callbackQueue);
	    this.callbackQueue = null;
	    ReactUpdates.ReactReconcileTransaction.release(this.reconcileTransaction);
	    this.reconcileTransaction = null;
	  },

	  perform: function (method, scope, a) {
	    // Essentially calls `this.reconcileTransaction.perform(method, scope, a)`
	    // with this transaction's wrappers around it.
	    return Transaction.Mixin.perform.call(this, this.reconcileTransaction.perform, this.reconcileTransaction, method, scope, a);
	  }
	});

	PooledClass.addPoolingTo(ReactUpdatesFlushTransaction);

	function batchedUpdates(callback, a, b, c, d, e) {
	  ensureInjected();
	  batchingStrategy.batchedUpdates(callback, a, b, c, d, e);
	}

	/**
	 * Array comparator for ReactComponents by mount ordering.
	 *
	 * @param {ReactComponent} c1 first component you're comparing
	 * @param {ReactComponent} c2 second component you're comparing
	 * @return {number} Return value usable by Array.prototype.sort().
	 */
	function mountOrderComparator(c1, c2) {
	  return c1._mountOrder - c2._mountOrder;
	}

	function runBatchedUpdates(transaction) {
	  var len = transaction.dirtyComponentsLength;
	  !(len === dirtyComponents.length) ? process.env.NODE_ENV !== 'production' ? invariant(false, 'Expected flush transaction\'s stored dirty-components length (%s) to match dirty-components array length (%s).', len, dirtyComponents.length) : _prodInvariant('124', len, dirtyComponents.length) : void 0;

	  // Since reconciling a component higher in the owner hierarchy usually (not
	  // always -- see shouldComponentUpdate()) will reconcile children, reconcile
	  // them before their children by sorting the array.
	  dirtyComponents.sort(mountOrderComparator);

	  // Any updates enqueued while reconciling must be performed after this entire
	  // batch. Otherwise, if dirtyComponents is [A, B] where A has children B and
	  // C, B could update twice in a single batch if C's render enqueues an update
	  // to B (since B would have already updated, we should skip it, and the only
	  // way we can know to do so is by checking the batch counter).
	  updateBatchNumber++;

	  for (var i = 0; i < len; i++) {
	    // If a component is unmounted before pending changes apply, it will still
	    // be here, but we assume that it has cleared its _pendingCallbacks and
	    // that performUpdateIfNecessary is a noop.
	    var component = dirtyComponents[i];

	    // If performUpdateIfNecessary happens to enqueue any new updates, we
	    // shouldn't execute the callbacks until the next render happens, so
	    // stash the callbacks first
	    var callbacks = component._pendingCallbacks;
	    component._pendingCallbacks = null;

	    var markerName;
	    if (ReactFeatureFlags.logTopLevelRenders) {
	      var namedComponent = component;
	      // Duck type TopLevelWrapper. This is probably always true.
	      if (component._currentElement.props === component._renderedComponent._currentElement) {
	        namedComponent = component._renderedComponent;
	      }
	      markerName = 'React update: ' + namedComponent.getName();
	      console.time(markerName);
	    }

	    ReactReconciler.performUpdateIfNecessary(component, transaction.reconcileTransaction, updateBatchNumber);

	    if (markerName) {
	      console.timeEnd(markerName);
	    }

	    if (callbacks) {
	      for (var j = 0; j < callbacks.length; j++) {
	        transaction.callbackQueue.enqueue(callbacks[j], component.getPublicInstance());
	      }
	    }
	  }
	}

	var flushBatchedUpdates = function () {
	  // ReactUpdatesFlushTransaction's wrappers will clear the dirtyComponents
	  // array and perform any updates enqueued by mount-ready handlers (i.e.,
	  // componentDidUpdate) but we need to check here too in order to catch
	  // updates enqueued by setState callbacks and asap calls.
	  while (dirtyComponents.length || asapEnqueued) {
	    if (dirtyComponents.length) {
	      var transaction = ReactUpdatesFlushTransaction.getPooled();
	      transaction.perform(runBatchedUpdates, null, transaction);
	      ReactUpdatesFlushTransaction.release(transaction);
	    }

	    if (asapEnqueued) {
	      asapEnqueued = false;
	      var queue = asapCallbackQueue;
	      asapCallbackQueue = CallbackQueue.getPooled();
	      queue.notifyAll();
	      CallbackQueue.release(queue);
	    }
	  }
	};

	/**
	 * Mark a component as needing a rerender, adding an optional callback to a
	 * list of functions which will be executed once the rerender occurs.
	 */
	function enqueueUpdate(component) {
	  ensureInjected();

	  // Various parts of our code (such as ReactCompositeComponent's
	  // _renderValidatedComponent) assume that calls to render aren't nested;
	  // verify that that's the case. (This is called by each top-level update
	  // function, like setState, forceUpdate, etc.; creation and
	  // destruction of top-level components is guarded in ReactMount.)

	  if (!batchingStrategy.isBatchingUpdates) {
	    batchingStrategy.batchedUpdates(enqueueUpdate, component);
	    return;
	  }

	  dirtyComponents.push(component);
	  if (component._updateBatchNumber == null) {
	    component._updateBatchNumber = updateBatchNumber + 1;
	  }
	}

	/**
	 * Enqueue a callback to be run at the end of the current batching cycle. Throws
	 * if no updates are currently being performed.
	 */
	function asap(callback, context) {
	  !batchingStrategy.isBatchingUpdates ? process.env.NODE_ENV !== 'production' ? invariant(false, 'ReactUpdates.asap: Can\'t enqueue an asap callback in a context whereupdates are not being batched.') : _prodInvariant('125') : void 0;
	  asapCallbackQueue.enqueue(callback, context);
	  asapEnqueued = true;
	}

	var ReactUpdatesInjection = {
	  injectReconcileTransaction: function (ReconcileTransaction) {
	    !ReconcileTransaction ? process.env.NODE_ENV !== 'production' ? invariant(false, 'ReactUpdates: must provide a reconcile transaction class') : _prodInvariant('126') : void 0;
	    ReactUpdates.ReactReconcileTransaction = ReconcileTransaction;
	  },

	  injectBatchingStrategy: function (_batchingStrategy) {
	    !_batchingStrategy ? process.env.NODE_ENV !== 'production' ? invariant(false, 'ReactUpdates: must provide a batching strategy') : _prodInvariant('127') : void 0;
	    !(typeof _batchingStrategy.batchedUpdates === 'function') ? process.env.NODE_ENV !== 'production' ? invariant(false, 'ReactUpdates: must provide a batchedUpdates() function') : _prodInvariant('128') : void 0;
	    !(typeof _batchingStrategy.isBatchingUpdates === 'boolean') ? process.env.NODE_ENV !== 'production' ? invariant(false, 'ReactUpdates: must provide an isBatchingUpdates boolean attribute') : _prodInvariant('129') : void 0;
	    batchingStrategy = _batchingStrategy;
	  }
	};

	var ReactUpdates = {
	  /**
	   * React references `ReactReconcileTransaction` using this property in order
	   * to allow dependency injection.
	   *
	   * @internal
	   */
	  ReactReconcileTransaction: null,

	  batchedUpdates: batchedUpdates,
	  enqueueUpdate: enqueueUpdate,
	  flushBatchedUpdates: flushBatchedUpdates,
	  injection: ReactUpdatesInjection,
	  asap: asap
	};

	module.exports = ReactUpdates;
	/* WEBPACK VAR INJECTION */}.call(exports, __webpack_require__(4)))

/***/ },
/* 57 */
/***/ function(module, exports, __webpack_require__) {

	/* WEBPACK VAR INJECTION */(function(process) {/**
	 * Copyright 2013-present, Facebook, Inc.
	 * All rights reserved.
	 *
	 * This source code is licensed under the BSD-style license found in the
	 * LICENSE file in the root directory of this source tree. An additional grant
	 * of patent rights can be found in the PATENTS file in the same directory.
	 *
	 * @providesModule CallbackQueue
	 */

	'use strict';

	var _prodInvariant = __webpack_require__(8),
	    _assign = __webpack_require__(5);

	var PooledClass = __webpack_require__(7);

	var invariant = __webpack_require__(9);

	/**
	 * A specialized pseudo-event module to help keep track of components waiting to
	 * be notified when their DOM representations are available for use.
	 *
	 * This implements `PooledClass`, so you should never need to instantiate this.
	 * Instead, use `CallbackQueue.getPooled()`.
	 *
	 * @class ReactMountReady
	 * @implements PooledClass
	 * @internal
	 */
	function CallbackQueue() {
	  this._callbacks = null;
	  this._contexts = null;
	}

	_assign(CallbackQueue.prototype, {

	  /**
	   * Enqueues a callback to be invoked when `notifyAll` is invoked.
	   *
	   * @param {function} callback Invoked when `notifyAll` is invoked.
	   * @param {?object} context Context to call `callback` with.
	   * @internal
	   */
	  enqueue: function (callback, context) {
	    this._callbacks = this._callbacks || [];
	    this._contexts = this._contexts || [];
	    this._callbacks.push(callback);
	    this._contexts.push(context);
	  },

	  /**
	   * Invokes all enqueued callbacks and clears the queue. This is invoked after
	   * the DOM representation of a component has been created or updated.
	   *
	   * @internal
	   */
	  notifyAll: function () {
	    var callbacks = this._callbacks;
	    var contexts = this._contexts;
	    if (callbacks) {
	      !(callbacks.length === contexts.length) ? process.env.NODE_ENV !== 'production' ? invariant(false, 'Mismatched list of contexts in callback queue') : _prodInvariant('24') : void 0;
	      this._callbacks = null;
	      this._contexts = null;
	      for (var i = 0; i < callbacks.length; i++) {
	        callbacks[i].call(contexts[i]);
	      }
	      callbacks.length = 0;
	      contexts.length = 0;
	    }
	  },

	  checkpoint: function () {
	    return this._callbacks ? this._callbacks.length : 0;
	  },

	  rollback: function (len) {
	    if (this._callbacks) {
	      this._callbacks.length = len;
	      this._contexts.length = len;
	    }
	  },

	  /**
	   * Resets the internal queue.
	   *
	   * @internal
	   */
	  reset: function () {
	    this._callbacks = null;
	    this._contexts = null;
	  },

	  /**
	   * `PooledClass` looks for this.
	   */
	  destructor: function () {
	    this.reset();
	  }

	});

	PooledClass.addPoolingTo(CallbackQueue);

	module.exports = CallbackQueue;
	/* WEBPACK VAR INJECTION */}.call(exports, __webpack_require__(4)))

/***/ },
/* 58 */
/***/ function(module, exports) {

	/**
	 * Copyright 2013-present, Facebook, Inc.
	 * All rights reserved.
	 *
	 * This source code is licensed under the BSD-style license found in the
	 * LICENSE file in the root directory of this source tree. An additional grant
	 * of patent rights can be found in the PATENTS file in the same directory.
	 *
	 * @providesModule ReactFeatureFlags
	 * 
	 */

	'use strict';

	var ReactFeatureFlags = {
	  // When true, call console.time() before and .timeEnd() after each top-level
	  // render (both initial renders and updates). Useful when looking at prod-mode
	  // timeline profiles in Chrome, for example.
	  logTopLevelRenders: false
	};

	module.exports = ReactFeatureFlags;

/***/ },
/* 59 */
/***/ function(module, exports, __webpack_require__) {

	/* WEBPACK VAR INJECTION */(function(process) {/**
	 * Copyright 2013-present, Facebook, Inc.
	 * All rights reserved.
	 *
	 * This source code is licensed under the BSD-style license found in the
	 * LICENSE file in the root directory of this source tree. An additional grant
	 * of patent rights can be found in the PATENTS file in the same directory.
	 *
	 * @providesModule ReactReconciler
	 */

	'use strict';

	var _prodInvariant = __webpack_require__(8);

	var ReactRef = __webpack_require__(60);
	var ReactInstrumentation = __webpack_require__(62);

	var invariant = __webpack_require__(9);

	/**
	 * Helper to call ReactRef.attachRefs with this composite component, split out
	 * to avoid allocations in the transaction mount-ready queue.
	 */
	function attachRefs() {
	  ReactRef.attachRefs(this, this._currentElement);
	}

	var ReactReconciler = {

	  /**
	   * Initializes the component, renders markup, and registers event listeners.
	   *
	   * @param {ReactComponent} internalInstance
	   * @param {ReactReconcileTransaction|ReactServerRenderingTransaction} transaction
	   * @param {?object} the containing host component instance
	   * @param {?object} info about the host container
	   * @return {?string} Rendered markup to be inserted into the DOM.
	   * @final
	   * @internal
	   */
	  mountComponent: function (internalInstance, transaction, hostParent, hostContainerInfo, context) {
	    if (process.env.NODE_ENV !== 'production') {
	      if (internalInstance._debugID !== 0) {
	        ReactInstrumentation.debugTool.onBeforeMountComponent(internalInstance._debugID, internalInstance._currentElement);
	        ReactInstrumentation.debugTool.onBeginReconcilerTimer(internalInstance._debugID, 'mountComponent');
	      }
	    }
	    var markup = internalInstance.mountComponent(transaction, hostParent, hostContainerInfo, context);
	    if (internalInstance._currentElement && internalInstance._currentElement.ref != null) {
	      transaction.getReactMountReady().enqueue(attachRefs, internalInstance);
	    }
	    if (process.env.NODE_ENV !== 'production') {
	      if (internalInstance._debugID !== 0) {
	        ReactInstrumentation.debugTool.onEndReconcilerTimer(internalInstance._debugID, 'mountComponent');
	        ReactInstrumentation.debugTool.onMountComponent(internalInstance._debugID);
	      }
	    }
	    return markup;
	  },

	  /**
	   * Returns a value that can be passed to
	   * ReactComponentEnvironment.replaceNodeWithMarkup.
	   */
	  getHostNode: function (internalInstance) {
	    return internalInstance.getHostNode();
	  },

	  /**
	   * Releases any resources allocated by `mountComponent`.
	   *
	   * @final
	   * @internal
	   */
	  unmountComponent: function (internalInstance, safely) {
	    if (process.env.NODE_ENV !== 'production') {
	      if (internalInstance._debugID !== 0) {
	        ReactInstrumentation.debugTool.onBeginReconcilerTimer(internalInstance._debugID, 'unmountComponent');
	      }
	    }
	    ReactRef.detachRefs(internalInstance, internalInstance._currentElement);
	    internalInstance.unmountComponent(safely);
	    if (process.env.NODE_ENV !== 'production') {
	      if (internalInstance._debugID !== 0) {
	        ReactInstrumentation.debugTool.onEndReconcilerTimer(internalInstance._debugID, 'unmountComponent');
	        ReactInstrumentation.debugTool.onUnmountComponent(internalInstance._debugID);
	      }
	    }
	  },

	  /**
	   * Update a component using a new element.
	   *
	   * @param {ReactComponent} internalInstance
	   * @param {ReactElement} nextElement
	   * @param {ReactReconcileTransaction} transaction
	   * @param {object} context
	   * @internal
	   */
	  receiveComponent: function (internalInstance, nextElement, transaction, context) {
	    var prevElement = internalInstance._currentElement;

	    if (nextElement === prevElement && context === internalInstance._context) {
	      // Since elements are immutable after the owner is rendered,
	      // we can do a cheap identity compare here to determine if this is a
	      // superfluous reconcile. It's possible for state to be mutable but such
	      // change should trigger an update of the owner which would recreate
	      // the element. We explicitly check for the existence of an owner since
	      // it's possible for an element created outside a composite to be
	      // deeply mutated and reused.

	      // TODO: Bailing out early is just a perf optimization right?
	      // TODO: Removing the return statement should affect correctness?
	      return;
	    }

	    if (process.env.NODE_ENV !== 'production') {
	      if (internalInstance._debugID !== 0) {
	        ReactInstrumentation.debugTool.onBeforeUpdateComponent(internalInstance._debugID, nextElement);
	        ReactInstrumentation.debugTool.onBeginReconcilerTimer(internalInstance._debugID, 'receiveComponent');
	      }
	    }

	    var refsChanged = ReactRef.shouldUpdateRefs(prevElement, nextElement);

	    if (refsChanged) {
	      ReactRef.detachRefs(internalInstance, prevElement);
	    }

	    internalInstance.receiveComponent(nextElement, transaction, context);

	    if (refsChanged && internalInstance._currentElement && internalInstance._currentElement.ref != null) {
	      transaction.getReactMountReady().enqueue(attachRefs, internalInstance);
	    }

	    if (process.env.NODE_ENV !== 'production') {
	      if (internalInstance._debugID !== 0) {
	        ReactInstrumentation.debugTool.onEndReconcilerTimer(internalInstance._debugID, 'receiveComponent');
	        ReactInstrumentation.debugTool.onUpdateComponent(internalInstance._debugID);
	      }
	    }
	  },

	  /**
	   * Flush any dirty changes in a component.
	   *
	   * @param {ReactComponent} internalInstance
	   * @param {ReactReconcileTransaction} transaction
	   * @internal
	   */
	  performUpdateIfNecessary: function (internalInstance, transaction, updateBatchNumber) {
	    if (internalInstance._updateBatchNumber !== updateBatchNumber) {
	      // The component's enqueued batch number should always be the current
	      // batch or the following one.
	      !(internalInstance._updateBatchNumber == null || internalInstance._updateBatchNumber === updateBatchNumber + 1) ? process.env.NODE_ENV !== 'production' ? invariant(false, 'performUpdateIfNecessary: Unexpected batch number (current %s, pending %s)', updateBatchNumber, internalInstance._updateBatchNumber) : _prodInvariant('121', updateBatchNumber, internalInstance._updateBatchNumber) : void 0;
	      return;
	    }
	    if (process.env.NODE_ENV !== 'production') {
	      if (internalInstance._debugID !== 0) {
	        ReactInstrumentation.debugTool.onBeginReconcilerTimer(internalInstance._debugID, 'performUpdateIfNecessary');
	        ReactInstrumentation.debugTool.onBeforeUpdateComponent(internalInstance._debugID, internalInstance._currentElement);
	      }
	    }
	    internalInstance.performUpdateIfNecessary(transaction);
	    if (process.env.NODE_ENV !== 'production') {
	      if (internalInstance._debugID !== 0) {
	        ReactInstrumentation.debugTool.onEndReconcilerTimer(internalInstance._debugID, 'performUpdateIfNecessary');
	        ReactInstrumentation.debugTool.onUpdateComponent(internalInstance._debugID);
	      }
	    }
	  }

	};

	module.exports = ReactReconciler;
	/* WEBPACK VAR INJECTION */}.call(exports, __webpack_require__(4)))

/***/ },
/* 60 */
/***/ function(module, exports, __webpack_require__) {

	/**
	 * Copyright 2013-present, Facebook, Inc.
	 * All rights reserved.
	 *
	 * This source code is licensed under the BSD-style license found in the
	 * LICENSE file in the root directory of this source tree. An additional grant
	 * of patent rights can be found in the PATENTS file in the same directory.
	 *
	 * @providesModule ReactRef
	 */

	'use strict';

	var ReactOwner = __webpack_require__(61);

	var ReactRef = {};

	function attachRef(ref, component, owner) {
	  if (typeof ref === 'function') {
	    ref(component.getPublicInstance());
	  } else {
	    // Legacy ref
	    ReactOwner.addComponentAsRefTo(component, ref, owner);
	  }
	}

	function detachRef(ref, component, owner) {
	  if (typeof ref === 'function') {
	    ref(null);
	  } else {
	    // Legacy ref
	    ReactOwner.removeComponentAsRefFrom(component, ref, owner);
	  }
	}

	ReactRef.attachRefs = function (instance, element) {
	  if (element === null || element === false) {
	    return;
	  }
	  var ref = element.ref;
	  if (ref != null) {
	    attachRef(ref, instance, element._owner);
	  }
	};

	ReactRef.shouldUpdateRefs = function (prevElement, nextElement) {
	  // If either the owner or a `ref` has changed, make sure the newest owner
	  // has stored a reference to `this`, and the previous owner (if different)
	  // has forgotten the reference to `this`. We use the element instead
	  // of the public this.props because the post processing cannot determine
	  // a ref. The ref conceptually lives on the element.

	  // TODO: Should this even be possible? The owner cannot change because
	  // it's forbidden by shouldUpdateReactComponent. The ref can change
	  // if you swap the keys of but not the refs. Reconsider where this check
	  // is made. It probably belongs where the key checking and
	  // instantiateReactComponent is done.

	  var prevEmpty = prevElement === null || prevElement === false;
	  var nextEmpty = nextElement === null || nextElement === false;

	  return(
	    // This has a few false positives w/r/t empty components.
	    prevEmpty || nextEmpty || nextElement._owner !== prevElement._owner || nextElement.ref !== prevElement.ref
	  );
	};

	ReactRef.detachRefs = function (instance, element) {
	  if (element === null || element === false) {
	    return;
	  }
	  var ref = element.ref;
	  if (ref != null) {
	    detachRef(ref, instance, element._owner);
	  }
	};

	module.exports = ReactRef;

/***/ },
/* 61 */
/***/ function(module, exports, __webpack_require__) {

	/* WEBPACK VAR INJECTION */(function(process) {/**
	 * Copyright 2013-present, Facebook, Inc.
	 * All rights reserved.
	 *
	 * This source code is licensed under the BSD-style license found in the
	 * LICENSE file in the root directory of this source tree. An additional grant
	 * of patent rights can be found in the PATENTS file in the same directory.
	 *
	 * @providesModule ReactOwner
	 */

	'use strict';

	var _prodInvariant = __webpack_require__(8);

	var invariant = __webpack_require__(9);

	/**
	 * ReactOwners are capable of storing references to owned components.
	 *
	 * All components are capable of //being// referenced by owner components, but
	 * only ReactOwner components are capable of //referencing// owned components.
	 * The named reference is known as a "ref".
	 *
	 * Refs are available when mounted and updated during reconciliation.
	 *
	 *   var MyComponent = React.createClass({
	 *     render: function() {
	 *       return (
	 *         <div onClick={this.handleClick}>
	 *           <CustomComponent ref="custom" />
	 *         </div>
	 *       );
	 *     },
	 *     handleClick: function() {
	 *       this.refs.custom.handleClick();
	 *     },
	 *     componentDidMount: function() {
	 *       this.refs.custom.initialize();
	 *     }
	 *   });
	 *
	 * Refs should rarely be used. When refs are used, they should only be done to
	 * control data that is not handled by React's data flow.
	 *
	 * @class ReactOwner
	 */
	var ReactOwner = {

	  /**
	   * @param {?object} object
	   * @return {boolean} True if `object` is a valid owner.
	   * @final
	   */
	  isValidOwner: function (object) {
	    return !!(object && typeof object.attachRef === 'function' && typeof object.detachRef === 'function');
	  },

	  /**
	   * Adds a component by ref to an owner component.
	   *
	   * @param {ReactComponent} component Component to reference.
	   * @param {string} ref Name by which to refer to the component.
	   * @param {ReactOwner} owner Component on which to record the ref.
	   * @final
	   * @internal
	   */
	  addComponentAsRefTo: function (component, ref, owner) {
	    !ReactOwner.isValidOwner(owner) ? process.env.NODE_ENV !== 'production' ? invariant(false, 'addComponentAsRefTo(...): Only a ReactOwner can have refs. You might be adding a ref to a component that was not created inside a component\'s `render` method, or you have multiple copies of React loaded (details: https://fb.me/react-refs-must-have-owner).') : _prodInvariant('119') : void 0;
	    owner.attachRef(ref, component);
	  },

	  /**
	   * Removes a component by ref from an owner component.
	   *
	   * @param {ReactComponent} component Component to dereference.
	   * @param {string} ref Name of the ref to remove.
	   * @param {ReactOwner} owner Component on which the ref is recorded.
	   * @final
	   * @internal
	   */
	  removeComponentAsRefFrom: function (component, ref, owner) {
	    !ReactOwner.isValidOwner(owner) ? process.env.NODE_ENV !== 'production' ? invariant(false, 'removeComponentAsRefFrom(...): Only a ReactOwner can have refs. You might be removing a ref to a component that was not created inside a component\'s `render` method, or you have multiple copies of React loaded (details: https://fb.me/react-refs-must-have-owner).') : _prodInvariant('120') : void 0;
	    var ownerPublicInstance = owner.getPublicInstance();
	    // Check that `component`'s owner is still alive and that `component` is still the current ref
	    // because we do not want to detach the ref if another component stole it.
	    if (ownerPublicInstance && ownerPublicInstance.refs[ref] === component.getPublicInstance()) {
	      owner.detachRef(ref);
	    }
	  }

	};

	module.exports = ReactOwner;
	/* WEBPACK VAR INJECTION */}.call(exports, __webpack_require__(4)))

/***/ },
/* 62 */
/***/ function(module, exports, __webpack_require__) {

	/* WEBPACK VAR INJECTION */(function(process) {/**
	 * Copyright 2016-present, Facebook, Inc.
	 * All rights reserved.
	 *
	 * This source code is licensed under the BSD-style license found in the
	 * LICENSE file in the root directory of this source tree. An additional grant
	 * of patent rights can be found in the PATENTS file in the same directory.
	 *
	 * @providesModule ReactInstrumentation
	 */

	'use strict';

	var debugTool = null;

	if (process.env.NODE_ENV !== 'production') {
	  var ReactDebugTool = __webpack_require__(63);
	  debugTool = ReactDebugTool;
	}

	module.exports = { debugTool: debugTool };
	/* WEBPACK VAR INJECTION */}.call(exports, __webpack_require__(4)))

/***/ },
/* 63 */
/***/ function(module, exports, __webpack_require__) {

	/* WEBPACK VAR INJECTION */(function(process) {/**
	 * Copyright 2016-present, Facebook, Inc.
	 * All rights reserved.
	 *
	 * This source code is licensed under the BSD-style license found in the
	 * LICENSE file in the root directory of this source tree. An additional grant
	 * of patent rights can be found in the PATENTS file in the same directory.
	 *
	 * @providesModule ReactDebugTool
	 */

	'use strict';

	var ReactInvalidSetStateWarningDevTool = __webpack_require__(64);
	var ReactHostOperationHistoryDevtool = __webpack_require__(65);
	var ReactComponentTreeDevtool = __webpack_require__(29);
	var ExecutionEnvironment = __webpack_require__(49);

	var performanceNow = __webpack_require__(66);
	var warning = __webpack_require__(12);

	var eventHandlers = [];
	var handlerDoesThrowForEvent = {};

	function emitEvent(handlerFunctionName, arg1, arg2, arg3, arg4, arg5) {
	  eventHandlers.forEach(function (handler) {
	    try {
	      if (handler[handlerFunctionName]) {
	        handler[handlerFunctionName](arg1, arg2, arg3, arg4, arg5);
	      }
	    } catch (e) {
	      process.env.NODE_ENV !== 'production' ? warning(handlerDoesThrowForEvent[handlerFunctionName], 'exception thrown by devtool while handling %s: %s', handlerFunctionName, e + '\n' + e.stack) : void 0;
	      handlerDoesThrowForEvent[handlerFunctionName] = true;
	    }
	  });
	}

	var isProfiling = false;
	var flushHistory = [];
	var lifeCycleTimerStack = [];
	var currentFlushNesting = 0;
	var currentFlushMeasurements = null;
	var currentFlushStartTime = null;
	var currentTimerDebugID = null;
	var currentTimerStartTime = null;
	var currentTimerNestedFlushDuration = null;
	var currentTimerType = null;

	function clearHistory() {
	  ReactComponentTreeDevtool.purgeUnmountedComponents();
	  ReactHostOperationHistoryDevtool.clearHistory();
	}

	function getTreeSnapshot(registeredIDs) {
	  return registeredIDs.reduce(function (tree, id) {
	    var ownerID = ReactComponentTreeDevtool.getOwnerID(id);
	    var parentID = ReactComponentTreeDevtool.getParentID(id);
	    tree[id] = {
	      displayName: ReactComponentTreeDevtool.getDisplayName(id),
	      text: ReactComponentTreeDevtool.getText(id),
	      updateCount: ReactComponentTreeDevtool.getUpdateCount(id),
	      childIDs: ReactComponentTreeDevtool.getChildIDs(id),
	      // Text nodes don't have owners but this is close enough.
	      ownerID: ownerID || ReactComponentTreeDevtool.getOwnerID(parentID),
	      parentID: parentID
	    };
	    return tree;
	  }, {});
	}

	function resetMeasurements() {
	  var previousStartTime = currentFlushStartTime;
	  var previousMeasurements = currentFlushMeasurements || [];
	  var previousOperations = ReactHostOperationHistoryDevtool.getHistory();

	  if (currentFlushNesting === 0) {
	    currentFlushStartTime = null;
	    currentFlushMeasurements = null;
	    clearHistory();
	    return;
	  }

	  if (previousMeasurements.length || previousOperations.length) {
	    var registeredIDs = ReactComponentTreeDevtool.getRegisteredIDs();
	    flushHistory.push({
	      duration: performanceNow() - previousStartTime,
	      measurements: previousMeasurements || [],
	      operations: previousOperations || [],
	      treeSnapshot: getTreeSnapshot(registeredIDs)
	    });
	  }

	  clearHistory();
	  currentFlushStartTime = performanceNow();
	  currentFlushMeasurements = [];
	}

	function checkDebugID(debugID) {
	  process.env.NODE_ENV !== 'production' ? warning(debugID, 'ReactDebugTool: debugID may not be empty.') : void 0;
	}

	function beginLifeCycleTimer(debugID, timerType) {
	  if (currentFlushNesting === 0) {
	    return;
	  }
	  process.env.NODE_ENV !== 'production' ? warning(!currentTimerType, 'There is an internal error in the React performance measurement code. ' + 'Did not expect %s timer to start while %s timer is still in ' + 'progress for %s instance.', timerType, currentTimerType || 'no', debugID === currentTimerDebugID ? 'the same' : 'another') : void 0;
	  currentTimerStartTime = performanceNow();
	  currentTimerNestedFlushDuration = 0;
	  currentTimerDebugID = debugID;
	  currentTimerType = timerType;
	}

	function endLifeCycleTimer(debugID, timerType) {
	  if (currentFlushNesting === 0) {
	    return;
	  }
	  process.env.NODE_ENV !== 'production' ? warning(currentTimerType === timerType, 'There is an internal error in the React performance measurement code. ' + 'We did not expect %s timer to stop while %s timer is still in ' + 'progress for %s instance. Please report this as a bug in React.', timerType, currentTimerType || 'no', debugID === currentTimerDebugID ? 'the same' : 'another') : void 0;
	  if (isProfiling) {
	    currentFlushMeasurements.push({
	      timerType: timerType,
	      instanceID: debugID,
	      duration: performanceNow() - currentTimerStartTime - currentTimerNestedFlushDuration
	    });
	  }
	  currentTimerStartTime = null;
	  currentTimerNestedFlushDuration = null;
	  currentTimerDebugID = null;
	  currentTimerType = null;
	}

	function pauseCurrentLifeCycleTimer() {
	  var currentTimer = {
	    startTime: currentTimerStartTime,
	    nestedFlushStartTime: performanceNow(),
	    debugID: currentTimerDebugID,
	    timerType: currentTimerType
	  };
	  lifeCycleTimerStack.push(currentTimer);
	  currentTimerStartTime = null;
	  currentTimerNestedFlushDuration = null;
	  currentTimerDebugID = null;
	  currentTimerType = null;
	}

	function resumeCurrentLifeCycleTimer() {
	  var _lifeCycleTimerStack$ = lifeCycleTimerStack.pop();

	  var startTime = _lifeCycleTimerStack$.startTime;
	  var nestedFlushStartTime = _lifeCycleTimerStack$.nestedFlushStartTime;
	  var debugID = _lifeCycleTimerStack$.debugID;
	  var timerType = _lifeCycleTimerStack$.timerType;

	  var nestedFlushDuration = performanceNow() - nestedFlushStartTime;
	  currentTimerStartTime = startTime;
	  currentTimerNestedFlushDuration += nestedFlushDuration;
	  currentTimerDebugID = debugID;
	  currentTimerType = timerType;
	}

	var ReactDebugTool = {
	  addDevtool: function (devtool) {
	    eventHandlers.push(devtool);
	  },
	  removeDevtool: function (devtool) {
	    for (var i = 0; i < eventHandlers.length; i++) {
	      if (eventHandlers[i] === devtool) {
	        eventHandlers.splice(i, 1);
	        i--;
	      }
	    }
	  },
	  isProfiling: function () {
	    return isProfiling;
	  },
	  beginProfiling: function () {
	    if (isProfiling) {
	      return;
	    }

	    isProfiling = true;
	    flushHistory.length = 0;
	    resetMeasurements();
	    ReactDebugTool.addDevtool(ReactHostOperationHistoryDevtool);
	  },
	  endProfiling: function () {
	    if (!isProfiling) {
	      return;
	    }

	    isProfiling = false;
	    resetMeasurements();
	    ReactDebugTool.removeDevtool(ReactHostOperationHistoryDevtool);
	  },
	  getFlushHistory: function () {
	    return flushHistory;
	  },
	  onBeginFlush: function () {
	    currentFlushNesting++;
	    resetMeasurements();
	    pauseCurrentLifeCycleTimer();
	    emitEvent('onBeginFlush');
	  },
	  onEndFlush: function () {
	    resetMeasurements();
	    currentFlushNesting--;
	    resumeCurrentLifeCycleTimer();
	    emitEvent('onEndFlush');
	  },
	  onBeginLifeCycleTimer: function (debugID, timerType) {
	    checkDebugID(debugID);
	    emitEvent('onBeginLifeCycleTimer', debugID, timerType);
	    beginLifeCycleTimer(debugID, timerType);
	  },
	  onEndLifeCycleTimer: function (debugID, timerType) {
	    checkDebugID(debugID);
	    endLifeCycleTimer(debugID, timerType);
	    emitEvent('onEndLifeCycleTimer', debugID, timerType);
	  },
	  onBeginReconcilerTimer: function (debugID, timerType) {
	    checkDebugID(debugID);
	    emitEvent('onBeginReconcilerTimer', debugID, timerType);
	  },
	  onEndReconcilerTimer: function (debugID, timerType) {
	    checkDebugID(debugID);
	    emitEvent('onEndReconcilerTimer', debugID, timerType);
	  },
	  onError: function (debugID) {
	    if (currentTimerDebugID != null) {
	      endLifeCycleTimer(currentTimerDebugID, currentTimerType);
	    }
	    emitEvent('onError', debugID);
	  },
	  onBeginProcessingChildContext: function () {
	    emitEvent('onBeginProcessingChildContext');
	  },
	  onEndProcessingChildContext: function () {
	    emitEvent('onEndProcessingChildContext');
	  },
	  onHostOperation: function (debugID, type, payload) {
	    checkDebugID(debugID);
	    emitEvent('onHostOperation', debugID, type, payload);
	  },
	  onSetState: function () {
	    emitEvent('onSetState');
	  },
	  onSetDisplayName: function (debugID, displayName) {
	    checkDebugID(debugID);
	    emitEvent('onSetDisplayName', debugID, displayName);
	  },
	  onSetChildren: function (debugID, childDebugIDs) {
	    checkDebugID(debugID);
	    childDebugIDs.forEach(checkDebugID);
	    emitEvent('onSetChildren', debugID, childDebugIDs);
	  },
	  onSetOwner: function (debugID, ownerDebugID) {
	    checkDebugID(debugID);
	    emitEvent('onSetOwner', debugID, ownerDebugID);
	  },
	  onSetParent: function (debugID, parentDebugID) {
	    checkDebugID(debugID);
	    emitEvent('onSetParent', debugID, parentDebugID);
	  },
	  onSetText: function (debugID, text) {
	    checkDebugID(debugID);
	    emitEvent('onSetText', debugID, text);
	  },
	  onMountRootComponent: function (debugID) {
	    checkDebugID(debugID);
	    emitEvent('onMountRootComponent', debugID);
	  },
	  onBeforeMountComponent: function (debugID, element) {
	    checkDebugID(debugID);
	    emitEvent('onBeforeMountComponent', debugID, element);
	  },
	  onMountComponent: function (debugID) {
	    checkDebugID(debugID);
	    emitEvent('onMountComponent', debugID);
	  },
	  onBeforeUpdateComponent: function (debugID, element) {
	    checkDebugID(debugID);
	    emitEvent('onBeforeUpdateComponent', debugID, element);
	  },
	  onUpdateComponent: function (debugID) {
	    checkDebugID(debugID);
	    emitEvent('onUpdateComponent', debugID);
	  },
	  onUnmountComponent: function (debugID) {
	    checkDebugID(debugID);
	    emitEvent('onUnmountComponent', debugID);
	  },
	  onTestEvent: function () {
	    emitEvent('onTestEvent');
	  }
	};

	ReactDebugTool.addDevtool(ReactInvalidSetStateWarningDevTool);
	ReactDebugTool.addDevtool(ReactComponentTreeDevtool);
	var url = ExecutionEnvironment.canUseDOM && window.location.href || '';
	if (/[?&]react_perf\b/.test(url)) {
	  ReactDebugTool.beginProfiling();
	}

	module.exports = ReactDebugTool;
	/* WEBPACK VAR INJECTION */}.call(exports, __webpack_require__(4)))

/***/ },
/* 64 */
/***/ function(module, exports, __webpack_require__) {

	/* WEBPACK VAR INJECTION */(function(process) {/**
	 * Copyright 2016-present, Facebook, Inc.
	 * All rights reserved.
	 *
	 * This source code is licensed under the BSD-style license found in the
	 * LICENSE file in the root directory of this source tree. An additional grant
	 * of patent rights can be found in the PATENTS file in the same directory.
	 *
	 * @providesModule ReactInvalidSetStateWarningDevTool
	 */

	'use strict';

	var warning = __webpack_require__(12);

	if (process.env.NODE_ENV !== 'production') {
	  var processingChildContext = false;

	  var warnInvalidSetState = function () {
	    process.env.NODE_ENV !== 'production' ? warning(!processingChildContext, 'setState(...): Cannot call setState() inside getChildContext()') : void 0;
	  };
	}

	var ReactInvalidSetStateWarningDevTool = {
	  onBeginProcessingChildContext: function () {
	    processingChildContext = true;
	  },
	  onEndProcessingChildContext: function () {
	    processingChildContext = false;
	  },
	  onSetState: function () {
	    warnInvalidSetState();
	  }
	};

	module.exports = ReactInvalidSetStateWarningDevTool;
	/* WEBPACK VAR INJECTION */}.call(exports, __webpack_require__(4)))

/***/ },
/* 65 */
/***/ function(module, exports) {

	/**
	 * Copyright 2016-present, Facebook, Inc.
	 * All rights reserved.
	 *
	 * This source code is licensed under the BSD-style license found in the
	 * LICENSE file in the root directory of this source tree. An additional grant
	 * of patent rights can be found in the PATENTS file in the same directory.
	 *
	 * @providesModule ReactHostOperationHistoryDevtool
	 */

	'use strict';

	var history = [];

	var ReactHostOperationHistoryDevtool = {
	  onHostOperation: function (debugID, type, payload) {
	    history.push({
	      instanceID: debugID,
	      type: type,
	      payload: payload
	    });
	  },
	  clearHistory: function () {
	    if (ReactHostOperationHistoryDevtool._preventClearing) {
	      // Should only be used for tests.
	      return;
	    }

	    history = [];
	  },
	  getHistory: function () {
	    return history;
	  }
	};

	module.exports = ReactHostOperationHistoryDevtool;

/***/ },
/* 66 */
/***/ function(module, exports, __webpack_require__) {

	'use strict';

	/**
	 * Copyright (c) 2013-present, Facebook, Inc.
	 * All rights reserved.
	 *
	 * This source code is licensed under the BSD-style license found in the
	 * LICENSE file in the root directory of this source tree. An additional grant
	 * of patent rights can be found in the PATENTS file in the same directory.
	 *
	 * @typechecks
	 */

	var performance = __webpack_require__(67);

	var performanceNow;

	/**
	 * Detect if we can use `window.performance.now()` and gracefully fallback to
	 * `Date.now()` if it doesn't exist. We need to support Firefox < 15 for now
	 * because of Facebook's testing infrastructure.
	 */
	if (performance.now) {
	  performanceNow = function performanceNow() {
	    return performance.now();
	  };
	} else {
	  performanceNow = function performanceNow() {
	    return Date.now();
	  };
	}

	module.exports = performanceNow;

/***/ },
/* 67 */
/***/ function(module, exports, __webpack_require__) {

	/**
	 * Copyright (c) 2013-present, Facebook, Inc.
	 * All rights reserved.
	 *
	 * This source code is licensed under the BSD-style license found in the
	 * LICENSE file in the root directory of this source tree. An additional grant
	 * of patent rights can be found in the PATENTS file in the same directory.
	 *
	 * @typechecks
	 */

	'use strict';

	var ExecutionEnvironment = __webpack_require__(49);

	var performance;

	if (ExecutionEnvironment.canUseDOM) {
	  performance = window.performance || window.msPerformance || window.webkitPerformance;
	}

	module.exports = performance || {};

/***/ },
/* 68 */
/***/ function(module, exports, __webpack_require__) {

	/* WEBPACK VAR INJECTION */(function(process) {/**
	 * Copyright 2013-present, Facebook, Inc.
	 * All rights reserved.
	 *
	 * This source code is licensed under the BSD-style license found in the
	 * LICENSE file in the root directory of this source tree. An additional grant
	 * of patent rights can be found in the PATENTS file in the same directory.
	 *
	 * @providesModule Transaction
	 */

	'use strict';

	var _prodInvariant = __webpack_require__(8);

	var invariant = __webpack_require__(9);

	/**
	 * `Transaction` creates a black box that is able to wrap any method such that
	 * certain invariants are maintained before and after the method is invoked
	 * (Even if an exception is thrown while invoking the wrapped method). Whoever
	 * instantiates a transaction can provide enforcers of the invariants at
	 * creation time. The `Transaction` class itself will supply one additional
	 * automatic invariant for you - the invariant that any transaction instance
	 * should not be run while it is already being run. You would typically create a
	 * single instance of a `Transaction` for reuse multiple times, that potentially
	 * is used to wrap several different methods. Wrappers are extremely simple -
	 * they only require implementing two methods.
	 *
	 * <pre>
	 *                       wrappers (injected at creation time)
	 *                                      +        +
	 *                                      |        |
	 *                    +-----------------|--------|--------------+
	 *                    |                 v        |              |
	 *                    |      +---------------+   |              |
	 *                    |   +--|    wrapper1   |---|----+         |
	 *                    |   |  +---------------+   v    |         |
	 *                    |   |          +-------------+  |         |
	 *                    |   |     +----|   wrapper2  |--------+   |
	 *                    |   |     |    +-------------+  |     |   |
	 *                    |   |     |                     |     |   |
	 *                    |   v     v                     v     v   | wrapper
	 *                    | +---+ +---+   +---------+   +---+ +---+ | invariants
	 * perform(anyMethod) | |   | |   |   |         |   |   | |   | | maintained
	 * +----------------->|-|---|-|---|-->|anyMethod|---|---|-|---|-|-------->
	 *                    | |   | |   |   |         |   |   | |   | |
	 *                    | |   | |   |   |         |   |   | |   | |
	 *                    | |   | |   |   |         |   |   | |   | |
	 *                    | +---+ +---+   +---------+   +---+ +---+ |
	 *                    |  initialize                    close    |
	 *                    +-----------------------------------------+
	 * </pre>
	 *
	 * Use cases:
	 * - Preserving the input selection ranges before/after reconciliation.
	 *   Restoring selection even in the event of an unexpected error.
	 * - Deactivating events while rearranging the DOM, preventing blurs/focuses,
	 *   while guaranteeing that afterwards, the event system is reactivated.
	 * - Flushing a queue of collected DOM mutations to the main UI thread after a
	 *   reconciliation takes place in a worker thread.
	 * - Invoking any collected `componentDidUpdate` callbacks after rendering new
	 *   content.
	 * - (Future use case): Wrapping particular flushes of the `ReactWorker` queue
	 *   to preserve the `scrollTop` (an automatic scroll aware DOM).
	 * - (Future use case): Layout calculations before and after DOM updates.
	 *
	 * Transactional plugin API:
	 * - A module that has an `initialize` method that returns any precomputation.
	 * - and a `close` method that accepts the precomputation. `close` is invoked
	 *   when the wrapped process is completed, or has failed.
	 *
	 * @param {Array<TransactionalWrapper>} transactionWrapper Wrapper modules
	 * that implement `initialize` and `close`.
	 * @return {Transaction} Single transaction for reuse in thread.
	 *
	 * @class Transaction
	 */
	var Mixin = {
	  /**
	   * Sets up this instance so that it is prepared for collecting metrics. Does
	   * so such that this setup method may be used on an instance that is already
	   * initialized, in a way that does not consume additional memory upon reuse.
	   * That can be useful if you decide to make your subclass of this mixin a
	   * "PooledClass".
	   */
	  reinitializeTransaction: function () {
	    this.transactionWrappers = this.getTransactionWrappers();
	    if (this.wrapperInitData) {
	      this.wrapperInitData.length = 0;
	    } else {
	      this.wrapperInitData = [];
	    }
	    this._isInTransaction = false;
	  },

	  _isInTransaction: false,

	  /**
	   * @abstract
	   * @return {Array<TransactionWrapper>} Array of transaction wrappers.
	   */
	  getTransactionWrappers: null,

	  isInTransaction: function () {
	    return !!this._isInTransaction;
	  },

	  /**
	   * Executes the function within a safety window. Use this for the top level
	   * methods that result in large amounts of computation/mutations that would
	   * need to be safety checked. The optional arguments helps prevent the need
	   * to bind in many cases.
	   *
	   * @param {function} method Member of scope to call.
	   * @param {Object} scope Scope to invoke from.
	   * @param {Object?=} a Argument to pass to the method.
	   * @param {Object?=} b Argument to pass to the method.
	   * @param {Object?=} c Argument to pass to the method.
	   * @param {Object?=} d Argument to pass to the method.
	   * @param {Object?=} e Argument to pass to the method.
	   * @param {Object?=} f Argument to pass to the method.
	   *
	   * @return {*} Return value from `method`.
	   */
	  perform: function (method, scope, a, b, c, d, e, f) {
	    !!this.isInTransaction() ? process.env.NODE_ENV !== 'production' ? invariant(false, 'Transaction.perform(...): Cannot initialize a transaction when there is already an outstanding transaction.') : _prodInvariant('27') : void 0;
	    var errorThrown;
	    var ret;
	    try {
	      this._isInTransaction = true;
	      // Catching errors makes debugging more difficult, so we start with
	      // errorThrown set to true before setting it to false after calling
	      // close -- if it's still set to true in the finally block, it means
	      // one of these calls threw.
	      errorThrown = true;
	      this.initializeAll(0);
	      ret = method.call(scope, a, b, c, d, e, f);
	      errorThrown = false;
	    } finally {
	      try {
	        if (errorThrown) {
	          // If `method` throws, prefer to show that stack trace over any thrown
	          // by invoking `closeAll`.
	          try {
	            this.closeAll(0);
	          } catch (err) {}
	        } else {
	          // Since `method` didn't throw, we don't want to silence the exception
	          // here.
	          this.closeAll(0);
	        }
	      } finally {
	        this._isInTransaction = false;
	      }
	    }
	    return ret;
	  },

	  initializeAll: function (startIndex) {
	    var transactionWrappers = this.transactionWrappers;
	    for (var i = startIndex; i < transactionWrappers.length; i++) {
	      var wrapper = transactionWrappers[i];
	      try {
	        // Catching errors makes debugging more difficult, so we start with the
	        // OBSERVED_ERROR state before overwriting it with the real return value
	        // of initialize -- if it's still set to OBSERVED_ERROR in the finally
	        // block, it means wrapper.initialize threw.
	        this.wrapperInitData[i] = Transaction.OBSERVED_ERROR;
	        this.wrapperInitData[i] = wrapper.initialize ? wrapper.initialize.call(this) : null;
	      } finally {
	        if (this.wrapperInitData[i] === Transaction.OBSERVED_ERROR) {
	          // The initializer for wrapper i threw an error; initialize the
	          // remaining wrappers but silence any exceptions from them to ensure
	          // that the first error is the one to bubble up.
	          try {
	            this.initializeAll(i + 1);
	          } catch (err) {}
	        }
	      }
	    }
	  },

	  /**
	   * Invokes each of `this.transactionWrappers.close[i]` functions, passing into
	   * them the respective return values of `this.transactionWrappers.init[i]`
	   * (`close`rs that correspond to initializers that failed will not be
	   * invoked).
	   */
	  closeAll: function (startIndex) {
	    !this.isInTransaction() ? process.env.NODE_ENV !== 'production' ? invariant(false, 'Transaction.closeAll(): Cannot close transaction when none are open.') : _prodInvariant('28') : void 0;
	    var transactionWrappers = this.transactionWrappers;
	    for (var i = startIndex; i < transactionWrappers.length; i++) {
	      var wrapper = transactionWrappers[i];
	      var initData = this.wrapperInitData[i];
	      var errorThrown;
	      try {
	        // Catching errors makes debugging more difficult, so we start with
	        // errorThrown set to true before setting it to false after calling
	        // close -- if it's still set to true in the finally block, it means
	        // wrapper.close threw.
	        errorThrown = true;
	        if (initData !== Transaction.OBSERVED_ERROR && wrapper.close) {
	          wrapper.close.call(this, initData);
	        }
	        errorThrown = false;
	      } finally {
	        if (errorThrown) {
	          // The closer for wrapper i threw an error; close the remaining
	          // wrappers but silence any exceptions from them to ensure that the
	          // first error is the one to bubble up.
	          try {
	            this.closeAll(i + 1);
	          } catch (e) {}
	        }
	      }
	    }
	    this.wrapperInitData.length = 0;
	  }
	};

	var Transaction = {

	  Mixin: Mixin,

	  /**
	   * Token to look for to determine if an error occurred.
	   */
	  OBSERVED_ERROR: {}

	};

	module.exports = Transaction;
	/* WEBPACK VAR INJECTION */}.call(exports, __webpack_require__(4)))

/***/ },
/* 69 */
/***/ function(module, exports) {

	/**
	 * Copyright 2013-present, Facebook, Inc.
	 * All rights reserved.
	 *
	 * This source code is licensed under the BSD-style license found in the
	 * LICENSE file in the root directory of this source tree. An additional grant
	 * of patent rights can be found in the PATENTS file in the same directory.
	 *
	 * @providesModule getEventTarget
	 */

	'use strict';

	/**
	 * Gets the target node from a native browser event by accounting for
	 * inconsistencies in browser DOM APIs.
	 *
	 * @param {object} nativeEvent Native browser event.
	 * @return {DOMEventTarget} Target node.
	 */

	function getEventTarget(nativeEvent) {
	  var target = nativeEvent.target || nativeEvent.srcElement || window;

	  // Normalize SVG <use> element events #4963
	  if (target.correspondingUseElement) {
	    target = target.correspondingUseElement;
	  }

	  // Safari may fire events on text nodes (Node.TEXT_NODE is 3).
	  // @see http://www.quirksmode.org/js/events_properties.html
	  return target.nodeType === 3 ? target.parentNode : target;
	}

	module.exports = getEventTarget;

/***/ },
/* 70 */
/***/ function(module, exports, __webpack_require__) {

	/**
	 * Copyright 2013-present, Facebook, Inc.
	 * All rights reserved.
	 *
	 * This source code is licensed under the BSD-style license found in the
	 * LICENSE file in the root directory of this source tree. An additional grant
	 * of patent rights can be found in the PATENTS file in the same directory.
	 *
	 * @providesModule isEventSupported
	 */

	'use strict';

	var ExecutionEnvironment = __webpack_require__(49);

	var useHasFeature;
	if (ExecutionEnvironment.canUseDOM) {
	  useHasFeature = document.implementation && document.implementation.hasFeature &&
	  // always returns true in newer browsers as per the standard.
	  // @see http://dom.spec.whatwg.org/#dom-domimplementation-hasfeature
	  document.implementation.hasFeature('', '') !== true;
	}

	/**
	 * Checks if an event is supported in the current execution environment.
	 *
	 * NOTE: This will not work correctly for non-generic events such as `change`,
	 * `reset`, `load`, `error`, and `select`.
	 *
	 * Borrows from Modernizr.
	 *
	 * @param {string} eventNameSuffix Event name, e.g. "click".
	 * @param {?boolean} capture Check if the capture phase is supported.
	 * @return {boolean} True if the event is supported.
	 * @internal
	 * @license Modernizr 3.0.0pre (Custom Build) | MIT
	 */
	function isEventSupported(eventNameSuffix, capture) {
	  if (!ExecutionEnvironment.canUseDOM || capture && !('addEventListener' in document)) {
	    return false;
	  }

	  var eventName = 'on' + eventNameSuffix;
	  var isSupported = eventName in document;

	  if (!isSupported) {
	    var element = document.createElement('div');
	    element.setAttribute(eventName, 'return;');
	    isSupported = typeof element[eventName] === 'function';
	  }

	  if (!isSupported && useHasFeature && eventNameSuffix === 'wheel') {
	    // This is the only way to test support for the `wheel` event in IE9+.
	    isSupported = document.implementation.hasFeature('Events.wheel', '3.0');
	  }

	  return isSupported;
	}

	module.exports = isEventSupported;

/***/ },
/* 71 */
/***/ function(module, exports) {

	/**
	 * Copyright 2013-present, Facebook, Inc.
	 * All rights reserved.
	 *
	 * This source code is licensed under the BSD-style license found in the
	 * LICENSE file in the root directory of this source tree. An additional grant
	 * of patent rights can be found in the PATENTS file in the same directory.
	 *
	 * @providesModule isTextInputElement
	 * 
	 */

	'use strict';

	/**
	 * @see http://www.whatwg.org/specs/web-apps/current-work/multipage/the-input-element.html#input-type-attr-summary
	 */

	var supportedInputTypes = {
	  'color': true,
	  'date': true,
	  'datetime': true,
	  'datetime-local': true,
	  'email': true,
	  'month': true,
	  'number': true,
	  'password': true,
	  'range': true,
	  'search': true,
	  'tel': true,
	  'text': true,
	  'time': true,
	  'url': true,
	  'week': true
	};

	function isTextInputElement(elem) {
	  var nodeName = elem && elem.nodeName && elem.nodeName.toLowerCase();

	  if (nodeName === 'input') {
	    return !!supportedInputTypes[elem.type];
	  }

	  if (nodeName === 'textarea') {
	    return true;
	  }

	  return false;
	}

	module.exports = isTextInputElement;

/***/ },
/* 72 */
/***/ function(module, exports, __webpack_require__) {

	/**
	 * Copyright 2013-present, Facebook, Inc.
	 * All rights reserved.
	 *
	 * This source code is licensed under the BSD-style license found in the
	 * LICENSE file in the root directory of this source tree. An additional grant
	 * of patent rights can be found in the PATENTS file in the same directory.
	 *
	 * @providesModule DefaultEventPluginOrder
	 */

	'use strict';

	var keyOf = __webpack_require__(25);

	/**
	 * Module that is injectable into `EventPluginHub`, that specifies a
	 * deterministic ordering of `EventPlugin`s. A convenient way to reason about
	 * plugins, without having to package every one of them. This is better than
	 * having plugins be ordered in the same order that they are injected because
	 * that ordering would be influenced by the packaging order.
	 * `ResponderEventPlugin` must occur before `SimpleEventPlugin` so that
	 * preventing default on events is convenient in `SimpleEventPlugin` handlers.
	 */
	var DefaultEventPluginOrder = [keyOf({ ResponderEventPlugin: null }), keyOf({ SimpleEventPlugin: null }), keyOf({ TapEventPlugin: null }), keyOf({ EnterLeaveEventPlugin: null }), keyOf({ ChangeEventPlugin: null }), keyOf({ SelectEventPlugin: null }), keyOf({ BeforeInputEventPlugin: null })];

	module.exports = DefaultEventPluginOrder;

/***/ },
/* 73 */
/***/ function(module, exports, __webpack_require__) {

	/**
	 * Copyright 2013-present, Facebook, Inc.
	 * All rights reserved.
	 *
	 * This source code is licensed under the BSD-style license found in the
	 * LICENSE file in the root directory of this source tree. An additional grant
	 * of patent rights can be found in the PATENTS file in the same directory.
	 *
	 * @providesModule EnterLeaveEventPlugin
	 */

	'use strict';

	var EventConstants = __webpack_require__(41);
	var EventPropagators = __webpack_require__(42);
	var ReactDOMComponentTree = __webpack_require__(36);
	var SyntheticMouseEvent = __webpack_require__(74);

	var keyOf = __webpack_require__(25);

	var topLevelTypes = EventConstants.topLevelTypes;

	var eventTypes = {
	  mouseEnter: {
	    registrationName: keyOf({ onMouseEnter: null }),
	    dependencies: [topLevelTypes.topMouseOut, topLevelTypes.topMouseOver]
	  },
	  mouseLeave: {
	    registrationName: keyOf({ onMouseLeave: null }),
	    dependencies: [topLevelTypes.topMouseOut, topLevelTypes.topMouseOver]
	  }
	};

	var EnterLeaveEventPlugin = {

	  eventTypes: eventTypes,

	  /**
	   * For almost every interaction we care about, there will be both a top-level
	   * `mouseover` and `mouseout` event that occurs. Only use `mouseout` so that
	   * we do not extract duplicate events. However, moving the mouse into the
	   * browser from outside will not fire a `mouseout` event. In this case, we use
	   * the `mouseover` top-level event.
	   */
	  extractEvents: function (topLevelType, targetInst, nativeEvent, nativeEventTarget) {
	    if (topLevelType === topLevelTypes.topMouseOver && (nativeEvent.relatedTarget || nativeEvent.fromElement)) {
	      return null;
	    }
	    if (topLevelType !== topLevelTypes.topMouseOut && topLevelType !== topLevelTypes.topMouseOver) {
	      // Must not be a mouse in or mouse out - ignoring.
	      return null;
	    }

	    var win;
	    if (nativeEventTarget.window === nativeEventTarget) {
	      // `nativeEventTarget` is probably a window object.
	      win = nativeEventTarget;
	    } else {
	      // TODO: Figure out why `ownerDocument` is sometimes undefined in IE8.
	      var doc = nativeEventTarget.ownerDocument;
	      if (doc) {
	        win = doc.defaultView || doc.parentWindow;
	      } else {
	        win = window;
	      }
	    }

	    var from;
	    var to;
	    if (topLevelType === topLevelTypes.topMouseOut) {
	      from = targetInst;
	      var related = nativeEvent.relatedTarget || nativeEvent.toElement;
	      to = related ? ReactDOMComponentTree.getClosestInstanceFromNode(related) : null;
	    } else {
	      // Moving to a node from outside the window.
	      from = null;
	      to = targetInst;
	    }

	    if (from === to) {
	      // Nothing pertains to our managed components.
	      return null;
	    }

	    var fromNode = from == null ? win : ReactDOMComponentTree.getNodeFromInstance(from);
	    var toNode = to == null ? win : ReactDOMComponentTree.getNodeFromInstance(to);

	    var leave = SyntheticMouseEvent.getPooled(eventTypes.mouseLeave, from, nativeEvent, nativeEventTarget);
	    leave.type = 'mouseleave';
	    leave.target = fromNode;
	    leave.relatedTarget = toNode;

	    var enter = SyntheticMouseEvent.getPooled(eventTypes.mouseEnter, to, nativeEvent, nativeEventTarget);
	    enter.type = 'mouseenter';
	    enter.target = toNode;
	    enter.relatedTarget = fromNode;

	    EventPropagators.accumulateEnterLeaveDispatches(leave, enter, from, to);

	    return [leave, enter];
	  }

	};

	module.exports = EnterLeaveEventPlugin;

/***/ },
/* 74 */
/***/ function(module, exports, __webpack_require__) {

	/**
	 * Copyright 2013-present, Facebook, Inc.
	 * All rights reserved.
	 *
	 * This source code is licensed under the BSD-style license found in the
	 * LICENSE file in the root directory of this source tree. An additional grant
	 * of patent rights can be found in the PATENTS file in the same directory.
	 *
	 * @providesModule SyntheticMouseEvent
	 */

	'use strict';

	var SyntheticUIEvent = __webpack_require__(75);
	var ViewportMetrics = __webpack_require__(76);

	var getEventModifierState = __webpack_require__(77);

	/**
	 * @interface MouseEvent
	 * @see http://www.w3.org/TR/DOM-Level-3-Events/
	 */
	var MouseEventInterface = {
	  screenX: null,
	  screenY: null,
	  clientX: null,
	  clientY: null,
	  ctrlKey: null,
	  shiftKey: null,
	  altKey: null,
	  metaKey: null,
	  getModifierState: getEventModifierState,
	  button: function (event) {
	    // Webkit, Firefox, IE9+
	    // which:  1 2 3
	    // button: 0 1 2 (standard)
	    var button = event.button;
	    if ('which' in event) {
	      return button;
	    }
	    // IE<9
	    // which:  undefined
	    // button: 0 0 0
	    // button: 1 4 2 (onmouseup)
	    return button === 2 ? 2 : button === 4 ? 1 : 0;
	  },
	  buttons: null,
	  relatedTarget: function (event) {
	    return event.relatedTarget || (event.fromElement === event.srcElement ? event.toElement : event.fromElement);
	  },
	  // "Proprietary" Interface.
	  pageX: function (event) {
	    return 'pageX' in event ? event.pageX : event.clientX + ViewportMetrics.currentScrollLeft;
	  },
	  pageY: function (event) {
	    return 'pageY' in event ? event.pageY : event.clientY + ViewportMetrics.currentScrollTop;
	  }
	};

	/**
	 * @param {object} dispatchConfig Configuration used to dispatch this event.
	 * @param {string} dispatchMarker Marker identifying the event target.
	 * @param {object} nativeEvent Native browser event.
	 * @extends {SyntheticUIEvent}
	 */
	function SyntheticMouseEvent(dispatchConfig, dispatchMarker, nativeEvent, nativeEventTarget) {
	  return SyntheticUIEvent.call(this, dispatchConfig, dispatchMarker, nativeEvent, nativeEventTarget);
	}

	SyntheticUIEvent.augmentClass(SyntheticMouseEvent, MouseEventInterface);

	module.exports = SyntheticMouseEvent;

/***/ },
/* 75 */
/***/ function(module, exports, __webpack_require__) {

	/**
	 * Copyright 2013-present, Facebook, Inc.
	 * All rights reserved.
	 *
	 * This source code is licensed under the BSD-style license found in the
	 * LICENSE file in the root directory of this source tree. An additional grant
	 * of patent rights can be found in the PATENTS file in the same directory.
	 *
	 * @providesModule SyntheticUIEvent
	 */

	'use strict';

	var SyntheticEvent = __webpack_require__(53);

	var getEventTarget = __webpack_require__(69);

	/**
	 * @interface UIEvent
	 * @see http://www.w3.org/TR/DOM-Level-3-Events/
	 */
	var UIEventInterface = {
	  view: function (event) {
	    if (event.view) {
	      return event.view;
	    }

	    var target = getEventTarget(event);
	    if (target.window === target) {
	      // target is a window object
	      return target;
	    }

	    var doc = target.ownerDocument;
	    // TODO: Figure out why `ownerDocument` is sometimes undefined in IE8.
	    if (doc) {
	      return doc.defaultView || doc.parentWindow;
	    } else {
	      return window;
	    }
	  },
	  detail: function (event) {
	    return event.detail || 0;
	  }
	};

	/**
	 * @param {object} dispatchConfig Configuration used to dispatch this event.
	 * @param {string} dispatchMarker Marker identifying the event target.
	 * @param {object} nativeEvent Native browser event.
	 * @extends {SyntheticEvent}
	 */
	function SyntheticUIEvent(dispatchConfig, dispatchMarker, nativeEvent, nativeEventTarget) {
	  return SyntheticEvent.call(this, dispatchConfig, dispatchMarker, nativeEvent, nativeEventTarget);
	}

	SyntheticEvent.augmentClass(SyntheticUIEvent, UIEventInterface);

	module.exports = SyntheticUIEvent;

/***/ },
/* 76 */
/***/ function(module, exports) {

	/**
	 * Copyright 2013-present, Facebook, Inc.
	 * All rights reserved.
	 *
	 * This source code is licensed under the BSD-style license found in the
	 * LICENSE file in the root directory of this source tree. An additional grant
	 * of patent rights can be found in the PATENTS file in the same directory.
	 *
	 * @providesModule ViewportMetrics
	 */

	'use strict';

	var ViewportMetrics = {

	  currentScrollLeft: 0,

	  currentScrollTop: 0,

	  refreshScrollValues: function (scrollPosition) {
	    ViewportMetrics.currentScrollLeft = scrollPosition.x;
	    ViewportMetrics.currentScrollTop = scrollPosition.y;
	  }

	};

	module.exports = ViewportMetrics;

/***/ },
/* 77 */
/***/ function(module, exports) {

	/**
	 * Copyright 2013-present, Facebook, Inc.
	 * All rights reserved.
	 *
	 * This source code is licensed under the BSD-style license found in the
	 * LICENSE file in the root directory of this source tree. An additional grant
	 * of patent rights can be found in the PATENTS file in the same directory.
	 *
	 * @providesModule getEventModifierState
	 */

	'use strict';

	/**
	 * Translation from modifier key to the associated property in the event.
	 * @see http://www.w3.org/TR/DOM-Level-3-Events/#keys-Modifiers
	 */

	var modifierKeyToProp = {
	  'Alt': 'altKey',
	  'Control': 'ctrlKey',
	  'Meta': 'metaKey',
	  'Shift': 'shiftKey'
	};

	// IE8 does not implement getModifierState so we simply map it to the only
	// modifier keys exposed by the event itself, does not support Lock-keys.
	// Currently, all major browsers except Chrome seems to support Lock-keys.
	function modifierStateGetter(keyArg) {
	  var syntheticEvent = this;
	  var nativeEvent = syntheticEvent.nativeEvent;
	  if (nativeEvent.getModifierState) {
	    return nativeEvent.getModifierState(keyArg);
	  }
	  var keyProp = modifierKeyToProp[keyArg];
	  return keyProp ? !!nativeEvent[keyProp] : false;
	}

	function getEventModifierState(nativeEvent) {
	  return modifierStateGetter;
	}

	module.exports = getEventModifierState;

/***/ },
/* 78 */
/***/ function(module, exports, __webpack_require__) {

	/**
	 * Copyright 2013-present, Facebook, Inc.
	 * All rights reserved.
	 *
	 * This source code is licensed under the BSD-style license found in the
	 * LICENSE file in the root directory of this source tree. An additional grant
	 * of patent rights can be found in the PATENTS file in the same directory.
	 *
	 * @providesModule HTMLDOMPropertyConfig
	 */

	'use strict';

	var DOMProperty = __webpack_require__(37);

	var MUST_USE_PROPERTY = DOMProperty.injection.MUST_USE_PROPERTY;
	var HAS_BOOLEAN_VALUE = DOMProperty.injection.HAS_BOOLEAN_VALUE;
	var HAS_NUMERIC_VALUE = DOMProperty.injection.HAS_NUMERIC_VALUE;
	var HAS_POSITIVE_NUMERIC_VALUE = DOMProperty.injection.HAS_POSITIVE_NUMERIC_VALUE;
	var HAS_OVERLOADED_BOOLEAN_VALUE = DOMProperty.injection.HAS_OVERLOADED_BOOLEAN_VALUE;

	var HTMLDOMPropertyConfig = {
	  isCustomAttribute: RegExp.prototype.test.bind(new RegExp('^(data|aria)-[' + DOMProperty.ATTRIBUTE_NAME_CHAR + ']*$')),
	  Properties: {
	    /**
	     * Standard Properties
	     */
	    accept: 0,
	    acceptCharset: 0,
	    accessKey: 0,
	    action: 0,
	    allowFullScreen: HAS_BOOLEAN_VALUE,
	    allowTransparency: 0,
	    alt: 0,
	    async: HAS_BOOLEAN_VALUE,
	    autoComplete: 0,
	    // autoFocus is polyfilled/normalized by AutoFocusUtils
	    // autoFocus: HAS_BOOLEAN_VALUE,
	    autoPlay: HAS_BOOLEAN_VALUE,
	    capture: HAS_BOOLEAN_VALUE,
	    cellPadding: 0,
	    cellSpacing: 0,
	    charSet: 0,
	    challenge: 0,
	    checked: MUST_USE_PROPERTY | HAS_BOOLEAN_VALUE,
	    cite: 0,
	    classID: 0,
	    className: 0,
	    cols: HAS_POSITIVE_NUMERIC_VALUE,
	    colSpan: 0,
	    content: 0,
	    contentEditable: 0,
	    contextMenu: 0,
	    controls: HAS_BOOLEAN_VALUE,
	    coords: 0,
	    crossOrigin: 0,
	    data: 0, // For `<object />` acts as `src`.
	    dateTime: 0,
	    'default': HAS_BOOLEAN_VALUE,
	    defer: HAS_BOOLEAN_VALUE,
	    dir: 0,
	    disabled: HAS_BOOLEAN_VALUE,
	    download: HAS_OVERLOADED_BOOLEAN_VALUE,
	    draggable: 0,
	    encType: 0,
	    form: 0,
	    formAction: 0,
	    formEncType: 0,
	    formMethod: 0,
	    formNoValidate: HAS_BOOLEAN_VALUE,
	    formTarget: 0,
	    frameBorder: 0,
	    headers: 0,
	    height: 0,
	    hidden: HAS_BOOLEAN_VALUE,
	    high: 0,
	    href: 0,
	    hrefLang: 0,
	    htmlFor: 0,
	    httpEquiv: 0,
	    icon: 0,
	    id: 0,
	    inputMode: 0,
	    integrity: 0,
	    is: 0,
	    keyParams: 0,
	    keyType: 0,
	    kind: 0,
	    label: 0,
	    lang: 0,
	    list: 0,
	    loop: HAS_BOOLEAN_VALUE,
	    low: 0,
	    manifest: 0,
	    marginHeight: 0,
	    marginWidth: 0,
	    max: 0,
	    maxLength: 0,
	    media: 0,
	    mediaGroup: 0,
	    method: 0,
	    min: 0,
	    minLength: 0,
	    // Caution; `option.selected` is not updated if `select.multiple` is
	    // disabled with `removeAttribute`.
	    multiple: MUST_USE_PROPERTY | HAS_BOOLEAN_VALUE,
	    muted: MUST_USE_PROPERTY | HAS_BOOLEAN_VALUE,
	    name: 0,
	    nonce: 0,
	    noValidate: HAS_BOOLEAN_VALUE,
	    open: HAS_BOOLEAN_VALUE,
	    optimum: 0,
	    pattern: 0,
	    placeholder: 0,
	    poster: 0,
	    preload: 0,
	    profile: 0,
	    radioGroup: 0,
	    readOnly: HAS_BOOLEAN_VALUE,
	    rel: 0,
	    required: HAS_BOOLEAN_VALUE,
	    reversed: HAS_BOOLEAN_VALUE,
	    role: 0,
	    rows: HAS_POSITIVE_NUMERIC_VALUE,
	    rowSpan: HAS_NUMERIC_VALUE,
	    sandbox: 0,
	    scope: 0,
	    scoped: HAS_BOOLEAN_VALUE,
	    scrolling: 0,
	    seamless: HAS_BOOLEAN_VALUE,
	    selected: MUST_USE_PROPERTY | HAS_BOOLEAN_VALUE,
	    shape: 0,
	    size: HAS_POSITIVE_NUMERIC_VALUE,
	    sizes: 0,
	    span: HAS_POSITIVE_NUMERIC_VALUE,
	    spellCheck: 0,
	    src: 0,
	    srcDoc: 0,
	    srcLang: 0,
	    srcSet: 0,
	    start: HAS_NUMERIC_VALUE,
	    step: 0,
	    style: 0,
	    summary: 0,
	    tabIndex: 0,
	    target: 0,
	    title: 0,
	    // Setting .type throws on non-<input> tags
	    type: 0,
	    useMap: 0,
	    value: 0,
	    width: 0,
	    wmode: 0,
	    wrap: 0,

	    /**
	     * RDFa Properties
	     */
	    about: 0,
	    datatype: 0,
	    inlist: 0,
	    prefix: 0,
	    // property is also supported for OpenGraph in meta tags.
	    property: 0,
	    resource: 0,
	    'typeof': 0,
	    vocab: 0,

	    /**
	     * Non-standard Properties
	     */
	    // autoCapitalize and autoCorrect are supported in Mobile Safari for
	    // keyboard hints.
	    autoCapitalize: 0,
	    autoCorrect: 0,
	    // autoSave allows WebKit/Blink to persist values of input fields on page reloads
	    autoSave: 0,
	    // color is for Safari mask-icon link
	    color: 0,
	    // itemProp, itemScope, itemType are for
	    // Microdata support. See http://schema.org/docs/gs.html
	    itemProp: 0,
	    itemScope: HAS_BOOLEAN_VALUE,
	    itemType: 0,
	    // itemID and itemRef are for Microdata support as well but
	    // only specified in the WHATWG spec document. See
	    // https://html.spec.whatwg.org/multipage/microdata.html#microdata-dom-api
	    itemID: 0,
	    itemRef: 0,
	    // results show looking glass icon and recent searches on input
	    // search fields in WebKit/Blink
	    results: 0,
	    // IE-only attribute that specifies security restrictions on an iframe
	    // as an alternative to the sandbox attribute on IE<10
	    security: 0,
	    // IE-only attribute that controls focus behavior
	    unselectable: 0
	  },
	  DOMAttributeNames: {
	    acceptCharset: 'accept-charset',
	    className: 'class',
	    htmlFor: 'for',
	    httpEquiv: 'http-equiv'
	  },
	  DOMPropertyNames: {}
	};

	module.exports = HTMLDOMPropertyConfig;

/***/ },
/* 79 */
/***/ function(module, exports, __webpack_require__) {

	/**
	 * Copyright 2013-present, Facebook, Inc.
	 * All rights reserved.
	 *
	 * This source code is licensed under the BSD-style license found in the
	 * LICENSE file in the root directory of this source tree. An additional grant
	 * of patent rights can be found in the PATENTS file in the same directory.
	 *
	 * @providesModule ReactComponentBrowserEnvironment
	 */

	'use strict';

	var DOMChildrenOperations = __webpack_require__(80);
	var ReactDOMIDOperations = __webpack_require__(92);

	/**
	 * Abstracts away all functionality of the reconciler that requires knowledge of
	 * the browser context. TODO: These callers should be refactored to avoid the
	 * need for this injection.
	 */
	var ReactComponentBrowserEnvironment = {

	  processChildrenUpdates: ReactDOMIDOperations.dangerouslyProcessChildrenUpdates,

	  replaceNodeWithMarkup: DOMChildrenOperations.dangerouslyReplaceNodeWithMarkup,

	  /**
	   * If a particular environment requires that some resources be cleaned up,
	   * specify this in the injected Mixin. In the DOM, we would likely want to
	   * purge any cached node ID lookups.
	   *
	   * @private
	   */
	  unmountIDFromEnvironment: function (rootNodeID) {}

	};

	module.exports = ReactComponentBrowserEnvironment;

/***/ },
/* 80 */
/***/ function(module, exports, __webpack_require__) {

	/* WEBPACK VAR INJECTION */(function(process) {/**
	 * Copyright 2013-present, Facebook, Inc.
	 * All rights reserved.
	 *
	 * This source code is licensed under the BSD-style license found in the
	 * LICENSE file in the root directory of this source tree. An additional grant
	 * of patent rights can be found in the PATENTS file in the same directory.
	 *
	 * @providesModule DOMChildrenOperations
	 */

	'use strict';

	var DOMLazyTree = __webpack_require__(81);
	var Danger = __webpack_require__(87);
	var ReactMultiChildUpdateTypes = __webpack_require__(91);
	var ReactDOMComponentTree = __webpack_require__(36);
	var ReactInstrumentation = __webpack_require__(62);

	var createMicrosoftUnsafeLocalFunction = __webpack_require__(84);
	var setInnerHTML = __webpack_require__(83);
	var setTextContent = __webpack_require__(85);

	function getNodeAfter(parentNode, node) {
	  // Special case for text components, which return [open, close] comments
	  // from getHostNode.
	  if (Array.isArray(node)) {
	    node = node[1];
	  }
	  return node ? node.nextSibling : parentNode.firstChild;
	}

	/**
	 * Inserts `childNode` as a child of `parentNode` at the `index`.
	 *
	 * @param {DOMElement} parentNode Parent node in which to insert.
	 * @param {DOMElement} childNode Child node to insert.
	 * @param {number} index Index at which to insert the child.
	 * @internal
	 */
	var insertChildAt = createMicrosoftUnsafeLocalFunction(function (parentNode, childNode, referenceNode) {
	  // We rely exclusively on `insertBefore(node, null)` instead of also using
	  // `appendChild(node)`. (Using `undefined` is not allowed by all browsers so
	  // we are careful to use `null`.)
	  parentNode.insertBefore(childNode, referenceNode);
	});

	function insertLazyTreeChildAt(parentNode, childTree, referenceNode) {
	  DOMLazyTree.insertTreeBefore(parentNode, childTree, referenceNode);
	}

	function moveChild(parentNode, childNode, referenceNode) {
	  if (Array.isArray(childNode)) {
	    moveDelimitedText(parentNode, childNode[0], childNode[1], referenceNode);
	  } else {
	    insertChildAt(parentNode, childNode, referenceNode);
	  }
	}

	function removeChild(parentNode, childNode) {
	  if (Array.isArray(childNode)) {
	    var closingComment = childNode[1];
	    childNode = childNode[0];
	    removeDelimitedText(parentNode, childNode, closingComment);
	    parentNode.removeChild(closingComment);
	  }
	  parentNode.removeChild(childNode);
	}

	function moveDelimitedText(parentNode, openingComment, closingComment, referenceNode) {
	  var node = openingComment;
	  while (true) {
	    var nextNode = node.nextSibling;
	    insertChildAt(parentNode, node, referenceNode);
	    if (node === closingComment) {
	      break;
	    }
	    node = nextNode;
	  }
	}

	function removeDelimitedText(parentNode, startNode, closingComment) {
	  while (true) {
	    var node = startNode.nextSibling;
	    if (node === closingComment) {
	      // The closing comment is removed by ReactMultiChild.
	      break;
	    } else {
	      parentNode.removeChild(node);
	    }
	  }
	}

	function replaceDelimitedText(openingComment, closingComment, stringText) {
	  var parentNode = openingComment.parentNode;
	  var nodeAfterComment = openingComment.nextSibling;
	  if (nodeAfterComment === closingComment) {
	    // There are no text nodes between the opening and closing comments; insert
	    // a new one if stringText isn't empty.
	    if (stringText) {
	      insertChildAt(parentNode, document.createTextNode(stringText), nodeAfterComment);
	    }
	  } else {
	    if (stringText) {
	      // Set the text content of the first node after the opening comment, and
	      // remove all following nodes up until the closing comment.
	      setTextContent(nodeAfterComment, stringText);
	      removeDelimitedText(parentNode, nodeAfterComment, closingComment);
	    } else {
	      removeDelimitedText(parentNode, openingComment, closingComment);
	    }
	  }

	  if (process.env.NODE_ENV !== 'production') {
	    ReactInstrumentation.debugTool.onHostOperation(ReactDOMComponentTree.getInstanceFromNode(openingComment)._debugID, 'replace text', stringText);
	  }
	}

	var dangerouslyReplaceNodeWithMarkup = Danger.dangerouslyReplaceNodeWithMarkup;
	if (process.env.NODE_ENV !== 'production') {
	  dangerouslyReplaceNodeWithMarkup = function (oldChild, markup, prevInstance) {
	    Danger.dangerouslyReplaceNodeWithMarkup(oldChild, markup);
	    if (prevInstance._debugID !== 0) {
	      ReactInstrumentation.debugTool.onHostOperation(prevInstance._debugID, 'replace with', markup.toString());
	    } else {
	      var nextInstance = ReactDOMComponentTree.getInstanceFromNode(markup.node);
	      if (nextInstance._debugID !== 0) {
	        ReactInstrumentation.debugTool.onHostOperation(nextInstance._debugID, 'mount', markup.toString());
	      }
	    }
	  };
	}

	/**
	 * Operations for updating with DOM children.
	 */
	var DOMChildrenOperations = {

	  dangerouslyReplaceNodeWithMarkup: dangerouslyReplaceNodeWithMarkup,

	  replaceDelimitedText: replaceDelimitedText,

	  /**
	   * Updates a component's children by processing a series of updates. The
	   * update configurations are each expected to have a `parentNode` property.
	   *
	   * @param {array<object>} updates List of update configurations.
	   * @internal
	   */
	  processUpdates: function (parentNode, updates) {
	    if (process.env.NODE_ENV !== 'production') {
	      var parentNodeDebugID = ReactDOMComponentTree.getInstanceFromNode(parentNode)._debugID;
	    }

	    for (var k = 0; k < updates.length; k++) {
	      var update = updates[k];
	      switch (update.type) {
	        case ReactMultiChildUpdateTypes.INSERT_MARKUP:
	          insertLazyTreeChildAt(parentNode, update.content, getNodeAfter(parentNode, update.afterNode));
	          if (process.env.NODE_ENV !== 'production') {
	            ReactInstrumentation.debugTool.onHostOperation(parentNodeDebugID, 'insert child', { toIndex: update.toIndex, content: update.content.toString() });
	          }
	          break;
	        case ReactMultiChildUpdateTypes.MOVE_EXISTING:
	          moveChild(parentNode, update.fromNode, getNodeAfter(parentNode, update.afterNode));
	          if (process.env.NODE_ENV !== 'production') {
	            ReactInstrumentation.debugTool.onHostOperation(parentNodeDebugID, 'move child', { fromIndex: update.fromIndex, toIndex: update.toIndex });
	          }
	          break;
	        case ReactMultiChildUpdateTypes.SET_MARKUP:
	          setInnerHTML(parentNode, update.content);
	          if (process.env.NODE_ENV !== 'production') {
	            ReactInstrumentation.debugTool.onHostOperation(parentNodeDebugID, 'replace children', update.content.toString());
	          }
	          break;
	        case ReactMultiChildUpdateTypes.TEXT_CONTENT:
	          setTextContent(parentNode, update.content);
	          if (process.env.NODE_ENV !== 'production') {
	            ReactInstrumentation.debugTool.onHostOperation(parentNodeDebugID, 'replace text', update.content.toString());
	          }
	          break;
	        case ReactMultiChildUpdateTypes.REMOVE_NODE:
	          removeChild(parentNode, update.fromNode);
	          if (process.env.NODE_ENV !== 'production') {
	            ReactInstrumentation.debugTool.onHostOperation(parentNodeDebugID, 'remove child', { fromIndex: update.fromIndex });
	          }
	          break;
	      }
	    }
	  }

	};

	module.exports = DOMChildrenOperations;
	/* WEBPACK VAR INJECTION */}.call(exports, __webpack_require__(4)))

/***/ },
/* 81 */
/***/ function(module, exports, __webpack_require__) {

	/**
	 * Copyright 2015-present, Facebook, Inc.
	 * All rights reserved.
	 *
	 * This source code is licensed under the BSD-style license found in the
	 * LICENSE file in the root directory of this source tree. An additional grant
	 * of patent rights can be found in the PATENTS file in the same directory.
	 *
	 * @providesModule DOMLazyTree
	 */

	'use strict';

	var DOMNamespaces = __webpack_require__(82);
	var setInnerHTML = __webpack_require__(83);

	var createMicrosoftUnsafeLocalFunction = __webpack_require__(84);
	var setTextContent = __webpack_require__(85);

	var ELEMENT_NODE_TYPE = 1;
	var DOCUMENT_FRAGMENT_NODE_TYPE = 11;

	/**
	 * In IE (8-11) and Edge, appending nodes with no children is dramatically
	 * faster than appending a full subtree, so we essentially queue up the
	 * .appendChild calls here and apply them so each node is added to its parent
	 * before any children are added.
	 *
	 * In other browsers, doing so is slower or neutral compared to the other order
	 * (in Firefox, twice as slow) so we only do this inversion in IE.
	 *
	 * See https://github.com/spicyj/innerhtml-vs-createelement-vs-clonenode.
	 */
	var enableLazy = typeof document !== 'undefined' && typeof document.documentMode === 'number' || typeof navigator !== 'undefined' && typeof navigator.userAgent === 'string' && /\bEdge\/\d/.test(navigator.userAgent);

	function insertTreeChildren(tree) {
	  if (!enableLazy) {
	    return;
	  }
	  var node = tree.node;
	  var children = tree.children;
	  if (children.length) {
	    for (var i = 0; i < children.length; i++) {
	      insertTreeBefore(node, children[i], null);
	    }
	  } else if (tree.html != null) {
	    setInnerHTML(node, tree.html);
	  } else if (tree.text != null) {
	    setTextContent(node, tree.text);
	  }
	}

	var insertTreeBefore = createMicrosoftUnsafeLocalFunction(function (parentNode, tree, referenceNode) {
	  // DocumentFragments aren't actually part of the DOM after insertion so
	  // appending children won't update the DOM. We need to ensure the fragment
	  // is properly populated first, breaking out of our lazy approach for just
	  // this level. Also, some <object> plugins (like Flash Player) will read
	  // <param> nodes immediately upon insertion into the DOM, so <object>
	  // must also be populated prior to insertion into the DOM.
	  if (tree.node.nodeType === DOCUMENT_FRAGMENT_NODE_TYPE || tree.node.nodeType === ELEMENT_NODE_TYPE && tree.node.nodeName.toLowerCase() === 'object' && (tree.node.namespaceURI == null || tree.node.namespaceURI === DOMNamespaces.html)) {
	    insertTreeChildren(tree);
	    parentNode.insertBefore(tree.node, referenceNode);
	  } else {
	    parentNode.insertBefore(tree.node, referenceNode);
	    insertTreeChildren(tree);
	  }
	});

	function replaceChildWithTree(oldNode, newTree) {
	  oldNode.parentNode.replaceChild(newTree.node, oldNode);
	  insertTreeChildren(newTree);
	}

	function queueChild(parentTree, childTree) {
	  if (enableLazy) {
	    parentTree.children.push(childTree);
	  } else {
	    parentTree.node.appendChild(childTree.node);
	  }
	}

	function queueHTML(tree, html) {
	  if (enableLazy) {
	    tree.html = html;
	  } else {
	    setInnerHTML(tree.node, html);
	  }
	}

	function queueText(tree, text) {
	  if (enableLazy) {
	    tree.text = text;
	  } else {
	    setTextContent(tree.node, text);
	  }
	}

	function toString() {
	  return this.node.nodeName;
	}

	function DOMLazyTree(node) {
	  return {
	    node: node,
	    children: [],
	    html: null,
	    text: null,
	    toString: toString
	  };
	}

	DOMLazyTree.insertTreeBefore = insertTreeBefore;
	DOMLazyTree.replaceChildWithTree = replaceChildWithTree;
	DOMLazyTree.queueChild = queueChild;
	DOMLazyTree.queueHTML = queueHTML;
	DOMLazyTree.queueText = queueText;

	module.exports = DOMLazyTree;

/***/ },
/* 82 */
/***/ function(module, exports) {

	/**
	 * Copyright 2013-present, Facebook, Inc.
	 * All rights reserved.
	 *
	 * This source code is licensed under the BSD-style license found in the
	 * LICENSE file in the root directory of this source tree. An additional grant
	 * of patent rights can be found in the PATENTS file in the same directory.
	 *
	 * @providesModule DOMNamespaces
	 */

	'use strict';

	var DOMNamespaces = {
	  html: 'http://www.w3.org/1999/xhtml',
	  mathml: 'http://www.w3.org/1998/Math/MathML',
	  svg: 'http://www.w3.org/2000/svg'
	};

	module.exports = DOMNamespaces;

/***/ },
/* 83 */
/***/ function(module, exports, __webpack_require__) {

	/**
	 * Copyright 2013-present, Facebook, Inc.
	 * All rights reserved.
	 *
	 * This source code is licensed under the BSD-style license found in the
	 * LICENSE file in the root directory of this source tree. An additional grant
	 * of patent rights can be found in the PATENTS file in the same directory.
	 *
	 * @providesModule setInnerHTML
	 */

	'use strict';

	var ExecutionEnvironment = __webpack_require__(49);
	var DOMNamespaces = __webpack_require__(82);

	var WHITESPACE_TEST = /^[ \r\n\t\f]/;
	var NONVISIBLE_TEST = /<(!--|link|noscript|meta|script|style)[ \r\n\t\f\/>]/;

	var createMicrosoftUnsafeLocalFunction = __webpack_require__(84);

	// SVG temp container for IE lacking innerHTML
	var reusableSVGContainer;

	/**
	 * Set the innerHTML property of a node, ensuring that whitespace is preserved
	 * even in IE8.
	 *
	 * @param {DOMElement} node
	 * @param {string} html
	 * @internal
	 */
	var setInnerHTML = createMicrosoftUnsafeLocalFunction(function (node, html) {
	  // IE does not have innerHTML for SVG nodes, so instead we inject the
	  // new markup in a temp node and then move the child nodes across into
	  // the target node
	  if (node.namespaceURI === DOMNamespaces.svg && !('innerHTML' in node)) {
	    reusableSVGContainer = reusableSVGContainer || document.createElement('div');
	    reusableSVGContainer.innerHTML = '<svg>' + html + '</svg>';
	    var newNodes = reusableSVGContainer.firstChild.childNodes;
	    for (var i = 0; i < newNodes.length; i++) {
	      node.appendChild(newNodes[i]);
	    }
	  } else {
	    node.innerHTML = html;
	  }
	});

	if (ExecutionEnvironment.canUseDOM) {
	  // IE8: When updating a just created node with innerHTML only leading
	  // whitespace is removed. When updating an existing node with innerHTML
	  // whitespace in root TextNodes is also collapsed.
	  // @see quirksmode.org/bugreports/archives/2004/11/innerhtml_and_t.html

	  // Feature detection; only IE8 is known to behave improperly like this.
	  var testElement = document.createElement('div');
	  testElement.innerHTML = ' ';
	  if (testElement.innerHTML === '') {
	    setInnerHTML = function (node, html) {
	      // Magic theory: IE8 supposedly differentiates between added and updated
	      // nodes when processing innerHTML, innerHTML on updated nodes suffers
	      // from worse whitespace behavior. Re-adding a node like this triggers
	      // the initial and more favorable whitespace behavior.
	      // TODO: What to do on a detached node?
	      if (node.parentNode) {
	        node.parentNode.replaceChild(node, node);
	      }

	      // We also implement a workaround for non-visible tags disappearing into
	      // thin air on IE8, this only happens if there is no visible text
	      // in-front of the non-visible tags. Piggyback on the whitespace fix
	      // and simply check if any non-visible tags appear in the source.
	      if (WHITESPACE_TEST.test(html) || html[0] === '<' && NONVISIBLE_TEST.test(html)) {
	        // Recover leading whitespace by temporarily prepending any character.
	        // \uFEFF has the potential advantage of being zero-width/invisible.
	        // UglifyJS drops U+FEFF chars when parsing, so use String.fromCharCode
	        // in hopes that this is preserved even if "\uFEFF" is transformed to
	        // the actual Unicode character (by Babel, for example).
	        // https://github.com/mishoo/UglifyJS2/blob/v2.4.20/lib/parse.js#L216
	        node.innerHTML = String.fromCharCode(0xFEFF) + html;

	        // deleteData leaves an empty `TextNode` which offsets the index of all
	        // children. Definitely want to avoid this.
	        var textNode = node.firstChild;
	        if (textNode.data.length === 1) {
	          node.removeChild(textNode);
	        } else {
	          textNode.deleteData(0, 1);
	        }
	      } else {
	        node.innerHTML = html;
	      }
	    };
	  }
	  testElement = null;
	}

	module.exports = setInnerHTML;

/***/ },
/* 84 */
/***/ function(module, exports) {

	/**
	 * Copyright 2013-present, Facebook, Inc.
	 * All rights reserved.
	 *
	 * This source code is licensed under the BSD-style license found in the
	 * LICENSE file in the root directory of this source tree. An additional grant
	 * of patent rights can be found in the PATENTS file in the same directory.
	 *
	 * @providesModule createMicrosoftUnsafeLocalFunction
	 */

	/* globals MSApp */

	'use strict';

	/**
	 * Create a function which has 'unsafe' privileges (required by windows8 apps)
	 */

	var createMicrosoftUnsafeLocalFunction = function (func) {
	  if (typeof MSApp !== 'undefined' && MSApp.execUnsafeLocalFunction) {
	    return function (arg0, arg1, arg2, arg3) {
	      MSApp.execUnsafeLocalFunction(function () {
	        return func(arg0, arg1, arg2, arg3);
	      });
	    };
	  } else {
	    return func;
	  }
	};

	module.exports = createMicrosoftUnsafeLocalFunction;

/***/ },
/* 85 */
/***/ function(module, exports, __webpack_require__) {

	/**
	 * Copyright 2013-present, Facebook, Inc.
	 * All rights reserved.
	 *
	 * This source code is licensed under the BSD-style license found in the
	 * LICENSE file in the root directory of this source tree. An additional grant
	 * of patent rights can be found in the PATENTS file in the same directory.
	 *
	 * @providesModule setTextContent
	 */

	'use strict';

	var ExecutionEnvironment = __webpack_require__(49);
	var escapeTextContentForBrowser = __webpack_require__(86);
	var setInnerHTML = __webpack_require__(83);

	/**
	 * Set the textContent property of a node, ensuring that whitespace is preserved
	 * even in IE8. innerText is a poor substitute for textContent and, among many
	 * issues, inserts <br> instead of the literal newline chars. innerHTML behaves
	 * as it should.
	 *
	 * @param {DOMElement} node
	 * @param {string} text
	 * @internal
	 */
	var setTextContent = function (node, text) {
	  if (text) {
	    var firstChild = node.firstChild;

	    if (firstChild && firstChild === node.lastChild && firstChild.nodeType === 3) {
	      firstChild.nodeValue = text;
	      return;
	    }
	  }
	  node.textContent = text;
	};

	if (ExecutionEnvironment.canUseDOM) {
	  if (!('textContent' in document.documentElement)) {
	    setTextContent = function (node, text) {
	      setInnerHTML(node, escapeTextContentForBrowser(text));
	    };
	  }
	}

	module.exports = setTextContent;

/***/ },
/* 86 */
/***/ function(module, exports) {

	/**
	 * Copyright 2016-present, Facebook, Inc.
	 * All rights reserved.
	 *
	 * This source code is licensed under the BSD-style license found in the
	 * LICENSE file in the root directory of this source tree. An additional grant
	 * of patent rights can be found in the PATENTS file in the same directory.
	 *
	 * Based on the escape-html library, which is used under the MIT License below:
	 *
	 * Copyright (c) 2012-2013 TJ Holowaychuk
	 * Copyright (c) 2015 Andreas Lubbe
	 * Copyright (c) 2015 Tiancheng "Timothy" Gu
	 *
	 * Permission is hereby granted, free of charge, to any person obtaining
	 * a copy of this software and associated documentation files (the
	 * 'Software'), to deal in the Software without restriction, including
	 * without limitation the rights to use, copy, modify, merge, publish,
	 * distribute, sublicense, and/or sell copies of the Software, and to
	 * permit persons to whom the Software is furnished to do so, subject to
	 * the following conditions:
	 *
	 * The above copyright notice and this permission notice shall be
	 * included in all copies or substantial portions of the Software.
	 *
	 * THE SOFTWARE IS PROVIDED 'AS IS', WITHOUT WARRANTY OF ANY KIND,
	 * EXPRESS OR IMPLIED, INCLUDING BUT NOT LIMITED TO THE WARRANTIES OF
	 * MERCHANTABILITY, FITNESS FOR A PARTICULAR PURPOSE AND NONINFRINGEMENT.
	 * IN NO EVENT SHALL THE AUTHORS OR COPYRIGHT HOLDERS BE LIABLE FOR ANY
	 * CLAIM, DAMAGES OR OTHER LIABILITY, WHETHER IN AN ACTION OF CONTRACT,
	 * TORT OR OTHERWISE, ARISING FROM, OUT OF OR IN CONNECTION WITH THE
	 * SOFTWARE OR THE USE OR OTHER DEALINGS IN THE SOFTWARE.
	 *
	 * @providesModule escapeTextContentForBrowser
	 */

	'use strict';

	// code copied and modified from escape-html
	/**
	 * Module variables.
	 * @private
	 */

	var matchHtmlRegExp = /["'&<>]/;

	/**
	 * Escape special characters in the given string of html.
	 *
	 * @param  {string} string The string to escape for inserting into HTML
	 * @return {string}
	 * @public
	 */

	function escapeHtml(string) {
	  var str = '' + string;
	  var match = matchHtmlRegExp.exec(str);

	  if (!match) {
	    return str;
	  }

	  var escape;
	  var html = '';
	  var index = 0;
	  var lastIndex = 0;

	  for (index = match.index; index < str.length; index++) {
	    switch (str.charCodeAt(index)) {
	      case 34:
	        // "
	        escape = '&quot;';
	        break;
	      case 38:
	        // &
	        escape = '&amp;';
	        break;
	      case 39:
	        // '
	        escape = '&#x27;'; // modified from escape-html; used to be '&#39'
	        break;
	      case 60:
	        // <
	        escape = '&lt;';
	        break;
	      case 62:
	        // >
	        escape = '&gt;';
	        break;
	      default:
	        continue;
	    }

	    if (lastIndex !== index) {
	      html += str.substring(lastIndex, index);
	    }

	    lastIndex = index + 1;
	    html += escape;
	  }

	  return lastIndex !== index ? html + str.substring(lastIndex, index) : html;
	}
	// end code copied and modified from escape-html

	/**
	 * Escapes text to prevent scripting attacks.
	 *
	 * @param {*} text Text value to escape.
	 * @return {string} An escaped string.
	 */
	function escapeTextContentForBrowser(text) {
	  if (typeof text === 'boolean' || typeof text === 'number') {
	    // this shortcircuit helps perf for types that we know will never have
	    // special characters, especially given that this function is used often
	    // for numeric dom ids.
	    return '' + text;
	  }
	  return escapeHtml(text);
	}

	module.exports = escapeTextContentForBrowser;

/***/ },
/* 87 */
/***/ function(module, exports, __webpack_require__) {

	/* WEBPACK VAR INJECTION */(function(process) {/**
	 * Copyright 2013-present, Facebook, Inc.
	 * All rights reserved.
	 *
	 * This source code is licensed under the BSD-style license found in the
	 * LICENSE file in the root directory of this source tree. An additional grant
	 * of patent rights can be found in the PATENTS file in the same directory.
	 *
	 * @providesModule Danger
	 */

	'use strict';

	var _prodInvariant = __webpack_require__(8);

	var DOMLazyTree = __webpack_require__(81);
	var ExecutionEnvironment = __webpack_require__(49);

	var createNodesFromMarkup = __webpack_require__(88);
	var emptyFunction = __webpack_require__(13);
	var invariant = __webpack_require__(9);

	var Danger = {

	  /**
	   * Replaces a node with a string of markup at its current position within its
	   * parent. The markup must render into a single root node.
	   *
	   * @param {DOMElement} oldChild Child node to replace.
	   * @param {string} markup Markup to render in place of the child node.
	   * @internal
	   */
	  dangerouslyReplaceNodeWithMarkup: function (oldChild, markup) {
	    !ExecutionEnvironment.canUseDOM ? process.env.NODE_ENV !== 'production' ? invariant(false, 'dangerouslyReplaceNodeWithMarkup(...): Cannot render markup in a worker thread. Make sure `window` and `document` are available globally before requiring React when unit testing or use ReactDOMServer.renderToString() for server rendering.') : _prodInvariant('56') : void 0;
	    !markup ? process.env.NODE_ENV !== 'production' ? invariant(false, 'dangerouslyReplaceNodeWithMarkup(...): Missing markup.') : _prodInvariant('57') : void 0;
	    !(oldChild.nodeName !== 'HTML') ? process.env.NODE_ENV !== 'production' ? invariant(false, 'dangerouslyReplaceNodeWithMarkup(...): Cannot replace markup of the <html> node. This is because browser quirks make this unreliable and/or slow. If you want to render to the root you must use server rendering. See ReactDOMServer.renderToString().') : _prodInvariant('58') : void 0;

	    if (typeof markup === 'string') {
	      var newChild = createNodesFromMarkup(markup, emptyFunction)[0];
	      oldChild.parentNode.replaceChild(newChild, oldChild);
	    } else {
	      DOMLazyTree.replaceChildWithTree(oldChild, markup);
	    }
	  }

	};

	module.exports = Danger;
	/* WEBPACK VAR INJECTION */}.call(exports, __webpack_require__(4)))

/***/ },
/* 88 */
/***/ function(module, exports, __webpack_require__) {

	/* WEBPACK VAR INJECTION */(function(process) {'use strict';

	/**
	 * Copyright (c) 2013-present, Facebook, Inc.
	 * All rights reserved.
	 *
	 * This source code is licensed under the BSD-style license found in the
	 * LICENSE file in the root directory of this source tree. An additional grant
	 * of patent rights can be found in the PATENTS file in the same directory.
	 *
	 * @typechecks
	 */

	/*eslint-disable fb-www/unsafe-html*/

	var ExecutionEnvironment = __webpack_require__(49);

	var createArrayFromMixed = __webpack_require__(89);
	var getMarkupWrap = __webpack_require__(90);
	var invariant = __webpack_require__(9);

	/**
	 * Dummy container used to render all markup.
	 */
	var dummyNode = ExecutionEnvironment.canUseDOM ? document.createElement('div') : null;

	/**
	 * Pattern used by `getNodeName`.
	 */
	var nodeNamePattern = /^\s*<(\w+)/;

	/**
	 * Extracts the `nodeName` of the first element in a string of markup.
	 *
	 * @param {string} markup String of markup.
	 * @return {?string} Node name of the supplied markup.
	 */
	function getNodeName(markup) {
	  var nodeNameMatch = markup.match(nodeNamePattern);
	  return nodeNameMatch && nodeNameMatch[1].toLowerCase();
	}

	/**
	 * Creates an array containing the nodes rendered from the supplied markup. The
	 * optionally supplied `handleScript` function will be invoked once for each
	 * <script> element that is rendered. If no `handleScript` function is supplied,
	 * an exception is thrown if any <script> elements are rendered.
	 *
	 * @param {string} markup A string of valid HTML markup.
	 * @param {?function} handleScript Invoked once for each rendered <script>.
	 * @return {array<DOMElement|DOMTextNode>} An array of rendered nodes.
	 */
	function createNodesFromMarkup(markup, handleScript) {
	  var node = dummyNode;
	  !!!dummyNode ? process.env.NODE_ENV !== 'production' ? invariant(false, 'createNodesFromMarkup dummy not initialized') : invariant(false) : void 0;
	  var nodeName = getNodeName(markup);

	  var wrap = nodeName && getMarkupWrap(nodeName);
	  if (wrap) {
	    node.innerHTML = wrap[1] + markup + wrap[2];

	    var wrapDepth = wrap[0];
	    while (wrapDepth--) {
	      node = node.lastChild;
	    }
	  } else {
	    node.innerHTML = markup;
	  }

	  var scripts = node.getElementsByTagName('script');
	  if (scripts.length) {
	    !handleScript ? process.env.NODE_ENV !== 'production' ? invariant(false, 'createNodesFromMarkup(...): Unexpected <script> element rendered.') : invariant(false) : void 0;
	    createArrayFromMixed(scripts).forEach(handleScript);
	  }

	  var nodes = Array.from(node.childNodes);
	  while (node.lastChild) {
	    node.removeChild(node.lastChild);
	  }
	  return nodes;
	}

	module.exports = createNodesFromMarkup;
	/* WEBPACK VAR INJECTION */}.call(exports, __webpack_require__(4)))

/***/ },
/* 89 */
/***/ function(module, exports, __webpack_require__) {

	/* WEBPACK VAR INJECTION */(function(process) {'use strict';

	/**
	 * Copyright (c) 2013-present, Facebook, Inc.
	 * All rights reserved.
	 *
	 * This source code is licensed under the BSD-style license found in the
	 * LICENSE file in the root directory of this source tree. An additional grant
	 * of patent rights can be found in the PATENTS file in the same directory.
	 *
	 * @typechecks
	 */

	var invariant = __webpack_require__(9);

	/**
	 * Convert array-like objects to arrays.
	 *
	 * This API assumes the caller knows the contents of the data type. For less
	 * well defined inputs use createArrayFromMixed.
	 *
	 * @param {object|function|filelist} obj
	 * @return {array}
	 */
	function toArray(obj) {
	  var length = obj.length;

	  // Some browsers builtin objects can report typeof 'function' (e.g. NodeList
	  // in old versions of Safari).
	  !(!Array.isArray(obj) && (typeof obj === 'object' || typeof obj === 'function')) ? process.env.NODE_ENV !== 'production' ? invariant(false, 'toArray: Array-like object expected') : invariant(false) : void 0;

	  !(typeof length === 'number') ? process.env.NODE_ENV !== 'production' ? invariant(false, 'toArray: Object needs a length property') : invariant(false) : void 0;

	  !(length === 0 || length - 1 in obj) ? process.env.NODE_ENV !== 'production' ? invariant(false, 'toArray: Object should have keys for indices') : invariant(false) : void 0;

	  !(typeof obj.callee !== 'function') ? process.env.NODE_ENV !== 'production' ? invariant(false, 'toArray: Object can\'t be `arguments`. Use rest params ' + '(function(...args) {}) or Array.from() instead.') : invariant(false) : void 0;

	  // Old IE doesn't give collections access to hasOwnProperty. Assume inputs
	  // without method will throw during the slice call and skip straight to the
	  // fallback.
	  if (obj.hasOwnProperty) {
	    try {
	      return Array.prototype.slice.call(obj);
	    } catch (e) {
	      // IE < 9 does not support Array#slice on collections objects
	    }
	  }

	  // Fall back to copying key by key. This assumes all keys have a value,
	  // so will not preserve sparsely populated inputs.
	  var ret = Array(length);
	  for (var ii = 0; ii < length; ii++) {
	    ret[ii] = obj[ii];
	  }
	  return ret;
	}

	/**
	 * Perform a heuristic test to determine if an object is "array-like".
	 *
	 *   A monk asked Joshu, a Zen master, "Has a dog Buddha nature?"
	 *   Joshu replied: "Mu."
	 *
	 * This function determines if its argument has "array nature": it returns
	 * true if the argument is an actual array, an `arguments' object, or an
	 * HTMLCollection (e.g. node.childNodes or node.getElementsByTagName()).
	 *
	 * It will return false for other array-like objects like Filelist.
	 *
	 * @param {*} obj
	 * @return {boolean}
	 */
	function hasArrayNature(obj) {
	  return(
	    // not null/false
	    !!obj && (
	    // arrays are objects, NodeLists are functions in Safari
	    typeof obj == 'object' || typeof obj == 'function') &&
	    // quacks like an array
	    'length' in obj &&
	    // not window
	    !('setInterval' in obj) &&
	    // no DOM node should be considered an array-like
	    // a 'select' element has 'length' and 'item' properties on IE8
	    typeof obj.nodeType != 'number' && (
	    // a real array
	    Array.isArray(obj) ||
	    // arguments
	    'callee' in obj ||
	    // HTMLCollection/NodeList
	    'item' in obj)
	  );
	}

	/**
	 * Ensure that the argument is an array by wrapping it in an array if it is not.
	 * Creates a copy of the argument if it is already an array.
	 *
	 * This is mostly useful idiomatically:
	 *
	 *   var createArrayFromMixed = require('createArrayFromMixed');
	 *
	 *   function takesOneOrMoreThings(things) {
	 *     things = createArrayFromMixed(things);
	 *     ...
	 *   }
	 *
	 * This allows you to treat `things' as an array, but accept scalars in the API.
	 *
	 * If you need to convert an array-like object, like `arguments`, into an array
	 * use toArray instead.
	 *
	 * @param {*} obj
	 * @return {array}
	 */
	function createArrayFromMixed(obj) {
	  if (!hasArrayNature(obj)) {
	    return [obj];
	  } else if (Array.isArray(obj)) {
	    return obj.slice();
	  } else {
	    return toArray(obj);
	  }
	}

	module.exports = createArrayFromMixed;
	/* WEBPACK VAR INJECTION */}.call(exports, __webpack_require__(4)))

/***/ },
/* 90 */
/***/ function(module, exports, __webpack_require__) {

	/* WEBPACK VAR INJECTION */(function(process) {'use strict';

	/**
	 * Copyright (c) 2013-present, Facebook, Inc.
	 * All rights reserved.
	 *
	 * This source code is licensed under the BSD-style license found in the
	 * LICENSE file in the root directory of this source tree. An additional grant
	 * of patent rights can be found in the PATENTS file in the same directory.
	 *
	 */

	/*eslint-disable fb-www/unsafe-html */

	var ExecutionEnvironment = __webpack_require__(49);

	var invariant = __webpack_require__(9);

	/**
	 * Dummy container used to detect which wraps are necessary.
	 */
	var dummyNode = ExecutionEnvironment.canUseDOM ? document.createElement('div') : null;

	/**
	 * Some browsers cannot use `innerHTML` to render certain elements standalone,
	 * so we wrap them, render the wrapped nodes, then extract the desired node.
	 *
	 * In IE8, certain elements cannot render alone, so wrap all elements ('*').
	 */

	var shouldWrap = {};

	var selectWrap = [1, '<select multiple="true">', '</select>'];
	var tableWrap = [1, '<table>', '</table>'];
	var trWrap = [3, '<table><tbody><tr>', '</tr></tbody></table>'];

	var svgWrap = [1, '<svg xmlns="http://www.w3.org/2000/svg">', '</svg>'];

	var markupWrap = {
	  '*': [1, '?<div>', '</div>'],

	  'area': [1, '<map>', '</map>'],
	  'col': [2, '<table><tbody></tbody><colgroup>', '</colgroup></table>'],
	  'legend': [1, '<fieldset>', '</fieldset>'],
	  'param': [1, '<object>', '</object>'],
	  'tr': [2, '<table><tbody>', '</tbody></table>'],

	  'optgroup': selectWrap,
	  'option': selectWrap,

	  'caption': tableWrap,
	  'colgroup': tableWrap,
	  'tbody': tableWrap,
	  'tfoot': tableWrap,
	  'thead': tableWrap,

	  'td': trWrap,
	  'th': trWrap
	};

	// Initialize the SVG elements since we know they'll always need to be wrapped
	// consistently. If they are created inside a <div> they will be initialized in
	// the wrong namespace (and will not display).
	var svgElements = ['circle', 'clipPath', 'defs', 'ellipse', 'g', 'image', 'line', 'linearGradient', 'mask', 'path', 'pattern', 'polygon', 'polyline', 'radialGradient', 'rect', 'stop', 'text', 'tspan'];
	svgElements.forEach(function (nodeName) {
	  markupWrap[nodeName] = svgWrap;
	  shouldWrap[nodeName] = true;
	});

	/**
	 * Gets the markup wrap configuration for the supplied `nodeName`.
	 *
	 * NOTE: This lazily detects which wraps are necessary for the current browser.
	 *
	 * @param {string} nodeName Lowercase `nodeName`.
	 * @return {?array} Markup wrap configuration, if applicable.
	 */
	function getMarkupWrap(nodeName) {
	  !!!dummyNode ? process.env.NODE_ENV !== 'production' ? invariant(false, 'Markup wrapping node not initialized') : invariant(false) : void 0;
	  if (!markupWrap.hasOwnProperty(nodeName)) {
	    nodeName = '*';
	  }
	  if (!shouldWrap.hasOwnProperty(nodeName)) {
	    if (nodeName === '*') {
	      dummyNode.innerHTML = '<link />';
	    } else {
	      dummyNode.innerHTML = '<' + nodeName + '></' + nodeName + '>';
	    }
	    shouldWrap[nodeName] = !dummyNode.firstChild;
	  }
	  return shouldWrap[nodeName] ? markupWrap[nodeName] : null;
	}

	module.exports = getMarkupWrap;
	/* WEBPACK VAR INJECTION */}.call(exports, __webpack_require__(4)))

/***/ },
/* 91 */
/***/ function(module, exports, __webpack_require__) {

	/**
	 * Copyright 2013-present, Facebook, Inc.
	 * All rights reserved.
	 *
	 * This source code is licensed under the BSD-style license found in the
	 * LICENSE file in the root directory of this source tree. An additional grant
	 * of patent rights can be found in the PATENTS file in the same directory.
	 *
	 * @providesModule ReactMultiChildUpdateTypes
	 */

	'use strict';

	var keyMirror = __webpack_require__(23);

	/**
	 * When a component's children are updated, a series of update configuration
	 * objects are created in order to batch and serialize the required changes.
	 *
	 * Enumerates all the possible types of update configurations.
	 *
	 * @internal
	 */
	var ReactMultiChildUpdateTypes = keyMirror({
	  INSERT_MARKUP: null,
	  MOVE_EXISTING: null,
	  REMOVE_NODE: null,
	  SET_MARKUP: null,
	  TEXT_CONTENT: null
	});

	module.exports = ReactMultiChildUpdateTypes;

/***/ },
/* 92 */
/***/ function(module, exports, __webpack_require__) {

	/**
	 * Copyright 2013-present, Facebook, Inc.
	 * All rights reserved.
	 *
	 * This source code is licensed under the BSD-style license found in the
	 * LICENSE file in the root directory of this source tree. An additional grant
	 * of patent rights can be found in the PATENTS file in the same directory.
	 *
	 * @providesModule ReactDOMIDOperations
	 */

	'use strict';

	var DOMChildrenOperations = __webpack_require__(80);
	var ReactDOMComponentTree = __webpack_require__(36);

	/**
	 * Operations used to process updates to DOM nodes.
	 */
	var ReactDOMIDOperations = {

	  /**
	   * Updates a component's children by processing a series of updates.
	   *
	   * @param {array<object>} updates List of update configurations.
	   * @internal
	   */
	  dangerouslyProcessChildrenUpdates: function (parentInst, updates) {
	    var node = ReactDOMComponentTree.getNodeFromInstance(parentInst);
	    DOMChildrenOperations.processUpdates(node, updates);
	  }
	};

	module.exports = ReactDOMIDOperations;

/***/ },
/* 93 */
/***/ function(module, exports, __webpack_require__) {

	/* WEBPACK VAR INJECTION */(function(process) {/**
	 * Copyright 2013-present, Facebook, Inc.
	 * All rights reserved.
	 *
	 * This source code is licensed under the BSD-style license found in the
	 * LICENSE file in the root directory of this source tree. An additional grant
	 * of patent rights can be found in the PATENTS file in the same directory.
	 *
	 * @providesModule ReactDOMComponent
	 */

	/* global hasOwnProperty:true */

	'use strict';

	var _prodInvariant = __webpack_require__(8),
	    _assign = __webpack_require__(5);

	var AutoFocusUtils = __webpack_require__(94);
	var CSSPropertyOperations = __webpack_require__(96);
	var DOMLazyTree = __webpack_require__(81);
	var DOMNamespaces = __webpack_require__(82);
	var DOMProperty = __webpack_require__(37);
	var DOMPropertyOperations = __webpack_require__(104);
	var EventConstants = __webpack_require__(41);
	var EventPluginHub = __webpack_require__(43);
	var EventPluginRegistry = __webpack_require__(44);
	var ReactBrowserEventEmitter = __webpack_require__(110);
	var ReactComponentBrowserEnvironment = __webpack_require__(79);
	var ReactDOMButton = __webpack_require__(113);
	var ReactDOMComponentFlags = __webpack_require__(38);
	var ReactDOMComponentTree = __webpack_require__(36);
	var ReactDOMInput = __webpack_require__(115);
	var ReactDOMOption = __webpack_require__(117);
	var ReactDOMSelect = __webpack_require__(118);
	var ReactDOMTextarea = __webpack_require__(119);
	var ReactInstrumentation = __webpack_require__(62);
	var ReactMultiChild = __webpack_require__(120);
	var ReactServerRenderingTransaction = __webpack_require__(131);

	var emptyFunction = __webpack_require__(13);
	var escapeTextContentForBrowser = __webpack_require__(86);
	var invariant = __webpack_require__(9);
	var isEventSupported = __webpack_require__(70);
	var keyOf = __webpack_require__(25);
	var shallowEqual = __webpack_require__(134);
	var validateDOMNesting = __webpack_require__(135);
	var warning = __webpack_require__(12);

	var Flags = ReactDOMComponentFlags;
	var deleteListener = EventPluginHub.deleteListener;
	var getNode = ReactDOMComponentTree.getNodeFromInstance;
	var listenTo = ReactBrowserEventEmitter.listenTo;
	var registrationNameModules = EventPluginRegistry.registrationNameModules;

	// For quickly matching children type, to test if can be treated as content.
	var CONTENT_TYPES = { 'string': true, 'number': true };

	var STYLE = keyOf({ style: null });
	var HTML = keyOf({ __html: null });
	var RESERVED_PROPS = {
	  children: null,
	  dangerouslySetInnerHTML: null,
	  suppressContentEditableWarning: null
	};

	// Node type for document fragments (Node.DOCUMENT_FRAGMENT_NODE).
	var DOC_FRAGMENT_TYPE = 11;

	function getDeclarationErrorAddendum(internalInstance) {
	  if (internalInstance) {
	    var owner = internalInstance._currentElement._owner || null;
	    if (owner) {
	      var name = owner.getName();
	      if (name) {
	        return ' This DOM node was rendered by `' + name + '`.';
	      }
	    }
	  }
	  return '';
	}

	function friendlyStringify(obj) {
	  if (typeof obj === 'object') {
	    if (Array.isArray(obj)) {
	      return '[' + obj.map(friendlyStringify).join(', ') + ']';
	    } else {
	      var pairs = [];
	      for (var key in obj) {
	        if (Object.prototype.hasOwnProperty.call(obj, key)) {
	          var keyEscaped = /^[a-z$_][\w$_]*$/i.test(key) ? key : JSON.stringify(key);
	          pairs.push(keyEscaped + ': ' + friendlyStringify(obj[key]));
	        }
	      }
	      return '{' + pairs.join(', ') + '}';
	    }
	  } else if (typeof obj === 'string') {
	    return JSON.stringify(obj);
	  } else if (typeof obj === 'function') {
	    return '[function object]';
	  }
	  // Differs from JSON.stringify in that undefined because undefined and that
	  // inf and nan don't become null
	  return String(obj);
	}

	var styleMutationWarning = {};

	function checkAndWarnForMutatedStyle(style1, style2, component) {
	  if (style1 == null || style2 == null) {
	    return;
	  }
	  if (shallowEqual(style1, style2)) {
	    return;
	  }

	  var componentName = component._tag;
	  var owner = component._currentElement._owner;
	  var ownerName;
	  if (owner) {
	    ownerName = owner.getName();
	  }

	  var hash = ownerName + '|' + componentName;

	  if (styleMutationWarning.hasOwnProperty(hash)) {
	    return;
	  }

	  styleMutationWarning[hash] = true;

	  process.env.NODE_ENV !== 'production' ? warning(false, '`%s` was passed a style object that has previously been mutated. ' + 'Mutating `style` is deprecated. Consider cloning it beforehand. Check ' + 'the `render` %s. Previous style: %s. Mutated style: %s.', componentName, owner ? 'of `' + ownerName + '`' : 'using <' + componentName + '>', friendlyStringify(style1), friendlyStringify(style2)) : void 0;
	}

	/**
	 * @param {object} component
	 * @param {?object} props
	 */
	function assertValidProps(component, props) {
	  if (!props) {
	    return;
	  }
	  // Note the use of `==` which checks for null or undefined.
	  if (voidElementTags[component._tag]) {
	    !(props.children == null && props.dangerouslySetInnerHTML == null) ? process.env.NODE_ENV !== 'production' ? invariant(false, '%s is a void element tag and must neither have `children` nor use `dangerouslySetInnerHTML`.%s', component._tag, component._currentElement._owner ? ' Check the render method of ' + component._currentElement._owner.getName() + '.' : '') : _prodInvariant('137', component._tag, component._currentElement._owner ? ' Check the render method of ' + component._currentElement._owner.getName() + '.' : '') : void 0;
	  }
	  if (props.dangerouslySetInnerHTML != null) {
	    !(props.children == null) ? process.env.NODE_ENV !== 'production' ? invariant(false, 'Can only set one of `children` or `props.dangerouslySetInnerHTML`.') : _prodInvariant('60') : void 0;
	    !(typeof props.dangerouslySetInnerHTML === 'object' && HTML in props.dangerouslySetInnerHTML) ? process.env.NODE_ENV !== 'production' ? invariant(false, '`props.dangerouslySetInnerHTML` must be in the form `{__html: ...}`. Please visit https://fb.me/react-invariant-dangerously-set-inner-html for more information.') : _prodInvariant('61') : void 0;
	  }
	  if (process.env.NODE_ENV !== 'production') {
	    process.env.NODE_ENV !== 'production' ? warning(props.innerHTML == null, 'Directly setting property `innerHTML` is not permitted. ' + 'For more information, lookup documentation on `dangerouslySetInnerHTML`.') : void 0;
	    process.env.NODE_ENV !== 'production' ? warning(props.suppressContentEditableWarning || !props.contentEditable || props.children == null, 'A component is `contentEditable` and contains `children` managed by ' + 'React. It is now your responsibility to guarantee that none of ' + 'those nodes are unexpectedly modified or duplicated. This is ' + 'probably not intentional.') : void 0;
	    process.env.NODE_ENV !== 'production' ? warning(props.onFocusIn == null && props.onFocusOut == null, 'React uses onFocus and onBlur instead of onFocusIn and onFocusOut. ' + 'All React events are normalized to bubble, so onFocusIn and onFocusOut ' + 'are not needed/supported by React.') : void 0;
	  }
	  !(props.style == null || typeof props.style === 'object') ? process.env.NODE_ENV !== 'production' ? invariant(false, 'The `style` prop expects a mapping from style properties to values, not a string. For example, style={{marginRight: spacing + \'em\'}} when using JSX.%s', getDeclarationErrorAddendum(component)) : _prodInvariant('62', getDeclarationErrorAddendum(component)) : void 0;
	}

	function enqueuePutListener(inst, registrationName, listener, transaction) {
	  if (transaction instanceof ReactServerRenderingTransaction) {
	    return;
	  }
	  if (process.env.NODE_ENV !== 'production') {
	    // IE8 has no API for event capturing and the `onScroll` event doesn't
	    // bubble.
	    process.env.NODE_ENV !== 'production' ? warning(registrationName !== 'onScroll' || isEventSupported('scroll', true), 'This browser doesn\'t support the `onScroll` event') : void 0;
	  }
	  var containerInfo = inst._hostContainerInfo;
	  var isDocumentFragment = containerInfo._node && containerInfo._node.nodeType === DOC_FRAGMENT_TYPE;
	  var doc = isDocumentFragment ? containerInfo._node : containerInfo._ownerDocument;
	  listenTo(registrationName, doc);
	  transaction.getReactMountReady().enqueue(putListener, {
	    inst: inst,
	    registrationName: registrationName,
	    listener: listener
	  });
	}

	function putListener() {
	  var listenerToPut = this;
	  EventPluginHub.putListener(listenerToPut.inst, listenerToPut.registrationName, listenerToPut.listener);
	}

	function inputPostMount() {
	  var inst = this;
	  ReactDOMInput.postMountWrapper(inst);
	}

	function textareaPostMount() {
	  var inst = this;
	  ReactDOMTextarea.postMountWrapper(inst);
	}

	function optionPostMount() {
	  var inst = this;
	  ReactDOMOption.postMountWrapper(inst);
	}

	var setContentChildForInstrumentation = emptyFunction;
	if (process.env.NODE_ENV !== 'production') {
	  setContentChildForInstrumentation = function (content) {
	    var hasExistingContent = this._contentDebugID != null;
	    var debugID = this._debugID;
	    var contentDebugID = debugID + '#text';

	    if (content == null) {
	      if (hasExistingContent) {
	        ReactInstrumentation.debugTool.onUnmountComponent(this._contentDebugID);
	      }
	      this._contentDebugID = null;
	      return;
	    }

	    this._contentDebugID = contentDebugID;
	    var text = '' + content;

	    ReactInstrumentation.debugTool.onSetDisplayName(contentDebugID, '#text');
	    ReactInstrumentation.debugTool.onSetParent(contentDebugID, debugID);
	    ReactInstrumentation.debugTool.onSetText(contentDebugID, text);

	    if (hasExistingContent) {
	      ReactInstrumentation.debugTool.onBeforeUpdateComponent(contentDebugID, content);
	      ReactInstrumentation.debugTool.onUpdateComponent(contentDebugID);
	    } else {
	      ReactInstrumentation.debugTool.onBeforeMountComponent(contentDebugID, content);
	      ReactInstrumentation.debugTool.onMountComponent(contentDebugID);
	      ReactInstrumentation.debugTool.onSetChildren(debugID, [contentDebugID]);
	    }
	  };
	}

	// There are so many media events, it makes sense to just
	// maintain a list rather than create a `trapBubbledEvent` for each
	var mediaEvents = {
	  topAbort: 'abort',
	  topCanPlay: 'canplay',
	  topCanPlayThrough: 'canplaythrough',
	  topDurationChange: 'durationchange',
	  topEmptied: 'emptied',
	  topEncrypted: 'encrypted',
	  topEnded: 'ended',
	  topError: 'error',
	  topLoadedData: 'loadeddata',
	  topLoadedMetadata: 'loadedmetadata',
	  topLoadStart: 'loadstart',
	  topPause: 'pause',
	  topPlay: 'play',
	  topPlaying: 'playing',
	  topProgress: 'progress',
	  topRateChange: 'ratechange',
	  topSeeked: 'seeked',
	  topSeeking: 'seeking',
	  topStalled: 'stalled',
	  topSuspend: 'suspend',
	  topTimeUpdate: 'timeupdate',
	  topVolumeChange: 'volumechange',
	  topWaiting: 'waiting'
	};

	function trapBubbledEventsLocal() {
	  var inst = this;
	  // If a component renders to null or if another component fatals and causes
	  // the state of the tree to be corrupted, `node` here can be null.
	  !inst._rootNodeID ? process.env.NODE_ENV !== 'production' ? invariant(false, 'Must be mounted to trap events') : _prodInvariant('63') : void 0;
	  var node = getNode(inst);
	  !node ? process.env.NODE_ENV !== 'production' ? invariant(false, 'trapBubbledEvent(...): Requires node to be rendered.') : _prodInvariant('64') : void 0;

	  switch (inst._tag) {
	    case 'iframe':
	    case 'object':
	      inst._wrapperState.listeners = [ReactBrowserEventEmitter.trapBubbledEvent(EventConstants.topLevelTypes.topLoad, 'load', node)];
	      break;
	    case 'video':
	    case 'audio':

	      inst._wrapperState.listeners = [];
	      // Create listener for each media event
	      for (var event in mediaEvents) {
	        if (mediaEvents.hasOwnProperty(event)) {
	          inst._wrapperState.listeners.push(ReactBrowserEventEmitter.trapBubbledEvent(EventConstants.topLevelTypes[event], mediaEvents[event], node));
	        }
	      }
	      break;
	    case 'source':
	      inst._wrapperState.listeners = [ReactBrowserEventEmitter.trapBubbledEvent(EventConstants.topLevelTypes.topError, 'error', node)];
	      break;
	    case 'img':
	      inst._wrapperState.listeners = [ReactBrowserEventEmitter.trapBubbledEvent(EventConstants.topLevelTypes.topError, 'error', node), ReactBrowserEventEmitter.trapBubbledEvent(EventConstants.topLevelTypes.topLoad, 'load', node)];
	      break;
	    case 'form':
	      inst._wrapperState.listeners = [ReactBrowserEventEmitter.trapBubbledEvent(EventConstants.topLevelTypes.topReset, 'reset', node), ReactBrowserEventEmitter.trapBubbledEvent(EventConstants.topLevelTypes.topSubmit, 'submit', node)];
	      break;
	    case 'input':
	    case 'select':
	    case 'textarea':
	      inst._wrapperState.listeners = [ReactBrowserEventEmitter.trapBubbledEvent(EventConstants.topLevelTypes.topInvalid, 'invalid', node)];
	      break;
	  }
	}

	function postUpdateSelectWrapper() {
	  ReactDOMSelect.postUpdateWrapper(this);
	}

	// For HTML, certain tags should omit their close tag. We keep a whitelist for
	// those special-case tags.

	var omittedCloseTags = {
	  'area': true,
	  'base': true,
	  'br': true,
	  'col': true,
	  'embed': true,
	  'hr': true,
	  'img': true,
	  'input': true,
	  'keygen': true,
	  'link': true,
	  'meta': true,
	  'param': true,
	  'source': true,
	  'track': true,
	  'wbr': true
	};

	// NOTE: menuitem's close tag should be omitted, but that causes problems.
	var newlineEatingTags = {
	  'listing': true,
	  'pre': true,
	  'textarea': true
	};

	// For HTML, certain tags cannot have children. This has the same purpose as
	// `omittedCloseTags` except that `menuitem` should still have its closing tag.

	var voidElementTags = _assign({
	  'menuitem': true
	}, omittedCloseTags);

	// We accept any tag to be rendered but since this gets injected into arbitrary
	// HTML, we want to make sure that it's a safe tag.
	// http://www.w3.org/TR/REC-xml/#NT-Name

	var VALID_TAG_REGEX = /^[a-zA-Z][a-zA-Z:_\.\-\d]*$/; // Simplified subset
	var validatedTagCache = {};
	var hasOwnProperty = {}.hasOwnProperty;

	function validateDangerousTag(tag) {
	  if (!hasOwnProperty.call(validatedTagCache, tag)) {
	    !VALID_TAG_REGEX.test(tag) ? process.env.NODE_ENV !== 'production' ? invariant(false, 'Invalid tag: %s', tag) : _prodInvariant('65', tag) : void 0;
	    validatedTagCache[tag] = true;
	  }
	}

	function isCustomComponent(tagName, props) {
	  return tagName.indexOf('-') >= 0 || props.is != null;
	}

	var globalIdCounter = 1;

	/**
	 * Creates a new React class that is idempotent and capable of containing other
	 * React components. It accepts event listeners and DOM properties that are
	 * valid according to `DOMProperty`.
	 *
	 *  - Event listeners: `onClick`, `onMouseDown`, etc.
	 *  - DOM properties: `className`, `name`, `title`, etc.
	 *
	 * The `style` property functions differently from the DOM API. It accepts an
	 * object mapping of style properties to values.
	 *
	 * @constructor ReactDOMComponent
	 * @extends ReactMultiChild
	 */
	function ReactDOMComponent(element) {
	  var tag = element.type;
	  validateDangerousTag(tag);
	  this._currentElement = element;
	  this._tag = tag.toLowerCase();
	  this._namespaceURI = null;
	  this._renderedChildren = null;
	  this._previousStyle = null;
	  this._previousStyleCopy = null;
	  this._hostNode = null;
	  this._hostParent = null;
	  this._rootNodeID = null;
	  this._domID = null;
	  this._hostContainerInfo = null;
	  this._wrapperState = null;
	  this._topLevelWrapper = null;
	  this._flags = 0;
	  if (process.env.NODE_ENV !== 'production') {
	    this._ancestorInfo = null;
	    setContentChildForInstrumentation.call(this, null);
	  }
	}

	ReactDOMComponent.displayName = 'ReactDOMComponent';

	ReactDOMComponent.Mixin = {

	  /**
	   * Generates root tag markup then recurses. This method has side effects and
	   * is not idempotent.
	   *
	   * @internal
	   * @param {ReactReconcileTransaction|ReactServerRenderingTransaction} transaction
	   * @param {?ReactDOMComponent} the containing DOM component instance
	   * @param {?object} info about the host container
	   * @param {object} context
	   * @return {string} The computed markup.
	   */
	  mountComponent: function (transaction, hostParent, hostContainerInfo, context) {
	    this._rootNodeID = globalIdCounter++;
	    this._domID = hostContainerInfo._idCounter++;
	    this._hostParent = hostParent;
	    this._hostContainerInfo = hostContainerInfo;

	    var props = this._currentElement.props;

	    switch (this._tag) {
	      case 'audio':
	      case 'form':
	      case 'iframe':
	      case 'img':
	      case 'link':
	      case 'object':
	      case 'source':
	      case 'video':
	        this._wrapperState = {
	          listeners: null
	        };
	        transaction.getReactMountReady().enqueue(trapBubbledEventsLocal, this);
	        break;
	      case 'button':
	        props = ReactDOMButton.getHostProps(this, props, hostParent);
	        break;
	      case 'input':
	        ReactDOMInput.mountWrapper(this, props, hostParent);
	        props = ReactDOMInput.getHostProps(this, props);
	        transaction.getReactMountReady().enqueue(trapBubbledEventsLocal, this);
	        break;
	      case 'option':
	        ReactDOMOption.mountWrapper(this, props, hostParent);
	        props = ReactDOMOption.getHostProps(this, props);
	        break;
	      case 'select':
	        ReactDOMSelect.mountWrapper(this, props, hostParent);
	        props = ReactDOMSelect.getHostProps(this, props);
	        transaction.getReactMountReady().enqueue(trapBubbledEventsLocal, this);
	        break;
	      case 'textarea':
	        ReactDOMTextarea.mountWrapper(this, props, hostParent);
	        props = ReactDOMTextarea.getHostProps(this, props);
	        transaction.getReactMountReady().enqueue(trapBubbledEventsLocal, this);
	        break;
	    }

	    assertValidProps(this, props);

	    // We create tags in the namespace of their parent container, except HTML
	    // tags get no namespace.
	    var namespaceURI;
	    var parentTag;
	    if (hostParent != null) {
	      namespaceURI = hostParent._namespaceURI;
	      parentTag = hostParent._tag;
	    } else if (hostContainerInfo._tag) {
	      namespaceURI = hostContainerInfo._namespaceURI;
	      parentTag = hostContainerInfo._tag;
	    }
	    if (namespaceURI == null || namespaceURI === DOMNamespaces.svg && parentTag === 'foreignobject') {
	      namespaceURI = DOMNamespaces.html;
	    }
	    if (namespaceURI === DOMNamespaces.html) {
	      if (this._tag === 'svg') {
	        namespaceURI = DOMNamespaces.svg;
	      } else if (this._tag === 'math') {
	        namespaceURI = DOMNamespaces.mathml;
	      }
	    }
	    this._namespaceURI = namespaceURI;

	    if (process.env.NODE_ENV !== 'production') {
	      var parentInfo;
	      if (hostParent != null) {
	        parentInfo = hostParent._ancestorInfo;
	      } else if (hostContainerInfo._tag) {
	        parentInfo = hostContainerInfo._ancestorInfo;
	      }
	      if (parentInfo) {
	        // parentInfo should always be present except for the top-level
	        // component when server rendering
	        validateDOMNesting(this._tag, this, parentInfo);
	      }
	      this._ancestorInfo = validateDOMNesting.updatedAncestorInfo(parentInfo, this._tag, this);
	    }

	    var mountImage;
	    if (transaction.useCreateElement) {
	      var ownerDocument = hostContainerInfo._ownerDocument;
	      var el;
	      if (namespaceURI === DOMNamespaces.html) {
	        if (this._tag === 'script') {
	          // Create the script via .innerHTML so its "parser-inserted" flag is
	          // set to true and it does not execute
	          var div = ownerDocument.createElement('div');
	          var type = this._currentElement.type;
	          div.innerHTML = '<' + type + '></' + type + '>';
	          el = div.removeChild(div.firstChild);
	        } else if (props.is) {
	          el = ownerDocument.createElement(this._currentElement.type, props.is);
	        } else {
	          // Separate else branch instead of using `props.is || undefined` above becuase of a Firefox bug.
	          // See discussion in https://github.com/facebook/react/pull/6896
	          // and discussion in https://bugzilla.mozilla.org/show_bug.cgi?id=1276240
	          el = ownerDocument.createElement(this._currentElement.type);
	        }
	      } else {
	        el = ownerDocument.createElementNS(namespaceURI, this._currentElement.type);
	      }
	      ReactDOMComponentTree.precacheNode(this, el);
	      this._flags |= Flags.hasCachedChildNodes;
	      if (!this._hostParent) {
	        DOMPropertyOperations.setAttributeForRoot(el);
	      }
	      this._updateDOMProperties(null, props, transaction);
	      var lazyTree = DOMLazyTree(el);
	      this._createInitialChildren(transaction, props, context, lazyTree);
	      mountImage = lazyTree;
	    } else {
	      var tagOpen = this._createOpenTagMarkupAndPutListeners(transaction, props);
	      var tagContent = this._createContentMarkup(transaction, props, context);
	      if (!tagContent && omittedCloseTags[this._tag]) {
	        mountImage = tagOpen + '/>';
	      } else {
	        mountImage = tagOpen + '>' + tagContent + '</' + this._currentElement.type + '>';
	      }
	    }

	    switch (this._tag) {
	      case 'input':
	        transaction.getReactMountReady().enqueue(inputPostMount, this);
	        if (props.autoFocus) {
	          transaction.getReactMountReady().enqueue(AutoFocusUtils.focusDOMComponent, this);
	        }
	        break;
	      case 'textarea':
	        transaction.getReactMountReady().enqueue(textareaPostMount, this);
	        if (props.autoFocus) {
	          transaction.getReactMountReady().enqueue(AutoFocusUtils.focusDOMComponent, this);
	        }
	        break;
	      case 'select':
	        if (props.autoFocus) {
	          transaction.getReactMountReady().enqueue(AutoFocusUtils.focusDOMComponent, this);
	        }
	        break;
	      case 'button':
	        if (props.autoFocus) {
	          transaction.getReactMountReady().enqueue(AutoFocusUtils.focusDOMComponent, this);
	        }
	        break;
	      case 'option':
	        transaction.getReactMountReady().enqueue(optionPostMount, this);
	        break;
	    }

	    return mountImage;
	  },

	  /**
	   * Creates markup for the open tag and all attributes.
	   *
	   * This method has side effects because events get registered.
	   *
	   * Iterating over object properties is faster than iterating over arrays.
	   * @see http://jsperf.com/obj-vs-arr-iteration
	   *
	   * @private
	   * @param {ReactReconcileTransaction|ReactServerRenderingTransaction} transaction
	   * @param {object} props
	   * @return {string} Markup of opening tag.
	   */
	  _createOpenTagMarkupAndPutListeners: function (transaction, props) {
	    var ret = '<' + this._currentElement.type;

	    for (var propKey in props) {
	      if (!props.hasOwnProperty(propKey)) {
	        continue;
	      }
	      var propValue = props[propKey];
	      if (propValue == null) {
	        continue;
	      }
	      if (registrationNameModules.hasOwnProperty(propKey)) {
	        if (propValue) {
	          enqueuePutListener(this, propKey, propValue, transaction);
	        }
	      } else {
	        if (propKey === STYLE) {
	          if (propValue) {
	            if (process.env.NODE_ENV !== 'production') {
	              // See `_updateDOMProperties`. style block
	              this._previousStyle = propValue;
	            }
	            propValue = this._previousStyleCopy = _assign({}, props.style);
	          }
	          propValue = CSSPropertyOperations.createMarkupForStyles(propValue, this);
	        }
	        var markup = null;
	        if (this._tag != null && isCustomComponent(this._tag, props)) {
	          if (!RESERVED_PROPS.hasOwnProperty(propKey)) {
	            markup = DOMPropertyOperations.createMarkupForCustomAttribute(propKey, propValue);
	          }
	        } else {
	          markup = DOMPropertyOperations.createMarkupForProperty(propKey, propValue);
	        }
	        if (markup) {
	          ret += ' ' + markup;
	        }
	      }
	    }

	    // For static pages, no need to put React ID and checksum. Saves lots of
	    // bytes.
	    if (transaction.renderToStaticMarkup) {
	      return ret;
	    }

	    if (!this._hostParent) {
	      ret += ' ' + DOMPropertyOperations.createMarkupForRoot();
	    }
	    ret += ' ' + DOMPropertyOperations.createMarkupForID(this._domID);
	    return ret;
	  },

	  /**
	   * Creates markup for the content between the tags.
	   *
	   * @private
	   * @param {ReactReconcileTransaction|ReactServerRenderingTransaction} transaction
	   * @param {object} props
	   * @param {object} context
	   * @return {string} Content markup.
	   */
	  _createContentMarkup: function (transaction, props, context) {
	    var ret = '';

	    // Intentional use of != to avoid catching zero/false.
	    var innerHTML = props.dangerouslySetInnerHTML;
	    if (innerHTML != null) {
	      if (innerHTML.__html != null) {
	        ret = innerHTML.__html;
	      }
	    } else {
	      var contentToUse = CONTENT_TYPES[typeof props.children] ? props.children : null;
	      var childrenToUse = contentToUse != null ? null : props.children;
	      if (contentToUse != null) {
	        // TODO: Validate that text is allowed as a child of this node
	        ret = escapeTextContentForBrowser(contentToUse);
	        if (process.env.NODE_ENV !== 'production') {
	          setContentChildForInstrumentation.call(this, contentToUse);
	        }
	      } else if (childrenToUse != null) {
	        var mountImages = this.mountChildren(childrenToUse, transaction, context);
	        ret = mountImages.join('');
	      }
	    }
	    if (newlineEatingTags[this._tag] && ret.charAt(0) === '\n') {
	      // text/html ignores the first character in these tags if it's a newline
	      // Prefer to break application/xml over text/html (for now) by adding
	      // a newline specifically to get eaten by the parser. (Alternately for
	      // textareas, replacing "^\n" with "\r\n" doesn't get eaten, and the first
	      // \r is normalized out by HTMLTextAreaElement#value.)
	      // See: <http://www.w3.org/TR/html-polyglot/#newlines-in-textarea-and-pre>
	      // See: <http://www.w3.org/TR/html5/syntax.html#element-restrictions>
	      // See: <http://www.w3.org/TR/html5/syntax.html#newlines>
	      // See: Parsing of "textarea" "listing" and "pre" elements
	      //  from <http://www.w3.org/TR/html5/syntax.html#parsing-main-inbody>
	      return '\n' + ret;
	    } else {
	      return ret;
	    }
	  },

	  _createInitialChildren: function (transaction, props, context, lazyTree) {
	    // Intentional use of != to avoid catching zero/false.
	    var innerHTML = props.dangerouslySetInnerHTML;
	    if (innerHTML != null) {
	      if (innerHTML.__html != null) {
	        DOMLazyTree.queueHTML(lazyTree, innerHTML.__html);
	      }
	    } else {
	      var contentToUse = CONTENT_TYPES[typeof props.children] ? props.children : null;
	      var childrenToUse = contentToUse != null ? null : props.children;
	      if (contentToUse != null) {
	        // TODO: Validate that text is allowed as a child of this node
	        if (process.env.NODE_ENV !== 'production') {
	          setContentChildForInstrumentation.call(this, contentToUse);
	        }
	        DOMLazyTree.queueText(lazyTree, contentToUse);
	      } else if (childrenToUse != null) {
	        var mountImages = this.mountChildren(childrenToUse, transaction, context);
	        for (var i = 0; i < mountImages.length; i++) {
	          DOMLazyTree.queueChild(lazyTree, mountImages[i]);
	        }
	      }
	    }
	  },

	  /**
	   * Receives a next element and updates the component.
	   *
	   * @internal
	   * @param {ReactElement} nextElement
	   * @param {ReactReconcileTransaction|ReactServerRenderingTransaction} transaction
	   * @param {object} context
	   */
	  receiveComponent: function (nextElement, transaction, context) {
	    var prevElement = this._currentElement;
	    this._currentElement = nextElement;
	    this.updateComponent(transaction, prevElement, nextElement, context);
	  },

	  /**
	   * Updates a DOM component after it has already been allocated and
	   * attached to the DOM. Reconciles the root DOM node, then recurses.
	   *
	   * @param {ReactReconcileTransaction} transaction
	   * @param {ReactElement} prevElement
	   * @param {ReactElement} nextElement
	   * @internal
	   * @overridable
	   */
	  updateComponent: function (transaction, prevElement, nextElement, context) {
	    var lastProps = prevElement.props;
	    var nextProps = this._currentElement.props;

	    switch (this._tag) {
	      case 'button':
	        lastProps = ReactDOMButton.getHostProps(this, lastProps);
	        nextProps = ReactDOMButton.getHostProps(this, nextProps);
	        break;
	      case 'input':
	        ReactDOMInput.updateWrapper(this);
	        lastProps = ReactDOMInput.getHostProps(this, lastProps);
	        nextProps = ReactDOMInput.getHostProps(this, nextProps);
	        break;
	      case 'option':
	        lastProps = ReactDOMOption.getHostProps(this, lastProps);
	        nextProps = ReactDOMOption.getHostProps(this, nextProps);
	        break;
	      case 'select':
	        lastProps = ReactDOMSelect.getHostProps(this, lastProps);
	        nextProps = ReactDOMSelect.getHostProps(this, nextProps);
	        break;
	      case 'textarea':
	        ReactDOMTextarea.updateWrapper(this);
	        lastProps = ReactDOMTextarea.getHostProps(this, lastProps);
	        nextProps = ReactDOMTextarea.getHostProps(this, nextProps);
	        break;
	    }

	    assertValidProps(this, nextProps);
	    this._updateDOMProperties(lastProps, nextProps, transaction);
	    this._updateDOMChildren(lastProps, nextProps, transaction, context);

	    if (this._tag === 'select') {
	      // <select> value update needs to occur after <option> children
	      // reconciliation
	      transaction.getReactMountReady().enqueue(postUpdateSelectWrapper, this);
	    }
	  },

	  /**
	   * Reconciles the properties by detecting differences in property values and
	   * updating the DOM as necessary. This function is probably the single most
	   * critical path for performance optimization.
	   *
	   * TODO: Benchmark whether checking for changed values in memory actually
	   *       improves performance (especially statically positioned elements).
	   * TODO: Benchmark the effects of putting this at the top since 99% of props
	   *       do not change for a given reconciliation.
	   * TODO: Benchmark areas that can be improved with caching.
	   *
	   * @private
	   * @param {object} lastProps
	   * @param {object} nextProps
	   * @param {?DOMElement} node
	   */
	  _updateDOMProperties: function (lastProps, nextProps, transaction) {
	    var propKey;
	    var styleName;
	    var styleUpdates;
	    for (propKey in lastProps) {
	      if (nextProps.hasOwnProperty(propKey) || !lastProps.hasOwnProperty(propKey) || lastProps[propKey] == null) {
	        continue;
	      }
	      if (propKey === STYLE) {
	        var lastStyle = this._previousStyleCopy;
	        for (styleName in lastStyle) {
	          if (lastStyle.hasOwnProperty(styleName)) {
	            styleUpdates = styleUpdates || {};
	            styleUpdates[styleName] = '';
	          }
	        }
	        this._previousStyleCopy = null;
	      } else if (registrationNameModules.hasOwnProperty(propKey)) {
	        if (lastProps[propKey]) {
	          // Only call deleteListener if there was a listener previously or
	          // else willDeleteListener gets called when there wasn't actually a
	          // listener (e.g., onClick={null})
	          deleteListener(this, propKey);
	        }
	      } else if (isCustomComponent(this._tag, lastProps)) {
	        if (!RESERVED_PROPS.hasOwnProperty(propKey)) {
	          DOMPropertyOperations.deleteValueForAttribute(getNode(this), propKey);
	        }
	      } else if (DOMProperty.properties[propKey] || DOMProperty.isCustomAttribute(propKey)) {
	        DOMPropertyOperations.deleteValueForProperty(getNode(this), propKey);
	      }
	    }
	    for (propKey in nextProps) {
	      var nextProp = nextProps[propKey];
	      var lastProp = propKey === STYLE ? this._previousStyleCopy : lastProps != null ? lastProps[propKey] : undefined;
	      if (!nextProps.hasOwnProperty(propKey) || nextProp === lastProp || nextProp == null && lastProp == null) {
	        continue;
	      }
	      if (propKey === STYLE) {
	        if (nextProp) {
	          if (process.env.NODE_ENV !== 'production') {
	            checkAndWarnForMutatedStyle(this._previousStyleCopy, this._previousStyle, this);
	            this._previousStyle = nextProp;
	          }
	          nextProp = this._previousStyleCopy = _assign({}, nextProp);
	        } else {
	          this._previousStyleCopy = null;
	        }
	        if (lastProp) {
	          // Unset styles on `lastProp` but not on `nextProp`.
	          for (styleName in lastProp) {
	            if (lastProp.hasOwnProperty(styleName) && (!nextProp || !nextProp.hasOwnProperty(styleName))) {
	              styleUpdates = styleUpdates || {};
	              styleUpdates[styleName] = '';
	            }
	          }
	          // Update styles that changed since `lastProp`.
	          for (styleName in nextProp) {
	            if (nextProp.hasOwnProperty(styleName) && lastProp[styleName] !== nextProp[styleName]) {
	              styleUpdates = styleUpdates || {};
	              styleUpdates[styleName] = nextProp[styleName];
	            }
	          }
	        } else {
	          // Relies on `updateStylesByID` not mutating `styleUpdates`.
	          styleUpdates = nextProp;
	        }
	      } else if (registrationNameModules.hasOwnProperty(propKey)) {
	        if (nextProp) {
	          enqueuePutListener(this, propKey, nextProp, transaction);
	        } else if (lastProp) {
	          deleteListener(this, propKey);
	        }
	      } else if (isCustomComponent(this._tag, nextProps)) {
	        if (!RESERVED_PROPS.hasOwnProperty(propKey)) {
	          DOMPropertyOperations.setValueForAttribute(getNode(this), propKey, nextProp);
	        }
	      } else if (DOMProperty.properties[propKey] || DOMProperty.isCustomAttribute(propKey)) {
	        var node = getNode(this);
	        // If we're updating to null or undefined, we should remove the property
	        // from the DOM node instead of inadvertently setting to a string. This
	        // brings us in line with the same behavior we have on initial render.
	        if (nextProp != null) {
	          DOMPropertyOperations.setValueForProperty(node, propKey, nextProp);
	        } else {
	          DOMPropertyOperations.deleteValueForProperty(node, propKey);
	        }
	      }
	    }
	    if (styleUpdates) {
	      CSSPropertyOperations.setValueForStyles(getNode(this), styleUpdates, this);
	    }
	  },

	  /**
	   * Reconciles the children with the various properties that affect the
	   * children content.
	   *
	   * @param {object} lastProps
	   * @param {object} nextProps
	   * @param {ReactReconcileTransaction} transaction
	   * @param {object} context
	   */
	  _updateDOMChildren: function (lastProps, nextProps, transaction, context) {
	    var lastContent = CONTENT_TYPES[typeof lastProps.children] ? lastProps.children : null;
	    var nextContent = CONTENT_TYPES[typeof nextProps.children] ? nextProps.children : null;

	    var lastHtml = lastProps.dangerouslySetInnerHTML && lastProps.dangerouslySetInnerHTML.__html;
	    var nextHtml = nextProps.dangerouslySetInnerHTML && nextProps.dangerouslySetInnerHTML.__html;

	    // Note the use of `!=` which checks for null or undefined.
	    var lastChildren = lastContent != null ? null : lastProps.children;
	    var nextChildren = nextContent != null ? null : nextProps.children;

	    // If we're switching from children to content/html or vice versa, remove
	    // the old content
	    var lastHasContentOrHtml = lastContent != null || lastHtml != null;
	    var nextHasContentOrHtml = nextContent != null || nextHtml != null;
	    if (lastChildren != null && nextChildren == null) {
	      this.updateChildren(null, transaction, context);
	    } else if (lastHasContentOrHtml && !nextHasContentOrHtml) {
	      this.updateTextContent('');
	      if (process.env.NODE_ENV !== 'production') {
	        ReactInstrumentation.debugTool.onSetChildren(this._debugID, []);
	      }
	    }

	    if (nextContent != null) {
	      if (lastContent !== nextContent) {
	        this.updateTextContent('' + nextContent);
	        if (process.env.NODE_ENV !== 'production') {
	          setContentChildForInstrumentation.call(this, nextContent);
	        }
	      }
	    } else if (nextHtml != null) {
	      if (lastHtml !== nextHtml) {
	        this.updateMarkup('' + nextHtml);
	      }
	      if (process.env.NODE_ENV !== 'production') {
	        ReactInstrumentation.debugTool.onSetChildren(this._debugID, []);
	      }
	    } else if (nextChildren != null) {
	      if (process.env.NODE_ENV !== 'production') {
	        setContentChildForInstrumentation.call(this, null);
	      }

	      this.updateChildren(nextChildren, transaction, context);
	    }
	  },

	  getHostNode: function () {
	    return getNode(this);
	  },

	  /**
	   * Destroys all event registrations for this instance. Does not remove from
	   * the DOM. That must be done by the parent.
	   *
	   * @internal
	   */
	  unmountComponent: function (safely) {
	    switch (this._tag) {
	      case 'audio':
	      case 'form':
	      case 'iframe':
	      case 'img':
	      case 'link':
	      case 'object':
	      case 'source':
	      case 'video':
	        var listeners = this._wrapperState.listeners;
	        if (listeners) {
	          for (var i = 0; i < listeners.length; i++) {
	            listeners[i].remove();
	          }
	        }
	        break;
	      case 'html':
	      case 'head':
	      case 'body':
	        /**
	         * Components like <html> <head> and <body> can't be removed or added
	         * easily in a cross-browser way, however it's valuable to be able to
	         * take advantage of React's reconciliation for styling and <title>
	         * management. So we just document it and throw in dangerous cases.
	         */
	         true ? process.env.NODE_ENV !== 'production' ? invariant(false, '<%s> tried to unmount. Because of cross-browser quirks it is impossible to unmount some top-level components (eg <html>, <head>, and <body>) reliably and efficiently. To fix this, have a single top-level component that never unmounts render these elements.', this._tag) : _prodInvariant('66', this._tag) : void 0;
	        break;
	    }

	    this.unmountChildren(safely);
	    ReactDOMComponentTree.uncacheNode(this);
	    EventPluginHub.deleteAllListeners(this);
	    ReactComponentBrowserEnvironment.unmountIDFromEnvironment(this._rootNodeID);
	    this._rootNodeID = null;
	    this._domID = null;
	    this._wrapperState = null;

	    if (process.env.NODE_ENV !== 'production') {
	      setContentChildForInstrumentation.call(this, null);
	    }
	  },

	  getPublicInstance: function () {
	    return getNode(this);
	  }

	};

	_assign(ReactDOMComponent.prototype, ReactDOMComponent.Mixin, ReactMultiChild.Mixin);

	module.exports = ReactDOMComponent;
	/* WEBPACK VAR INJECTION */}.call(exports, __webpack_require__(4)))

/***/ },
/* 94 */
/***/ function(module, exports, __webpack_require__) {

	/**
	 * Copyright 2013-present, Facebook, Inc.
	 * All rights reserved.
	 *
	 * This source code is licensed under the BSD-style license found in the
	 * LICENSE file in the root directory of this source tree. An additional grant
	 * of patent rights can be found in the PATENTS file in the same directory.
	 *
	 * @providesModule AutoFocusUtils
	 */

	'use strict';

	var ReactDOMComponentTree = __webpack_require__(36);

	var focusNode = __webpack_require__(95);

	var AutoFocusUtils = {
	  focusDOMComponent: function () {
	    focusNode(ReactDOMComponentTree.getNodeFromInstance(this));
	  }
	};

	module.exports = AutoFocusUtils;

/***/ },
/* 95 */
/***/ function(module, exports) {

	/**
	 * Copyright (c) 2013-present, Facebook, Inc.
	 * All rights reserved.
	 *
	 * This source code is licensed under the BSD-style license found in the
	 * LICENSE file in the root directory of this source tree. An additional grant
	 * of patent rights can be found in the PATENTS file in the same directory.
	 *
	 */

	'use strict';

	/**
	 * @param {DOMElement} node input/textarea to focus
	 */

	function focusNode(node) {
	  // IE8 can throw "Can't move focus to the control because it is invisible,
	  // not enabled, or of a type that does not accept the focus." for all kinds of
	  // reasons that are too expensive and fragile to test.
	  try {
	    node.focus();
	  } catch (e) {}
	}

	module.exports = focusNode;

/***/ },
/* 96 */
/***/ function(module, exports, __webpack_require__) {

	/* WEBPACK VAR INJECTION */(function(process) {/**
	 * Copyright 2013-present, Facebook, Inc.
	 * All rights reserved.
	 *
	 * This source code is licensed under the BSD-style license found in the
	 * LICENSE file in the root directory of this source tree. An additional grant
	 * of patent rights can be found in the PATENTS file in the same directory.
	 *
	 * @providesModule CSSPropertyOperations
	 */

	'use strict';

	var CSSProperty = __webpack_require__(97);
	var ExecutionEnvironment = __webpack_require__(49);
	var ReactInstrumentation = __webpack_require__(62);

	var camelizeStyleName = __webpack_require__(98);
	var dangerousStyleValue = __webpack_require__(100);
	var hyphenateStyleName = __webpack_require__(101);
	var memoizeStringOnly = __webpack_require__(103);
	var warning = __webpack_require__(12);

	var processStyleName = memoizeStringOnly(function (styleName) {
	  return hyphenateStyleName(styleName);
	});

	var hasShorthandPropertyBug = false;
	var styleFloatAccessor = 'cssFloat';
	if (ExecutionEnvironment.canUseDOM) {
	  var tempStyle = document.createElement('div').style;
	  try {
	    // IE8 throws "Invalid argument." if resetting shorthand style properties.
	    tempStyle.font = '';
	  } catch (e) {
	    hasShorthandPropertyBug = true;
	  }
	  // IE8 only supports accessing cssFloat (standard) as styleFloat
	  if (document.documentElement.style.cssFloat === undefined) {
	    styleFloatAccessor = 'styleFloat';
	  }
	}

	if (process.env.NODE_ENV !== 'production') {
	  // 'msTransform' is correct, but the other prefixes should be capitalized
	  var badVendoredStyleNamePattern = /^(?:webkit|moz|o)[A-Z]/;

	  // style values shouldn't contain a semicolon
	  var badStyleValueWithSemicolonPattern = /;\s*$/;

	  var warnedStyleNames = {};
	  var warnedStyleValues = {};
	  var warnedForNaNValue = false;

	  var warnHyphenatedStyleName = function (name, owner) {
	    if (warnedStyleNames.hasOwnProperty(name) && warnedStyleNames[name]) {
	      return;
	    }

	    warnedStyleNames[name] = true;
	    process.env.NODE_ENV !== 'production' ? warning(false, 'Unsupported style property %s. Did you mean %s?%s', name, camelizeStyleName(name), checkRenderMessage(owner)) : void 0;
	  };

	  var warnBadVendoredStyleName = function (name, owner) {
	    if (warnedStyleNames.hasOwnProperty(name) && warnedStyleNames[name]) {
	      return;
	    }

	    warnedStyleNames[name] = true;
	    process.env.NODE_ENV !== 'production' ? warning(false, 'Unsupported vendor-prefixed style property %s. Did you mean %s?%s', name, name.charAt(0).toUpperCase() + name.slice(1), checkRenderMessage(owner)) : void 0;
	  };

	  var warnStyleValueWithSemicolon = function (name, value, owner) {
	    if (warnedStyleValues.hasOwnProperty(value) && warnedStyleValues[value]) {
	      return;
	    }

	    warnedStyleValues[value] = true;
	    process.env.NODE_ENV !== 'production' ? warning(false, 'Style property values shouldn\'t contain a semicolon.%s ' + 'Try "%s: %s" instead.', checkRenderMessage(owner), name, value.replace(badStyleValueWithSemicolonPattern, '')) : void 0;
	  };

	  var warnStyleValueIsNaN = function (name, value, owner) {
	    if (warnedForNaNValue) {
	      return;
	    }

	    warnedForNaNValue = true;
	    process.env.NODE_ENV !== 'production' ? warning(false, '`NaN` is an invalid value for the `%s` css style property.%s', name, checkRenderMessage(owner)) : void 0;
	  };

	  var checkRenderMessage = function (owner) {
	    if (owner) {
	      var name = owner.getName();
	      if (name) {
	        return ' Check the render method of `' + name + '`.';
	      }
	    }
	    return '';
	  };

	  /**
	   * @param {string} name
	   * @param {*} value
	   * @param {ReactDOMComponent} component
	   */
	  var warnValidStyle = function (name, value, component) {
	    var owner;
	    if (component) {
	      owner = component._currentElement._owner;
	    }
	    if (name.indexOf('-') > -1) {
	      warnHyphenatedStyleName(name, owner);
	    } else if (badVendoredStyleNamePattern.test(name)) {
	      warnBadVendoredStyleName(name, owner);
	    } else if (badStyleValueWithSemicolonPattern.test(value)) {
	      warnStyleValueWithSemicolon(name, value, owner);
	    }

	    if (typeof value === 'number' && isNaN(value)) {
	      warnStyleValueIsNaN(name, value, owner);
	    }
	  };
	}

	/**
	 * Operations for dealing with CSS properties.
	 */
	var CSSPropertyOperations = {

	  /**
	   * Serializes a mapping of style properties for use as inline styles:
	   *
	   *   > createMarkupForStyles({width: '200px', height: 0})
	   *   "width:200px;height:0;"
	   *
	   * Undefined values are ignored so that declarative programming is easier.
	   * The result should be HTML-escaped before insertion into the DOM.
	   *
	   * @param {object} styles
	   * @param {ReactDOMComponent} component
	   * @return {?string}
	   */
	  createMarkupForStyles: function (styles, component) {
	    var serialized = '';
	    for (var styleName in styles) {
	      if (!styles.hasOwnProperty(styleName)) {
	        continue;
	      }
	      var styleValue = styles[styleName];
	      if (process.env.NODE_ENV !== 'production') {
	        warnValidStyle(styleName, styleValue, component);
	      }
	      if (styleValue != null) {
	        serialized += processStyleName(styleName) + ':';
	        serialized += dangerousStyleValue(styleName, styleValue, component) + ';';
	      }
	    }
	    return serialized || null;
	  },

	  /**
	   * Sets the value for multiple styles on a node.  If a value is specified as
	   * '' (empty string), the corresponding style property will be unset.
	   *
	   * @param {DOMElement} node
	   * @param {object} styles
	   * @param {ReactDOMComponent} component
	   */
	  setValueForStyles: function (node, styles, component) {
	    if (process.env.NODE_ENV !== 'production') {
	      ReactInstrumentation.debugTool.onHostOperation(component._debugID, 'update styles', styles);
	    }

	    var style = node.style;
	    for (var styleName in styles) {
	      if (!styles.hasOwnProperty(styleName)) {
	        continue;
	      }
	      if (process.env.NODE_ENV !== 'production') {
	        warnValidStyle(styleName, styles[styleName], component);
	      }
	      var styleValue = dangerousStyleValue(styleName, styles[styleName], component);
	      if (styleName === 'float' || styleName === 'cssFloat') {
	        styleName = styleFloatAccessor;
	      }
	      if (styleValue) {
	        style[styleName] = styleValue;
	      } else {
	        var expansion = hasShorthandPropertyBug && CSSProperty.shorthandPropertyExpansions[styleName];
	        if (expansion) {
	          // Shorthand property that IE8 won't like unsetting, so unset each
	          // component to placate it
	          for (var individualStyleName in expansion) {
	            style[individualStyleName] = '';
	          }
	        } else {
	          style[styleName] = '';
	        }
	      }
	    }
	  }

	};

	module.exports = CSSPropertyOperations;
	/* WEBPACK VAR INJECTION */}.call(exports, __webpack_require__(4)))

/***/ },
/* 97 */
/***/ function(module, exports) {

	/**
	 * Copyright 2013-present, Facebook, Inc.
	 * All rights reserved.
	 *
	 * This source code is licensed under the BSD-style license found in the
	 * LICENSE file in the root directory of this source tree. An additional grant
	 * of patent rights can be found in the PATENTS file in the same directory.
	 *
	 * @providesModule CSSProperty
	 */

	'use strict';

	/**
	 * CSS properties which accept numbers but are not in units of "px".
	 */

	var isUnitlessNumber = {
	  animationIterationCount: true,
	  borderImageOutset: true,
	  borderImageSlice: true,
	  borderImageWidth: true,
	  boxFlex: true,
	  boxFlexGroup: true,
	  boxOrdinalGroup: true,
	  columnCount: true,
	  flex: true,
	  flexGrow: true,
	  flexPositive: true,
	  flexShrink: true,
	  flexNegative: true,
	  flexOrder: true,
	  gridRow: true,
	  gridColumn: true,
	  fontWeight: true,
	  lineClamp: true,
	  lineHeight: true,
	  opacity: true,
	  order: true,
	  orphans: true,
	  tabSize: true,
	  widows: true,
	  zIndex: true,
	  zoom: true,

	  // SVG-related properties
	  fillOpacity: true,
	  floodOpacity: true,
	  stopOpacity: true,
	  strokeDasharray: true,
	  strokeDashoffset: true,
	  strokeMiterlimit: true,
	  strokeOpacity: true,
	  strokeWidth: true
	};

	/**
	 * @param {string} prefix vendor-specific prefix, eg: Webkit
	 * @param {string} key style name, eg: transitionDuration
	 * @return {string} style name prefixed with `prefix`, properly camelCased, eg:
	 * WebkitTransitionDuration
	 */
	function prefixKey(prefix, key) {
	  return prefix + key.charAt(0).toUpperCase() + key.substring(1);
	}

	/**
	 * Support style names that may come passed in prefixed by adding permutations
	 * of vendor prefixes.
	 */
	var prefixes = ['Webkit', 'ms', 'Moz', 'O'];

	// Using Object.keys here, or else the vanilla for-in loop makes IE8 go into an
	// infinite loop, because it iterates over the newly added props too.
	Object.keys(isUnitlessNumber).forEach(function (prop) {
	  prefixes.forEach(function (prefix) {
	    isUnitlessNumber[prefixKey(prefix, prop)] = isUnitlessNumber[prop];
	  });
	});

	/**
	 * Most style properties can be unset by doing .style[prop] = '' but IE8
	 * doesn't like doing that with shorthand properties so for the properties that
	 * IE8 breaks on, which are listed here, we instead unset each of the
	 * individual properties. See http://bugs.jquery.com/ticket/12385.
	 * The 4-value 'clock' properties like margin, padding, border-width seem to
	 * behave without any problems. Curiously, list-style works too without any
	 * special prodding.
	 */
	var shorthandPropertyExpansions = {
	  background: {
	    backgroundAttachment: true,
	    backgroundColor: true,
	    backgroundImage: true,
	    backgroundPositionX: true,
	    backgroundPositionY: true,
	    backgroundRepeat: true
	  },
	  backgroundPosition: {
	    backgroundPositionX: true,
	    backgroundPositionY: true
	  },
	  border: {
	    borderWidth: true,
	    borderStyle: true,
	    borderColor: true
	  },
	  borderBottom: {
	    borderBottomWidth: true,
	    borderBottomStyle: true,
	    borderBottomColor: true
	  },
	  borderLeft: {
	    borderLeftWidth: true,
	    borderLeftStyle: true,
	    borderLeftColor: true
	  },
	  borderRight: {
	    borderRightWidth: true,
	    borderRightStyle: true,
	    borderRightColor: true
	  },
	  borderTop: {
	    borderTopWidth: true,
	    borderTopStyle: true,
	    borderTopColor: true
	  },
	  font: {
	    fontStyle: true,
	    fontVariant: true,
	    fontWeight: true,
	    fontSize: true,
	    lineHeight: true,
	    fontFamily: true
	  },
	  outline: {
	    outlineWidth: true,
	    outlineStyle: true,
	    outlineColor: true
	  }
	};

	var CSSProperty = {
	  isUnitlessNumber: isUnitlessNumber,
	  shorthandPropertyExpansions: shorthandPropertyExpansions
	};

	module.exports = CSSProperty;

/***/ },
/* 98 */
/***/ function(module, exports, __webpack_require__) {

	/**
	 * Copyright (c) 2013-present, Facebook, Inc.
	 * All rights reserved.
	 *
	 * This source code is licensed under the BSD-style license found in the
	 * LICENSE file in the root directory of this source tree. An additional grant
	 * of patent rights can be found in the PATENTS file in the same directory.
	 *
	 * @typechecks
	 */

	'use strict';

	var camelize = __webpack_require__(99);

	var msPattern = /^-ms-/;

	/**
	 * Camelcases a hyphenated CSS property name, for example:
	 *
	 *   > camelizeStyleName('background-color')
	 *   < "backgroundColor"
	 *   > camelizeStyleName('-moz-transition')
	 *   < "MozTransition"
	 *   > camelizeStyleName('-ms-transition')
	 *   < "msTransition"
	 *
	 * As Andi Smith suggests
	 * (http://www.andismith.com/blog/2012/02/modernizr-prefixed/), an `-ms` prefix
	 * is converted to lowercase `ms`.
	 *
	 * @param {string} string
	 * @return {string}
	 */
	function camelizeStyleName(string) {
	  return camelize(string.replace(msPattern, 'ms-'));
	}

	module.exports = camelizeStyleName;

/***/ },
/* 99 */
/***/ function(module, exports) {

	"use strict";

	/**
	 * Copyright (c) 2013-present, Facebook, Inc.
	 * All rights reserved.
	 *
	 * This source code is licensed under the BSD-style license found in the
	 * LICENSE file in the root directory of this source tree. An additional grant
	 * of patent rights can be found in the PATENTS file in the same directory.
	 *
	 * @typechecks
	 */

	var _hyphenPattern = /-(.)/g;

	/**
	 * Camelcases a hyphenated string, for example:
	 *
	 *   > camelize('background-color')
	 *   < "backgroundColor"
	 *
	 * @param {string} string
	 * @return {string}
	 */
	function camelize(string) {
	  return string.replace(_hyphenPattern, function (_, character) {
	    return character.toUpperCase();
	  });
	}

	module.exports = camelize;

/***/ },
/* 100 */
/***/ function(module, exports, __webpack_require__) {

	/* WEBPACK VAR INJECTION */(function(process) {/**
	 * Copyright 2013-present, Facebook, Inc.
	 * All rights reserved.
	 *
	 * This source code is licensed under the BSD-style license found in the
	 * LICENSE file in the root directory of this source tree. An additional grant
	 * of patent rights can be found in the PATENTS file in the same directory.
	 *
	 * @providesModule dangerousStyleValue
	 */

	'use strict';

	var CSSProperty = __webpack_require__(97);
	var warning = __webpack_require__(12);

	var isUnitlessNumber = CSSProperty.isUnitlessNumber;
	var styleWarnings = {};

	/**
	 * Convert a value into the proper css writable value. The style name `name`
	 * should be logical (no hyphens), as specified
	 * in `CSSProperty.isUnitlessNumber`.
	 *
	 * @param {string} name CSS property name such as `topMargin`.
	 * @param {*} value CSS property value such as `10px`.
	 * @param {ReactDOMComponent} component
	 * @return {string} Normalized style value with dimensions applied.
	 */
	function dangerousStyleValue(name, value, component) {
	  // Note that we've removed escapeTextForBrowser() calls here since the
	  // whole string will be escaped when the attribute is injected into
	  // the markup. If you provide unsafe user data here they can inject
	  // arbitrary CSS which may be problematic (I couldn't repro this):
	  // https://www.owasp.org/index.php/XSS_Filter_Evasion_Cheat_Sheet
	  // http://www.thespanner.co.uk/2007/11/26/ultimate-xss-css-injection/
	  // This is not an XSS hole but instead a potential CSS injection issue
	  // which has lead to a greater discussion about how we're going to
	  // trust URLs moving forward. See #2115901

	  var isEmpty = value == null || typeof value === 'boolean' || value === '';
	  if (isEmpty) {
	    return '';
	  }

	  var isNonNumeric = isNaN(value);
	  if (isNonNumeric || value === 0 || isUnitlessNumber.hasOwnProperty(name) && isUnitlessNumber[name]) {
	    return '' + value; // cast to string
	  }

	  if (typeof value === 'string') {
	    if (process.env.NODE_ENV !== 'production') {
	      // Allow '0' to pass through without warning. 0 is already special and
	      // doesn't require units, so we don't need to warn about it.
	      if (component && value !== '0') {
	        var owner = component._currentElement._owner;
	        var ownerName = owner ? owner.getName() : null;
	        if (ownerName && !styleWarnings[ownerName]) {
	          styleWarnings[ownerName] = {};
	        }
	        var warned = false;
	        if (ownerName) {
	          var warnings = styleWarnings[ownerName];
	          warned = warnings[name];
	          if (!warned) {
	            warnings[name] = true;
	          }
	        }
	        if (!warned) {
	          process.env.NODE_ENV !== 'production' ? warning(false, 'a `%s` tag (owner: `%s`) was passed a numeric string value ' + 'for CSS property `%s` (value: `%s`) which will be treated ' + 'as a unitless number in a future version of React.', component._currentElement.type, ownerName || 'unknown', name, value) : void 0;
	        }
	      }
	    }
	    value = value.trim();
	  }
	  return value + 'px';
	}

	module.exports = dangerousStyleValue;
	/* WEBPACK VAR INJECTION */}.call(exports, __webpack_require__(4)))

/***/ },
/* 101 */
/***/ function(module, exports, __webpack_require__) {

	/**
	 * Copyright (c) 2013-present, Facebook, Inc.
	 * All rights reserved.
	 *
	 * This source code is licensed under the BSD-style license found in the
	 * LICENSE file in the root directory of this source tree. An additional grant
	 * of patent rights can be found in the PATENTS file in the same directory.
	 *
	 * @typechecks
	 */

	'use strict';

	var hyphenate = __webpack_require__(102);

	var msPattern = /^ms-/;

	/**
	 * Hyphenates a camelcased CSS property name, for example:
	 *
	 *   > hyphenateStyleName('backgroundColor')
	 *   < "background-color"
	 *   > hyphenateStyleName('MozTransition')
	 *   < "-moz-transition"
	 *   > hyphenateStyleName('msTransition')
	 *   < "-ms-transition"
	 *
	 * As Modernizr suggests (http://modernizr.com/docs/#prefixed), an `ms` prefix
	 * is converted to `-ms-`.
	 *
	 * @param {string} string
	 * @return {string}
	 */
	function hyphenateStyleName(string) {
	  return hyphenate(string).replace(msPattern, '-ms-');
	}

	module.exports = hyphenateStyleName;

/***/ },
/* 102 */
/***/ function(module, exports) {

	'use strict';

	/**
	 * Copyright (c) 2013-present, Facebook, Inc.
	 * All rights reserved.
	 *
	 * This source code is licensed under the BSD-style license found in the
	 * LICENSE file in the root directory of this source tree. An additional grant
	 * of patent rights can be found in the PATENTS file in the same directory.
	 *
	 * @typechecks
	 */

	var _uppercasePattern = /([A-Z])/g;

	/**
	 * Hyphenates a camelcased string, for example:
	 *
	 *   > hyphenate('backgroundColor')
	 *   < "background-color"
	 *
	 * For CSS style names, use `hyphenateStyleName` instead which works properly
	 * with all vendor prefixes, including `ms`.
	 *
	 * @param {string} string
	 * @return {string}
	 */
	function hyphenate(string) {
	  return string.replace(_uppercasePattern, '-$1').toLowerCase();
	}

	module.exports = hyphenate;

/***/ },
/* 103 */
/***/ function(module, exports) {

	/**
	 * Copyright (c) 2013-present, Facebook, Inc.
	 * All rights reserved.
	 *
	 * This source code is licensed under the BSD-style license found in the
	 * LICENSE file in the root directory of this source tree. An additional grant
	 * of patent rights can be found in the PATENTS file in the same directory.
	 *
	 * 
	 * @typechecks static-only
	 */

	'use strict';

	/**
	 * Memoizes the return value of a function that accepts one string argument.
	 */

	function memoizeStringOnly(callback) {
	  var cache = {};
	  return function (string) {
	    if (!cache.hasOwnProperty(string)) {
	      cache[string] = callback.call(this, string);
	    }
	    return cache[string];
	  };
	}

	module.exports = memoizeStringOnly;

/***/ },
/* 104 */
/***/ function(module, exports, __webpack_require__) {

	/* WEBPACK VAR INJECTION */(function(process) {/**
	 * Copyright 2013-present, Facebook, Inc.
	 * All rights reserved.
	 *
	 * This source code is licensed under the BSD-style license found in the
	 * LICENSE file in the root directory of this source tree. An additional grant
	 * of patent rights can be found in the PATENTS file in the same directory.
	 *
	 * @providesModule DOMPropertyOperations
	 */

	'use strict';

	var DOMProperty = __webpack_require__(37);
	var ReactDOMComponentTree = __webpack_require__(36);
	var ReactDOMInstrumentation = __webpack_require__(105);
	var ReactInstrumentation = __webpack_require__(62);

	var quoteAttributeValueForBrowser = __webpack_require__(109);
	var warning = __webpack_require__(12);

	var VALID_ATTRIBUTE_NAME_REGEX = new RegExp('^[' + DOMProperty.ATTRIBUTE_NAME_START_CHAR + '][' + DOMProperty.ATTRIBUTE_NAME_CHAR + ']*$');
	var illegalAttributeNameCache = {};
	var validatedAttributeNameCache = {};

	function isAttributeNameSafe(attributeName) {
	  if (validatedAttributeNameCache.hasOwnProperty(attributeName)) {
	    return true;
	  }
	  if (illegalAttributeNameCache.hasOwnProperty(attributeName)) {
	    return false;
	  }
	  if (VALID_ATTRIBUTE_NAME_REGEX.test(attributeName)) {
	    validatedAttributeNameCache[attributeName] = true;
	    return true;
	  }
	  illegalAttributeNameCache[attributeName] = true;
	  process.env.NODE_ENV !== 'production' ? warning(false, 'Invalid attribute name: `%s`', attributeName) : void 0;
	  return false;
	}

	function shouldIgnoreValue(propertyInfo, value) {
	  return value == null || propertyInfo.hasBooleanValue && !value || propertyInfo.hasNumericValue && isNaN(value) || propertyInfo.hasPositiveNumericValue && value < 1 || propertyInfo.hasOverloadedBooleanValue && value === false;
	}

	/**
	 * Operations for dealing with DOM properties.
	 */
	var DOMPropertyOperations = {

	  /**
	   * Creates markup for the ID property.
	   *
	   * @param {string} id Unescaped ID.
	   * @return {string} Markup string.
	   */
	  createMarkupForID: function (id) {
	    return DOMProperty.ID_ATTRIBUTE_NAME + '=' + quoteAttributeValueForBrowser(id);
	  },

	  setAttributeForID: function (node, id) {
	    node.setAttribute(DOMProperty.ID_ATTRIBUTE_NAME, id);
	  },

	  createMarkupForRoot: function () {
	    return DOMProperty.ROOT_ATTRIBUTE_NAME + '=""';
	  },

	  setAttributeForRoot: function (node) {
	    node.setAttribute(DOMProperty.ROOT_ATTRIBUTE_NAME, '');
	  },

	  /**
	   * Creates markup for a property.
	   *
	   * @param {string} name
	   * @param {*} value
	   * @return {?string} Markup string, or null if the property was invalid.
	   */
	  createMarkupForProperty: function (name, value) {
	    if (process.env.NODE_ENV !== 'production') {
	      ReactDOMInstrumentation.debugTool.onCreateMarkupForProperty(name, value);
	    }
	    var propertyInfo = DOMProperty.properties.hasOwnProperty(name) ? DOMProperty.properties[name] : null;
	    if (propertyInfo) {
	      if (shouldIgnoreValue(propertyInfo, value)) {
	        return '';
	      }
	      var attributeName = propertyInfo.attributeName;
	      if (propertyInfo.hasBooleanValue || propertyInfo.hasOverloadedBooleanValue && value === true) {
	        return attributeName + '=""';
	      }
	      return attributeName + '=' + quoteAttributeValueForBrowser(value);
	    } else if (DOMProperty.isCustomAttribute(name)) {
	      if (value == null) {
	        return '';
	      }
	      return name + '=' + quoteAttributeValueForBrowser(value);
	    }
	    return null;
	  },

	  /**
	   * Creates markup for a custom property.
	   *
	   * @param {string} name
	   * @param {*} value
	   * @return {string} Markup string, or empty string if the property was invalid.
	   */
	  createMarkupForCustomAttribute: function (name, value) {
	    if (!isAttributeNameSafe(name) || value == null) {
	      return '';
	    }
	    return name + '=' + quoteAttributeValueForBrowser(value);
	  },

	  /**
	   * Sets the value for a property on a node.
	   *
	   * @param {DOMElement} node
	   * @param {string} name
	   * @param {*} value
	   */
	  setValueForProperty: function (node, name, value) {
	    var propertyInfo = DOMProperty.properties.hasOwnProperty(name) ? DOMProperty.properties[name] : null;
	    if (propertyInfo) {
	      var mutationMethod = propertyInfo.mutationMethod;
	      if (mutationMethod) {
	        mutationMethod(node, value);
	      } else if (shouldIgnoreValue(propertyInfo, value)) {
	        this.deleteValueForProperty(node, name);
	        return;
	      } else if (propertyInfo.mustUseProperty) {
	        // Contrary to `setAttribute`, object properties are properly
	        // `toString`ed by IE8/9.
	        node[propertyInfo.propertyName] = value;
	      } else {
	        var attributeName = propertyInfo.attributeName;
	        var namespace = propertyInfo.attributeNamespace;
	        // `setAttribute` with objects becomes only `[object]` in IE8/9,
	        // ('' + value) makes it output the correct toString()-value.
	        if (namespace) {
	          node.setAttributeNS(namespace, attributeName, '' + value);
	        } else if (propertyInfo.hasBooleanValue || propertyInfo.hasOverloadedBooleanValue && value === true) {
	          node.setAttribute(attributeName, '');
	        } else {
	          node.setAttribute(attributeName, '' + value);
	        }
	      }
	    } else if (DOMProperty.isCustomAttribute(name)) {
	      DOMPropertyOperations.setValueForAttribute(node, name, value);
	      return;
	    }

	    if (process.env.NODE_ENV !== 'production') {
	      ReactDOMInstrumentation.debugTool.onSetValueForProperty(node, name, value);
	      var payload = {};
	      payload[name] = value;
	      ReactInstrumentation.debugTool.onHostOperation(ReactDOMComponentTree.getInstanceFromNode(node)._debugID, 'update attribute', payload);
	    }
	  },

	  setValueForAttribute: function (node, name, value) {
	    if (!isAttributeNameSafe(name)) {
	      return;
	    }
	    if (value == null) {
	      node.removeAttribute(name);
	    } else {
	      node.setAttribute(name, '' + value);
	    }

	    if (process.env.NODE_ENV !== 'production') {
	      var payload = {};
	      payload[name] = value;
	      ReactInstrumentation.debugTool.onHostOperation(ReactDOMComponentTree.getInstanceFromNode(node)._debugID, 'update attribute', payload);
	    }
	  },

	  /**
	   * Deletes an attributes from a node.
	   *
	   * @param {DOMElement} node
	   * @param {string} name
	   */
	  deleteValueForAttribute: function (node, name) {
	    node.removeAttribute(name);
	    if (process.env.NODE_ENV !== 'production') {
	      ReactDOMInstrumentation.debugTool.onDeleteValueForProperty(node, name);
	      ReactInstrumentation.debugTool.onHostOperation(ReactDOMComponentTree.getInstanceFromNode(node)._debugID, 'remove attribute', name);
	    }
	  },

	  /**
	   * Deletes the value for a property on a node.
	   *
	   * @param {DOMElement} node
	   * @param {string} name
	   */
	  deleteValueForProperty: function (node, name) {
	    var propertyInfo = DOMProperty.properties.hasOwnProperty(name) ? DOMProperty.properties[name] : null;
	    if (propertyInfo) {
	      var mutationMethod = propertyInfo.mutationMethod;
	      if (mutationMethod) {
	        mutationMethod(node, undefined);
	      } else if (propertyInfo.mustUseProperty) {
	        var propName = propertyInfo.propertyName;
	        if (propertyInfo.hasBooleanValue) {
	          node[propName] = false;
	        } else {
	          node[propName] = '';
	        }
	      } else {
	        node.removeAttribute(propertyInfo.attributeName);
	      }
	    } else if (DOMProperty.isCustomAttribute(name)) {
	      node.removeAttribute(name);
	    }

	    if (process.env.NODE_ENV !== 'production') {
	      ReactDOMInstrumentation.debugTool.onDeleteValueForProperty(node, name);
	      ReactInstrumentation.debugTool.onHostOperation(ReactDOMComponentTree.getInstanceFromNode(node)._debugID, 'remove attribute', name);
	    }
	  }

	};

	module.exports = DOMPropertyOperations;
	/* WEBPACK VAR INJECTION */}.call(exports, __webpack_require__(4)))

/***/ },
/* 105 */
/***/ function(module, exports, __webpack_require__) {

	/* WEBPACK VAR INJECTION */(function(process) {/**
	 * Copyright 2013-present, Facebook, Inc.
	 * All rights reserved.
	 *
	 * This source code is licensed under the BSD-style license found in the
	 * LICENSE file in the root directory of this source tree. An additional grant
	 * of patent rights can be found in the PATENTS file in the same directory.
	 *
	 * @providesModule ReactDOMInstrumentation
	 */

	'use strict';

	var debugTool = null;

	if (process.env.NODE_ENV !== 'production') {
	  var ReactDOMDebugTool = __webpack_require__(106);
	  debugTool = ReactDOMDebugTool;
	}

	module.exports = { debugTool: debugTool };
	/* WEBPACK VAR INJECTION */}.call(exports, __webpack_require__(4)))

/***/ },
/* 106 */
/***/ function(module, exports, __webpack_require__) {

	/* WEBPACK VAR INJECTION */(function(process) {/**
	 * Copyright 2013-present, Facebook, Inc.
	 * All rights reserved.
	 *
	 * This source code is licensed under the BSD-style license found in the
	 * LICENSE file in the root directory of this source tree. An additional grant
	 * of patent rights can be found in the PATENTS file in the same directory.
	 *
	 * @providesModule ReactDOMDebugTool
	 */

	'use strict';

	var ReactDOMNullInputValuePropDevtool = __webpack_require__(107);
	var ReactDOMUnknownPropertyDevtool = __webpack_require__(108);
	var ReactDebugTool = __webpack_require__(63);

	var warning = __webpack_require__(12);

	var eventHandlers = [];
	var handlerDoesThrowForEvent = {};

	function emitEvent(handlerFunctionName, arg1, arg2, arg3, arg4, arg5) {
	  eventHandlers.forEach(function (handler) {
	    try {
	      if (handler[handlerFunctionName]) {
	        handler[handlerFunctionName](arg1, arg2, arg3, arg4, arg5);
	      }
	    } catch (e) {
	      process.env.NODE_ENV !== 'production' ? warning(handlerDoesThrowForEvent[handlerFunctionName], 'exception thrown by devtool while handling %s: %s', handlerFunctionName, e + '\n' + e.stack) : void 0;
	      handlerDoesThrowForEvent[handlerFunctionName] = true;
	    }
	  });
	}

	var ReactDOMDebugTool = {
	  addDevtool: function (devtool) {
	    ReactDebugTool.addDevtool(devtool);
	    eventHandlers.push(devtool);
	  },
	  removeDevtool: function (devtool) {
	    ReactDebugTool.removeDevtool(devtool);
	    for (var i = 0; i < eventHandlers.length; i++) {
	      if (eventHandlers[i] === devtool) {
	        eventHandlers.splice(i, 1);
	        i--;
	      }
	    }
	  },
	  onCreateMarkupForProperty: function (name, value) {
	    emitEvent('onCreateMarkupForProperty', name, value);
	  },
	  onSetValueForProperty: function (node, name, value) {
	    emitEvent('onSetValueForProperty', node, name, value);
	  },
	  onDeleteValueForProperty: function (node, name) {
	    emitEvent('onDeleteValueForProperty', node, name);
	  },
	  onTestEvent: function () {
	    emitEvent('onTestEvent');
	  }
	};

	ReactDOMDebugTool.addDevtool(ReactDOMUnknownPropertyDevtool);
	ReactDOMDebugTool.addDevtool(ReactDOMNullInputValuePropDevtool);

	module.exports = ReactDOMDebugTool;
	/* WEBPACK VAR INJECTION */}.call(exports, __webpack_require__(4)))

/***/ },
/* 107 */
/***/ function(module, exports, __webpack_require__) {

	/* WEBPACK VAR INJECTION */(function(process) {/**
	 * Copyright 2013-present, Facebook, Inc.
	 * All rights reserved.
	 *
	 * This source code is licensed under the BSD-style license found in the
	 * LICENSE file in the root directory of this source tree. An additional grant
	 * of patent rights can be found in the PATENTS file in the same directory.
	 *
	 * @providesModule ReactDOMNullInputValuePropDevtool
	 */

	'use strict';

	var ReactComponentTreeDevtool = __webpack_require__(29);

	var warning = __webpack_require__(12);

	var didWarnValueNull = false;

	function handleElement(debugID, element) {
	  if (element == null) {
	    return;
	  }
	  if (element.type !== 'input' && element.type !== 'textarea' && element.type !== 'select') {
	    return;
	  }
	  if (element.props != null && element.props.value === null && !didWarnValueNull) {
	    process.env.NODE_ENV !== 'production' ? warning(false, '`value` prop on `%s` should not be null. ' + 'Consider using the empty string to clear the component or `undefined` ' + 'for uncontrolled components.%s', element.type, ReactComponentTreeDevtool.getStackAddendumByID(debugID)) : void 0;

	    didWarnValueNull = true;
	  }
	}

	var ReactDOMUnknownPropertyDevtool = {
	  onBeforeMountComponent: function (debugID, element) {
	    handleElement(debugID, element);
	  },
	  onBeforeUpdateComponent: function (debugID, element) {
	    handleElement(debugID, element);
	  }
	};

	module.exports = ReactDOMUnknownPropertyDevtool;
	/* WEBPACK VAR INJECTION */}.call(exports, __webpack_require__(4)))

/***/ },
/* 108 */
/***/ function(module, exports, __webpack_require__) {

	/* WEBPACK VAR INJECTION */(function(process) {/**
	 * Copyright 2013-present, Facebook, Inc.
	 * All rights reserved.
	 *
	 * This source code is licensed under the BSD-style license found in the
	 * LICENSE file in the root directory of this source tree. An additional grant
	 * of patent rights can be found in the PATENTS file in the same directory.
	 *
	 * @providesModule ReactDOMUnknownPropertyDevtool
	 */

	'use strict';

	var DOMProperty = __webpack_require__(37);
	var EventPluginRegistry = __webpack_require__(44);
	var ReactComponentTreeDevtool = __webpack_require__(29);

	var warning = __webpack_require__(12);

	if (process.env.NODE_ENV !== 'production') {
	  var reactProps = {
	    children: true,
	    dangerouslySetInnerHTML: true,
	    key: true,
	    ref: true,

	    autoFocus: true,
	    defaultValue: true,
	    valueLink: true,
	    defaultChecked: true,
	    checkedLink: true,
	    innerHTML: true,
	    suppressContentEditableWarning: true,
	    onFocusIn: true,
	    onFocusOut: true
	  };
	  var warnedProperties = {};

	  var validateProperty = function (tagName, name, debugID) {
	    if (DOMProperty.properties.hasOwnProperty(name) || DOMProperty.isCustomAttribute(name)) {
	      return true;
	    }
	    if (reactProps.hasOwnProperty(name) && reactProps[name] || warnedProperties.hasOwnProperty(name) && warnedProperties[name]) {
	      return true;
	    }
	    if (EventPluginRegistry.registrationNameModules.hasOwnProperty(name)) {
	      return true;
	    }
	    warnedProperties[name] = true;
	    var lowerCasedName = name.toLowerCase();

	    // data-* attributes should be lowercase; suggest the lowercase version
	    var standardName = DOMProperty.isCustomAttribute(lowerCasedName) ? lowerCasedName : DOMProperty.getPossibleStandardName.hasOwnProperty(lowerCasedName) ? DOMProperty.getPossibleStandardName[lowerCasedName] : null;

	    var registrationName = EventPluginRegistry.possibleRegistrationNames.hasOwnProperty(lowerCasedName) ? EventPluginRegistry.possibleRegistrationNames[lowerCasedName] : null;

	    if (standardName != null) {
	      process.env.NODE_ENV !== 'production' ? warning(standardName == null, 'Unknown DOM property %s. Did you mean %s?%s', name, standardName, ReactComponentTreeDevtool.getStackAddendumByID(debugID)) : void 0;
	      return true;
	    } else if (registrationName != null) {
	      process.env.NODE_ENV !== 'production' ? warning(registrationName == null, 'Unknown event handler property %s. Did you mean `%s`?%s', name, registrationName, ReactComponentTreeDevtool.getStackAddendumByID(debugID)) : void 0;
	      return true;
	    } else {
	      // We were unable to guess which prop the user intended.
	      // It is likely that the user was just blindly spreading/forwarding props
	      // Components should be careful to only render valid props/attributes.
	      // Warning will be invoked in warnUnknownProperties to allow grouping.
	      return false;
	    }
	  };
	}

	var warnUnknownProperties = function (debugID, element) {
	  var unknownProps = [];
	  for (var key in element.props) {
	    var isValid = validateProperty(element.type, key, debugID);
	    if (!isValid) {
	      unknownProps.push(key);
	    }
	  }

	  var unknownPropString = unknownProps.map(function (prop) {
	    return '`' + prop + '`';
	  }).join(', ');

	  if (unknownProps.length === 1) {
	    process.env.NODE_ENV !== 'production' ? warning(false, 'Unknown prop %s on <%s> tag. Remove this prop from the element. ' + 'For details, see https://fb.me/react-unknown-prop%s', unknownPropString, element.type, ReactComponentTreeDevtool.getStackAddendumByID(debugID)) : void 0;
	  } else if (unknownProps.length > 1) {
	    process.env.NODE_ENV !== 'production' ? warning(false, 'Unknown props %s on <%s> tag. Remove these props from the element. ' + 'For details, see https://fb.me/react-unknown-prop%s', unknownPropString, element.type, ReactComponentTreeDevtool.getStackAddendumByID(debugID)) : void 0;
	  }
	};

	function handleElement(debugID, element) {
	  if (element == null || typeof element.type !== 'string') {
	    return;
	  }
	  if (element.type.indexOf('-') >= 0 || element.props.is) {
	    return;
	  }
	  warnUnknownProperties(debugID, element);
	}

	var ReactDOMUnknownPropertyDevtool = {
	  onBeforeMountComponent: function (debugID, element) {
	    handleElement(debugID, element);
	  },
	  onBeforeUpdateComponent: function (debugID, element) {
	    handleElement(debugID, element);
	  }
	};

	module.exports = ReactDOMUnknownPropertyDevtool;
	/* WEBPACK VAR INJECTION */}.call(exports, __webpack_require__(4)))

/***/ },
/* 109 */
/***/ function(module, exports, __webpack_require__) {

	/**
	 * Copyright 2013-present, Facebook, Inc.
	 * All rights reserved.
	 *
	 * This source code is licensed under the BSD-style license found in the
	 * LICENSE file in the root directory of this source tree. An additional grant
	 * of patent rights can be found in the PATENTS file in the same directory.
	 *
	 * @providesModule quoteAttributeValueForBrowser
	 */

	'use strict';

	var escapeTextContentForBrowser = __webpack_require__(86);

	/**
	 * Escapes attribute value to prevent scripting attacks.
	 *
	 * @param {*} value Value to escape.
	 * @return {string} An escaped string.
	 */
	function quoteAttributeValueForBrowser(value) {
	  return '"' + escapeTextContentForBrowser(value) + '"';
	}

	module.exports = quoteAttributeValueForBrowser;

/***/ },
/* 110 */
/***/ function(module, exports, __webpack_require__) {

	/**
	 * Copyright 2013-present, Facebook, Inc.
	 * All rights reserved.
	 *
	 * This source code is licensed under the BSD-style license found in the
	 * LICENSE file in the root directory of this source tree. An additional grant
	 * of patent rights can be found in the PATENTS file in the same directory.
	 *
	 * @providesModule ReactBrowserEventEmitter
	 */

	'use strict';

	var _assign = __webpack_require__(5);

	var EventConstants = __webpack_require__(41);
	var EventPluginRegistry = __webpack_require__(44);
	var ReactEventEmitterMixin = __webpack_require__(111);
	var ViewportMetrics = __webpack_require__(76);

	var getVendorPrefixedEventName = __webpack_require__(112);
	var isEventSupported = __webpack_require__(70);

	/**
	 * Summary of `ReactBrowserEventEmitter` event handling:
	 *
	 *  - Top-level delegation is used to trap most native browser events. This
	 *    may only occur in the main thread and is the responsibility of
	 *    ReactEventListener, which is injected and can therefore support pluggable
	 *    event sources. This is the only work that occurs in the main thread.
	 *
	 *  - We normalize and de-duplicate events to account for browser quirks. This
	 *    may be done in the worker thread.
	 *
	 *  - Forward these native events (with the associated top-level type used to
	 *    trap it) to `EventPluginHub`, which in turn will ask plugins if they want
	 *    to extract any synthetic events.
	 *
	 *  - The `EventPluginHub` will then process each event by annotating them with
	 *    "dispatches", a sequence of listeners and IDs that care about that event.
	 *
	 *  - The `EventPluginHub` then dispatches the events.
	 *
	 * Overview of React and the event system:
	 *
	 * +------------+    .
	 * |    DOM     |    .
	 * +------------+    .
	 *       |           .
	 *       v           .
	 * +------------+    .
	 * | ReactEvent |    .
	 * |  Listener  |    .
	 * +------------+    .                         +-----------+
	 *       |           .               +--------+|SimpleEvent|
	 *       |           .               |         |Plugin     |
	 * +-----|------+    .               v         +-----------+
	 * |     |      |    .    +--------------+                    +------------+
	 * |     +-----------.--->|EventPluginHub|                    |    Event   |
	 * |            |    .    |              |     +-----------+  | Propagators|
	 * | ReactEvent |    .    |              |     |TapEvent   |  |------------|
	 * |  Emitter   |    .    |              |<---+|Plugin     |  |other plugin|
	 * |            |    .    |              |     +-----------+  |  utilities |
	 * |     +-----------.--->|              |                    +------------+
	 * |     |      |    .    +--------------+
	 * +-----|------+    .                ^        +-----------+
	 *       |           .                |        |Enter/Leave|
	 *       +           .                +-------+|Plugin     |
	 * +-------------+   .                         +-----------+
	 * | application |   .
	 * |-------------|   .
	 * |             |   .
	 * |             |   .
	 * +-------------+   .
	 *                   .
	 *    React Core     .  General Purpose Event Plugin System
	 */

	var hasEventPageXY;
	var alreadyListeningTo = {};
	var isMonitoringScrollValue = false;
	var reactTopListenersCounter = 0;

	// For events like 'submit' which don't consistently bubble (which we trap at a
	// lower node than `document`), binding at `document` would cause duplicate
	// events so we don't include them here
	var topEventMapping = {
	  topAbort: 'abort',
	  topAnimationEnd: getVendorPrefixedEventName('animationend') || 'animationend',
	  topAnimationIteration: getVendorPrefixedEventName('animationiteration') || 'animationiteration',
	  topAnimationStart: getVendorPrefixedEventName('animationstart') || 'animationstart',
	  topBlur: 'blur',
	  topCanPlay: 'canplay',
	  topCanPlayThrough: 'canplaythrough',
	  topChange: 'change',
	  topClick: 'click',
	  topCompositionEnd: 'compositionend',
	  topCompositionStart: 'compositionstart',
	  topCompositionUpdate: 'compositionupdate',
	  topContextMenu: 'contextmenu',
	  topCopy: 'copy',
	  topCut: 'cut',
	  topDoubleClick: 'dblclick',
	  topDrag: 'drag',
	  topDragEnd: 'dragend',
	  topDragEnter: 'dragenter',
	  topDragExit: 'dragexit',
	  topDragLeave: 'dragleave',
	  topDragOver: 'dragover',
	  topDragStart: 'dragstart',
	  topDrop: 'drop',
	  topDurationChange: 'durationchange',
	  topEmptied: 'emptied',
	  topEncrypted: 'encrypted',
	  topEnded: 'ended',
	  topError: 'error',
	  topFocus: 'focus',
	  topInput: 'input',
	  topKeyDown: 'keydown',
	  topKeyPress: 'keypress',
	  topKeyUp: 'keyup',
	  topLoadedData: 'loadeddata',
	  topLoadedMetadata: 'loadedmetadata',
	  topLoadStart: 'loadstart',
	  topMouseDown: 'mousedown',
	  topMouseMove: 'mousemove',
	  topMouseOut: 'mouseout',
	  topMouseOver: 'mouseover',
	  topMouseUp: 'mouseup',
	  topPaste: 'paste',
	  topPause: 'pause',
	  topPlay: 'play',
	  topPlaying: 'playing',
	  topProgress: 'progress',
	  topRateChange: 'ratechange',
	  topScroll: 'scroll',
	  topSeeked: 'seeked',
	  topSeeking: 'seeking',
	  topSelectionChange: 'selectionchange',
	  topStalled: 'stalled',
	  topSuspend: 'suspend',
	  topTextInput: 'textInput',
	  topTimeUpdate: 'timeupdate',
	  topTouchCancel: 'touchcancel',
	  topTouchEnd: 'touchend',
	  topTouchMove: 'touchmove',
	  topTouchStart: 'touchstart',
	  topTransitionEnd: getVendorPrefixedEventName('transitionend') || 'transitionend',
	  topVolumeChange: 'volumechange',
	  topWaiting: 'waiting',
	  topWheel: 'wheel'
	};

	/**
	 * To ensure no conflicts with other potential React instances on the page
	 */
	var topListenersIDKey = '_reactListenersID' + String(Math.random()).slice(2);

	function getListeningForDocument(mountAt) {
	  // In IE8, `mountAt` is a host object and doesn't have `hasOwnProperty`
	  // directly.
	  if (!Object.prototype.hasOwnProperty.call(mountAt, topListenersIDKey)) {
	    mountAt[topListenersIDKey] = reactTopListenersCounter++;
	    alreadyListeningTo[mountAt[topListenersIDKey]] = {};
	  }
	  return alreadyListeningTo[mountAt[topListenersIDKey]];
	}

	/**
	 * `ReactBrowserEventEmitter` is used to attach top-level event listeners. For
	 * example:
	 *
	 *   EventPluginHub.putListener('myID', 'onClick', myFunction);
	 *
	 * This would allocate a "registration" of `('onClick', myFunction)` on 'myID'.
	 *
	 * @internal
	 */
	var ReactBrowserEventEmitter = _assign({}, ReactEventEmitterMixin, {

	  /**
	   * Injectable event backend
	   */
	  ReactEventListener: null,

	  injection: {
	    /**
	     * @param {object} ReactEventListener
	     */
	    injectReactEventListener: function (ReactEventListener) {
	      ReactEventListener.setHandleTopLevel(ReactBrowserEventEmitter.handleTopLevel);
	      ReactBrowserEventEmitter.ReactEventListener = ReactEventListener;
	    }
	  },

	  /**
	   * Sets whether or not any created callbacks should be enabled.
	   *
	   * @param {boolean} enabled True if callbacks should be enabled.
	   */
	  setEnabled: function (enabled) {
	    if (ReactBrowserEventEmitter.ReactEventListener) {
	      ReactBrowserEventEmitter.ReactEventListener.setEnabled(enabled);
	    }
	  },

	  /**
	   * @return {boolean} True if callbacks are enabled.
	   */
	  isEnabled: function () {
	    return !!(ReactBrowserEventEmitter.ReactEventListener && ReactBrowserEventEmitter.ReactEventListener.isEnabled());
	  },

	  /**
	   * We listen for bubbled touch events on the document object.
	   *
	   * Firefox v8.01 (and possibly others) exhibited strange behavior when
	   * mounting `onmousemove` events at some node that was not the document
	   * element. The symptoms were that if your mouse is not moving over something
	   * contained within that mount point (for example on the background) the
	   * top-level listeners for `onmousemove` won't be called. However, if you
	   * register the `mousemove` on the document object, then it will of course
	   * catch all `mousemove`s. This along with iOS quirks, justifies restricting
	   * top-level listeners to the document object only, at least for these
	   * movement types of events and possibly all events.
	   *
	   * @see http://www.quirksmode.org/blog/archives/2010/09/click_event_del.html
	   *
	   * Also, `keyup`/`keypress`/`keydown` do not bubble to the window on IE, but
	   * they bubble to document.
	   *
	   * @param {string} registrationName Name of listener (e.g. `onClick`).
	   * @param {object} contentDocumentHandle Document which owns the container
	   */
	  listenTo: function (registrationName, contentDocumentHandle) {
	    var mountAt = contentDocumentHandle;
	    var isListening = getListeningForDocument(mountAt);
	    var dependencies = EventPluginRegistry.registrationNameDependencies[registrationName];

	    var topLevelTypes = EventConstants.topLevelTypes;
	    for (var i = 0; i < dependencies.length; i++) {
	      var dependency = dependencies[i];
	      if (!(isListening.hasOwnProperty(dependency) && isListening[dependency])) {
	        if (dependency === topLevelTypes.topWheel) {
	          if (isEventSupported('wheel')) {
	            ReactBrowserEventEmitter.ReactEventListener.trapBubbledEvent(topLevelTypes.topWheel, 'wheel', mountAt);
	          } else if (isEventSupported('mousewheel')) {
	            ReactBrowserEventEmitter.ReactEventListener.trapBubbledEvent(topLevelTypes.topWheel, 'mousewheel', mountAt);
	          } else {
	            // Firefox needs to capture a different mouse scroll event.
	            // @see http://www.quirksmode.org/dom/events/tests/scroll.html
	            ReactBrowserEventEmitter.ReactEventListener.trapBubbledEvent(topLevelTypes.topWheel, 'DOMMouseScroll', mountAt);
	          }
	        } else if (dependency === topLevelTypes.topScroll) {

	          if (isEventSupported('scroll', true)) {
	            ReactBrowserEventEmitter.ReactEventListener.trapCapturedEvent(topLevelTypes.topScroll, 'scroll', mountAt);
	          } else {
	            ReactBrowserEventEmitter.ReactEventListener.trapBubbledEvent(topLevelTypes.topScroll, 'scroll', ReactBrowserEventEmitter.ReactEventListener.WINDOW_HANDLE);
	          }
	        } else if (dependency === topLevelTypes.topFocus || dependency === topLevelTypes.topBlur) {

	          if (isEventSupported('focus', true)) {
	            ReactBrowserEventEmitter.ReactEventListener.trapCapturedEvent(topLevelTypes.topFocus, 'focus', mountAt);
	            ReactBrowserEventEmitter.ReactEventListener.trapCapturedEvent(topLevelTypes.topBlur, 'blur', mountAt);
	          } else if (isEventSupported('focusin')) {
	            // IE has `focusin` and `focusout` events which bubble.
	            // @see http://www.quirksmode.org/blog/archives/2008/04/delegating_the.html
	            ReactBrowserEventEmitter.ReactEventListener.trapBubbledEvent(topLevelTypes.topFocus, 'focusin', mountAt);
	            ReactBrowserEventEmitter.ReactEventListener.trapBubbledEvent(topLevelTypes.topBlur, 'focusout', mountAt);
	          }

	          // to make sure blur and focus event listeners are only attached once
	          isListening[topLevelTypes.topBlur] = true;
	          isListening[topLevelTypes.topFocus] = true;
	        } else if (topEventMapping.hasOwnProperty(dependency)) {
	          ReactBrowserEventEmitter.ReactEventListener.trapBubbledEvent(dependency, topEventMapping[dependency], mountAt);
	        }

	        isListening[dependency] = true;
	      }
	    }
	  },

	  trapBubbledEvent: function (topLevelType, handlerBaseName, handle) {
	    return ReactBrowserEventEmitter.ReactEventListener.trapBubbledEvent(topLevelType, handlerBaseName, handle);
	  },

	  trapCapturedEvent: function (topLevelType, handlerBaseName, handle) {
	    return ReactBrowserEventEmitter.ReactEventListener.trapCapturedEvent(topLevelType, handlerBaseName, handle);
	  },

	  /**
	   * Listens to window scroll and resize events. We cache scroll values so that
	   * application code can access them without triggering reflows.
	   *
	   * ViewportMetrics is only used by SyntheticMouse/TouchEvent and only when
	   * pageX/pageY isn't supported (legacy browsers).
	   *
	   * NOTE: Scroll events do not bubble.
	   *
	   * @see http://www.quirksmode.org/dom/events/scroll.html
	   */
	  ensureScrollValueMonitoring: function () {
	    if (hasEventPageXY === undefined) {
	      hasEventPageXY = document.createEvent && 'pageX' in document.createEvent('MouseEvent');
	    }
	    if (!hasEventPageXY && !isMonitoringScrollValue) {
	      var refresh = ViewportMetrics.refreshScrollValues;
	      ReactBrowserEventEmitter.ReactEventListener.monitorScrollValue(refresh);
	      isMonitoringScrollValue = true;
	    }
	  }

	});

	module.exports = ReactBrowserEventEmitter;

/***/ },
/* 111 */
/***/ function(module, exports, __webpack_require__) {

	/**
	 * Copyright 2013-present, Facebook, Inc.
	 * All rights reserved.
	 *
	 * This source code is licensed under the BSD-style license found in the
	 * LICENSE file in the root directory of this source tree. An additional grant
	 * of patent rights can be found in the PATENTS file in the same directory.
	 *
	 * @providesModule ReactEventEmitterMixin
	 */

	'use strict';

	var EventPluginHub = __webpack_require__(43);

	function runEventQueueInBatch(events) {
	  EventPluginHub.enqueueEvents(events);
	  EventPluginHub.processEventQueue(false);
	}

	var ReactEventEmitterMixin = {

	  /**
	   * Streams a fired top-level event to `EventPluginHub` where plugins have the
	   * opportunity to create `ReactEvent`s to be dispatched.
	   */
	  handleTopLevel: function (topLevelType, targetInst, nativeEvent, nativeEventTarget) {
	    var events = EventPluginHub.extractEvents(topLevelType, targetInst, nativeEvent, nativeEventTarget);
	    runEventQueueInBatch(events);
	  }
	};

	module.exports = ReactEventEmitterMixin;

/***/ },
/* 112 */
/***/ function(module, exports, __webpack_require__) {

	/**
	 * Copyright 2013-present, Facebook, Inc.
	 * All rights reserved.
	 *
	 * This source code is licensed under the BSD-style license found in the
	 * LICENSE file in the root directory of this source tree. An additional grant
	 * of patent rights can be found in the PATENTS file in the same directory.
	 *
	 * @providesModule getVendorPrefixedEventName
	 */

	'use strict';

	var ExecutionEnvironment = __webpack_require__(49);

	/**
	 * Generate a mapping of standard vendor prefixes using the defined style property and event name.
	 *
	 * @param {string} styleProp
	 * @param {string} eventName
	 * @returns {object}
	 */
	function makePrefixMap(styleProp, eventName) {
	  var prefixes = {};

	  prefixes[styleProp.toLowerCase()] = eventName.toLowerCase();
	  prefixes['Webkit' + styleProp] = 'webkit' + eventName;
	  prefixes['Moz' + styleProp] = 'moz' + eventName;
	  prefixes['ms' + styleProp] = 'MS' + eventName;
	  prefixes['O' + styleProp] = 'o' + eventName.toLowerCase();

	  return prefixes;
	}

	/**
	 * A list of event names to a configurable list of vendor prefixes.
	 */
	var vendorPrefixes = {
	  animationend: makePrefixMap('Animation', 'AnimationEnd'),
	  animationiteration: makePrefixMap('Animation', 'AnimationIteration'),
	  animationstart: makePrefixMap('Animation', 'AnimationStart'),
	  transitionend: makePrefixMap('Transition', 'TransitionEnd')
	};

	/**
	 * Event names that have already been detected and prefixed (if applicable).
	 */
	var prefixedEventNames = {};

	/**
	 * Element to check for prefixes on.
	 */
	var style = {};

	/**
	 * Bootstrap if a DOM exists.
	 */
	if (ExecutionEnvironment.canUseDOM) {
	  style = document.createElement('div').style;

	  // On some platforms, in particular some releases of Android 4.x,
	  // the un-prefixed "animation" and "transition" properties are defined on the
	  // style object but the events that fire will still be prefixed, so we need
	  // to check if the un-prefixed events are usable, and if not remove them from the map.
	  if (!('AnimationEvent' in window)) {
	    delete vendorPrefixes.animationend.animation;
	    delete vendorPrefixes.animationiteration.animation;
	    delete vendorPrefixes.animationstart.animation;
	  }

	  // Same as above
	  if (!('TransitionEvent' in window)) {
	    delete vendorPrefixes.transitionend.transition;
	  }
	}

	/**
	 * Attempts to determine the correct vendor prefixed event name.
	 *
	 * @param {string} eventName
	 * @returns {string}
	 */
	function getVendorPrefixedEventName(eventName) {
	  if (prefixedEventNames[eventName]) {
	    return prefixedEventNames[eventName];
	  } else if (!vendorPrefixes[eventName]) {
	    return eventName;
	  }

	  var prefixMap = vendorPrefixes[eventName];

	  for (var styleProp in prefixMap) {
	    if (prefixMap.hasOwnProperty(styleProp) && styleProp in style) {
	      return prefixedEventNames[eventName] = prefixMap[styleProp];
	    }
	  }

	  return '';
	}

	module.exports = getVendorPrefixedEventName;

/***/ },
/* 113 */
/***/ function(module, exports, __webpack_require__) {

	/**
	 * Copyright 2013-present, Facebook, Inc.
	 * All rights reserved.
	 *
	 * This source code is licensed under the BSD-style license found in the
	 * LICENSE file in the root directory of this source tree. An additional grant
	 * of patent rights can be found in the PATENTS file in the same directory.
	 *
	 * @providesModule ReactDOMButton
	 */

	'use strict';

	var DisabledInputUtils = __webpack_require__(114);

	/**
	 * Implements a <button> host component that does not receive mouse events
	 * when `disabled` is set.
	 */
	var ReactDOMButton = {
	  getHostProps: DisabledInputUtils.getHostProps
	};

	module.exports = ReactDOMButton;

/***/ },
/* 114 */
/***/ function(module, exports) {

	/**
	 * Copyright 2013-present, Facebook, Inc.
	 * All rights reserved.
	 *
	 * This source code is licensed under the BSD-style license found in the
	 * LICENSE file in the root directory of this source tree. An additional grant
	 * of patent rights can be found in the PATENTS file in the same directory.
	 *
	 * @providesModule DisabledInputUtils
	 */

	'use strict';

	var disableableMouseListenerNames = {
	  onClick: true,
	  onDoubleClick: true,
	  onMouseDown: true,
	  onMouseMove: true,
	  onMouseUp: true,

	  onClickCapture: true,
	  onDoubleClickCapture: true,
	  onMouseDownCapture: true,
	  onMouseMoveCapture: true,
	  onMouseUpCapture: true
	};

	/**
	 * Implements a host component that does not receive mouse events
	 * when `disabled` is set.
	 */
	var DisabledInputUtils = {
	  getHostProps: function (inst, props) {
	    if (!props.disabled) {
	      return props;
	    }

	    // Copy the props, except the mouse listeners
	    var hostProps = {};
	    for (var key in props) {
	      if (!disableableMouseListenerNames[key] && props.hasOwnProperty(key)) {
	        hostProps[key] = props[key];
	      }
	    }

	    return hostProps;
	  }
	};

	module.exports = DisabledInputUtils;

/***/ },
/* 115 */
/***/ function(module, exports, __webpack_require__) {

	/* WEBPACK VAR INJECTION */(function(process) {/**
	 * Copyright 2013-present, Facebook, Inc.
	 * All rights reserved.
	 *
	 * This source code is licensed under the BSD-style license found in the
	 * LICENSE file in the root directory of this source tree. An additional grant
	 * of patent rights can be found in the PATENTS file in the same directory.
	 *
	 * @providesModule ReactDOMInput
	 */

	'use strict';

	var _prodInvariant = __webpack_require__(8),
	    _assign = __webpack_require__(5);

	var DisabledInputUtils = __webpack_require__(114);
	var DOMPropertyOperations = __webpack_require__(104);
	var LinkedValueUtils = __webpack_require__(116);
	var ReactDOMComponentTree = __webpack_require__(36);
	var ReactUpdates = __webpack_require__(56);

	var invariant = __webpack_require__(9);
	var warning = __webpack_require__(12);

	var didWarnValueLink = false;
	var didWarnCheckedLink = false;
	var didWarnValueDefaultValue = false;
	var didWarnCheckedDefaultChecked = false;
	var didWarnControlledToUncontrolled = false;
	var didWarnUncontrolledToControlled = false;

	function forceUpdateIfMounted() {
	  if (this._rootNodeID) {
	    // DOM component is still mounted; update
	    ReactDOMInput.updateWrapper(this);
	  }
	}

	function isControlled(props) {
	  var usesChecked = props.type === 'checkbox' || props.type === 'radio';
	  return usesChecked ? props.checked !== undefined : props.value !== undefined;
	}

	/**
	 * Implements an <input> host component that allows setting these optional
	 * props: `checked`, `value`, `defaultChecked`, and `defaultValue`.
	 *
	 * If `checked` or `value` are not supplied (or null/undefined), user actions
	 * that affect the checked state or value will trigger updates to the element.
	 *
	 * If they are supplied (and not null/undefined), the rendered element will not
	 * trigger updates to the element. Instead, the props must change in order for
	 * the rendered element to be updated.
	 *
	 * The rendered element will be initialized as unchecked (or `defaultChecked`)
	 * with an empty value (or `defaultValue`).
	 *
	 * @see http://www.w3.org/TR/2012/WD-html5-20121025/the-input-element.html
	 */
	var ReactDOMInput = {
	  getHostProps: function (inst, props) {
	    var value = LinkedValueUtils.getValue(props);
	    var checked = LinkedValueUtils.getChecked(props);

	    var hostProps = _assign({
	      // Make sure we set .type before any other properties (setting .value
	      // before .type means .value is lost in IE11 and below)
	      type: undefined
	    }, DisabledInputUtils.getHostProps(inst, props), {
	      defaultChecked: undefined,
	      defaultValue: undefined,
	      value: value != null ? value : inst._wrapperState.initialValue,
	      checked: checked != null ? checked : inst._wrapperState.initialChecked,
	      onChange: inst._wrapperState.onChange
	    });

	    return hostProps;
	  },

	  mountWrapper: function (inst, props) {
	    if (process.env.NODE_ENV !== 'production') {
	      LinkedValueUtils.checkPropTypes('input', props, inst._currentElement._owner);

	      var owner = inst._currentElement._owner;

	      if (props.valueLink !== undefined && !didWarnValueLink) {
	        process.env.NODE_ENV !== 'production' ? warning(false, '`valueLink` prop on `input` is deprecated; set `value` and `onChange` instead.') : void 0;
	        didWarnValueLink = true;
	      }
	      if (props.checkedLink !== undefined && !didWarnCheckedLink) {
	        process.env.NODE_ENV !== 'production' ? warning(false, '`checkedLink` prop on `input` is deprecated; set `value` and `onChange` instead.') : void 0;
	        didWarnCheckedLink = true;
	      }
	      if (props.checked !== undefined && props.defaultChecked !== undefined && !didWarnCheckedDefaultChecked) {
	        process.env.NODE_ENV !== 'production' ? warning(false, '%s contains an input of type %s with both checked and defaultChecked props. ' + 'Input elements must be either controlled or uncontrolled ' + '(specify either the checked prop, or the defaultChecked prop, but not ' + 'both). Decide between using a controlled or uncontrolled input ' + 'element and remove one of these props. More info: ' + 'https://fb.me/react-controlled-components', owner && owner.getName() || 'A component', props.type) : void 0;
	        didWarnCheckedDefaultChecked = true;
	      }
	      if (props.value !== undefined && props.defaultValue !== undefined && !didWarnValueDefaultValue) {
	        process.env.NODE_ENV !== 'production' ? warning(false, '%s contains an input of type %s with both value and defaultValue props. ' + 'Input elements must be either controlled or uncontrolled ' + '(specify either the value prop, or the defaultValue prop, but not ' + 'both). Decide between using a controlled or uncontrolled input ' + 'element and remove one of these props. More info: ' + 'https://fb.me/react-controlled-components', owner && owner.getName() || 'A component', props.type) : void 0;
	        didWarnValueDefaultValue = true;
	      }
	    }

	    var defaultValue = props.defaultValue;
	    inst._wrapperState = {
	      initialChecked: props.checked != null ? props.checked : props.defaultChecked,
	      initialValue: props.value != null ? props.value : defaultValue,
	      listeners: null,
	      onChange: _handleChange.bind(inst)
	    };

	    if (process.env.NODE_ENV !== 'production') {
	      inst._wrapperState.controlled = isControlled(props);
	    }
	  },

	  updateWrapper: function (inst) {
	    var props = inst._currentElement.props;

	    if (process.env.NODE_ENV !== 'production') {
	      var controlled = isControlled(props);
	      var owner = inst._currentElement._owner;

	      if (!inst._wrapperState.controlled && controlled && !didWarnUncontrolledToControlled) {
	        process.env.NODE_ENV !== 'production' ? warning(false, '%s is changing an uncontrolled input of type %s to be controlled. ' + 'Input elements should not switch from uncontrolled to controlled (or vice versa). ' + 'Decide between using a controlled or uncontrolled input ' + 'element for the lifetime of the component. More info: https://fb.me/react-controlled-components', owner && owner.getName() || 'A component', props.type) : void 0;
	        didWarnUncontrolledToControlled = true;
	      }
	      if (inst._wrapperState.controlled && !controlled && !didWarnControlledToUncontrolled) {
	        process.env.NODE_ENV !== 'production' ? warning(false, '%s is changing a controlled input of type %s to be uncontrolled. ' + 'Input elements should not switch from controlled to uncontrolled (or vice versa). ' + 'Decide between using a controlled or uncontrolled input ' + 'element for the lifetime of the component. More info: https://fb.me/react-controlled-components', owner && owner.getName() || 'A component', props.type) : void 0;
	        didWarnControlledToUncontrolled = true;
	      }
	    }

	    // TODO: Shouldn't this be getChecked(props)?
	    var checked = props.checked;
	    if (checked != null) {
	      DOMPropertyOperations.setValueForProperty(ReactDOMComponentTree.getNodeFromInstance(inst), 'checked', checked || false);
	    }

	    var node = ReactDOMComponentTree.getNodeFromInstance(inst);
	    var value = LinkedValueUtils.getValue(props);
	    if (value != null) {

	      // Cast `value` to a string to ensure the value is set correctly. While
	      // browsers typically do this as necessary, jsdom doesn't.
	      var newValue = '' + value;

	      // To avoid side effects (such as losing text selection), only set value if changed
	      if (newValue !== node.value) {
	        node.value = newValue;
	      }
	    } else {
	      if (props.value == null && props.defaultValue != null) {
	        node.defaultValue = '' + props.defaultValue;
	      }
	      if (props.checked == null && props.defaultChecked != null) {
	        node.defaultChecked = !!props.defaultChecked;
	      }
	    }
	  },

	  postMountWrapper: function (inst) {
	    var props = inst._currentElement.props;

	    // This is in postMount because we need access to the DOM node, which is not
	    // available until after the component has mounted.
	    var node = ReactDOMComponentTree.getNodeFromInstance(inst);

	    // Detach value from defaultValue. We won't do anything if we're working on
	    // submit or reset inputs as those values & defaultValues are linked. They
	    // are not resetable nodes so this operation doesn't matter and actually
	    // removes browser-default values (eg "Submit Query") when no value is
	    // provided.
	    if (props.type !== 'submit' && props.type !== 'reset') {
	      node.value = node.value;
	    }

	    // Normally, we'd just do `node.checked = node.checked` upon initial mount, less this bug
	    // this is needed to work around a chrome bug where setting defaultChecked
	    // will sometimes influence the value of checked (even after detachment).
	    // Reference: https://bugs.chromium.org/p/chromium/issues/detail?id=608416
	    // We need to temporarily unset name to avoid disrupting radio button groups.
	    var name = node.name;
	    if (name !== '') {
	      node.name = '';
	    }
	    node.defaultChecked = !node.defaultChecked;
	    node.defaultChecked = !node.defaultChecked;
	    if (name !== '') {
	      node.name = name;
	    }
	  }
	};

	function _handleChange(event) {
	  var props = this._currentElement.props;

	  var returnValue = LinkedValueUtils.executeOnChange(props, event);

	  // Here we use asap to wait until all updates have propagated, which
	  // is important when using controlled components within layers:
	  // https://github.com/facebook/react/issues/1698
	  ReactUpdates.asap(forceUpdateIfMounted, this);

	  var name = props.name;
	  if (props.type === 'radio' && name != null) {
	    var rootNode = ReactDOMComponentTree.getNodeFromInstance(this);
	    var queryRoot = rootNode;

	    while (queryRoot.parentNode) {
	      queryRoot = queryRoot.parentNode;
	    }

	    // If `rootNode.form` was non-null, then we could try `form.elements`,
	    // but that sometimes behaves strangely in IE8. We could also try using
	    // `form.getElementsByName`, but that will only return direct children
	    // and won't include inputs that use the HTML5 `form=` attribute. Since
	    // the input might not even be in a form, let's just use the global
	    // `querySelectorAll` to ensure we don't miss anything.
	    var group = queryRoot.querySelectorAll('input[name=' + JSON.stringify('' + name) + '][type="radio"]');

	    for (var i = 0; i < group.length; i++) {
	      var otherNode = group[i];
	      if (otherNode === rootNode || otherNode.form !== rootNode.form) {
	        continue;
	      }
	      // This will throw if radio buttons rendered by different copies of React
	      // and the same name are rendered into the same form (same as #1939).
	      // That's probably okay; we don't support it just as we don't support
	      // mixing React radio buttons with non-React ones.
	      var otherInstance = ReactDOMComponentTree.getInstanceFromNode(otherNode);
	      !otherInstance ? process.env.NODE_ENV !== 'production' ? invariant(false, 'ReactDOMInput: Mixing React and non-React radio inputs with the same `name` is not supported.') : _prodInvariant('90') : void 0;
	      // If this is a controlled radio button group, forcing the input that
	      // was previously checked to update will cause it to be come re-checked
	      // as appropriate.
	      ReactUpdates.asap(forceUpdateIfMounted, otherInstance);
	    }
	  }

	  return returnValue;
	}

	module.exports = ReactDOMInput;
	/* WEBPACK VAR INJECTION */}.call(exports, __webpack_require__(4)))

/***/ },
/* 116 */
/***/ function(module, exports, __webpack_require__) {

	/* WEBPACK VAR INJECTION */(function(process) {/**
	 * Copyright 2013-present, Facebook, Inc.
	 * All rights reserved.
	 *
	 * This source code is licensed under the BSD-style license found in the
	 * LICENSE file in the root directory of this source tree. An additional grant
	 * of patent rights can be found in the PATENTS file in the same directory.
	 *
	 * @providesModule LinkedValueUtils
	 */

	'use strict';

	var _prodInvariant = __webpack_require__(8);

	var ReactPropTypes = __webpack_require__(31);
	var ReactPropTypeLocations = __webpack_require__(22);

	var invariant = __webpack_require__(9);
	var warning = __webpack_require__(12);

	var hasReadOnlyValue = {
	  'button': true,
	  'checkbox': true,
	  'image': true,
	  'hidden': true,
	  'radio': true,
	  'reset': true,
	  'submit': true
	};

	function _assertSingleLink(inputProps) {
	  !(inputProps.checkedLink == null || inputProps.valueLink == null) ? process.env.NODE_ENV !== 'production' ? invariant(false, 'Cannot provide a checkedLink and a valueLink. If you want to use checkedLink, you probably don\'t want to use valueLink and vice versa.') : _prodInvariant('87') : void 0;
	}
	function _assertValueLink(inputProps) {
	  _assertSingleLink(inputProps);
	  !(inputProps.value == null && inputProps.onChange == null) ? process.env.NODE_ENV !== 'production' ? invariant(false, 'Cannot provide a valueLink and a value or onChange event. If you want to use value or onChange, you probably don\'t want to use valueLink.') : _prodInvariant('88') : void 0;
	}

	function _assertCheckedLink(inputProps) {
	  _assertSingleLink(inputProps);
	  !(inputProps.checked == null && inputProps.onChange == null) ? process.env.NODE_ENV !== 'production' ? invariant(false, 'Cannot provide a checkedLink and a checked property or onChange event. If you want to use checked or onChange, you probably don\'t want to use checkedLink') : _prodInvariant('89') : void 0;
	}

	var propTypes = {
	  value: function (props, propName, componentName) {
	    if (!props[propName] || hasReadOnlyValue[props.type] || props.onChange || props.readOnly || props.disabled) {
	      return null;
	    }
	    return new Error('You provided a `value` prop to a form field without an ' + '`onChange` handler. This will render a read-only field. If ' + 'the field should be mutable use `defaultValue`. Otherwise, ' + 'set either `onChange` or `readOnly`.');
	  },
	  checked: function (props, propName, componentName) {
	    if (!props[propName] || props.onChange || props.readOnly || props.disabled) {
	      return null;
	    }
	    return new Error('You provided a `checked` prop to a form field without an ' + '`onChange` handler. This will render a read-only field. If ' + 'the field should be mutable use `defaultChecked`. Otherwise, ' + 'set either `onChange` or `readOnly`.');
	  },
	  onChange: ReactPropTypes.func
	};

	var loggedTypeFailures = {};
	function getDeclarationErrorAddendum(owner) {
	  if (owner) {
	    var name = owner.getName();
	    if (name) {
	      return ' Check the render method of `' + name + '`.';
	    }
	  }
	  return '';
	}

	/**
	 * Provide a linked `value` attribute for controlled forms. You should not use
	 * this outside of the ReactDOM controlled form components.
	 */
	var LinkedValueUtils = {
	  checkPropTypes: function (tagName, props, owner) {
	    for (var propName in propTypes) {
	      if (propTypes.hasOwnProperty(propName)) {
	        var error = propTypes[propName](props, propName, tagName, ReactPropTypeLocations.prop);
	      }
	      if (error instanceof Error && !(error.message in loggedTypeFailures)) {
	        // Only monitor this failure once because there tends to be a lot of the
	        // same error.
	        loggedTypeFailures[error.message] = true;

	        var addendum = getDeclarationErrorAddendum(owner);
	        process.env.NODE_ENV !== 'production' ? warning(false, 'Failed form propType: %s%s', error.message, addendum) : void 0;
	      }
	    }
	  },

	  /**
	   * @param {object} inputProps Props for form component
	   * @return {*} current value of the input either from value prop or link.
	   */
	  getValue: function (inputProps) {
	    if (inputProps.valueLink) {
	      _assertValueLink(inputProps);
	      return inputProps.valueLink.value;
	    }
	    return inputProps.value;
	  },

	  /**
	   * @param {object} inputProps Props for form component
	   * @return {*} current checked status of the input either from checked prop
	   *             or link.
	   */
	  getChecked: function (inputProps) {
	    if (inputProps.checkedLink) {
	      _assertCheckedLink(inputProps);
	      return inputProps.checkedLink.value;
	    }
	    return inputProps.checked;
	  },

	  /**
	   * @param {object} inputProps Props for form component
	   * @param {SyntheticEvent} event change event to handle
	   */
	  executeOnChange: function (inputProps, event) {
	    if (inputProps.valueLink) {
	      _assertValueLink(inputProps);
	      return inputProps.valueLink.requestChange(event.target.value);
	    } else if (inputProps.checkedLink) {
	      _assertCheckedLink(inputProps);
	      return inputProps.checkedLink.requestChange(event.target.checked);
	    } else if (inputProps.onChange) {
	      return inputProps.onChange.call(undefined, event);
	    }
	  }
	};

	module.exports = LinkedValueUtils;
	/* WEBPACK VAR INJECTION */}.call(exports, __webpack_require__(4)))

/***/ },
/* 117 */
/***/ function(module, exports, __webpack_require__) {

	/* WEBPACK VAR INJECTION */(function(process) {/**
	 * Copyright 2013-present, Facebook, Inc.
	 * All rights reserved.
	 *
	 * This source code is licensed under the BSD-style license found in the
	 * LICENSE file in the root directory of this source tree. An additional grant
	 * of patent rights can be found in the PATENTS file in the same directory.
	 *
	 * @providesModule ReactDOMOption
	 */

	'use strict';

	var _assign = __webpack_require__(5);

	var ReactChildren = __webpack_require__(6);
	var ReactDOMComponentTree = __webpack_require__(36);
	var ReactDOMSelect = __webpack_require__(118);

	var warning = __webpack_require__(12);
	var didWarnInvalidOptionChildren = false;

	function flattenChildren(children) {
	  var content = '';

	  // Flatten children and warn if they aren't strings or numbers;
	  // invalid types are ignored.
	  ReactChildren.forEach(children, function (child) {
	    if (child == null) {
	      return;
	    }
	    if (typeof child === 'string' || typeof child === 'number') {
	      content += child;
	    } else if (!didWarnInvalidOptionChildren) {
	      didWarnInvalidOptionChildren = true;
	      process.env.NODE_ENV !== 'production' ? warning(false, 'Only strings and numbers are supported as <option> children.') : void 0;
	    }
	  });

	  return content;
	}

	/**
	 * Implements an <option> host component that warns when `selected` is set.
	 */
	var ReactDOMOption = {
	  mountWrapper: function (inst, props, hostParent) {
	    // TODO (yungsters): Remove support for `selected` in <option>.
	    if (process.env.NODE_ENV !== 'production') {
	      process.env.NODE_ENV !== 'production' ? warning(props.selected == null, 'Use the `defaultValue` or `value` props on <select> instead of ' + 'setting `selected` on <option>.') : void 0;
	    }

	    // Look up whether this option is 'selected'
	    var selectValue = null;
	    if (hostParent != null) {
	      var selectParent = hostParent;

	      if (selectParent._tag === 'optgroup') {
	        selectParent = selectParent._hostParent;
	      }

	      if (selectParent != null && selectParent._tag === 'select') {
	        selectValue = ReactDOMSelect.getSelectValueContext(selectParent);
	      }
	    }

	    // If the value is null (e.g., no specified value or after initial mount)
	    // or missing (e.g., for <datalist>), we don't change props.selected
	    var selected = null;
	    if (selectValue != null) {
	      var value;
	      if (props.value != null) {
	        value = props.value + '';
	      } else {
	        value = flattenChildren(props.children);
	      }
	      selected = false;
	      if (Array.isArray(selectValue)) {
	        // multiple
	        for (var i = 0; i < selectValue.length; i++) {
	          if ('' + selectValue[i] === value) {
	            selected = true;
	            break;
	          }
	        }
	      } else {
	        selected = '' + selectValue === value;
	      }
	    }

	    inst._wrapperState = { selected: selected };
	  },

	  postMountWrapper: function (inst) {
	    // value="" should make a value attribute (#6219)
	    var props = inst._currentElement.props;
	    if (props.value != null) {
	      var node = ReactDOMComponentTree.getNodeFromInstance(inst);
	      node.setAttribute('value', props.value);
	    }
	  },

	  getHostProps: function (inst, props) {
	    var hostProps = _assign({ selected: undefined, children: undefined }, props);

	    // Read state only from initial mount because <select> updates value
	    // manually; we need the initial state only for server rendering
	    if (inst._wrapperState.selected != null) {
	      hostProps.selected = inst._wrapperState.selected;
	    }

	    var content = flattenChildren(props.children);

	    if (content) {
	      hostProps.children = content;
	    }

	    return hostProps;
	  }

	};

	module.exports = ReactDOMOption;
	/* WEBPACK VAR INJECTION */}.call(exports, __webpack_require__(4)))

/***/ },
/* 118 */
/***/ function(module, exports, __webpack_require__) {

	/* WEBPACK VAR INJECTION */(function(process) {/**
	 * Copyright 2013-present, Facebook, Inc.
	 * All rights reserved.
	 *
	 * This source code is licensed under the BSD-style license found in the
	 * LICENSE file in the root directory of this source tree. An additional grant
	 * of patent rights can be found in the PATENTS file in the same directory.
	 *
	 * @providesModule ReactDOMSelect
	 */

	'use strict';

	var _assign = __webpack_require__(5);

	var DisabledInputUtils = __webpack_require__(114);
	var LinkedValueUtils = __webpack_require__(116);
	var ReactDOMComponentTree = __webpack_require__(36);
	var ReactUpdates = __webpack_require__(56);

	var warning = __webpack_require__(12);

	var didWarnValueLink = false;
	var didWarnValueDefaultValue = false;

	function updateOptionsIfPendingUpdateAndMounted() {
	  if (this._rootNodeID && this._wrapperState.pendingUpdate) {
	    this._wrapperState.pendingUpdate = false;

	    var props = this._currentElement.props;
	    var value = LinkedValueUtils.getValue(props);

	    if (value != null) {
	      updateOptions(this, Boolean(props.multiple), value);
	    }
	  }
	}

	function getDeclarationErrorAddendum(owner) {
	  if (owner) {
	    var name = owner.getName();
	    if (name) {
	      return ' Check the render method of `' + name + '`.';
	    }
	  }
	  return '';
	}

	var valuePropNames = ['value', 'defaultValue'];

	/**
	 * Validation function for `value` and `defaultValue`.
	 * @private
	 */
	function checkSelectPropTypes(inst, props) {
	  var owner = inst._currentElement._owner;
	  LinkedValueUtils.checkPropTypes('select', props, owner);

	  if (props.valueLink !== undefined && !didWarnValueLink) {
	    process.env.NODE_ENV !== 'production' ? warning(false, '`valueLink` prop on `select` is deprecated; set `value` and `onChange` instead.') : void 0;
	    didWarnValueLink = true;
	  }

	  for (var i = 0; i < valuePropNames.length; i++) {
	    var propName = valuePropNames[i];
	    if (props[propName] == null) {
	      continue;
	    }
	    if (props.multiple) {
	      process.env.NODE_ENV !== 'production' ? warning(Array.isArray(props[propName]), 'The `%s` prop supplied to <select> must be an array if ' + '`multiple` is true.%s', propName, getDeclarationErrorAddendum(owner)) : void 0;
	    } else {
	      process.env.NODE_ENV !== 'production' ? warning(!Array.isArray(props[propName]), 'The `%s` prop supplied to <select> must be a scalar ' + 'value if `multiple` is false.%s', propName, getDeclarationErrorAddendum(owner)) : void 0;
	    }
	  }
	}

	/**
	 * @param {ReactDOMComponent} inst
	 * @param {boolean} multiple
	 * @param {*} propValue A stringable (with `multiple`, a list of stringables).
	 * @private
	 */
	function updateOptions(inst, multiple, propValue) {
	  var selectedValue, i;
	  var options = ReactDOMComponentTree.getNodeFromInstance(inst).options;

	  if (multiple) {
	    selectedValue = {};
	    for (i = 0; i < propValue.length; i++) {
	      selectedValue['' + propValue[i]] = true;
	    }
	    for (i = 0; i < options.length; i++) {
	      var selected = selectedValue.hasOwnProperty(options[i].value);
	      if (options[i].selected !== selected) {
	        options[i].selected = selected;
	      }
	    }
	  } else {
	    // Do not set `select.value` as exact behavior isn't consistent across all
	    // browsers for all cases.
	    selectedValue = '' + propValue;
	    for (i = 0; i < options.length; i++) {
	      if (options[i].value === selectedValue) {
	        options[i].selected = true;
	        return;
	      }
	    }
	    if (options.length) {
	      options[0].selected = true;
	    }
	  }
	}

	/**
	 * Implements a <select> host component that allows optionally setting the
	 * props `value` and `defaultValue`. If `multiple` is false, the prop must be a
	 * stringable. If `multiple` is true, the prop must be an array of stringables.
	 *
	 * If `value` is not supplied (or null/undefined), user actions that change the
	 * selected option will trigger updates to the rendered options.
	 *
	 * If it is supplied (and not null/undefined), the rendered options will not
	 * update in response to user actions. Instead, the `value` prop must change in
	 * order for the rendered options to update.
	 *
	 * If `defaultValue` is provided, any options with the supplied values will be
	 * selected.
	 */
	var ReactDOMSelect = {
	  getHostProps: function (inst, props) {
	    return _assign({}, DisabledInputUtils.getHostProps(inst, props), {
	      onChange: inst._wrapperState.onChange,
	      value: undefined
	    });
	  },

	  mountWrapper: function (inst, props) {
	    if (process.env.NODE_ENV !== 'production') {
	      checkSelectPropTypes(inst, props);
	    }

	    var value = LinkedValueUtils.getValue(props);
	    inst._wrapperState = {
	      pendingUpdate: false,
	      initialValue: value != null ? value : props.defaultValue,
	      listeners: null,
	      onChange: _handleChange.bind(inst),
	      wasMultiple: Boolean(props.multiple)
	    };

	    if (props.value !== undefined && props.defaultValue !== undefined && !didWarnValueDefaultValue) {
	      process.env.NODE_ENV !== 'production' ? warning(false, 'Select elements must be either controlled or uncontrolled ' + '(specify either the value prop, or the defaultValue prop, but not ' + 'both). Decide between using a controlled or uncontrolled select ' + 'element and remove one of these props. More info: ' + 'https://fb.me/react-controlled-components') : void 0;
	      didWarnValueDefaultValue = true;
	    }
	  },

	  getSelectValueContext: function (inst) {
	    // ReactDOMOption looks at this initial value so the initial generated
	    // markup has correct `selected` attributes
	    return inst._wrapperState.initialValue;
	  },

	  postUpdateWrapper: function (inst) {
	    var props = inst._currentElement.props;

	    // After the initial mount, we control selected-ness manually so don't pass
	    // this value down
	    inst._wrapperState.initialValue = undefined;

	    var wasMultiple = inst._wrapperState.wasMultiple;
	    inst._wrapperState.wasMultiple = Boolean(props.multiple);

	    var value = LinkedValueUtils.getValue(props);
	    if (value != null) {
	      inst._wrapperState.pendingUpdate = false;
	      updateOptions(inst, Boolean(props.multiple), value);
	    } else if (wasMultiple !== Boolean(props.multiple)) {
	      // For simplicity, reapply `defaultValue` if `multiple` is toggled.
	      if (props.defaultValue != null) {
	        updateOptions(inst, Boolean(props.multiple), props.defaultValue);
	      } else {
	        // Revert the select back to its default unselected state.
	        updateOptions(inst, Boolean(props.multiple), props.multiple ? [] : '');
	      }
	    }
	  }
	};

	function _handleChange(event) {
	  var props = this._currentElement.props;
	  var returnValue = LinkedValueUtils.executeOnChange(props, event);

	  if (this._rootNodeID) {
	    this._wrapperState.pendingUpdate = true;
	  }
	  ReactUpdates.asap(updateOptionsIfPendingUpdateAndMounted, this);
	  return returnValue;
	}

	module.exports = ReactDOMSelect;
	/* WEBPACK VAR INJECTION */}.call(exports, __webpack_require__(4)))

/***/ },
/* 119 */
/***/ function(module, exports, __webpack_require__) {

	/* WEBPACK VAR INJECTION */(function(process) {/**
	 * Copyright 2013-present, Facebook, Inc.
	 * All rights reserved.
	 *
	 * This source code is licensed under the BSD-style license found in the
	 * LICENSE file in the root directory of this source tree. An additional grant
	 * of patent rights can be found in the PATENTS file in the same directory.
	 *
	 * @providesModule ReactDOMTextarea
	 */

	'use strict';

	var _prodInvariant = __webpack_require__(8),
	    _assign = __webpack_require__(5);

	var DisabledInputUtils = __webpack_require__(114);
	var LinkedValueUtils = __webpack_require__(116);
	var ReactDOMComponentTree = __webpack_require__(36);
	var ReactUpdates = __webpack_require__(56);

	var invariant = __webpack_require__(9);
	var warning = __webpack_require__(12);

	var didWarnValueLink = false;
	var didWarnValDefaultVal = false;

	function forceUpdateIfMounted() {
	  if (this._rootNodeID) {
	    // DOM component is still mounted; update
	    ReactDOMTextarea.updateWrapper(this);
	  }
	}

	/**
	 * Implements a <textarea> host component that allows setting `value`, and
	 * `defaultValue`. This differs from the traditional DOM API because value is
	 * usually set as PCDATA children.
	 *
	 * If `value` is not supplied (or null/undefined), user actions that affect the
	 * value will trigger updates to the element.
	 *
	 * If `value` is supplied (and not null/undefined), the rendered element will
	 * not trigger updates to the element. Instead, the `value` prop must change in
	 * order for the rendered element to be updated.
	 *
	 * The rendered element will be initialized with an empty value, the prop
	 * `defaultValue` if specified, or the children content (deprecated).
	 */
	var ReactDOMTextarea = {
	  getHostProps: function (inst, props) {
	    !(props.dangerouslySetInnerHTML == null) ? process.env.NODE_ENV !== 'production' ? invariant(false, '`dangerouslySetInnerHTML` does not make sense on <textarea>.') : _prodInvariant('91') : void 0;

	    // Always set children to the same thing. In IE9, the selection range will
	    // get reset if `textContent` is mutated.  We could add a check in setTextContent
	    // to only set the value if/when the value differs from the node value (which would
	    // completely solve this IE9 bug), but Sebastian+Ben seemed to like this solution.
	    // The value can be a boolean or object so that's why it's forced to be a string.
	    var hostProps = _assign({}, DisabledInputUtils.getHostProps(inst, props), {
	      value: undefined,
	      defaultValue: undefined,
	      children: '' + inst._wrapperState.initialValue,
	      onChange: inst._wrapperState.onChange
	    });

	    return hostProps;
	  },

	  mountWrapper: function (inst, props) {
	    if (process.env.NODE_ENV !== 'production') {
	      LinkedValueUtils.checkPropTypes('textarea', props, inst._currentElement._owner);
	      if (props.valueLink !== undefined && !didWarnValueLink) {
	        process.env.NODE_ENV !== 'production' ? warning(false, '`valueLink` prop on `textarea` is deprecated; set `value` and `onChange` instead.') : void 0;
	        didWarnValueLink = true;
	      }
	      if (props.value !== undefined && props.defaultValue !== undefined && !didWarnValDefaultVal) {
	        process.env.NODE_ENV !== 'production' ? warning(false, 'Textarea elements must be either controlled or uncontrolled ' + '(specify either the value prop, or the defaultValue prop, but not ' + 'both). Decide between using a controlled or uncontrolled textarea ' + 'and remove one of these props. More info: ' + 'https://fb.me/react-controlled-components') : void 0;
	        didWarnValDefaultVal = true;
	      }
	    }

	    var value = LinkedValueUtils.getValue(props);
	    var initialValue = value;

	    // Only bother fetching default value if we're going to use it
	    if (value == null) {
	      var defaultValue = props.defaultValue;
	      // TODO (yungsters): Remove support for children content in <textarea>.
	      var children = props.children;
	      if (children != null) {
	        if (process.env.NODE_ENV !== 'production') {
	          process.env.NODE_ENV !== 'production' ? warning(false, 'Use the `defaultValue` or `value` props instead of setting ' + 'children on <textarea>.') : void 0;
	        }
	        !(defaultValue == null) ? process.env.NODE_ENV !== 'production' ? invariant(false, 'If you supply `defaultValue` on a <textarea>, do not pass children.') : _prodInvariant('92') : void 0;
	        if (Array.isArray(children)) {
	          !(children.length <= 1) ? process.env.NODE_ENV !== 'production' ? invariant(false, '<textarea> can only have at most one child.') : _prodInvariant('93') : void 0;
	          children = children[0];
	        }

	        defaultValue = '' + children;
	      }
	      if (defaultValue == null) {
	        defaultValue = '';
	      }
	      initialValue = defaultValue;
	    }

	    inst._wrapperState = {
	      initialValue: '' + initialValue,
	      listeners: null,
	      onChange: _handleChange.bind(inst)
	    };
	  },

	  updateWrapper: function (inst) {
	    var props = inst._currentElement.props;

	    var node = ReactDOMComponentTree.getNodeFromInstance(inst);
	    var value = LinkedValueUtils.getValue(props);
	    if (value != null) {
	      // Cast `value` to a string to ensure the value is set correctly. While
	      // browsers typically do this as necessary, jsdom doesn't.
	      var newValue = '' + value;

	      // To avoid side effects (such as losing text selection), only set value if changed
	      if (newValue !== node.value) {
	        node.value = newValue;
	      }
	      if (props.defaultValue == null) {
	        node.defaultValue = newValue;
	      }
	    }
	    if (props.defaultValue != null) {
	      node.defaultValue = props.defaultValue;
	    }
	  },

	  postMountWrapper: function (inst) {
	    // This is in postMount because we need access to the DOM node, which is not
	    // available until after the component has mounted.
	    var node = ReactDOMComponentTree.getNodeFromInstance(inst);

	    // Warning: node.value may be the empty string at this point (IE11) if placeholder is set.
	    node.value = node.textContent; // Detach value from defaultValue
	  }
	};

	function _handleChange(event) {
	  var props = this._currentElement.props;
	  var returnValue = LinkedValueUtils.executeOnChange(props, event);
	  ReactUpdates.asap(forceUpdateIfMounted, this);
	  return returnValue;
	}

	module.exports = ReactDOMTextarea;
	/* WEBPACK VAR INJECTION */}.call(exports, __webpack_require__(4)))

/***/ },
/* 120 */
/***/ function(module, exports, __webpack_require__) {

	/* WEBPACK VAR INJECTION */(function(process) {/**
	 * Copyright 2013-present, Facebook, Inc.
	 * All rights reserved.
	 *
	 * This source code is licensed under the BSD-style license found in the
	 * LICENSE file in the root directory of this source tree. An additional grant
	 * of patent rights can be found in the PATENTS file in the same directory.
	 *
	 * @providesModule ReactMultiChild
	 */

	'use strict';

	var _prodInvariant = __webpack_require__(8);

	var ReactComponentEnvironment = __webpack_require__(121);
	var ReactInstanceMap = __webpack_require__(122);
	var ReactInstrumentation = __webpack_require__(62);
	var ReactMultiChildUpdateTypes = __webpack_require__(91);

	var ReactCurrentOwner = __webpack_require__(11);
	var ReactReconciler = __webpack_require__(59);
	var ReactChildReconciler = __webpack_require__(123);

	var emptyFunction = __webpack_require__(13);
	var flattenChildren = __webpack_require__(130);
	var invariant = __webpack_require__(9);

	/**
	 * Make an update for markup to be rendered and inserted at a supplied index.
	 *
	 * @param {string} markup Markup that renders into an element.
	 * @param {number} toIndex Destination index.
	 * @private
	 */
	function makeInsertMarkup(markup, afterNode, toIndex) {
	  // NOTE: Null values reduce hidden classes.
	  return {
	    type: ReactMultiChildUpdateTypes.INSERT_MARKUP,
	    content: markup,
	    fromIndex: null,
	    fromNode: null,
	    toIndex: toIndex,
	    afterNode: afterNode
	  };
	}

	/**
	 * Make an update for moving an existing element to another index.
	 *
	 * @param {number} fromIndex Source index of the existing element.
	 * @param {number} toIndex Destination index of the element.
	 * @private
	 */
	function makeMove(child, afterNode, toIndex) {
	  // NOTE: Null values reduce hidden classes.
	  return {
	    type: ReactMultiChildUpdateTypes.MOVE_EXISTING,
	    content: null,
	    fromIndex: child._mountIndex,
	    fromNode: ReactReconciler.getHostNode(child),
	    toIndex: toIndex,
	    afterNode: afterNode
	  };
	}

	/**
	 * Make an update for removing an element at an index.
	 *
	 * @param {number} fromIndex Index of the element to remove.
	 * @private
	 */
	function makeRemove(child, node) {
	  // NOTE: Null values reduce hidden classes.
	  return {
	    type: ReactMultiChildUpdateTypes.REMOVE_NODE,
	    content: null,
	    fromIndex: child._mountIndex,
	    fromNode: node,
	    toIndex: null,
	    afterNode: null
	  };
	}

	/**
	 * Make an update for setting the markup of a node.
	 *
	 * @param {string} markup Markup that renders into an element.
	 * @private
	 */
	function makeSetMarkup(markup) {
	  // NOTE: Null values reduce hidden classes.
	  return {
	    type: ReactMultiChildUpdateTypes.SET_MARKUP,
	    content: markup,
	    fromIndex: null,
	    fromNode: null,
	    toIndex: null,
	    afterNode: null
	  };
	}

	/**
	 * Make an update for setting the text content.
	 *
	 * @param {string} textContent Text content to set.
	 * @private
	 */
	function makeTextContent(textContent) {
	  // NOTE: Null values reduce hidden classes.
	  return {
	    type: ReactMultiChildUpdateTypes.TEXT_CONTENT,
	    content: textContent,
	    fromIndex: null,
	    fromNode: null,
	    toIndex: null,
	    afterNode: null
	  };
	}

	/**
	 * Push an update, if any, onto the queue. Creates a new queue if none is
	 * passed and always returns the queue. Mutative.
	 */
	function enqueue(queue, update) {
	  if (update) {
	    queue = queue || [];
	    queue.push(update);
	  }
	  return queue;
	}

	/**
	 * Processes any enqueued updates.
	 *
	 * @private
	 */
	function processQueue(inst, updateQueue) {
	  ReactComponentEnvironment.processChildrenUpdates(inst, updateQueue);
	}

	var setParentForInstrumentation = emptyFunction;
	var setChildrenForInstrumentation = emptyFunction;
	if (process.env.NODE_ENV !== 'production') {
	  var getDebugID = function (inst) {
	    if (!inst._debugID) {
	      // Check for ART-like instances. TODO: This is silly/gross.
	      var internal;
	      if (internal = ReactInstanceMap.get(inst)) {
	        inst = internal;
	      }
	    }
	    return inst._debugID;
	  };
	  setParentForInstrumentation = function (child) {
	    if (child._debugID !== 0) {
	      ReactInstrumentation.debugTool.onSetParent(child._debugID, getDebugID(this));
	    }
	  };
	  setChildrenForInstrumentation = function (children) {
	    var debugID = getDebugID(this);
	    // TODO: React Native empty components are also multichild.
	    // This means they still get into this method but don't have _debugID.
	    if (debugID !== 0) {
	      ReactInstrumentation.debugTool.onSetChildren(debugID, children ? Object.keys(children).map(function (key) {
	        return children[key]._debugID;
	      }) : []);
	    }
	  };
	}

	/**
	 * ReactMultiChild are capable of reconciling multiple children.
	 *
	 * @class ReactMultiChild
	 * @internal
	 */
	var ReactMultiChild = {

	  /**
	   * Provides common functionality for components that must reconcile multiple
	   * children. This is used by `ReactDOMComponent` to mount, update, and
	   * unmount child components.
	   *
	   * @lends {ReactMultiChild.prototype}
	   */
	  Mixin: {

	    _reconcilerInstantiateChildren: function (nestedChildren, transaction, context) {
	      if (process.env.NODE_ENV !== 'production') {
	        if (this._currentElement) {
	          try {
	            ReactCurrentOwner.current = this._currentElement._owner;
	            return ReactChildReconciler.instantiateChildren(nestedChildren, transaction, context, this._debugID);
	          } finally {
	            ReactCurrentOwner.current = null;
	          }
	        }
	      }
	      return ReactChildReconciler.instantiateChildren(nestedChildren, transaction, context);
	    },

	    _reconcilerUpdateChildren: function (prevChildren, nextNestedChildrenElements, removedNodes, transaction, context) {
	      var nextChildren;
	      if (process.env.NODE_ENV !== 'production') {
	        if (this._currentElement) {
	          try {
	            ReactCurrentOwner.current = this._currentElement._owner;
	            nextChildren = flattenChildren(nextNestedChildrenElements, this._debugID);
	          } finally {
	            ReactCurrentOwner.current = null;
	          }
	          ReactChildReconciler.updateChildren(prevChildren, nextChildren, removedNodes, transaction, context);
	          return nextChildren;
	        }
	      }
	      nextChildren = flattenChildren(nextNestedChildrenElements);
	      ReactChildReconciler.updateChildren(prevChildren, nextChildren, removedNodes, transaction, context);
	      return nextChildren;
	    },

	    /**
	     * Generates a "mount image" for each of the supplied children. In the case
	     * of `ReactDOMComponent`, a mount image is a string of markup.
	     *
	     * @param {?object} nestedChildren Nested child maps.
	     * @return {array} An array of mounted representations.
	     * @internal
	     */
	    mountChildren: function (nestedChildren, transaction, context) {
	      var children = this._reconcilerInstantiateChildren(nestedChildren, transaction, context);
	      this._renderedChildren = children;

	      var mountImages = [];
	      var index = 0;
	      for (var name in children) {
	        if (children.hasOwnProperty(name)) {
	          var child = children[name];
	          if (process.env.NODE_ENV !== 'production') {
	            setParentForInstrumentation.call(this, child);
	          }
	          var mountImage = ReactReconciler.mountComponent(child, transaction, this, this._hostContainerInfo, context);
	          child._mountIndex = index++;
	          mountImages.push(mountImage);
	        }
	      }

	      if (process.env.NODE_ENV !== 'production') {
	        setChildrenForInstrumentation.call(this, children);
	      }

	      return mountImages;
	    },

	    /**
	     * Replaces any rendered children with a text content string.
	     *
	     * @param {string} nextContent String of content.
	     * @internal
	     */
	    updateTextContent: function (nextContent) {
	      var prevChildren = this._renderedChildren;
	      // Remove any rendered children.
	      ReactChildReconciler.unmountChildren(prevChildren, false);
	      for (var name in prevChildren) {
	        if (prevChildren.hasOwnProperty(name)) {
	           true ? process.env.NODE_ENV !== 'production' ? invariant(false, 'updateTextContent called on non-empty component.') : _prodInvariant('118') : void 0;
	        }
	      }
	      // Set new text content.
	      var updates = [makeTextContent(nextContent)];
	      processQueue(this, updates);
	    },

	    /**
	     * Replaces any rendered children with a markup string.
	     *
	     * @param {string} nextMarkup String of markup.
	     * @internal
	     */
	    updateMarkup: function (nextMarkup) {
	      var prevChildren = this._renderedChildren;
	      // Remove any rendered children.
	      ReactChildReconciler.unmountChildren(prevChildren, false);
	      for (var name in prevChildren) {
	        if (prevChildren.hasOwnProperty(name)) {
	           true ? process.env.NODE_ENV !== 'production' ? invariant(false, 'updateTextContent called on non-empty component.') : _prodInvariant('118') : void 0;
	        }
	      }
	      var updates = [makeSetMarkup(nextMarkup)];
	      processQueue(this, updates);
	    },

	    /**
	     * Updates the rendered children with new children.
	     *
	     * @param {?object} nextNestedChildrenElements Nested child element maps.
	     * @param {ReactReconcileTransaction} transaction
	     * @internal
	     */
	    updateChildren: function (nextNestedChildrenElements, transaction, context) {
	      // Hook used by React ART
	      this._updateChildren(nextNestedChildrenElements, transaction, context);
	    },

	    /**
	     * @param {?object} nextNestedChildrenElements Nested child element maps.
	     * @param {ReactReconcileTransaction} transaction
	     * @final
	     * @protected
	     */
	    _updateChildren: function (nextNestedChildrenElements, transaction, context) {
	      var prevChildren = this._renderedChildren;
	      var removedNodes = {};
	      var nextChildren = this._reconcilerUpdateChildren(prevChildren, nextNestedChildrenElements, removedNodes, transaction, context);
	      if (!nextChildren && !prevChildren) {
	        return;
	      }
	      var updates = null;
	      var name;
	      // `nextIndex` will increment for each child in `nextChildren`, but
	      // `lastIndex` will be the last index visited in `prevChildren`.
	      var lastIndex = 0;
	      var nextIndex = 0;
	      var lastPlacedNode = null;
	      for (name in nextChildren) {
	        if (!nextChildren.hasOwnProperty(name)) {
	          continue;
	        }
	        var prevChild = prevChildren && prevChildren[name];
	        var nextChild = nextChildren[name];
	        if (prevChild === nextChild) {
	          updates = enqueue(updates, this.moveChild(prevChild, lastPlacedNode, nextIndex, lastIndex));
	          lastIndex = Math.max(prevChild._mountIndex, lastIndex);
	          prevChild._mountIndex = nextIndex;
	        } else {
	          if (prevChild) {
	            // Update `lastIndex` before `_mountIndex` gets unset by unmounting.
	            lastIndex = Math.max(prevChild._mountIndex, lastIndex);
	            // The `removedNodes` loop below will actually remove the child.
	          }
	          // The child must be instantiated before it's mounted.
	          updates = enqueue(updates, this._mountChildAtIndex(nextChild, lastPlacedNode, nextIndex, transaction, context));
	        }
	        nextIndex++;
	        lastPlacedNode = ReactReconciler.getHostNode(nextChild);
	      }
	      // Remove children that are no longer present.
	      for (name in removedNodes) {
	        if (removedNodes.hasOwnProperty(name)) {
	          updates = enqueue(updates, this._unmountChild(prevChildren[name], removedNodes[name]));
	        }
	      }
	      if (updates) {
	        processQueue(this, updates);
	      }
	      this._renderedChildren = nextChildren;

	      if (process.env.NODE_ENV !== 'production') {
	        setChildrenForInstrumentation.call(this, nextChildren);
	      }
	    },

	    /**
	     * Unmounts all rendered children. This should be used to clean up children
	     * when this component is unmounted. It does not actually perform any
	     * backend operations.
	     *
	     * @internal
	     */
	    unmountChildren: function (safely) {
	      var renderedChildren = this._renderedChildren;
	      ReactChildReconciler.unmountChildren(renderedChildren, safely);
	      this._renderedChildren = null;
	    },

	    /**
	     * Moves a child component to the supplied index.
	     *
	     * @param {ReactComponent} child Component to move.
	     * @param {number} toIndex Destination index of the element.
	     * @param {number} lastIndex Last index visited of the siblings of `child`.
	     * @protected
	     */
	    moveChild: function (child, afterNode, toIndex, lastIndex) {
	      // If the index of `child` is less than `lastIndex`, then it needs to
	      // be moved. Otherwise, we do not need to move it because a child will be
	      // inserted or moved before `child`.
	      if (child._mountIndex < lastIndex) {
	        return makeMove(child, afterNode, toIndex);
	      }
	    },

	    /**
	     * Creates a child component.
	     *
	     * @param {ReactComponent} child Component to create.
	     * @param {string} mountImage Markup to insert.
	     * @protected
	     */
	    createChild: function (child, afterNode, mountImage) {
	      return makeInsertMarkup(mountImage, afterNode, child._mountIndex);
	    },

	    /**
	     * Removes a child component.
	     *
	     * @param {ReactComponent} child Child to remove.
	     * @protected
	     */
	    removeChild: function (child, node) {
	      return makeRemove(child, node);
	    },

	    /**
	     * Mounts a child with the supplied name.
	     *
	     * NOTE: This is part of `updateChildren` and is here for readability.
	     *
	     * @param {ReactComponent} child Component to mount.
	     * @param {string} name Name of the child.
	     * @param {number} index Index at which to insert the child.
	     * @param {ReactReconcileTransaction} transaction
	     * @private
	     */
	    _mountChildAtIndex: function (child, afterNode, index, transaction, context) {
	      var mountImage = ReactReconciler.mountComponent(child, transaction, this, this._hostContainerInfo, context);
	      child._mountIndex = index;
	      return this.createChild(child, afterNode, mountImage);
	    },

	    /**
	     * Unmounts a rendered child.
	     *
	     * NOTE: This is part of `updateChildren` and is here for readability.
	     *
	     * @param {ReactComponent} child Component to unmount.
	     * @private
	     */
	    _unmountChild: function (child, node) {
	      var update = this.removeChild(child, node);
	      child._mountIndex = null;
	      return update;
	    }

	  }

	};

	module.exports = ReactMultiChild;
	/* WEBPACK VAR INJECTION */}.call(exports, __webpack_require__(4)))

/***/ },
/* 121 */
/***/ function(module, exports, __webpack_require__) {

	/* WEBPACK VAR INJECTION */(function(process) {/**
	 * Copyright 2014-present, Facebook, Inc.
	 * All rights reserved.
	 *
	 * This source code is licensed under the BSD-style license found in the
	 * LICENSE file in the root directory of this source tree. An additional grant
	 * of patent rights can be found in the PATENTS file in the same directory.
	 *
	 * @providesModule ReactComponentEnvironment
	 */

	'use strict';

	var _prodInvariant = __webpack_require__(8);

	var invariant = __webpack_require__(9);

	var injected = false;

	var ReactComponentEnvironment = {

	  /**
	   * Optionally injectable environment dependent cleanup hook. (server vs.
	   * browser etc). Example: A browser system caches DOM nodes based on component
	   * ID and must remove that cache entry when this instance is unmounted.
	   */
	  unmountIDFromEnvironment: null,

	  /**
	   * Optionally injectable hook for swapping out mount images in the middle of
	   * the tree.
	   */
	  replaceNodeWithMarkup: null,

	  /**
	   * Optionally injectable hook for processing a queue of child updates. Will
	   * later move into MultiChildComponents.
	   */
	  processChildrenUpdates: null,

	  injection: {
	    injectEnvironment: function (environment) {
	      !!injected ? process.env.NODE_ENV !== 'production' ? invariant(false, 'ReactCompositeComponent: injectEnvironment() can only be called once.') : _prodInvariant('104') : void 0;
	      ReactComponentEnvironment.unmountIDFromEnvironment = environment.unmountIDFromEnvironment;
	      ReactComponentEnvironment.replaceNodeWithMarkup = environment.replaceNodeWithMarkup;
	      ReactComponentEnvironment.processChildrenUpdates = environment.processChildrenUpdates;
	      injected = true;
	    }
	  }

	};

	module.exports = ReactComponentEnvironment;
	/* WEBPACK VAR INJECTION */}.call(exports, __webpack_require__(4)))

/***/ },
/* 122 */
/***/ function(module, exports) {

	/**
	 * Copyright 2013-present, Facebook, Inc.
	 * All rights reserved.
	 *
	 * This source code is licensed under the BSD-style license found in the
	 * LICENSE file in the root directory of this source tree. An additional grant
	 * of patent rights can be found in the PATENTS file in the same directory.
	 *
	 * @providesModule ReactInstanceMap
	 */

	'use strict';

	/**
	 * `ReactInstanceMap` maintains a mapping from a public facing stateful
	 * instance (key) and the internal representation (value). This allows public
	 * methods to accept the user facing instance as an argument and map them back
	 * to internal methods.
	 */

	// TODO: Replace this with ES6: var ReactInstanceMap = new Map();

	var ReactInstanceMap = {

	  /**
	   * This API should be called `delete` but we'd have to make sure to always
	   * transform these to strings for IE support. When this transform is fully
	   * supported we can rename it.
	   */
	  remove: function (key) {
	    key._reactInternalInstance = undefined;
	  },

	  get: function (key) {
	    return key._reactInternalInstance;
	  },

	  has: function (key) {
	    return key._reactInternalInstance !== undefined;
	  },

	  set: function (key, value) {
	    key._reactInternalInstance = value;
	  }

	};

	module.exports = ReactInstanceMap;

/***/ },
/* 123 */
/***/ function(module, exports, __webpack_require__) {

	/* WEBPACK VAR INJECTION */(function(process) {/**
	 * Copyright 2014-present, Facebook, Inc.
	 * All rights reserved.
	 *
	 * This source code is licensed under the BSD-style license found in the
	 * LICENSE file in the root directory of this source tree. An additional grant
	 * of patent rights can be found in the PATENTS file in the same directory.
	 *
	 * @providesModule ReactChildReconciler
	 */

	'use strict';

	var ReactReconciler = __webpack_require__(59);

	var instantiateReactComponent = __webpack_require__(124);
	var KeyEscapeUtils = __webpack_require__(17);
	var shouldUpdateReactComponent = __webpack_require__(127);
	var traverseAllChildren = __webpack_require__(15);
	var warning = __webpack_require__(12);

	function instantiateChild(childInstances, child, name, selfDebugID) {
	  // We found a component instance.
	  var keyUnique = childInstances[name] === undefined;
	  if (process.env.NODE_ENV !== 'production') {
	    var ReactComponentTreeDevtool = __webpack_require__(29);
	    process.env.NODE_ENV !== 'production' ? warning(keyUnique, 'flattenChildren(...): Encountered two children with the same key, ' + '`%s`. Child keys must be unique; when two children share a key, only ' + 'the first child will be used.%s', KeyEscapeUtils.unescape(name), ReactComponentTreeDevtool.getStackAddendumByID(selfDebugID)) : void 0;
	  }
	  if (child != null && keyUnique) {
	    childInstances[name] = instantiateReactComponent(child, true);
	  }
	}

	/**
	 * ReactChildReconciler provides helpers for initializing or updating a set of
	 * children. Its output is suitable for passing it onto ReactMultiChild which
	 * does diffed reordering and insertion.
	 */
	var ReactChildReconciler = {
	  /**
	   * Generates a "mount image" for each of the supplied children. In the case
	   * of `ReactDOMComponent`, a mount image is a string of markup.
	   *
	   * @param {?object} nestedChildNodes Nested child maps.
	   * @return {?object} A set of child instances.
	   * @internal
	   */
	  instantiateChildren: function (nestedChildNodes, transaction, context, selfDebugID // __DEV__ only
	  ) {
	    if (nestedChildNodes == null) {
	      return null;
	    }
	    var childInstances = {};

	    if (process.env.NODE_ENV !== 'production') {
	      traverseAllChildren(nestedChildNodes, function (childInsts, child, name) {
	        return instantiateChild(childInsts, child, name, selfDebugID);
	      }, childInstances);
	    } else {
	      traverseAllChildren(nestedChildNodes, instantiateChild, childInstances);
	    }
	    return childInstances;
	  },

	  /**
	   * Updates the rendered children and returns a new set of children.
	   *
	   * @param {?object} prevChildren Previously initialized set of children.
	   * @param {?object} nextChildren Flat child element maps.
	   * @param {ReactReconcileTransaction} transaction
	   * @param {object} context
	   * @return {?object} A new set of child instances.
	   * @internal
	   */
	  updateChildren: function (prevChildren, nextChildren, removedNodes, transaction, context) {
	    // We currently don't have a way to track moves here but if we use iterators
	    // instead of for..in we can zip the iterators and check if an item has
	    // moved.
	    // TODO: If nothing has changed, return the prevChildren object so that we
	    // can quickly bailout if nothing has changed.
	    if (!nextChildren && !prevChildren) {
	      return;
	    }
	    var name;
	    var prevChild;
	    for (name in nextChildren) {
	      if (!nextChildren.hasOwnProperty(name)) {
	        continue;
	      }
	      prevChild = prevChildren && prevChildren[name];
	      var prevElement = prevChild && prevChild._currentElement;
	      var nextElement = nextChildren[name];
	      if (prevChild != null && shouldUpdateReactComponent(prevElement, nextElement)) {
	        ReactReconciler.receiveComponent(prevChild, nextElement, transaction, context);
	        nextChildren[name] = prevChild;
	      } else {
	        if (prevChild) {
	          removedNodes[name] = ReactReconciler.getHostNode(prevChild);
	          ReactReconciler.unmountComponent(prevChild, false);
	        }
	        // The child must be instantiated before it's mounted.
	        var nextChildInstance = instantiateReactComponent(nextElement, true);
	        nextChildren[name] = nextChildInstance;
	      }
	    }
	    // Unmount children that are no longer present.
	    for (name in prevChildren) {
	      if (prevChildren.hasOwnProperty(name) && !(nextChildren && nextChildren.hasOwnProperty(name))) {
	        prevChild = prevChildren[name];
	        removedNodes[name] = ReactReconciler.getHostNode(prevChild);
	        ReactReconciler.unmountComponent(prevChild, false);
	      }
	    }
	  },

	  /**
	   * Unmounts all rendered children. This should be used to clean up children
	   * when this component is unmounted.
	   *
	   * @param {?object} renderedChildren Previously initialized set of children.
	   * @internal
	   */
	  unmountChildren: function (renderedChildren, safely) {
	    for (var name in renderedChildren) {
	      if (renderedChildren.hasOwnProperty(name)) {
	        var renderedChild = renderedChildren[name];
	        ReactReconciler.unmountComponent(renderedChild, safely);
	      }
	    }
	  }

	};

	module.exports = ReactChildReconciler;
	/* WEBPACK VAR INJECTION */}.call(exports, __webpack_require__(4)))

/***/ },
/* 124 */
/***/ function(module, exports, __webpack_require__) {

	/* WEBPACK VAR INJECTION */(function(process) {/**
	 * Copyright 2013-present, Facebook, Inc.
	 * All rights reserved.
	 *
	 * This source code is licensed under the BSD-style license found in the
	 * LICENSE file in the root directory of this source tree. An additional grant
	 * of patent rights can be found in the PATENTS file in the same directory.
	 *
	 * @providesModule instantiateReactComponent
	 */

	'use strict';

	var _prodInvariant = __webpack_require__(8),
	    _assign = __webpack_require__(5);

	var ReactCompositeComponent = __webpack_require__(125);
	var ReactEmptyComponent = __webpack_require__(128);
	var ReactHostComponent = __webpack_require__(129);
	var ReactInstrumentation = __webpack_require__(62);

	var invariant = __webpack_require__(9);
	var warning = __webpack_require__(12);

	// To avoid a cyclic dependency, we create the final class in this module
	var ReactCompositeComponentWrapper = function (element) {
	  this.construct(element);
	};
	_assign(ReactCompositeComponentWrapper.prototype, ReactCompositeComponent.Mixin, {
	  _instantiateReactComponent: instantiateReactComponent
	});

	function getDeclarationErrorAddendum(owner) {
	  if (owner) {
	    var name = owner.getName();
	    if (name) {
	      return ' Check the render method of `' + name + '`.';
	    }
	  }
	  return '';
	}

	function getDisplayName(instance) {
	  var element = instance._currentElement;
	  if (element == null) {
	    return '#empty';
	  } else if (typeof element === 'string' || typeof element === 'number') {
	    return '#text';
	  } else if (typeof element.type === 'string') {
	    return element.type;
	  } else if (instance.getName) {
	    return instance.getName() || 'Unknown';
	  } else {
	    return element.type.displayName || element.type.name || 'Unknown';
	  }
	}

	/**
	 * Check if the type reference is a known internal type. I.e. not a user
	 * provided composite type.
	 *
	 * @param {function} type
	 * @return {boolean} Returns true if this is a valid internal type.
	 */
	function isInternalComponentType(type) {
	  return typeof type === 'function' && typeof type.prototype !== 'undefined' && typeof type.prototype.mountComponent === 'function' && typeof type.prototype.receiveComponent === 'function';
	}

	var nextDebugID = 1;

	/**
	 * Given a ReactNode, create an instance that will actually be mounted.
	 *
	 * @param {ReactNode} node
	 * @param {boolean} shouldHaveDebugID
	 * @return {object} A new instance of the element's constructor.
	 * @protected
	 */
	function instantiateReactComponent(node, shouldHaveDebugID) {
	  var instance;

	  if (node === null || node === false) {
	    instance = ReactEmptyComponent.create(instantiateReactComponent);
	  } else if (typeof node === 'object') {
	    var element = node;
	    !(element && (typeof element.type === 'function' || typeof element.type === 'string')) ? process.env.NODE_ENV !== 'production' ? invariant(false, 'Element type is invalid: expected a string (for built-in components) or a class/function (for composite components) but got: %s.%s', element.type == null ? element.type : typeof element.type, getDeclarationErrorAddendum(element._owner)) : _prodInvariant('130', element.type == null ? element.type : typeof element.type, getDeclarationErrorAddendum(element._owner)) : void 0;

	    // Special case string values
	    if (typeof element.type === 'string') {
	      instance = ReactHostComponent.createInternalComponent(element);
	    } else if (isInternalComponentType(element.type)) {
	      // This is temporarily available for custom components that are not string
	      // representations. I.e. ART. Once those are updated to use the string
	      // representation, we can drop this code path.
	      instance = new element.type(element);

	      // We renamed this. Allow the old name for compat. :(
	      if (!instance.getHostNode) {
	        instance.getHostNode = instance.getNativeNode;
	      }
	    } else {
	      instance = new ReactCompositeComponentWrapper(element);
	    }
	  } else if (typeof node === 'string' || typeof node === 'number') {
	    instance = ReactHostComponent.createInstanceForText(node);
	  } else {
	     true ? process.env.NODE_ENV !== 'production' ? invariant(false, 'Encountered invalid React node of type %s', typeof node) : _prodInvariant('131', typeof node) : void 0;
	  }

	  if (process.env.NODE_ENV !== 'production') {
	    process.env.NODE_ENV !== 'production' ? warning(typeof instance.mountComponent === 'function' && typeof instance.receiveComponent === 'function' && typeof instance.getHostNode === 'function' && typeof instance.unmountComponent === 'function', 'Only React Components can be mounted.') : void 0;
	  }

	  // These two fields are used by the DOM and ART diffing algorithms
	  // respectively. Instead of using expandos on components, we should be
	  // storing the state needed by the diffing algorithms elsewhere.
	  instance._mountIndex = 0;
	  instance._mountImage = null;

	  if (process.env.NODE_ENV !== 'production') {
	    if (shouldHaveDebugID) {
	      var debugID = nextDebugID++;
	      instance._debugID = debugID;
	      var displayName = getDisplayName(instance);
	      ReactInstrumentation.debugTool.onSetDisplayName(debugID, displayName);
	      var owner = node && node._owner;
	      if (owner) {
	        ReactInstrumentation.debugTool.onSetOwner(debugID, owner._debugID);
	      }
	    } else {
	      instance._debugID = 0;
	    }
	  }

	  // Internal instances should fully constructed at this point, so they should
	  // not get any new fields added to them at this point.
	  if (process.env.NODE_ENV !== 'production') {
	    if (Object.preventExtensions) {
	      Object.preventExtensions(instance);
	    }
	  }

	  return instance;
	}

	module.exports = instantiateReactComponent;
	/* WEBPACK VAR INJECTION */}.call(exports, __webpack_require__(4)))

/***/ },
/* 125 */
/***/ function(module, exports, __webpack_require__) {

	/* WEBPACK VAR INJECTION */(function(process) {/**
	 * Copyright 2013-present, Facebook, Inc.
	 * All rights reserved.
	 *
	 * This source code is licensed under the BSD-style license found in the
	 * LICENSE file in the root directory of this source tree. An additional grant
	 * of patent rights can be found in the PATENTS file in the same directory.
	 *
	 * @providesModule ReactCompositeComponent
	 */

	'use strict';

	var _prodInvariant = __webpack_require__(8),
	    _assign = __webpack_require__(5);

	var ReactComponentEnvironment = __webpack_require__(121);
	var ReactCurrentOwner = __webpack_require__(11);
	var ReactElement = __webpack_require__(10);
	var ReactErrorUtils = __webpack_require__(46);
	var ReactInstanceMap = __webpack_require__(122);
	var ReactInstrumentation = __webpack_require__(62);
	var ReactNodeTypes = __webpack_require__(126);
	var ReactPropTypeLocations = __webpack_require__(22);
	var ReactReconciler = __webpack_require__(59);

	var checkReactTypeSpec = __webpack_require__(30);

	var emptyObject = __webpack_require__(20);
	var invariant = __webpack_require__(9);
	var shouldUpdateReactComponent = __webpack_require__(127);
	var warning = __webpack_require__(12);

	function StatelessComponent(Component) {}
	StatelessComponent.prototype.render = function () {
	  var Component = ReactInstanceMap.get(this)._currentElement.type;
	  var element = Component(this.props, this.context, this.updater);
	  warnIfInvalidElement(Component, element);
	  return element;
	};

	function warnIfInvalidElement(Component, element) {
	  if (process.env.NODE_ENV !== 'production') {
	    process.env.NODE_ENV !== 'production' ? warning(element === null || element === false || ReactElement.isValidElement(element), '%s(...): A valid React element (or null) must be returned. You may have ' + 'returned undefined, an array or some other invalid object.', Component.displayName || Component.name || 'Component') : void 0;
	    process.env.NODE_ENV !== 'production' ? warning(!Component.childContextTypes, '%s(...): childContextTypes cannot be defined on a functional component.', Component.displayName || Component.name || 'Component') : void 0;
	  }
	}

	function invokeComponentDidMountWithTimer() {
	  var publicInstance = this._instance;
	  if (this._debugID !== 0) {
	    ReactInstrumentation.debugTool.onBeginLifeCycleTimer(this._debugID, 'componentDidMount');
	  }
	  publicInstance.componentDidMount();
	  if (this._debugID !== 0) {
	    ReactInstrumentation.debugTool.onEndLifeCycleTimer(this._debugID, 'componentDidMount');
	  }
	}

	function invokeComponentDidUpdateWithTimer(prevProps, prevState, prevContext) {
	  var publicInstance = this._instance;
	  if (this._debugID !== 0) {
	    ReactInstrumentation.debugTool.onBeginLifeCycleTimer(this._debugID, 'componentDidUpdate');
	  }
	  publicInstance.componentDidUpdate(prevProps, prevState, prevContext);
	  if (this._debugID !== 0) {
	    ReactInstrumentation.debugTool.onEndLifeCycleTimer(this._debugID, 'componentDidUpdate');
	  }
	}

	function shouldConstruct(Component) {
	  return Component.prototype && Component.prototype.isReactComponent;
	}

	/**
	 * ------------------ The Life-Cycle of a Composite Component ------------------
	 *
	 * - constructor: Initialization of state. The instance is now retained.
	 *   - componentWillMount
	 *   - render
	 *   - [children's constructors]
	 *     - [children's componentWillMount and render]
	 *     - [children's componentDidMount]
	 *     - componentDidMount
	 *
	 *       Update Phases:
	 *       - componentWillReceiveProps (only called if parent updated)
	 *       - shouldComponentUpdate
	 *         - componentWillUpdate
	 *           - render
	 *           - [children's constructors or receive props phases]
	 *         - componentDidUpdate
	 *
	 *     - componentWillUnmount
	 *     - [children's componentWillUnmount]
	 *   - [children destroyed]
	 * - (destroyed): The instance is now blank, released by React and ready for GC.
	 *
	 * -----------------------------------------------------------------------------
	 */

	/**
	 * An incrementing ID assigned to each component when it is mounted. This is
	 * used to enforce the order in which `ReactUpdates` updates dirty components.
	 *
	 * @private
	 */
	var nextMountID = 1;

	/**
	 * @lends {ReactCompositeComponent.prototype}
	 */
	var ReactCompositeComponentMixin = {

	  /**
	   * Base constructor for all composite component.
	   *
	   * @param {ReactElement} element
	   * @final
	   * @internal
	   */
	  construct: function (element) {
	    this._currentElement = element;
	    this._rootNodeID = null;
	    this._instance = null;
	    this._hostParent = null;
	    this._hostContainerInfo = null;

	    // See ReactUpdateQueue
	    this._updateBatchNumber = null;
	    this._pendingElement = null;
	    this._pendingStateQueue = null;
	    this._pendingReplaceState = false;
	    this._pendingForceUpdate = false;

	    this._renderedNodeType = null;
	    this._renderedComponent = null;
	    this._context = null;
	    this._mountOrder = 0;
	    this._topLevelWrapper = null;

	    // See ReactUpdates and ReactUpdateQueue.
	    this._pendingCallbacks = null;

	    // ComponentWillUnmount shall only be called once
	    this._calledComponentWillUnmount = false;

	    if (process.env.NODE_ENV !== 'production') {
	      this._warnedAboutRefsInRender = false;
	    }
	  },

	  /**
	   * Initializes the component, renders markup, and registers event listeners.
	   *
	   * @param {ReactReconcileTransaction|ReactServerRenderingTransaction} transaction
	   * @param {?object} hostParent
	   * @param {?object} hostContainerInfo
	   * @param {?object} context
	   * @return {?string} Rendered markup to be inserted into the DOM.
	   * @final
	   * @internal
	   */
	  mountComponent: function (transaction, hostParent, hostContainerInfo, context) {
	    this._context = context;
	    this._mountOrder = nextMountID++;
	    this._hostParent = hostParent;
	    this._hostContainerInfo = hostContainerInfo;

	    var publicProps = this._currentElement.props;
	    var publicContext = this._processContext(context);

	    var Component = this._currentElement.type;

	    var updateQueue = transaction.getUpdateQueue();

	    // Initialize the public class
	    var inst = this._constructComponent(publicProps, publicContext, updateQueue);
	    var renderedElement;

	    // Support functional components
	    if (!shouldConstruct(Component) && (inst == null || inst.render == null)) {
	      renderedElement = inst;
	      warnIfInvalidElement(Component, renderedElement);
	      !(inst === null || inst === false || ReactElement.isValidElement(inst)) ? process.env.NODE_ENV !== 'production' ? invariant(false, '%s(...): A valid React element (or null) must be returned. You may have returned undefined, an array or some other invalid object.', Component.displayName || Component.name || 'Component') : _prodInvariant('105', Component.displayName || Component.name || 'Component') : void 0;
	      inst = new StatelessComponent(Component);
	    }

	    if (process.env.NODE_ENV !== 'production') {
	      // This will throw later in _renderValidatedComponent, but add an early
	      // warning now to help debugging
	      if (inst.render == null) {
	        process.env.NODE_ENV !== 'production' ? warning(false, '%s(...): No `render` method found on the returned component ' + 'instance: you may have forgotten to define `render`.', Component.displayName || Component.name || 'Component') : void 0;
	      }

	      var propsMutated = inst.props !== publicProps;
	      var componentName = Component.displayName || Component.name || 'Component';

	      process.env.NODE_ENV !== 'production' ? warning(inst.props === undefined || !propsMutated, '%s(...): When calling super() in `%s`, make sure to pass ' + 'up the same props that your component\'s constructor was passed.', componentName, componentName) : void 0;
	    }

	    // These should be set up in the constructor, but as a convenience for
	    // simpler class abstractions, we set them up after the fact.
	    inst.props = publicProps;
	    inst.context = publicContext;
	    inst.refs = emptyObject;
	    inst.updater = updateQueue;

	    this._instance = inst;

	    // Store a reference from the instance back to the internal representation
	    ReactInstanceMap.set(inst, this);

	    if (process.env.NODE_ENV !== 'production') {
	      // Since plain JS classes are defined without any special initialization
	      // logic, we can not catch common errors early. Therefore, we have to
	      // catch them here, at initialization time, instead.
	      process.env.NODE_ENV !== 'production' ? warning(!inst.getInitialState || inst.getInitialState.isReactClassApproved, 'getInitialState was defined on %s, a plain JavaScript class. ' + 'This is only supported for classes created using React.createClass. ' + 'Did you mean to define a state property instead?', this.getName() || 'a component') : void 0;
	      process.env.NODE_ENV !== 'production' ? warning(!inst.getDefaultProps || inst.getDefaultProps.isReactClassApproved, 'getDefaultProps was defined on %s, a plain JavaScript class. ' + 'This is only supported for classes created using React.createClass. ' + 'Use a static property to define defaultProps instead.', this.getName() || 'a component') : void 0;
	      process.env.NODE_ENV !== 'production' ? warning(!inst.propTypes, 'propTypes was defined as an instance property on %s. Use a static ' + 'property to define propTypes instead.', this.getName() || 'a component') : void 0;
	      process.env.NODE_ENV !== 'production' ? warning(!inst.contextTypes, 'contextTypes was defined as an instance property on %s. Use a ' + 'static property to define contextTypes instead.', this.getName() || 'a component') : void 0;
	      process.env.NODE_ENV !== 'production' ? warning(typeof inst.componentShouldUpdate !== 'function', '%s has a method called ' + 'componentShouldUpdate(). Did you mean shouldComponentUpdate()? ' + 'The name is phrased as a question because the function is ' + 'expected to return a value.', this.getName() || 'A component') : void 0;
	      process.env.NODE_ENV !== 'production' ? warning(typeof inst.componentDidUnmount !== 'function', '%s has a method called ' + 'componentDidUnmount(). But there is no such lifecycle method. ' + 'Did you mean componentWillUnmount()?', this.getName() || 'A component') : void 0;
	      process.env.NODE_ENV !== 'production' ? warning(typeof inst.componentWillRecieveProps !== 'function', '%s has a method called ' + 'componentWillRecieveProps(). Did you mean componentWillReceiveProps()?', this.getName() || 'A component') : void 0;
	    }

	    var initialState = inst.state;
	    if (initialState === undefined) {
	      inst.state = initialState = null;
	    }
	    !(typeof initialState === 'object' && !Array.isArray(initialState)) ? process.env.NODE_ENV !== 'production' ? invariant(false, '%s.state: must be set to an object or null', this.getName() || 'ReactCompositeComponent') : _prodInvariant('106', this.getName() || 'ReactCompositeComponent') : void 0;

	    this._pendingStateQueue = null;
	    this._pendingReplaceState = false;
	    this._pendingForceUpdate = false;

	    var markup;
	    if (inst.unstable_handleError) {
	      markup = this.performInitialMountWithErrorHandling(renderedElement, hostParent, hostContainerInfo, transaction, context);
	    } else {
	      markup = this.performInitialMount(renderedElement, hostParent, hostContainerInfo, transaction, context);
	    }

	    if (inst.componentDidMount) {
	      if (process.env.NODE_ENV !== 'production') {
	        transaction.getReactMountReady().enqueue(invokeComponentDidMountWithTimer, this);
	      } else {
	        transaction.getReactMountReady().enqueue(inst.componentDidMount, inst);
	      }
	    }

	    return markup;
	  },

	  _constructComponent: function (publicProps, publicContext, updateQueue) {
	    if (process.env.NODE_ENV !== 'production') {
	      ReactCurrentOwner.current = this;
	      try {
	        return this._constructComponentWithoutOwner(publicProps, publicContext, updateQueue);
	      } finally {
	        ReactCurrentOwner.current = null;
	      }
	    } else {
	      return this._constructComponentWithoutOwner(publicProps, publicContext, updateQueue);
	    }
	  },

	  _constructComponentWithoutOwner: function (publicProps, publicContext, updateQueue) {
	    var Component = this._currentElement.type;
	    var instanceOrElement;
	    if (shouldConstruct(Component)) {
	      if (process.env.NODE_ENV !== 'production') {
	        if (this._debugID !== 0) {
	          ReactInstrumentation.debugTool.onBeginLifeCycleTimer(this._debugID, 'ctor');
	        }
	      }
	      instanceOrElement = new Component(publicProps, publicContext, updateQueue);
	      if (process.env.NODE_ENV !== 'production') {
	        if (this._debugID !== 0) {
	          ReactInstrumentation.debugTool.onEndLifeCycleTimer(this._debugID, 'ctor');
	        }
	      }
	    } else {
	      // This can still be an instance in case of factory components
	      // but we'll count this as time spent rendering as the more common case.
	      if (process.env.NODE_ENV !== 'production') {
	        if (this._debugID !== 0) {
	          ReactInstrumentation.debugTool.onBeginLifeCycleTimer(this._debugID, 'render');
	        }
	      }
	      instanceOrElement = Component(publicProps, publicContext, updateQueue);
	      if (process.env.NODE_ENV !== 'production') {
	        if (this._debugID !== 0) {
	          ReactInstrumentation.debugTool.onEndLifeCycleTimer(this._debugID, 'render');
	        }
	      }
	    }
	    return instanceOrElement;
	  },

	  performInitialMountWithErrorHandling: function (renderedElement, hostParent, hostContainerInfo, transaction, context) {
	    var markup;
	    var checkpoint = transaction.checkpoint();
	    try {
	      markup = this.performInitialMount(renderedElement, hostParent, hostContainerInfo, transaction, context);
	    } catch (e) {
	      if (process.env.NODE_ENV !== 'production') {
	        if (this._debugID !== 0) {
	          ReactInstrumentation.debugTool.onError();
	        }
	      }
	      // Roll back to checkpoint, handle error (which may add items to the transaction), and take a new checkpoint
	      transaction.rollback(checkpoint);
	      this._instance.unstable_handleError(e);
	      if (this._pendingStateQueue) {
	        this._instance.state = this._processPendingState(this._instance.props, this._instance.context);
	      }
	      checkpoint = transaction.checkpoint();

	      this._renderedComponent.unmountComponent(true);
	      transaction.rollback(checkpoint);

	      // Try again - we've informed the component about the error, so they can render an error message this time.
	      // If this throws again, the error will bubble up (and can be caught by a higher error boundary).
	      markup = this.performInitialMount(renderedElement, hostParent, hostContainerInfo, transaction, context);
	    }
	    return markup;
	  },

	  performInitialMount: function (renderedElement, hostParent, hostContainerInfo, transaction, context) {
	    var inst = this._instance;
	    if (inst.componentWillMount) {
	      if (process.env.NODE_ENV !== 'production') {
	        if (this._debugID !== 0) {
	          ReactInstrumentation.debugTool.onBeginLifeCycleTimer(this._debugID, 'componentWillMount');
	        }
	      }
	      inst.componentWillMount();
	      if (process.env.NODE_ENV !== 'production') {
	        if (this._debugID !== 0) {
	          ReactInstrumentation.debugTool.onEndLifeCycleTimer(this._debugID, 'componentWillMount');
	        }
	      }
	      // When mounting, calls to `setState` by `componentWillMount` will set
	      // `this._pendingStateQueue` without triggering a re-render.
	      if (this._pendingStateQueue) {
	        inst.state = this._processPendingState(inst.props, inst.context);
	      }
	    }

	    // If not a stateless component, we now render
	    if (renderedElement === undefined) {
	      renderedElement = this._renderValidatedComponent();
	    }

	    var nodeType = ReactNodeTypes.getType(renderedElement);
	    this._renderedNodeType = nodeType;
	    var child = this._instantiateReactComponent(renderedElement, nodeType !== ReactNodeTypes.EMPTY /* shouldHaveDebugID */
	    );
	    this._renderedComponent = child;
	    if (process.env.NODE_ENV !== 'production') {
	      if (child._debugID !== 0 && this._debugID !== 0) {
	        ReactInstrumentation.debugTool.onSetParent(child._debugID, this._debugID);
	      }
	    }

	    var markup = ReactReconciler.mountComponent(child, transaction, hostParent, hostContainerInfo, this._processChildContext(context));

	    if (process.env.NODE_ENV !== 'production') {
	      if (this._debugID !== 0) {
	        ReactInstrumentation.debugTool.onSetChildren(this._debugID, child._debugID !== 0 ? [child._debugID] : []);
	      }
	    }

	    return markup;
	  },

	  getHostNode: function () {
	    return ReactReconciler.getHostNode(this._renderedComponent);
	  },

	  /**
	   * Releases any resources allocated by `mountComponent`.
	   *
	   * @final
	   * @internal
	   */
	  unmountComponent: function (safely) {
	    if (!this._renderedComponent) {
	      return;
	    }
	    var inst = this._instance;

	    if (inst.componentWillUnmount && !inst._calledComponentWillUnmount) {
	      inst._calledComponentWillUnmount = true;
	      if (process.env.NODE_ENV !== 'production') {
	        if (this._debugID !== 0) {
	          ReactInstrumentation.debugTool.onBeginLifeCycleTimer(this._debugID, 'componentWillUnmount');
	        }
	      }
	      if (safely) {
	        var name = this.getName() + '.componentWillUnmount()';
	        ReactErrorUtils.invokeGuardedCallback(name, inst.componentWillUnmount.bind(inst));
	      } else {
	        inst.componentWillUnmount();
	      }
	      if (process.env.NODE_ENV !== 'production') {
	        if (this._debugID !== 0) {
	          ReactInstrumentation.debugTool.onEndLifeCycleTimer(this._debugID, 'componentWillUnmount');
	        }
	      }
	    }

	    if (this._renderedComponent) {
	      ReactReconciler.unmountComponent(this._renderedComponent, safely);
	      this._renderedNodeType = null;
	      this._renderedComponent = null;
	      this._instance = null;
	    }

	    // Reset pending fields
	    // Even if this component is scheduled for another update in ReactUpdates,
	    // it would still be ignored because these fields are reset.
	    this._pendingStateQueue = null;
	    this._pendingReplaceState = false;
	    this._pendingForceUpdate = false;
	    this._pendingCallbacks = null;
	    this._pendingElement = null;

	    // These fields do not really need to be reset since this object is no
	    // longer accessible.
	    this._context = null;
	    this._rootNodeID = null;
	    this._topLevelWrapper = null;

	    // Delete the reference from the instance to this internal representation
	    // which allow the internals to be properly cleaned up even if the user
	    // leaks a reference to the public instance.
	    ReactInstanceMap.remove(inst);

	    // Some existing components rely on inst.props even after they've been
	    // destroyed (in event handlers).
	    // TODO: inst.props = null;
	    // TODO: inst.state = null;
	    // TODO: inst.context = null;
	  },

	  /**
	   * Filters the context object to only contain keys specified in
	   * `contextTypes`
	   *
	   * @param {object} context
	   * @return {?object}
	   * @private
	   */
	  _maskContext: function (context) {
	    var Component = this._currentElement.type;
	    var contextTypes = Component.contextTypes;
	    if (!contextTypes) {
	      return emptyObject;
	    }
	    var maskedContext = {};
	    for (var contextName in contextTypes) {
	      maskedContext[contextName] = context[contextName];
	    }
	    return maskedContext;
	  },

	  /**
	   * Filters the context object to only contain keys specified in
	   * `contextTypes`, and asserts that they are valid.
	   *
	   * @param {object} context
	   * @return {?object}
	   * @private
	   */
	  _processContext: function (context) {
	    var maskedContext = this._maskContext(context);
	    if (process.env.NODE_ENV !== 'production') {
	      var Component = this._currentElement.type;
	      if (Component.contextTypes) {
	        this._checkContextTypes(Component.contextTypes, maskedContext, ReactPropTypeLocations.context);
	      }
	    }
	    return maskedContext;
	  },

	  /**
	   * @param {object} currentContext
	   * @return {object}
	   * @private
	   */
	  _processChildContext: function (currentContext) {
	    var Component = this._currentElement.type;
	    var inst = this._instance;
	    if (process.env.NODE_ENV !== 'production') {
	      ReactInstrumentation.debugTool.onBeginProcessingChildContext();
	    }
	    var childContext = inst.getChildContext && inst.getChildContext();
	    if (process.env.NODE_ENV !== 'production') {
	      ReactInstrumentation.debugTool.onEndProcessingChildContext();
	    }
	    if (childContext) {
	      !(typeof Component.childContextTypes === 'object') ? process.env.NODE_ENV !== 'production' ? invariant(false, '%s.getChildContext(): childContextTypes must be defined in order to use getChildContext().', this.getName() || 'ReactCompositeComponent') : _prodInvariant('107', this.getName() || 'ReactCompositeComponent') : void 0;
	      if (process.env.NODE_ENV !== 'production') {
	        this._checkContextTypes(Component.childContextTypes, childContext, ReactPropTypeLocations.childContext);
	      }
	      for (var name in childContext) {
	        !(name in Component.childContextTypes) ? process.env.NODE_ENV !== 'production' ? invariant(false, '%s.getChildContext(): key "%s" is not defined in childContextTypes.', this.getName() || 'ReactCompositeComponent', name) : _prodInvariant('108', this.getName() || 'ReactCompositeComponent', name) : void 0;
	      }
	      return _assign({}, currentContext, childContext);
	    }
	    return currentContext;
	  },

	  /**
	   * Assert that the context types are valid
	   *
	   * @param {object} typeSpecs Map of context field to a ReactPropType
	   * @param {object} values Runtime values that need to be type-checked
	   * @param {string} location e.g. "prop", "context", "child context"
	   * @private
	   */
	  _checkContextTypes: function (typeSpecs, values, location) {
	    checkReactTypeSpec(typeSpecs, values, location, this.getName(), null, this._debugID);
	  },

	  receiveComponent: function (nextElement, transaction, nextContext) {
	    var prevElement = this._currentElement;
	    var prevContext = this._context;

	    this._pendingElement = null;

	    this.updateComponent(transaction, prevElement, nextElement, prevContext, nextContext);
	  },

	  /**
	   * If any of `_pendingElement`, `_pendingStateQueue`, or `_pendingForceUpdate`
	   * is set, update the component.
	   *
	   * @param {ReactReconcileTransaction} transaction
	   * @internal
	   */
	  performUpdateIfNecessary: function (transaction) {
	    if (this._pendingElement != null) {
	      ReactReconciler.receiveComponent(this, this._pendingElement, transaction, this._context);
	    } else if (this._pendingStateQueue !== null || this._pendingForceUpdate) {
	      this.updateComponent(transaction, this._currentElement, this._currentElement, this._context, this._context);
	    } else {
	      this._updateBatchNumber = null;
	    }
	  },

	  /**
	   * Perform an update to a mounted component. The componentWillReceiveProps and
	   * shouldComponentUpdate methods are called, then (assuming the update isn't
	   * skipped) the remaining update lifecycle methods are called and the DOM
	   * representation is updated.
	   *
	   * By default, this implements React's rendering and reconciliation algorithm.
	   * Sophisticated clients may wish to override this.
	   *
	   * @param {ReactReconcileTransaction} transaction
	   * @param {ReactElement} prevParentElement
	   * @param {ReactElement} nextParentElement
	   * @internal
	   * @overridable
	   */
	  updateComponent: function (transaction, prevParentElement, nextParentElement, prevUnmaskedContext, nextUnmaskedContext) {
	    var inst = this._instance;
	    !(inst != null) ? process.env.NODE_ENV !== 'production' ? invariant(false, 'Attempted to update component `%s` that has already been unmounted (or failed to mount).', this.getName() || 'ReactCompositeComponent') : _prodInvariant('136', this.getName() || 'ReactCompositeComponent') : void 0;

	    var willReceive = false;
	    var nextContext;
	    var nextProps;

	    // Determine if the context has changed or not
	    if (this._context === nextUnmaskedContext) {
	      nextContext = inst.context;
	    } else {
	      nextContext = this._processContext(nextUnmaskedContext);
	      willReceive = true;
	    }

	    nextProps = nextParentElement.props;

	    // Not a simple state update but a props update
	    if (prevParentElement !== nextParentElement) {
	      willReceive = true;
	    }

	    // An update here will schedule an update but immediately set
	    // _pendingStateQueue which will ensure that any state updates gets
	    // immediately reconciled instead of waiting for the next batch.
	    if (willReceive && inst.componentWillReceiveProps) {
	      if (process.env.NODE_ENV !== 'production') {
	        if (this._debugID !== 0) {
	          ReactInstrumentation.debugTool.onBeginLifeCycleTimer(this._debugID, 'componentWillReceiveProps');
	        }
	      }
	      inst.componentWillReceiveProps(nextProps, nextContext);
	      if (process.env.NODE_ENV !== 'production') {
	        if (this._debugID !== 0) {
	          ReactInstrumentation.debugTool.onEndLifeCycleTimer(this._debugID, 'componentWillReceiveProps');
	        }
	      }
	    }

	    var nextState = this._processPendingState(nextProps, nextContext);
	    var shouldUpdate = true;

	    if (!this._pendingForceUpdate && inst.shouldComponentUpdate) {
	      if (process.env.NODE_ENV !== 'production') {
	        if (this._debugID !== 0) {
	          ReactInstrumentation.debugTool.onBeginLifeCycleTimer(this._debugID, 'shouldComponentUpdate');
	        }
	      }
	      shouldUpdate = inst.shouldComponentUpdate(nextProps, nextState, nextContext);
	      if (process.env.NODE_ENV !== 'production') {
	        if (this._debugID !== 0) {
	          ReactInstrumentation.debugTool.onEndLifeCycleTimer(this._debugID, 'shouldComponentUpdate');
	        }
	      }
	    }

	    if (process.env.NODE_ENV !== 'production') {
	      process.env.NODE_ENV !== 'production' ? warning(shouldUpdate !== undefined, '%s.shouldComponentUpdate(): Returned undefined instead of a ' + 'boolean value. Make sure to return true or false.', this.getName() || 'ReactCompositeComponent') : void 0;
	    }

	    this._updateBatchNumber = null;
	    if (shouldUpdate) {
	      this._pendingForceUpdate = false;
	      // Will set `this.props`, `this.state` and `this.context`.
	      this._performComponentUpdate(nextParentElement, nextProps, nextState, nextContext, transaction, nextUnmaskedContext);
	    } else {
	      // If it's determined that a component should not update, we still want
	      // to set props and state but we shortcut the rest of the update.
	      this._currentElement = nextParentElement;
	      this._context = nextUnmaskedContext;
	      inst.props = nextProps;
	      inst.state = nextState;
	      inst.context = nextContext;
	    }
	  },

	  _processPendingState: function (props, context) {
	    var inst = this._instance;
	    var queue = this._pendingStateQueue;
	    var replace = this._pendingReplaceState;
	    this._pendingReplaceState = false;
	    this._pendingStateQueue = null;

	    if (!queue) {
	      return inst.state;
	    }

	    if (replace && queue.length === 1) {
	      return queue[0];
	    }

	    var nextState = _assign({}, replace ? queue[0] : inst.state);
	    for (var i = replace ? 1 : 0; i < queue.length; i++) {
	      var partial = queue[i];
	      _assign(nextState, typeof partial === 'function' ? partial.call(inst, nextState, props, context) : partial);
	    }

	    return nextState;
	  },

	  /**
	   * Merges new props and state, notifies delegate methods of update and
	   * performs update.
	   *
	   * @param {ReactElement} nextElement Next element
	   * @param {object} nextProps Next public object to set as properties.
	   * @param {?object} nextState Next object to set as state.
	   * @param {?object} nextContext Next public object to set as context.
	   * @param {ReactReconcileTransaction} transaction
	   * @param {?object} unmaskedContext
	   * @private
	   */
	  _performComponentUpdate: function (nextElement, nextProps, nextState, nextContext, transaction, unmaskedContext) {
	    var inst = this._instance;

	    var hasComponentDidUpdate = Boolean(inst.componentDidUpdate);
	    var prevProps;
	    var prevState;
	    var prevContext;
	    if (hasComponentDidUpdate) {
	      prevProps = inst.props;
	      prevState = inst.state;
	      prevContext = inst.context;
	    }

	    if (inst.componentWillUpdate) {
	      if (process.env.NODE_ENV !== 'production') {
	        if (this._debugID !== 0) {
	          ReactInstrumentation.debugTool.onBeginLifeCycleTimer(this._debugID, 'componentWillUpdate');
	        }
	      }
	      inst.componentWillUpdate(nextProps, nextState, nextContext);
	      if (process.env.NODE_ENV !== 'production') {
	        if (this._debugID !== 0) {
	          ReactInstrumentation.debugTool.onEndLifeCycleTimer(this._debugID, 'componentWillUpdate');
	        }
	      }
	    }

	    this._currentElement = nextElement;
	    this._context = unmaskedContext;
	    inst.props = nextProps;
	    inst.state = nextState;
	    inst.context = nextContext;

	    this._updateRenderedComponent(transaction, unmaskedContext);

	    if (hasComponentDidUpdate) {
	      if (process.env.NODE_ENV !== 'production') {
	        transaction.getReactMountReady().enqueue(invokeComponentDidUpdateWithTimer.bind(this, prevProps, prevState, prevContext), this);
	      } else {
	        transaction.getReactMountReady().enqueue(inst.componentDidUpdate.bind(inst, prevProps, prevState, prevContext), inst);
	      }
	    }
	  },

	  /**
	   * Call the component's `render` method and update the DOM accordingly.
	   *
	   * @param {ReactReconcileTransaction} transaction
	   * @internal
	   */
	  _updateRenderedComponent: function (transaction, context) {
	    var prevComponentInstance = this._renderedComponent;
	    var prevRenderedElement = prevComponentInstance._currentElement;
	    var nextRenderedElement = this._renderValidatedComponent();
	    if (shouldUpdateReactComponent(prevRenderedElement, nextRenderedElement)) {
	      ReactReconciler.receiveComponent(prevComponentInstance, nextRenderedElement, transaction, this._processChildContext(context));
	    } else {
	      var oldHostNode = ReactReconciler.getHostNode(prevComponentInstance);
	      ReactReconciler.unmountComponent(prevComponentInstance, false);

	      var nodeType = ReactNodeTypes.getType(nextRenderedElement);
	      this._renderedNodeType = nodeType;
	      var child = this._instantiateReactComponent(nextRenderedElement, nodeType !== ReactNodeTypes.EMPTY /* shouldHaveDebugID */
	      );
	      this._renderedComponent = child;
	      if (process.env.NODE_ENV !== 'production') {
	        if (child._debugID !== 0 && this._debugID !== 0) {
	          ReactInstrumentation.debugTool.onSetParent(child._debugID, this._debugID);
	        }
	      }

	      var nextMarkup = ReactReconciler.mountComponent(child, transaction, this._hostParent, this._hostContainerInfo, this._processChildContext(context));

	      if (process.env.NODE_ENV !== 'production') {
	        if (this._debugID !== 0) {
	          ReactInstrumentation.debugTool.onSetChildren(this._debugID, child._debugID !== 0 ? [child._debugID] : []);
	        }
	      }

	      this._replaceNodeWithMarkup(oldHostNode, nextMarkup, prevComponentInstance);
	    }
	  },

	  /**
	   * Overridden in shallow rendering.
	   *
	   * @protected
	   */
	  _replaceNodeWithMarkup: function (oldHostNode, nextMarkup, prevInstance) {
	    ReactComponentEnvironment.replaceNodeWithMarkup(oldHostNode, nextMarkup, prevInstance);
	  },

	  /**
	   * @protected
	   */
	  _renderValidatedComponentWithoutOwnerOrContext: function () {
	    var inst = this._instance;

	    if (process.env.NODE_ENV !== 'production') {
	      if (this._debugID !== 0) {
	        ReactInstrumentation.debugTool.onBeginLifeCycleTimer(this._debugID, 'render');
	      }
	    }
	    var renderedComponent = inst.render();
	    if (process.env.NODE_ENV !== 'production') {
	      if (this._debugID !== 0) {
	        ReactInstrumentation.debugTool.onEndLifeCycleTimer(this._debugID, 'render');
	      }
	    }

	    if (process.env.NODE_ENV !== 'production') {
	      // We allow auto-mocks to proceed as if they're returning null.
	      if (renderedComponent === undefined && inst.render._isMockFunction) {
	        // This is probably bad practice. Consider warning here and
	        // deprecating this convenience.
	        renderedComponent = null;
	      }
	    }

	    return renderedComponent;
	  },

	  /**
	   * @private
	   */
	  _renderValidatedComponent: function () {
	    var renderedComponent;
	    ReactCurrentOwner.current = this;
	    try {
	      renderedComponent = this._renderValidatedComponentWithoutOwnerOrContext();
	    } finally {
	      ReactCurrentOwner.current = null;
	    }
	    !(
	    // TODO: An `isValidNode` function would probably be more appropriate
	    renderedComponent === null || renderedComponent === false || ReactElement.isValidElement(renderedComponent)) ? process.env.NODE_ENV !== 'production' ? invariant(false, '%s.render(): A valid React element (or null) must be returned. You may have returned undefined, an array or some other invalid object.', this.getName() || 'ReactCompositeComponent') : _prodInvariant('109', this.getName() || 'ReactCompositeComponent') : void 0;

	    return renderedComponent;
	  },

	  /**
	   * Lazily allocates the refs object and stores `component` as `ref`.
	   *
	   * @param {string} ref Reference name.
	   * @param {component} component Component to store as `ref`.
	   * @final
	   * @private
	   */
	  attachRef: function (ref, component) {
	    var inst = this.getPublicInstance();
	    !(inst != null) ? process.env.NODE_ENV !== 'production' ? invariant(false, 'Stateless function components cannot have refs.') : _prodInvariant('110') : void 0;
	    var publicComponentInstance = component.getPublicInstance();
	    if (process.env.NODE_ENV !== 'production') {
	      var componentName = component && component.getName ? component.getName() : 'a component';
	      process.env.NODE_ENV !== 'production' ? warning(publicComponentInstance != null, 'Stateless function components cannot be given refs ' + '(See ref "%s" in %s created by %s). ' + 'Attempts to access this ref will fail.', ref, componentName, this.getName()) : void 0;
	    }
	    var refs = inst.refs === emptyObject ? inst.refs = {} : inst.refs;
	    refs[ref] = publicComponentInstance;
	  },

	  /**
	   * Detaches a reference name.
	   *
	   * @param {string} ref Name to dereference.
	   * @final
	   * @private
	   */
	  detachRef: function (ref) {
	    var refs = this.getPublicInstance().refs;
	    delete refs[ref];
	  },

	  /**
	   * Get a text description of the component that can be used to identify it
	   * in error messages.
	   * @return {string} The name or null.
	   * @internal
	   */
	  getName: function () {
	    var type = this._currentElement.type;
	    var constructor = this._instance && this._instance.constructor;
	    return type.displayName || constructor && constructor.displayName || type.name || constructor && constructor.name || null;
	  },

	  /**
	   * Get the publicly accessible representation of this component - i.e. what
	   * is exposed by refs and returned by render. Can be null for stateless
	   * components.
	   *
	   * @return {ReactComponent} the public component instance.
	   * @internal
	   */
	  getPublicInstance: function () {
	    var inst = this._instance;
	    if (inst instanceof StatelessComponent) {
	      return null;
	    }
	    return inst;
	  },

	  // Stub
	  _instantiateReactComponent: null

	};

	var ReactCompositeComponent = {

	  Mixin: ReactCompositeComponentMixin

	};

	module.exports = ReactCompositeComponent;
	/* WEBPACK VAR INJECTION */}.call(exports, __webpack_require__(4)))

/***/ },
/* 126 */
/***/ function(module, exports, __webpack_require__) {

	/* WEBPACK VAR INJECTION */(function(process) {/**
	 * Copyright 2013-present, Facebook, Inc.
	 * All rights reserved.
	 *
	 * This source code is licensed under the BSD-style license found in the
	 * LICENSE file in the root directory of this source tree. An additional grant
	 * of patent rights can be found in the PATENTS file in the same directory.
	 *
	 * @providesModule ReactNodeTypes
	 * 
	 */

	'use strict';

	var _prodInvariant = __webpack_require__(8);

	var ReactElement = __webpack_require__(10);

	var invariant = __webpack_require__(9);

	var ReactNodeTypes = {
	  HOST: 0,
	  COMPOSITE: 1,
	  EMPTY: 2,

	  getType: function (node) {
	    if (node === null || node === false) {
	      return ReactNodeTypes.EMPTY;
	    } else if (ReactElement.isValidElement(node)) {
	      if (typeof node.type === 'function') {
	        return ReactNodeTypes.COMPOSITE;
	      } else {
	        return ReactNodeTypes.HOST;
	      }
	    }
	     true ? process.env.NODE_ENV !== 'production' ? invariant(false, 'Unexpected node: %s', node) : _prodInvariant('26', node) : void 0;
	  }
	};

	module.exports = ReactNodeTypes;
	/* WEBPACK VAR INJECTION */}.call(exports, __webpack_require__(4)))

/***/ },
/* 127 */
/***/ function(module, exports) {

	/**
	 * Copyright 2013-present, Facebook, Inc.
	 * All rights reserved.
	 *
	 * This source code is licensed under the BSD-style license found in the
	 * LICENSE file in the root directory of this source tree. An additional grant
	 * of patent rights can be found in the PATENTS file in the same directory.
	 *
	 * @providesModule shouldUpdateReactComponent
	 */

	'use strict';

	/**
	 * Given a `prevElement` and `nextElement`, determines if the existing
	 * instance should be updated as opposed to being destroyed or replaced by a new
	 * instance. Both arguments are elements. This ensures that this logic can
	 * operate on stateless trees without any backing instance.
	 *
	 * @param {?object} prevElement
	 * @param {?object} nextElement
	 * @return {boolean} True if the existing instance should be updated.
	 * @protected
	 */

	function shouldUpdateReactComponent(prevElement, nextElement) {
	  var prevEmpty = prevElement === null || prevElement === false;
	  var nextEmpty = nextElement === null || nextElement === false;
	  if (prevEmpty || nextEmpty) {
	    return prevEmpty === nextEmpty;
	  }

	  var prevType = typeof prevElement;
	  var nextType = typeof nextElement;
	  if (prevType === 'string' || prevType === 'number') {
	    return nextType === 'string' || nextType === 'number';
	  } else {
	    return nextType === 'object' && prevElement.type === nextElement.type && prevElement.key === nextElement.key;
	  }
	}

	module.exports = shouldUpdateReactComponent;

/***/ },
/* 128 */
/***/ function(module, exports) {

	/**
	 * Copyright 2014-present, Facebook, Inc.
	 * All rights reserved.
	 *
	 * This source code is licensed under the BSD-style license found in the
	 * LICENSE file in the root directory of this source tree. An additional grant
	 * of patent rights can be found in the PATENTS file in the same directory.
	 *
	 * @providesModule ReactEmptyComponent
	 */

	'use strict';

	var emptyComponentFactory;

	var ReactEmptyComponentInjection = {
	  injectEmptyComponentFactory: function (factory) {
	    emptyComponentFactory = factory;
	  }
	};

	var ReactEmptyComponent = {
	  create: function (instantiate) {
	    return emptyComponentFactory(instantiate);
	  }
	};

	ReactEmptyComponent.injection = ReactEmptyComponentInjection;

	module.exports = ReactEmptyComponent;

/***/ },
/* 129 */
/***/ function(module, exports, __webpack_require__) {

	/* WEBPACK VAR INJECTION */(function(process) {/**
	 * Copyright 2014-present, Facebook, Inc.
	 * All rights reserved.
	 *
	 * This source code is licensed under the BSD-style license found in the
	 * LICENSE file in the root directory of this source tree. An additional grant
	 * of patent rights can be found in the PATENTS file in the same directory.
	 *
	 * @providesModule ReactHostComponent
	 */

	'use strict';

	var _prodInvariant = __webpack_require__(8),
	    _assign = __webpack_require__(5);

	var invariant = __webpack_require__(9);

	var genericComponentClass = null;
	// This registry keeps track of wrapper classes around host tags.
	var tagToComponentClass = {};
	var textComponentClass = null;

	var ReactHostComponentInjection = {
	  // This accepts a class that receives the tag string. This is a catch all
	  // that can render any kind of tag.
	  injectGenericComponentClass: function (componentClass) {
	    genericComponentClass = componentClass;
	  },
	  // This accepts a text component class that takes the text string to be
	  // rendered as props.
	  injectTextComponentClass: function (componentClass) {
	    textComponentClass = componentClass;
	  },
	  // This accepts a keyed object with classes as values. Each key represents a
	  // tag. That particular tag will use this class instead of the generic one.
	  injectComponentClasses: function (componentClasses) {
	    _assign(tagToComponentClass, componentClasses);
	  }
	};

	/**
	 * Get a host internal component class for a specific tag.
	 *
	 * @param {ReactElement} element The element to create.
	 * @return {function} The internal class constructor function.
	 */
	function createInternalComponent(element) {
	  !genericComponentClass ? process.env.NODE_ENV !== 'production' ? invariant(false, 'There is no registered component for the tag %s', element.type) : _prodInvariant('111', element.type) : void 0;
	  return new genericComponentClass(element);
	}

	/**
	 * @param {ReactText} text
	 * @return {ReactComponent}
	 */
	function createInstanceForText(text) {
	  return new textComponentClass(text);
	}

	/**
	 * @param {ReactComponent} component
	 * @return {boolean}
	 */
	function isTextComponent(component) {
	  return component instanceof textComponentClass;
	}

	var ReactHostComponent = {
	  createInternalComponent: createInternalComponent,
	  createInstanceForText: createInstanceForText,
	  isTextComponent: isTextComponent,
	  injection: ReactHostComponentInjection
	};

	module.exports = ReactHostComponent;
	/* WEBPACK VAR INJECTION */}.call(exports, __webpack_require__(4)))

/***/ },
/* 130 */
/***/ function(module, exports, __webpack_require__) {

	/* WEBPACK VAR INJECTION */(function(process) {/**
	 * Copyright 2013-present, Facebook, Inc.
	 * All rights reserved.
	 *
	 * This source code is licensed under the BSD-style license found in the
	 * LICENSE file in the root directory of this source tree. An additional grant
	 * of patent rights can be found in the PATENTS file in the same directory.
	 *
	 * @providesModule flattenChildren
	 * 
	 */

	'use strict';

	var KeyEscapeUtils = __webpack_require__(17);
	var traverseAllChildren = __webpack_require__(15);
	var warning = __webpack_require__(12);

	/**
	 * @param {function} traverseContext Context passed through traversal.
	 * @param {?ReactComponent} child React child component.
	 * @param {!string} name String name of key path to child.
	 * @param {number=} selfDebugID Optional debugID of the current internal instance.
	 */
	function flattenSingleChildIntoContext(traverseContext, child, name, selfDebugID) {
	  // We found a component instance.
	  if (traverseContext && typeof traverseContext === 'object') {
	    var result = traverseContext;
	    var keyUnique = result[name] === undefined;
	    if (process.env.NODE_ENV !== 'production') {
	      var ReactComponentTreeDevtool = __webpack_require__(29);
	      process.env.NODE_ENV !== 'production' ? warning(keyUnique, 'flattenChildren(...): Encountered two children with the same key, ' + '`%s`. Child keys must be unique; when two children share a key, only ' + 'the first child will be used.%s', KeyEscapeUtils.unescape(name), ReactComponentTreeDevtool.getStackAddendumByID(selfDebugID)) : void 0;
	    }
	    if (keyUnique && child != null) {
	      result[name] = child;
	    }
	  }
	}

	/**
	 * Flattens children that are typically specified as `props.children`. Any null
	 * children will not be included in the resulting object.
	 * @return {!object} flattened children keyed by name.
	 */
	function flattenChildren(children, selfDebugID) {
	  if (children == null) {
	    return children;
	  }
	  var result = {};

	  if (process.env.NODE_ENV !== 'production') {
	    traverseAllChildren(children, function (traverseContext, child, name) {
	      return flattenSingleChildIntoContext(traverseContext, child, name, selfDebugID);
	    }, result);
	  } else {
	    traverseAllChildren(children, flattenSingleChildIntoContext, result);
	  }
	  return result;
	}

	module.exports = flattenChildren;
	/* WEBPACK VAR INJECTION */}.call(exports, __webpack_require__(4)))

/***/ },
/* 131 */
/***/ function(module, exports, __webpack_require__) {

	/* WEBPACK VAR INJECTION */(function(process) {/**
	 * Copyright 2014-present, Facebook, Inc.
	 * All rights reserved.
	 *
	 * This source code is licensed under the BSD-style license found in the
	 * LICENSE file in the root directory of this source tree. An additional grant
	 * of patent rights can be found in the PATENTS file in the same directory.
	 *
	 * @providesModule ReactServerRenderingTransaction
	 */

	'use strict';

	var _assign = __webpack_require__(5);

	var PooledClass = __webpack_require__(7);
	var Transaction = __webpack_require__(68);
	var ReactInstrumentation = __webpack_require__(62);
	var ReactServerUpdateQueue = __webpack_require__(132);

	/**
	 * Executed within the scope of the `Transaction` instance. Consider these as
	 * being member methods, but with an implied ordering while being isolated from
	 * each other.
	 */
	var TRANSACTION_WRAPPERS = [];

	if (process.env.NODE_ENV !== 'production') {
	  TRANSACTION_WRAPPERS.push({
	    initialize: ReactInstrumentation.debugTool.onBeginFlush,
	    close: ReactInstrumentation.debugTool.onEndFlush
	  });
	}

	var noopCallbackQueue = {
	  enqueue: function () {}
	};

	/**
	 * @class ReactServerRenderingTransaction
	 * @param {boolean} renderToStaticMarkup
	 */
	function ReactServerRenderingTransaction(renderToStaticMarkup) {
	  this.reinitializeTransaction();
	  this.renderToStaticMarkup = renderToStaticMarkup;
	  this.useCreateElement = false;
	  this.updateQueue = new ReactServerUpdateQueue(this);
	}

	var Mixin = {
	  /**
	   * @see Transaction
	   * @abstract
	   * @final
	   * @return {array} Empty list of operation wrap procedures.
	   */
	  getTransactionWrappers: function () {
	    return TRANSACTION_WRAPPERS;
	  },

	  /**
	   * @return {object} The queue to collect `onDOMReady` callbacks with.
	   */
	  getReactMountReady: function () {
	    return noopCallbackQueue;
	  },

	  /**
	   * @return {object} The queue to collect React async events.
	   */
	  getUpdateQueue: function () {
	    return this.updateQueue;
	  },

	  /**
	   * `PooledClass` looks for this, and will invoke this before allowing this
	   * instance to be reused.
	   */
	  destructor: function () {},

	  checkpoint: function () {},

	  rollback: function () {}
	};

	_assign(ReactServerRenderingTransaction.prototype, Transaction.Mixin, Mixin);

	PooledClass.addPoolingTo(ReactServerRenderingTransaction);

	module.exports = ReactServerRenderingTransaction;
	/* WEBPACK VAR INJECTION */}.call(exports, __webpack_require__(4)))

/***/ },
/* 132 */
/***/ function(module, exports, __webpack_require__) {

	/* WEBPACK VAR INJECTION */(function(process) {/**
	 * Copyright 2015-present, Facebook, Inc.
	 * All rights reserved.
	 *
	 * This source code is licensed under the BSD-style license found in the
	 * LICENSE file in the root directory of this source tree. An additional grant
	 * of patent rights can be found in the PATENTS file in the same directory.
	 *
	 * @providesModule ReactServerUpdateQueue
	 * 
	 */

	'use strict';

	function _classCallCheck(instance, Constructor) { if (!(instance instanceof Constructor)) { throw new TypeError("Cannot call a class as a function"); } }

	var ReactUpdateQueue = __webpack_require__(133);
	var Transaction = __webpack_require__(68);
	var warning = __webpack_require__(12);

	function warnNoop(publicInstance, callerName) {
	  if (process.env.NODE_ENV !== 'production') {
	    var constructor = publicInstance.constructor;
	    process.env.NODE_ENV !== 'production' ? warning(false, '%s(...): Can only update a mounting component. ' + 'This usually means you called %s() outside componentWillMount() on the server. ' + 'This is a no-op. Please check the code for the %s component.', callerName, callerName, constructor && (constructor.displayName || constructor.name) || 'ReactClass') : void 0;
	  }
	}

	/**
	 * This is the update queue used for server rendering.
	 * It delegates to ReactUpdateQueue while server rendering is in progress and
	 * switches to ReactNoopUpdateQueue after the transaction has completed.
	 * @class ReactServerUpdateQueue
	 * @param {Transaction} transaction
	 */

	var ReactServerUpdateQueue = function () {
	  /* :: transaction: Transaction; */

	  function ReactServerUpdateQueue(transaction) {
	    _classCallCheck(this, ReactServerUpdateQueue);

	    this.transaction = transaction;
	  }

	  /**
	   * Checks whether or not this composite component is mounted.
	   * @param {ReactClass} publicInstance The instance we want to test.
	   * @return {boolean} True if mounted, false otherwise.
	   * @protected
	   * @final
	   */


	  ReactServerUpdateQueue.prototype.isMounted = function isMounted(publicInstance) {
	    return false;
	  };

	  /**
	   * Enqueue a callback that will be executed after all the pending updates
	   * have processed.
	   *
	   * @param {ReactClass} publicInstance The instance to use as `this` context.
	   * @param {?function} callback Called after state is updated.
	   * @internal
	   */


	  ReactServerUpdateQueue.prototype.enqueueCallback = function enqueueCallback(publicInstance, callback, callerName) {
	    if (this.transaction.isInTransaction()) {
	      ReactUpdateQueue.enqueueCallback(publicInstance, callback, callerName);
	    }
	  };

	  /**
	   * Forces an update. This should only be invoked when it is known with
	   * certainty that we are **not** in a DOM transaction.
	   *
	   * You may want to call this when you know that some deeper aspect of the
	   * component's state has changed but `setState` was not called.
	   *
	   * This will not invoke `shouldComponentUpdate`, but it will invoke
	   * `componentWillUpdate` and `componentDidUpdate`.
	   *
	   * @param {ReactClass} publicInstance The instance that should rerender.
	   * @internal
	   */


	  ReactServerUpdateQueue.prototype.enqueueForceUpdate = function enqueueForceUpdate(publicInstance) {
	    if (this.transaction.isInTransaction()) {
	      ReactUpdateQueue.enqueueForceUpdate(publicInstance);
	    } else {
	      warnNoop(publicInstance, 'forceUpdate');
	    }
	  };

	  /**
	   * Replaces all of the state. Always use this or `setState` to mutate state.
	   * You should treat `this.state` as immutable.
	   *
	   * There is no guarantee that `this.state` will be immediately updated, so
	   * accessing `this.state` after calling this method may return the old value.
	   *
	   * @param {ReactClass} publicInstance The instance that should rerender.
	   * @param {object|function} completeState Next state.
	   * @internal
	   */


	  ReactServerUpdateQueue.prototype.enqueueReplaceState = function enqueueReplaceState(publicInstance, completeState) {
	    if (this.transaction.isInTransaction()) {
	      ReactUpdateQueue.enqueueReplaceState(publicInstance, completeState);
	    } else {
	      warnNoop(publicInstance, 'replaceState');
	    }
	  };

	  /**
	   * Sets a subset of the state. This only exists because _pendingState is
	   * internal. This provides a merging strategy that is not available to deep
	   * properties which is confusing. TODO: Expose pendingState or don't use it
	   * during the merge.
	   *
	   * @param {ReactClass} publicInstance The instance that should rerender.
	   * @param {object|function} partialState Next partial state to be merged with state.
	   * @internal
	   */


	  ReactServerUpdateQueue.prototype.enqueueSetState = function enqueueSetState(publicInstance, partialState) {
	    if (this.transaction.isInTransaction()) {
	      ReactUpdateQueue.enqueueSetState(publicInstance, partialState);
	    } else {
	      warnNoop(publicInstance, 'setState');
	    }
	  };

	  return ReactServerUpdateQueue;
	}();

	module.exports = ReactServerUpdateQueue;
	/* WEBPACK VAR INJECTION */}.call(exports, __webpack_require__(4)))

/***/ },
/* 133 */
/***/ function(module, exports, __webpack_require__) {

	/* WEBPACK VAR INJECTION */(function(process) {/**
	 * Copyright 2015-present, Facebook, Inc.
	 * All rights reserved.
	 *
	 * This source code is licensed under the BSD-style license found in the
	 * LICENSE file in the root directory of this source tree. An additional grant
	 * of patent rights can be found in the PATENTS file in the same directory.
	 *
	 * @providesModule ReactUpdateQueue
	 */

	'use strict';

	var _prodInvariant = __webpack_require__(8);

	var ReactCurrentOwner = __webpack_require__(11);
	var ReactInstanceMap = __webpack_require__(122);
	var ReactInstrumentation = __webpack_require__(62);
	var ReactUpdates = __webpack_require__(56);

	var invariant = __webpack_require__(9);
	var warning = __webpack_require__(12);

	function enqueueUpdate(internalInstance) {
	  ReactUpdates.enqueueUpdate(internalInstance);
	}

	function formatUnexpectedArgument(arg) {
	  var type = typeof arg;
	  if (type !== 'object') {
	    return type;
	  }
	  var displayName = arg.constructor && arg.constructor.name || type;
	  var keys = Object.keys(arg);
	  if (keys.length > 0 && keys.length < 20) {
	    return displayName + ' (keys: ' + keys.join(', ') + ')';
	  }
	  return displayName;
	}

	function getInternalInstanceReadyForUpdate(publicInstance, callerName) {
	  var internalInstance = ReactInstanceMap.get(publicInstance);
	  if (!internalInstance) {
	    if (process.env.NODE_ENV !== 'production') {
	      // Only warn when we have a callerName. Otherwise we should be silent.
	      // We're probably calling from enqueueCallback. We don't want to warn
	      // there because we already warned for the corresponding lifecycle method.
	      process.env.NODE_ENV !== 'production' ? warning(!callerName, '%s(...): Can only update a mounted or mounting component. ' + 'This usually means you called %s() on an unmounted component. ' + 'This is a no-op. Please check the code for the %s component.', callerName, callerName, publicInstance.constructor.displayName) : void 0;
	    }
	    return null;
	  }

	  if (process.env.NODE_ENV !== 'production') {
	    process.env.NODE_ENV !== 'production' ? warning(ReactCurrentOwner.current == null, '%s(...): Cannot update during an existing state transition (such as ' + 'within `render` or another component\'s constructor). Render methods ' + 'should be a pure function of props and state; constructor ' + 'side-effects are an anti-pattern, but can be moved to ' + '`componentWillMount`.', callerName) : void 0;
	  }

	  return internalInstance;
	}

	/**
	 * ReactUpdateQueue allows for state updates to be scheduled into a later
	 * reconciliation step.
	 */
	var ReactUpdateQueue = {

	  /**
	   * Checks whether or not this composite component is mounted.
	   * @param {ReactClass} publicInstance The instance we want to test.
	   * @return {boolean} True if mounted, false otherwise.
	   * @protected
	   * @final
	   */
	  isMounted: function (publicInstance) {
	    if (process.env.NODE_ENV !== 'production') {
	      var owner = ReactCurrentOwner.current;
	      if (owner !== null) {
	        process.env.NODE_ENV !== 'production' ? warning(owner._warnedAboutRefsInRender, '%s is accessing isMounted inside its render() function. ' + 'render() should be a pure function of props and state. It should ' + 'never access something that requires stale data from the previous ' + 'render, such as refs. Move this logic to componentDidMount and ' + 'componentDidUpdate instead.', owner.getName() || 'A component') : void 0;
	        owner._warnedAboutRefsInRender = true;
	      }
	    }
	    var internalInstance = ReactInstanceMap.get(publicInstance);
	    if (internalInstance) {
	      // During componentWillMount and render this will still be null but after
	      // that will always render to something. At least for now. So we can use
	      // this hack.
	      return !!internalInstance._renderedComponent;
	    } else {
	      return false;
	    }
	  },

	  /**
	   * Enqueue a callback that will be executed after all the pending updates
	   * have processed.
	   *
	   * @param {ReactClass} publicInstance The instance to use as `this` context.
	   * @param {?function} callback Called after state is updated.
	   * @param {string} callerName Name of the calling function in the public API.
	   * @internal
	   */
	  enqueueCallback: function (publicInstance, callback, callerName) {
	    ReactUpdateQueue.validateCallback(callback, callerName);
	    var internalInstance = getInternalInstanceReadyForUpdate(publicInstance);

	    // Previously we would throw an error if we didn't have an internal
	    // instance. Since we want to make it a no-op instead, we mirror the same
	    // behavior we have in other enqueue* methods.
	    // We also need to ignore callbacks in componentWillMount. See
	    // enqueueUpdates.
	    if (!internalInstance) {
	      return null;
	    }

	    if (internalInstance._pendingCallbacks) {
	      internalInstance._pendingCallbacks.push(callback);
	    } else {
	      internalInstance._pendingCallbacks = [callback];
	    }
	    // TODO: The callback here is ignored when setState is called from
	    // componentWillMount. Either fix it or disallow doing so completely in
	    // favor of getInitialState. Alternatively, we can disallow
	    // componentWillMount during server-side rendering.
	    enqueueUpdate(internalInstance);
	  },

	  enqueueCallbackInternal: function (internalInstance, callback) {
	    if (internalInstance._pendingCallbacks) {
	      internalInstance._pendingCallbacks.push(callback);
	    } else {
	      internalInstance._pendingCallbacks = [callback];
	    }
	    enqueueUpdate(internalInstance);
	  },

	  /**
	   * Forces an update. This should only be invoked when it is known with
	   * certainty that we are **not** in a DOM transaction.
	   *
	   * You may want to call this when you know that some deeper aspect of the
	   * component's state has changed but `setState` was not called.
	   *
	   * This will not invoke `shouldComponentUpdate`, but it will invoke
	   * `componentWillUpdate` and `componentDidUpdate`.
	   *
	   * @param {ReactClass} publicInstance The instance that should rerender.
	   * @internal
	   */
	  enqueueForceUpdate: function (publicInstance) {
	    var internalInstance = getInternalInstanceReadyForUpdate(publicInstance, 'forceUpdate');

	    if (!internalInstance) {
	      return;
	    }

	    internalInstance._pendingForceUpdate = true;

	    enqueueUpdate(internalInstance);
	  },

	  /**
	   * Replaces all of the state. Always use this or `setState` to mutate state.
	   * You should treat `this.state` as immutable.
	   *
	   * There is no guarantee that `this.state` will be immediately updated, so
	   * accessing `this.state` after calling this method may return the old value.
	   *
	   * @param {ReactClass} publicInstance The instance that should rerender.
	   * @param {object} completeState Next state.
	   * @internal
	   */
	  enqueueReplaceState: function (publicInstance, completeState) {
	    var internalInstance = getInternalInstanceReadyForUpdate(publicInstance, 'replaceState');

	    if (!internalInstance) {
	      return;
	    }

	    internalInstance._pendingStateQueue = [completeState];
	    internalInstance._pendingReplaceState = true;

	    enqueueUpdate(internalInstance);
	  },

	  /**
	   * Sets a subset of the state. This only exists because _pendingState is
	   * internal. This provides a merging strategy that is not available to deep
	   * properties which is confusing. TODO: Expose pendingState or don't use it
	   * during the merge.
	   *
	   * @param {ReactClass} publicInstance The instance that should rerender.
	   * @param {object} partialState Next partial state to be merged with state.
	   * @internal
	   */
	  enqueueSetState: function (publicInstance, partialState) {
	    if (process.env.NODE_ENV !== 'production') {
	      ReactInstrumentation.debugTool.onSetState();
	      process.env.NODE_ENV !== 'production' ? warning(partialState != null, 'setState(...): You passed an undefined or null state object; ' + 'instead, use forceUpdate().') : void 0;
	    }

	    var internalInstance = getInternalInstanceReadyForUpdate(publicInstance, 'setState');

	    if (!internalInstance) {
	      return;
	    }

	    var queue = internalInstance._pendingStateQueue || (internalInstance._pendingStateQueue = []);
	    queue.push(partialState);

	    enqueueUpdate(internalInstance);
	  },

	  enqueueElementInternal: function (internalInstance, nextElement, nextContext) {
	    internalInstance._pendingElement = nextElement;
	    // TODO: introduce _pendingContext instead of setting it directly.
	    internalInstance._context = nextContext;
	    enqueueUpdate(internalInstance);
	  },

	  validateCallback: function (callback, callerName) {
	    !(!callback || typeof callback === 'function') ? process.env.NODE_ENV !== 'production' ? invariant(false, '%s(...): Expected the last optional `callback` argument to be a function. Instead received: %s.', callerName, formatUnexpectedArgument(callback)) : _prodInvariant('122', callerName, formatUnexpectedArgument(callback)) : void 0;
	  }

	};

	module.exports = ReactUpdateQueue;
	/* WEBPACK VAR INJECTION */}.call(exports, __webpack_require__(4)))

/***/ },
/* 134 */
/***/ function(module, exports) {

	/**
	 * Copyright (c) 2013-present, Facebook, Inc.
	 * All rights reserved.
	 *
	 * This source code is licensed under the BSD-style license found in the
	 * LICENSE file in the root directory of this source tree. An additional grant
	 * of patent rights can be found in the PATENTS file in the same directory.
	 *
	 * @typechecks
	 * 
	 */

	/*eslint-disable no-self-compare */

	'use strict';

	var hasOwnProperty = Object.prototype.hasOwnProperty;

	/**
	 * inlined Object.is polyfill to avoid requiring consumers ship their own
	 * https://developer.mozilla.org/en-US/docs/Web/JavaScript/Reference/Global_Objects/Object/is
	 */
	function is(x, y) {
	  // SameValue algorithm
	  if (x === y) {
	    // Steps 1-5, 7-10
	    // Steps 6.b-6.e: +0 != -0
	    return x !== 0 || 1 / x === 1 / y;
	  } else {
	    // Step 6.a: NaN == NaN
	    return x !== x && y !== y;
	  }
	}

	/**
	 * Performs equality by iterating through keys on an object and returning false
	 * when any key has values which are not strictly equal between the arguments.
	 * Returns true when the values of all keys are strictly equal.
	 */
	function shallowEqual(objA, objB) {
	  if (is(objA, objB)) {
	    return true;
	  }

	  if (typeof objA !== 'object' || objA === null || typeof objB !== 'object' || objB === null) {
	    return false;
	  }

	  var keysA = Object.keys(objA);
	  var keysB = Object.keys(objB);

	  if (keysA.length !== keysB.length) {
	    return false;
	  }

	  // Test for A's keys different from B.
	  for (var i = 0; i < keysA.length; i++) {
	    if (!hasOwnProperty.call(objB, keysA[i]) || !is(objA[keysA[i]], objB[keysA[i]])) {
	      return false;
	    }
	  }

	  return true;
	}

	module.exports = shallowEqual;

/***/ },
/* 135 */
/***/ function(module, exports, __webpack_require__) {

	/* WEBPACK VAR INJECTION */(function(process) {/**
	 * Copyright 2015-present, Facebook, Inc.
	 * All rights reserved.
	 *
	 * This source code is licensed under the BSD-style license found in the
	 * LICENSE file in the root directory of this source tree. An additional grant
	 * of patent rights can be found in the PATENTS file in the same directory.
	 *
	 * @providesModule validateDOMNesting
	 */

	'use strict';

	var _assign = __webpack_require__(5);

	var emptyFunction = __webpack_require__(13);
	var warning = __webpack_require__(12);

	var validateDOMNesting = emptyFunction;

	if (process.env.NODE_ENV !== 'production') {
	  // This validation code was written based on the HTML5 parsing spec:
	  // https://html.spec.whatwg.org/multipage/syntax.html#has-an-element-in-scope
	  //
	  // Note: this does not catch all invalid nesting, nor does it try to (as it's
	  // not clear what practical benefit doing so provides); instead, we warn only
	  // for cases where the parser will give a parse tree differing from what React
	  // intended. For example, <b><div></div></b> is invalid but we don't warn
	  // because it still parses correctly; we do warn for other cases like nested
	  // <p> tags where the beginning of the second element implicitly closes the
	  // first, causing a confusing mess.

	  // https://html.spec.whatwg.org/multipage/syntax.html#special
	  var specialTags = ['address', 'applet', 'area', 'article', 'aside', 'base', 'basefont', 'bgsound', 'blockquote', 'body', 'br', 'button', 'caption', 'center', 'col', 'colgroup', 'dd', 'details', 'dir', 'div', 'dl', 'dt', 'embed', 'fieldset', 'figcaption', 'figure', 'footer', 'form', 'frame', 'frameset', 'h1', 'h2', 'h3', 'h4', 'h5', 'h6', 'head', 'header', 'hgroup', 'hr', 'html', 'iframe', 'img', 'input', 'isindex', 'li', 'link', 'listing', 'main', 'marquee', 'menu', 'menuitem', 'meta', 'nav', 'noembed', 'noframes', 'noscript', 'object', 'ol', 'p', 'param', 'plaintext', 'pre', 'script', 'section', 'select', 'source', 'style', 'summary', 'table', 'tbody', 'td', 'template', 'textarea', 'tfoot', 'th', 'thead', 'title', 'tr', 'track', 'ul', 'wbr', 'xmp'];

	  // https://html.spec.whatwg.org/multipage/syntax.html#has-an-element-in-scope
	  var inScopeTags = ['applet', 'caption', 'html', 'table', 'td', 'th', 'marquee', 'object', 'template',

	  // https://html.spec.whatwg.org/multipage/syntax.html#html-integration-point
	  // TODO: Distinguish by namespace here -- for <title>, including it here
	  // errs on the side of fewer warnings
	  'foreignObject', 'desc', 'title'];

	  // https://html.spec.whatwg.org/multipage/syntax.html#has-an-element-in-button-scope
	  var buttonScopeTags = inScopeTags.concat(['button']);

	  // https://html.spec.whatwg.org/multipage/syntax.html#generate-implied-end-tags
	  var impliedEndTags = ['dd', 'dt', 'li', 'option', 'optgroup', 'p', 'rp', 'rt'];

	  var emptyAncestorInfo = {
	    current: null,

	    formTag: null,
	    aTagInScope: null,
	    buttonTagInScope: null,
	    nobrTagInScope: null,
	    pTagInButtonScope: null,

	    listItemTagAutoclosing: null,
	    dlItemTagAutoclosing: null
	  };

	  var updatedAncestorInfo = function (oldInfo, tag, instance) {
	    var ancestorInfo = _assign({}, oldInfo || emptyAncestorInfo);
	    var info = { tag: tag, instance: instance };

	    if (inScopeTags.indexOf(tag) !== -1) {
	      ancestorInfo.aTagInScope = null;
	      ancestorInfo.buttonTagInScope = null;
	      ancestorInfo.nobrTagInScope = null;
	    }
	    if (buttonScopeTags.indexOf(tag) !== -1) {
	      ancestorInfo.pTagInButtonScope = null;
	    }

	    // See rules for 'li', 'dd', 'dt' start tags in
	    // https://html.spec.whatwg.org/multipage/syntax.html#parsing-main-inbody
	    if (specialTags.indexOf(tag) !== -1 && tag !== 'address' && tag !== 'div' && tag !== 'p') {
	      ancestorInfo.listItemTagAutoclosing = null;
	      ancestorInfo.dlItemTagAutoclosing = null;
	    }

	    ancestorInfo.current = info;

	    if (tag === 'form') {
	      ancestorInfo.formTag = info;
	    }
	    if (tag === 'a') {
	      ancestorInfo.aTagInScope = info;
	    }
	    if (tag === 'button') {
	      ancestorInfo.buttonTagInScope = info;
	    }
	    if (tag === 'nobr') {
	      ancestorInfo.nobrTagInScope = info;
	    }
	    if (tag === 'p') {
	      ancestorInfo.pTagInButtonScope = info;
	    }
	    if (tag === 'li') {
	      ancestorInfo.listItemTagAutoclosing = info;
	    }
	    if (tag === 'dd' || tag === 'dt') {
	      ancestorInfo.dlItemTagAutoclosing = info;
	    }

	    return ancestorInfo;
	  };

	  /**
	   * Returns whether
	   */
	  var isTagValidWithParent = function (tag, parentTag) {
	    // First, let's check if we're in an unusual parsing mode...
	    switch (parentTag) {
	      // https://html.spec.whatwg.org/multipage/syntax.html#parsing-main-inselect
	      case 'select':
	        return tag === 'option' || tag === 'optgroup' || tag === '#text';
	      case 'optgroup':
	        return tag === 'option' || tag === '#text';
	      // Strictly speaking, seeing an <option> doesn't mean we're in a <select>
	      // but
	      case 'option':
	        return tag === '#text';

	      // https://html.spec.whatwg.org/multipage/syntax.html#parsing-main-intd
	      // https://html.spec.whatwg.org/multipage/syntax.html#parsing-main-incaption
	      // No special behavior since these rules fall back to "in body" mode for
	      // all except special table nodes which cause bad parsing behavior anyway.

	      // https://html.spec.whatwg.org/multipage/syntax.html#parsing-main-intr
	      case 'tr':
	        return tag === 'th' || tag === 'td' || tag === 'style' || tag === 'script' || tag === 'template';

	      // https://html.spec.whatwg.org/multipage/syntax.html#parsing-main-intbody
	      case 'tbody':
	      case 'thead':
	      case 'tfoot':
	        return tag === 'tr' || tag === 'style' || tag === 'script' || tag === 'template';

	      // https://html.spec.whatwg.org/multipage/syntax.html#parsing-main-incolgroup
	      case 'colgroup':
	        return tag === 'col' || tag === 'template';

	      // https://html.spec.whatwg.org/multipage/syntax.html#parsing-main-intable
	      case 'table':
	        return tag === 'caption' || tag === 'colgroup' || tag === 'tbody' || tag === 'tfoot' || tag === 'thead' || tag === 'style' || tag === 'script' || tag === 'template';

	      // https://html.spec.whatwg.org/multipage/syntax.html#parsing-main-inhead
	      case 'head':
	        return tag === 'base' || tag === 'basefont' || tag === 'bgsound' || tag === 'link' || tag === 'meta' || tag === 'title' || tag === 'noscript' || tag === 'noframes' || tag === 'style' || tag === 'script' || tag === 'template';

	      // https://html.spec.whatwg.org/multipage/semantics.html#the-html-element
	      case 'html':
	        return tag === 'head' || tag === 'body';
	      case '#document':
	        return tag === 'html';
	    }

	    // Probably in the "in body" parsing mode, so we outlaw only tag combos
	    // where the parsing rules cause implicit opens or closes to be added.
	    // https://html.spec.whatwg.org/multipage/syntax.html#parsing-main-inbody
	    switch (tag) {
	      case 'h1':
	      case 'h2':
	      case 'h3':
	      case 'h4':
	      case 'h5':
	      case 'h6':
	        return parentTag !== 'h1' && parentTag !== 'h2' && parentTag !== 'h3' && parentTag !== 'h4' && parentTag !== 'h5' && parentTag !== 'h6';

	      case 'rp':
	      case 'rt':
	        return impliedEndTags.indexOf(parentTag) === -1;

	      case 'body':
	      case 'caption':
	      case 'col':
	      case 'colgroup':
	      case 'frame':
	      case 'head':
	      case 'html':
	      case 'tbody':
	      case 'td':
	      case 'tfoot':
	      case 'th':
	      case 'thead':
	      case 'tr':
	        // These tags are only valid with a few parents that have special child
	        // parsing rules -- if we're down here, then none of those matched and
	        // so we allow it only if we don't know what the parent is, as all other
	        // cases are invalid.
	        return parentTag == null;
	    }

	    return true;
	  };

	  /**
	   * Returns whether
	   */
	  var findInvalidAncestorForTag = function (tag, ancestorInfo) {
	    switch (tag) {
	      case 'address':
	      case 'article':
	      case 'aside':
	      case 'blockquote':
	      case 'center':
	      case 'details':
	      case 'dialog':
	      case 'dir':
	      case 'div':
	      case 'dl':
	      case 'fieldset':
	      case 'figcaption':
	      case 'figure':
	      case 'footer':
	      case 'header':
	      case 'hgroup':
	      case 'main':
	      case 'menu':
	      case 'nav':
	      case 'ol':
	      case 'p':
	      case 'section':
	      case 'summary':
	      case 'ul':

	      case 'pre':
	      case 'listing':

	      case 'table':

	      case 'hr':

	      case 'xmp':

	      case 'h1':
	      case 'h2':
	      case 'h3':
	      case 'h4':
	      case 'h5':
	      case 'h6':
	        return ancestorInfo.pTagInButtonScope;

	      case 'form':
	        return ancestorInfo.formTag || ancestorInfo.pTagInButtonScope;

	      case 'li':
	        return ancestorInfo.listItemTagAutoclosing;

	      case 'dd':
	      case 'dt':
	        return ancestorInfo.dlItemTagAutoclosing;

	      case 'button':
	        return ancestorInfo.buttonTagInScope;

	      case 'a':
	        // Spec says something about storing a list of markers, but it sounds
	        // equivalent to this check.
	        return ancestorInfo.aTagInScope;

	      case 'nobr':
	        return ancestorInfo.nobrTagInScope;
	    }

	    return null;
	  };

	  /**
	   * Given a ReactCompositeComponent instance, return a list of its recursive
	   * owners, starting at the root and ending with the instance itself.
	   */
	  var findOwnerStack = function (instance) {
	    if (!instance) {
	      return [];
	    }

	    var stack = [];
	    do {
	      stack.push(instance);
	    } while (instance = instance._currentElement._owner);
	    stack.reverse();
	    return stack;
	  };

	  var didWarn = {};

	  validateDOMNesting = function (childTag, childInstance, ancestorInfo) {
	    ancestorInfo = ancestorInfo || emptyAncestorInfo;
	    var parentInfo = ancestorInfo.current;
	    var parentTag = parentInfo && parentInfo.tag;

	    var invalidParent = isTagValidWithParent(childTag, parentTag) ? null : parentInfo;
	    var invalidAncestor = invalidParent ? null : findInvalidAncestorForTag(childTag, ancestorInfo);
	    var problematic = invalidParent || invalidAncestor;

	    if (problematic) {
	      var ancestorTag = problematic.tag;
	      var ancestorInstance = problematic.instance;

	      var childOwner = childInstance && childInstance._currentElement._owner;
	      var ancestorOwner = ancestorInstance && ancestorInstance._currentElement._owner;

	      var childOwners = findOwnerStack(childOwner);
	      var ancestorOwners = findOwnerStack(ancestorOwner);

	      var minStackLen = Math.min(childOwners.length, ancestorOwners.length);
	      var i;

	      var deepestCommon = -1;
	      for (i = 0; i < minStackLen; i++) {
	        if (childOwners[i] === ancestorOwners[i]) {
	          deepestCommon = i;
	        } else {
	          break;
	        }
	      }

	      var UNKNOWN = '(unknown)';
	      var childOwnerNames = childOwners.slice(deepestCommon + 1).map(function (inst) {
	        return inst.getName() || UNKNOWN;
	      });
	      var ancestorOwnerNames = ancestorOwners.slice(deepestCommon + 1).map(function (inst) {
	        return inst.getName() || UNKNOWN;
	      });
	      var ownerInfo = [].concat(
	      // If the parent and child instances have a common owner ancestor, start
	      // with that -- otherwise we just start with the parent's owners.
	      deepestCommon !== -1 ? childOwners[deepestCommon].getName() || UNKNOWN : [], ancestorOwnerNames, ancestorTag,
	      // If we're warning about an invalid (non-parent) ancestry, add '...'
	      invalidAncestor ? ['...'] : [], childOwnerNames, childTag).join(' > ');

	      var warnKey = !!invalidParent + '|' + childTag + '|' + ancestorTag + '|' + ownerInfo;
	      if (didWarn[warnKey]) {
	        return;
	      }
	      didWarn[warnKey] = true;

	      var tagDisplayName = childTag;
	      if (childTag !== '#text') {
	        tagDisplayName = '<' + childTag + '>';
	      }

	      if (invalidParent) {
	        var info = '';
	        if (ancestorTag === 'table' && childTag === 'tr') {
	          info += ' Add a <tbody> to your code to match the DOM tree generated by ' + 'the browser.';
	        }
	        process.env.NODE_ENV !== 'production' ? warning(false, 'validateDOMNesting(...): %s cannot appear as a child of <%s>. ' + 'See %s.%s', tagDisplayName, ancestorTag, ownerInfo, info) : void 0;
	      } else {
	        process.env.NODE_ENV !== 'production' ? warning(false, 'validateDOMNesting(...): %s cannot appear as a descendant of ' + '<%s>. See %s.', tagDisplayName, ancestorTag, ownerInfo) : void 0;
	      }
	    }
	  };

	  validateDOMNesting.updatedAncestorInfo = updatedAncestorInfo;

	  // For testing
	  validateDOMNesting.isTagValidInContext = function (tag, ancestorInfo) {
	    ancestorInfo = ancestorInfo || emptyAncestorInfo;
	    var parentInfo = ancestorInfo.current;
	    var parentTag = parentInfo && parentInfo.tag;
	    return isTagValidWithParent(tag, parentTag) && !findInvalidAncestorForTag(tag, ancestorInfo);
	  };
	}

	module.exports = validateDOMNesting;
	/* WEBPACK VAR INJECTION */}.call(exports, __webpack_require__(4)))

/***/ },
/* 136 */
/***/ function(module, exports, __webpack_require__) {

	/**
	 * Copyright 2014-present, Facebook, Inc.
	 * All rights reserved.
	 *
	 * This source code is licensed under the BSD-style license found in the
	 * LICENSE file in the root directory of this source tree. An additional grant
	 * of patent rights can be found in the PATENTS file in the same directory.
	 *
	 * @providesModule ReactDOMEmptyComponent
	 */

	'use strict';

	var _assign = __webpack_require__(5);

	var DOMLazyTree = __webpack_require__(81);
	var ReactDOMComponentTree = __webpack_require__(36);

	var ReactDOMEmptyComponent = function (instantiate) {
	  // ReactCompositeComponent uses this:
	  this._currentElement = null;
	  // ReactDOMComponentTree uses these:
	  this._hostNode = null;
	  this._hostParent = null;
	  this._hostContainerInfo = null;
	  this._domID = null;
	};
	_assign(ReactDOMEmptyComponent.prototype, {
	  mountComponent: function (transaction, hostParent, hostContainerInfo, context) {
	    var domID = hostContainerInfo._idCounter++;
	    this._domID = domID;
	    this._hostParent = hostParent;
	    this._hostContainerInfo = hostContainerInfo;

	    var nodeValue = ' react-empty: ' + this._domID + ' ';
	    if (transaction.useCreateElement) {
	      var ownerDocument = hostContainerInfo._ownerDocument;
	      var node = ownerDocument.createComment(nodeValue);
	      ReactDOMComponentTree.precacheNode(this, node);
	      return DOMLazyTree(node);
	    } else {
	      if (transaction.renderToStaticMarkup) {
	        // Normally we'd insert a comment node, but since this is a situation
	        // where React won't take over (static pages), we can simply return
	        // nothing.
	        return '';
	      }
	      return '<!--' + nodeValue + '-->';
	    }
	  },
	  receiveComponent: function () {},
	  getHostNode: function () {
	    return ReactDOMComponentTree.getNodeFromInstance(this);
	  },
	  unmountComponent: function () {
	    ReactDOMComponentTree.uncacheNode(this);
	  }
	});

	module.exports = ReactDOMEmptyComponent;

/***/ },
/* 137 */
/***/ function(module, exports, __webpack_require__) {

	/* WEBPACK VAR INJECTION */(function(process) {/**
	 * Copyright 2015-present, Facebook, Inc.
	 * All rights reserved.
	 *
	 * This source code is licensed under the BSD-style license found in the
	 * LICENSE file in the root directory of this source tree. An additional grant
	 * of patent rights can be found in the PATENTS file in the same directory.
	 *
	 * @providesModule ReactDOMTreeTraversal
	 */

	'use strict';

	var _prodInvariant = __webpack_require__(8);

	var invariant = __webpack_require__(9);

	/**
	 * Return the lowest common ancestor of A and B, or null if they are in
	 * different trees.
	 */
	function getLowestCommonAncestor(instA, instB) {
	  !('_hostNode' in instA) ? process.env.NODE_ENV !== 'production' ? invariant(false, 'getNodeFromInstance: Invalid argument.') : _prodInvariant('33') : void 0;
	  !('_hostNode' in instB) ? process.env.NODE_ENV !== 'production' ? invariant(false, 'getNodeFromInstance: Invalid argument.') : _prodInvariant('33') : void 0;

	  var depthA = 0;
	  for (var tempA = instA; tempA; tempA = tempA._hostParent) {
	    depthA++;
	  }
	  var depthB = 0;
	  for (var tempB = instB; tempB; tempB = tempB._hostParent) {
	    depthB++;
	  }

	  // If A is deeper, crawl up.
	  while (depthA - depthB > 0) {
	    instA = instA._hostParent;
	    depthA--;
	  }

	  // If B is deeper, crawl up.
	  while (depthB - depthA > 0) {
	    instB = instB._hostParent;
	    depthB--;
	  }

	  // Walk in lockstep until we find a match.
	  var depth = depthA;
	  while (depth--) {
	    if (instA === instB) {
	      return instA;
	    }
	    instA = instA._hostParent;
	    instB = instB._hostParent;
	  }
	  return null;
	}

	/**
	 * Return if A is an ancestor of B.
	 */
	function isAncestor(instA, instB) {
	  !('_hostNode' in instA) ? process.env.NODE_ENV !== 'production' ? invariant(false, 'isAncestor: Invalid argument.') : _prodInvariant('35') : void 0;
	  !('_hostNode' in instB) ? process.env.NODE_ENV !== 'production' ? invariant(false, 'isAncestor: Invalid argument.') : _prodInvariant('35') : void 0;

	  while (instB) {
	    if (instB === instA) {
	      return true;
	    }
	    instB = instB._hostParent;
	  }
	  return false;
	}

	/**
	 * Return the parent instance of the passed-in instance.
	 */
	function getParentInstance(inst) {
	  !('_hostNode' in inst) ? process.env.NODE_ENV !== 'production' ? invariant(false, 'getParentInstance: Invalid argument.') : _prodInvariant('36') : void 0;

	  return inst._hostParent;
	}

	/**
	 * Simulates the traversal of a two-phase, capture/bubble event dispatch.
	 */
	function traverseTwoPhase(inst, fn, arg) {
	  var path = [];
	  while (inst) {
	    path.push(inst);
	    inst = inst._hostParent;
	  }
	  var i;
	  for (i = path.length; i-- > 0;) {
	    fn(path[i], false, arg);
	  }
	  for (i = 0; i < path.length; i++) {
	    fn(path[i], true, arg);
	  }
	}

	/**
	 * Traverses the ID hierarchy and invokes the supplied `cb` on any IDs that
	 * should would receive a `mouseEnter` or `mouseLeave` event.
	 *
	 * Does not invoke the callback on the nearest common ancestor because nothing
	 * "entered" or "left" that element.
	 */
	function traverseEnterLeave(from, to, fn, argFrom, argTo) {
	  var common = from && to ? getLowestCommonAncestor(from, to) : null;
	  var pathFrom = [];
	  while (from && from !== common) {
	    pathFrom.push(from);
	    from = from._hostParent;
	  }
	  var pathTo = [];
	  while (to && to !== common) {
	    pathTo.push(to);
	    to = to._hostParent;
	  }
	  var i;
	  for (i = 0; i < pathFrom.length; i++) {
	    fn(pathFrom[i], true, argFrom);
	  }
	  for (i = pathTo.length; i-- > 0;) {
	    fn(pathTo[i], false, argTo);
	  }
	}

	module.exports = {
	  isAncestor: isAncestor,
	  getLowestCommonAncestor: getLowestCommonAncestor,
	  getParentInstance: getParentInstance,
	  traverseTwoPhase: traverseTwoPhase,
	  traverseEnterLeave: traverseEnterLeave
	};
	/* WEBPACK VAR INJECTION */}.call(exports, __webpack_require__(4)))

/***/ },
/* 138 */
/***/ function(module, exports, __webpack_require__) {

	/* WEBPACK VAR INJECTION */(function(process) {/**
	 * Copyright 2013-present, Facebook, Inc.
	 * All rights reserved.
	 *
	 * This source code is licensed under the BSD-style license found in the
	 * LICENSE file in the root directory of this source tree. An additional grant
	 * of patent rights can be found in the PATENTS file in the same directory.
	 *
	 * @providesModule ReactDOMTextComponent
	 */

	'use strict';

	var _prodInvariant = __webpack_require__(8),
	    _assign = __webpack_require__(5);

	var DOMChildrenOperations = __webpack_require__(80);
	var DOMLazyTree = __webpack_require__(81);
	var ReactDOMComponentTree = __webpack_require__(36);
	var ReactInstrumentation = __webpack_require__(62);

	var escapeTextContentForBrowser = __webpack_require__(86);
	var invariant = __webpack_require__(9);
	var validateDOMNesting = __webpack_require__(135);

	/**
	 * Text nodes violate a couple assumptions that React makes about components:
	 *
	 *  - When mounting text into the DOM, adjacent text nodes are merged.
	 *  - Text nodes cannot be assigned a React root ID.
	 *
	 * This component is used to wrap strings between comment nodes so that they
	 * can undergo the same reconciliation that is applied to elements.
	 *
	 * TODO: Investigate representing React components in the DOM with text nodes.
	 *
	 * @class ReactDOMTextComponent
	 * @extends ReactComponent
	 * @internal
	 */
	var ReactDOMTextComponent = function (text) {
	  // TODO: This is really a ReactText (ReactNode), not a ReactElement
	  this._currentElement = text;
	  this._stringText = '' + text;
	  // ReactDOMComponentTree uses these:
	  this._hostNode = null;
	  this._hostParent = null;

	  // Properties
	  this._domID = null;
	  this._mountIndex = 0;
	  this._closingComment = null;
	  this._commentNodes = null;
	};

	_assign(ReactDOMTextComponent.prototype, {

	  /**
	   * Creates the markup for this text node. This node is not intended to have
	   * any features besides containing text content.
	   *
	   * @param {ReactReconcileTransaction|ReactServerRenderingTransaction} transaction
	   * @return {string} Markup for this text node.
	   * @internal
	   */
	  mountComponent: function (transaction, hostParent, hostContainerInfo, context) {
	    if (process.env.NODE_ENV !== 'production') {
	      ReactInstrumentation.debugTool.onSetText(this._debugID, this._stringText);

	      var parentInfo;
	      if (hostParent != null) {
	        parentInfo = hostParent._ancestorInfo;
	      } else if (hostContainerInfo != null) {
	        parentInfo = hostContainerInfo._ancestorInfo;
	      }
	      if (parentInfo) {
	        // parentInfo should always be present except for the top-level
	        // component when server rendering
	        validateDOMNesting('#text', this, parentInfo);
	      }
	    }

	    var domID = hostContainerInfo._idCounter++;
	    var openingValue = ' react-text: ' + domID + ' ';
	    var closingValue = ' /react-text ';
	    this._domID = domID;
	    this._hostParent = hostParent;
	    if (transaction.useCreateElement) {
	      var ownerDocument = hostContainerInfo._ownerDocument;
	      var openingComment = ownerDocument.createComment(openingValue);
	      var closingComment = ownerDocument.createComment(closingValue);
	      var lazyTree = DOMLazyTree(ownerDocument.createDocumentFragment());
	      DOMLazyTree.queueChild(lazyTree, DOMLazyTree(openingComment));
	      if (this._stringText) {
	        DOMLazyTree.queueChild(lazyTree, DOMLazyTree(ownerDocument.createTextNode(this._stringText)));
	      }
	      DOMLazyTree.queueChild(lazyTree, DOMLazyTree(closingComment));
	      ReactDOMComponentTree.precacheNode(this, openingComment);
	      this._closingComment = closingComment;
	      return lazyTree;
	    } else {
	      var escapedText = escapeTextContentForBrowser(this._stringText);

	      if (transaction.renderToStaticMarkup) {
	        // Normally we'd wrap this between comment nodes for the reasons stated
	        // above, but since this is a situation where React won't take over
	        // (static pages), we can simply return the text as it is.
	        return escapedText;
	      }

	      return '<!--' + openingValue + '-->' + escapedText + '<!--' + closingValue + '-->';
	    }
	  },

	  /**
	   * Updates this component by updating the text content.
	   *
	   * @param {ReactText} nextText The next text content
	   * @param {ReactReconcileTransaction} transaction
	   * @internal
	   */
	  receiveComponent: function (nextText, transaction) {
	    if (nextText !== this._currentElement) {
	      this._currentElement = nextText;
	      var nextStringText = '' + nextText;
	      if (nextStringText !== this._stringText) {
	        // TODO: Save this as pending props and use performUpdateIfNecessary
	        // and/or updateComponent to do the actual update for consistency with
	        // other component types?
	        this._stringText = nextStringText;
	        var commentNodes = this.getHostNode();
	        DOMChildrenOperations.replaceDelimitedText(commentNodes[0], commentNodes[1], nextStringText);

	        if (process.env.NODE_ENV !== 'production') {
	          ReactInstrumentation.debugTool.onSetText(this._debugID, nextStringText);
	        }
	      }
	    }
	  },

	  getHostNode: function () {
	    var hostNode = this._commentNodes;
	    if (hostNode) {
	      return hostNode;
	    }
	    if (!this._closingComment) {
	      var openingComment = ReactDOMComponentTree.getNodeFromInstance(this);
	      var node = openingComment.nextSibling;
	      while (true) {
	        !(node != null) ? process.env.NODE_ENV !== 'production' ? invariant(false, 'Missing closing comment for text component %s', this._domID) : _prodInvariant('67', this._domID) : void 0;
	        if (node.nodeType === 8 && node.nodeValue === ' /react-text ') {
	          this._closingComment = node;
	          break;
	        }
	        node = node.nextSibling;
	      }
	    }
	    hostNode = [this._hostNode, this._closingComment];
	    this._commentNodes = hostNode;
	    return hostNode;
	  },

	  unmountComponent: function () {
	    this._closingComment = null;
	    this._commentNodes = null;
	    ReactDOMComponentTree.uncacheNode(this);
	  }

	});

	module.exports = ReactDOMTextComponent;
	/* WEBPACK VAR INJECTION */}.call(exports, __webpack_require__(4)))

/***/ },
/* 139 */
/***/ function(module, exports, __webpack_require__) {

	/**
	 * Copyright 2013-present, Facebook, Inc.
	 * All rights reserved.
	 *
	 * This source code is licensed under the BSD-style license found in the
	 * LICENSE file in the root directory of this source tree. An additional grant
	 * of patent rights can be found in the PATENTS file in the same directory.
	 *
	 * @providesModule ReactDefaultBatchingStrategy
	 */

	'use strict';

	var _assign = __webpack_require__(5);

	var ReactUpdates = __webpack_require__(56);
	var Transaction = __webpack_require__(68);

	var emptyFunction = __webpack_require__(13);

	var RESET_BATCHED_UPDATES = {
	  initialize: emptyFunction,
	  close: function () {
	    ReactDefaultBatchingStrategy.isBatchingUpdates = false;
	  }
	};

	var FLUSH_BATCHED_UPDATES = {
	  initialize: emptyFunction,
	  close: ReactUpdates.flushBatchedUpdates.bind(ReactUpdates)
	};

	var TRANSACTION_WRAPPERS = [FLUSH_BATCHED_UPDATES, RESET_BATCHED_UPDATES];

	function ReactDefaultBatchingStrategyTransaction() {
	  this.reinitializeTransaction();
	}

	_assign(ReactDefaultBatchingStrategyTransaction.prototype, Transaction.Mixin, {
	  getTransactionWrappers: function () {
	    return TRANSACTION_WRAPPERS;
	  }
	});

	var transaction = new ReactDefaultBatchingStrategyTransaction();

	var ReactDefaultBatchingStrategy = {
	  isBatchingUpdates: false,

	  /**
	   * Call the provided function in a context within which calls to `setState`
	   * and friends are batched such that components aren't updated unnecessarily.
	   */
	  batchedUpdates: function (callback, a, b, c, d, e) {
	    var alreadyBatchingUpdates = ReactDefaultBatchingStrategy.isBatchingUpdates;

	    ReactDefaultBatchingStrategy.isBatchingUpdates = true;

	    // The code is written this way to avoid extra allocations
	    if (alreadyBatchingUpdates) {
	      callback(a, b, c, d, e);
	    } else {
	      transaction.perform(callback, null, a, b, c, d, e);
	    }
	  }
	};

	module.exports = ReactDefaultBatchingStrategy;

/***/ },
/* 140 */
/***/ function(module, exports, __webpack_require__) {

	/**
	 * Copyright 2013-present, Facebook, Inc.
	 * All rights reserved.
	 *
	 * This source code is licensed under the BSD-style license found in the
	 * LICENSE file in the root directory of this source tree. An additional grant
	 * of patent rights can be found in the PATENTS file in the same directory.
	 *
	 * @providesModule ReactEventListener
	 */

	'use strict';

	var _assign = __webpack_require__(5);

	var EventListener = __webpack_require__(141);
	var ExecutionEnvironment = __webpack_require__(49);
	var PooledClass = __webpack_require__(7);
	var ReactDOMComponentTree = __webpack_require__(36);
	var ReactUpdates = __webpack_require__(56);

	var getEventTarget = __webpack_require__(69);
	var getUnboundedScrollPosition = __webpack_require__(142);

	/**
	 * Find the deepest React component completely containing the root of the
	 * passed-in instance (for use when entire React trees are nested within each
	 * other). If React trees are not nested, returns null.
	 */
	function findParent(inst) {
	  // TODO: It may be a good idea to cache this to prevent unnecessary DOM
	  // traversal, but caching is difficult to do correctly without using a
	  // mutation observer to listen for all DOM changes.
	  while (inst._hostParent) {
	    inst = inst._hostParent;
	  }
	  var rootNode = ReactDOMComponentTree.getNodeFromInstance(inst);
	  var container = rootNode.parentNode;
	  return ReactDOMComponentTree.getClosestInstanceFromNode(container);
	}

	// Used to store ancestor hierarchy in top level callback
	function TopLevelCallbackBookKeeping(topLevelType, nativeEvent) {
	  this.topLevelType = topLevelType;
	  this.nativeEvent = nativeEvent;
	  this.ancestors = [];
	}
	_assign(TopLevelCallbackBookKeeping.prototype, {
	  destructor: function () {
	    this.topLevelType = null;
	    this.nativeEvent = null;
	    this.ancestors.length = 0;
	  }
	});
	PooledClass.addPoolingTo(TopLevelCallbackBookKeeping, PooledClass.twoArgumentPooler);

	function handleTopLevelImpl(bookKeeping) {
	  var nativeEventTarget = getEventTarget(bookKeeping.nativeEvent);
	  var targetInst = ReactDOMComponentTree.getClosestInstanceFromNode(nativeEventTarget);

	  // Loop through the hierarchy, in case there's any nested components.
	  // It's important that we build the array of ancestors before calling any
	  // event handlers, because event handlers can modify the DOM, leading to
	  // inconsistencies with ReactMount's node cache. See #1105.
	  var ancestor = targetInst;
	  do {
	    bookKeeping.ancestors.push(ancestor);
	    ancestor = ancestor && findParent(ancestor);
	  } while (ancestor);

	  for (var i = 0; i < bookKeeping.ancestors.length; i++) {
	    targetInst = bookKeeping.ancestors[i];
	    ReactEventListener._handleTopLevel(bookKeeping.topLevelType, targetInst, bookKeeping.nativeEvent, getEventTarget(bookKeeping.nativeEvent));
	  }
	}

	function scrollValueMonitor(cb) {
	  var scrollPosition = getUnboundedScrollPosition(window);
	  cb(scrollPosition);
	}

	var ReactEventListener = {
	  _enabled: true,
	  _handleTopLevel: null,

	  WINDOW_HANDLE: ExecutionEnvironment.canUseDOM ? window : null,

	  setHandleTopLevel: function (handleTopLevel) {
	    ReactEventListener._handleTopLevel = handleTopLevel;
	  },

	  setEnabled: function (enabled) {
	    ReactEventListener._enabled = !!enabled;
	  },

	  isEnabled: function () {
	    return ReactEventListener._enabled;
	  },

	  /**
	   * Traps top-level events by using event bubbling.
	   *
	   * @param {string} topLevelType Record from `EventConstants`.
	   * @param {string} handlerBaseName Event name (e.g. "click").
	   * @param {object} handle Element on which to attach listener.
	   * @return {?object} An object with a remove function which will forcefully
	   *                  remove the listener.
	   * @internal
	   */
	  trapBubbledEvent: function (topLevelType, handlerBaseName, handle) {
	    var element = handle;
	    if (!element) {
	      return null;
	    }
	    return EventListener.listen(element, handlerBaseName, ReactEventListener.dispatchEvent.bind(null, topLevelType));
	  },

	  /**
	   * Traps a top-level event by using event capturing.
	   *
	   * @param {string} topLevelType Record from `EventConstants`.
	   * @param {string} handlerBaseName Event name (e.g. "click").
	   * @param {object} handle Element on which to attach listener.
	   * @return {?object} An object with a remove function which will forcefully
	   *                  remove the listener.
	   * @internal
	   */
	  trapCapturedEvent: function (topLevelType, handlerBaseName, handle) {
	    var element = handle;
	    if (!element) {
	      return null;
	    }
	    return EventListener.capture(element, handlerBaseName, ReactEventListener.dispatchEvent.bind(null, topLevelType));
	  },

	  monitorScrollValue: function (refresh) {
	    var callback = scrollValueMonitor.bind(null, refresh);
	    EventListener.listen(window, 'scroll', callback);
	  },

	  dispatchEvent: function (topLevelType, nativeEvent) {
	    if (!ReactEventListener._enabled) {
	      return;
	    }

	    var bookKeeping = TopLevelCallbackBookKeeping.getPooled(topLevelType, nativeEvent);
	    try {
	      // Event queue being processed in the same cycle allows
	      // `preventDefault`.
	      ReactUpdates.batchedUpdates(handleTopLevelImpl, bookKeeping);
	    } finally {
	      TopLevelCallbackBookKeeping.release(bookKeeping);
	    }
	  }
	};

	module.exports = ReactEventListener;

/***/ },
/* 141 */
/***/ function(module, exports, __webpack_require__) {

	/* WEBPACK VAR INJECTION */(function(process) {'use strict';

	/**
	 * Copyright (c) 2013-present, Facebook, Inc.
	 *
	 * Licensed under the Apache License, Version 2.0 (the "License");
	 * you may not use this file except in compliance with the License.
	 * You may obtain a copy of the License at
	 *
	 * http://www.apache.org/licenses/LICENSE-2.0
	 *
	 * Unless required by applicable law or agreed to in writing, software
	 * distributed under the License is distributed on an "AS IS" BASIS,
	 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
	 * See the License for the specific language governing permissions and
	 * limitations under the License.
	 *
	 * @typechecks
	 */

	var emptyFunction = __webpack_require__(13);

	/**
	 * Upstream version of event listener. Does not take into account specific
	 * nature of platform.
	 */
	var EventListener = {
	  /**
	   * Listen to DOM events during the bubble phase.
	   *
	   * @param {DOMEventTarget} target DOM element to register listener on.
	   * @param {string} eventType Event type, e.g. 'click' or 'mouseover'.
	   * @param {function} callback Callback function.
	   * @return {object} Object with a `remove` method.
	   */
	  listen: function listen(target, eventType, callback) {
	    if (target.addEventListener) {
	      target.addEventListener(eventType, callback, false);
	      return {
	        remove: function remove() {
	          target.removeEventListener(eventType, callback, false);
	        }
	      };
	    } else if (target.attachEvent) {
	      target.attachEvent('on' + eventType, callback);
	      return {
	        remove: function remove() {
	          target.detachEvent('on' + eventType, callback);
	        }
	      };
	    }
	  },

	  /**
	   * Listen to DOM events during the capture phase.
	   *
	   * @param {DOMEventTarget} target DOM element to register listener on.
	   * @param {string} eventType Event type, e.g. 'click' or 'mouseover'.
	   * @param {function} callback Callback function.
	   * @return {object} Object with a `remove` method.
	   */
	  capture: function capture(target, eventType, callback) {
	    if (target.addEventListener) {
	      target.addEventListener(eventType, callback, true);
	      return {
	        remove: function remove() {
	          target.removeEventListener(eventType, callback, true);
	        }
	      };
	    } else {
	      if (process.env.NODE_ENV !== 'production') {
	        console.error('Attempted to listen to events during the capture phase on a ' + 'browser that does not support the capture phase. Your application ' + 'will not receive some events.');
	      }
	      return {
	        remove: emptyFunction
	      };
	    }
	  },

	  registerDefault: function registerDefault() {}
	};

	module.exports = EventListener;
	/* WEBPACK VAR INJECTION */}.call(exports, __webpack_require__(4)))

/***/ },
/* 142 */
/***/ function(module, exports) {

	/**
	 * Copyright (c) 2013-present, Facebook, Inc.
	 * All rights reserved.
	 *
	 * This source code is licensed under the BSD-style license found in the
	 * LICENSE file in the root directory of this source tree. An additional grant
	 * of patent rights can be found in the PATENTS file in the same directory.
	 *
	 * @typechecks
	 */

	'use strict';

	/**
	 * Gets the scroll position of the supplied element or window.
	 *
	 * The return values are unbounded, unlike `getScrollPosition`. This means they
	 * may be negative or exceed the element boundaries (which is possible using
	 * inertial scrolling).
	 *
	 * @param {DOMWindow|DOMElement} scrollable
	 * @return {object} Map with `x` and `y` keys.
	 */

	function getUnboundedScrollPosition(scrollable) {
	  if (scrollable === window) {
	    return {
	      x: window.pageXOffset || document.documentElement.scrollLeft,
	      y: window.pageYOffset || document.documentElement.scrollTop
	    };
	  }
	  return {
	    x: scrollable.scrollLeft,
	    y: scrollable.scrollTop
	  };
	}

	module.exports = getUnboundedScrollPosition;

/***/ },
/* 143 */
/***/ function(module, exports, __webpack_require__) {

	/**
	 * Copyright 2013-present, Facebook, Inc.
	 * All rights reserved.
	 *
	 * This source code is licensed under the BSD-style license found in the
	 * LICENSE file in the root directory of this source tree. An additional grant
	 * of patent rights can be found in the PATENTS file in the same directory.
	 *
	 * @providesModule ReactInjection
	 */

	'use strict';

	var DOMProperty = __webpack_require__(37);
	var EventPluginHub = __webpack_require__(43);
	var EventPluginUtils = __webpack_require__(45);
	var ReactComponentEnvironment = __webpack_require__(121);
	var ReactClass = __webpack_require__(21);
	var ReactEmptyComponent = __webpack_require__(128);
	var ReactBrowserEventEmitter = __webpack_require__(110);
	var ReactHostComponent = __webpack_require__(129);
	var ReactUpdates = __webpack_require__(56);

	var ReactInjection = {
	  Component: ReactComponentEnvironment.injection,
	  Class: ReactClass.injection,
	  DOMProperty: DOMProperty.injection,
	  EmptyComponent: ReactEmptyComponent.injection,
	  EventPluginHub: EventPluginHub.injection,
	  EventPluginUtils: EventPluginUtils.injection,
	  EventEmitter: ReactBrowserEventEmitter.injection,
	  HostComponent: ReactHostComponent.injection,
	  Updates: ReactUpdates.injection
	};

	module.exports = ReactInjection;

/***/ },
/* 144 */
/***/ function(module, exports, __webpack_require__) {

	/* WEBPACK VAR INJECTION */(function(process) {/**
	 * Copyright 2013-present, Facebook, Inc.
	 * All rights reserved.
	 *
	 * This source code is licensed under the BSD-style license found in the
	 * LICENSE file in the root directory of this source tree. An additional grant
	 * of patent rights can be found in the PATENTS file in the same directory.
	 *
	 * @providesModule ReactReconcileTransaction
	 */

	'use strict';

	var _assign = __webpack_require__(5);

	var CallbackQueue = __webpack_require__(57);
	var PooledClass = __webpack_require__(7);
	var ReactBrowserEventEmitter = __webpack_require__(110);
	var ReactInputSelection = __webpack_require__(145);
	var ReactInstrumentation = __webpack_require__(62);
	var Transaction = __webpack_require__(68);
	var ReactUpdateQueue = __webpack_require__(133);

	/**
	 * Ensures that, when possible, the selection range (currently selected text
	 * input) is not disturbed by performing the transaction.
	 */
	var SELECTION_RESTORATION = {
	  /**
	   * @return {Selection} Selection information.
	   */
	  initialize: ReactInputSelection.getSelectionInformation,
	  /**
	   * @param {Selection} sel Selection information returned from `initialize`.
	   */
	  close: ReactInputSelection.restoreSelection
	};

	/**
	 * Suppresses events (blur/focus) that could be inadvertently dispatched due to
	 * high level DOM manipulations (like temporarily removing a text input from the
	 * DOM).
	 */
	var EVENT_SUPPRESSION = {
	  /**
	   * @return {boolean} The enabled status of `ReactBrowserEventEmitter` before
	   * the reconciliation.
	   */
	  initialize: function () {
	    var currentlyEnabled = ReactBrowserEventEmitter.isEnabled();
	    ReactBrowserEventEmitter.setEnabled(false);
	    return currentlyEnabled;
	  },

	  /**
	   * @param {boolean} previouslyEnabled Enabled status of
	   *   `ReactBrowserEventEmitter` before the reconciliation occurred. `close`
	   *   restores the previous value.
	   */
	  close: function (previouslyEnabled) {
	    ReactBrowserEventEmitter.setEnabled(previouslyEnabled);
	  }
	};

	/**
	 * Provides a queue for collecting `componentDidMount` and
	 * `componentDidUpdate` callbacks during the transaction.
	 */
	var ON_DOM_READY_QUEUEING = {
	  /**
	   * Initializes the internal `onDOMReady` queue.
	   */
	  initialize: function () {
	    this.reactMountReady.reset();
	  },

	  /**
	   * After DOM is flushed, invoke all registered `onDOMReady` callbacks.
	   */
	  close: function () {
	    this.reactMountReady.notifyAll();
	  }
	};

	/**
	 * Executed within the scope of the `Transaction` instance. Consider these as
	 * being member methods, but with an implied ordering while being isolated from
	 * each other.
	 */
	var TRANSACTION_WRAPPERS = [SELECTION_RESTORATION, EVENT_SUPPRESSION, ON_DOM_READY_QUEUEING];

	if (process.env.NODE_ENV !== 'production') {
	  TRANSACTION_WRAPPERS.push({
	    initialize: ReactInstrumentation.debugTool.onBeginFlush,
	    close: ReactInstrumentation.debugTool.onEndFlush
	  });
	}

	/**
	 * Currently:
	 * - The order that these are listed in the transaction is critical:
	 * - Suppresses events.
	 * - Restores selection range.
	 *
	 * Future:
	 * - Restore document/overflow scroll positions that were unintentionally
	 *   modified via DOM insertions above the top viewport boundary.
	 * - Implement/integrate with customized constraint based layout system and keep
	 *   track of which dimensions must be remeasured.
	 *
	 * @class ReactReconcileTransaction
	 */
	function ReactReconcileTransaction(useCreateElement) {
	  this.reinitializeTransaction();
	  // Only server-side rendering really needs this option (see
	  // `ReactServerRendering`), but server-side uses
	  // `ReactServerRenderingTransaction` instead. This option is here so that it's
	  // accessible and defaults to false when `ReactDOMComponent` and
	  // `ReactDOMTextComponent` checks it in `mountComponent`.`
	  this.renderToStaticMarkup = false;
	  this.reactMountReady = CallbackQueue.getPooled(null);
	  this.useCreateElement = useCreateElement;
	}

	var Mixin = {
	  /**
	   * @see Transaction
	   * @abstract
	   * @final
	   * @return {array<object>} List of operation wrap procedures.
	   *   TODO: convert to array<TransactionWrapper>
	   */
	  getTransactionWrappers: function () {
	    return TRANSACTION_WRAPPERS;
	  },

	  /**
	   * @return {object} The queue to collect `onDOMReady` callbacks with.
	   */
	  getReactMountReady: function () {
	    return this.reactMountReady;
	  },

	  /**
	   * @return {object} The queue to collect React async events.
	   */
	  getUpdateQueue: function () {
	    return ReactUpdateQueue;
	  },

	  /**
	   * Save current transaction state -- if the return value from this method is
	   * passed to `rollback`, the transaction will be reset to that state.
	   */
	  checkpoint: function () {
	    // reactMountReady is the our only stateful wrapper
	    return this.reactMountReady.checkpoint();
	  },

	  rollback: function (checkpoint) {
	    this.reactMountReady.rollback(checkpoint);
	  },

	  /**
	   * `PooledClass` looks for this, and will invoke this before allowing this
	   * instance to be reused.
	   */
	  destructor: function () {
	    CallbackQueue.release(this.reactMountReady);
	    this.reactMountReady = null;
	  }
	};

	_assign(ReactReconcileTransaction.prototype, Transaction.Mixin, Mixin);

	PooledClass.addPoolingTo(ReactReconcileTransaction);

	module.exports = ReactReconcileTransaction;
	/* WEBPACK VAR INJECTION */}.call(exports, __webpack_require__(4)))

/***/ },
/* 145 */
/***/ function(module, exports, __webpack_require__) {

	/**
	 * Copyright 2013-present, Facebook, Inc.
	 * All rights reserved.
	 *
	 * This source code is licensed under the BSD-style license found in the
	 * LICENSE file in the root directory of this source tree. An additional grant
	 * of patent rights can be found in the PATENTS file in the same directory.
	 *
	 * @providesModule ReactInputSelection
	 */

	'use strict';

	var ReactDOMSelection = __webpack_require__(146);

	var containsNode = __webpack_require__(148);
	var focusNode = __webpack_require__(95);
	var getActiveElement = __webpack_require__(151);

	function isInDocument(node) {
	  return containsNode(document.documentElement, node);
	}

	/**
	 * @ReactInputSelection: React input selection module. Based on Selection.js,
	 * but modified to be suitable for react and has a couple of bug fixes (doesn't
	 * assume buttons have range selections allowed).
	 * Input selection module for React.
	 */
	var ReactInputSelection = {

	  hasSelectionCapabilities: function (elem) {
	    var nodeName = elem && elem.nodeName && elem.nodeName.toLowerCase();
	    return nodeName && (nodeName === 'input' && elem.type === 'text' || nodeName === 'textarea' || elem.contentEditable === 'true');
	  },

	  getSelectionInformation: function () {
	    var focusedElem = getActiveElement();
	    return {
	      focusedElem: focusedElem,
	      selectionRange: ReactInputSelection.hasSelectionCapabilities(focusedElem) ? ReactInputSelection.getSelection(focusedElem) : null
	    };
	  },

	  /**
	   * @restoreSelection: If any selection information was potentially lost,
	   * restore it. This is useful when performing operations that could remove dom
	   * nodes and place them back in, resulting in focus being lost.
	   */
	  restoreSelection: function (priorSelectionInformation) {
	    var curFocusedElem = getActiveElement();
	    var priorFocusedElem = priorSelectionInformation.focusedElem;
	    var priorSelectionRange = priorSelectionInformation.selectionRange;
	    if (curFocusedElem !== priorFocusedElem && isInDocument(priorFocusedElem)) {
	      if (ReactInputSelection.hasSelectionCapabilities(priorFocusedElem)) {
	        ReactInputSelection.setSelection(priorFocusedElem, priorSelectionRange);
	      }
	      focusNode(priorFocusedElem);
	    }
	  },

	  /**
	   * @getSelection: Gets the selection bounds of a focused textarea, input or
	   * contentEditable node.
	   * -@input: Look up selection bounds of this input
	   * -@return {start: selectionStart, end: selectionEnd}
	   */
	  getSelection: function (input) {
	    var selection;

	    if ('selectionStart' in input) {
	      // Modern browser with input or textarea.
	      selection = {
	        start: input.selectionStart,
	        end: input.selectionEnd
	      };
	    } else if (document.selection && input.nodeName && input.nodeName.toLowerCase() === 'input') {
	      // IE8 input.
	      var range = document.selection.createRange();
	      // There can only be one selection per document in IE, so it must
	      // be in our element.
	      if (range.parentElement() === input) {
	        selection = {
	          start: -range.moveStart('character', -input.value.length),
	          end: -range.moveEnd('character', -input.value.length)
	        };
	      }
	    } else {
	      // Content editable or old IE textarea.
	      selection = ReactDOMSelection.getOffsets(input);
	    }

	    return selection || { start: 0, end: 0 };
	  },

	  /**
	   * @setSelection: Sets the selection bounds of a textarea or input and focuses
	   * the input.
	   * -@input     Set selection bounds of this input or textarea
	   * -@offsets   Object of same form that is returned from get*
	   */
	  setSelection: function (input, offsets) {
	    var start = offsets.start;
	    var end = offsets.end;
	    if (end === undefined) {
	      end = start;
	    }

	    if ('selectionStart' in input) {
	      input.selectionStart = start;
	      input.selectionEnd = Math.min(end, input.value.length);
	    } else if (document.selection && input.nodeName && input.nodeName.toLowerCase() === 'input') {
	      var range = input.createTextRange();
	      range.collapse(true);
	      range.moveStart('character', start);
	      range.moveEnd('character', end - start);
	      range.select();
	    } else {
	      ReactDOMSelection.setOffsets(input, offsets);
	    }
	  }
	};

	module.exports = ReactInputSelection;

/***/ },
/* 146 */
/***/ function(module, exports, __webpack_require__) {

	/**
	 * Copyright 2013-present, Facebook, Inc.
	 * All rights reserved.
	 *
	 * This source code is licensed under the BSD-style license found in the
	 * LICENSE file in the root directory of this source tree. An additional grant
	 * of patent rights can be found in the PATENTS file in the same directory.
	 *
	 * @providesModule ReactDOMSelection
	 */

	'use strict';

	var ExecutionEnvironment = __webpack_require__(49);

	var getNodeForCharacterOffset = __webpack_require__(147);
	var getTextContentAccessor = __webpack_require__(51);

	/**
	 * While `isCollapsed` is available on the Selection object and `collapsed`
	 * is available on the Range object, IE11 sometimes gets them wrong.
	 * If the anchor/focus nodes and offsets are the same, the range is collapsed.
	 */
	function isCollapsed(anchorNode, anchorOffset, focusNode, focusOffset) {
	  return anchorNode === focusNode && anchorOffset === focusOffset;
	}

	/**
	 * Get the appropriate anchor and focus node/offset pairs for IE.
	 *
	 * The catch here is that IE's selection API doesn't provide information
	 * about whether the selection is forward or backward, so we have to
	 * behave as though it's always forward.
	 *
	 * IE text differs from modern selection in that it behaves as though
	 * block elements end with a new line. This means character offsets will
	 * differ between the two APIs.
	 *
	 * @param {DOMElement} node
	 * @return {object}
	 */
	function getIEOffsets(node) {
	  var selection = document.selection;
	  var selectedRange = selection.createRange();
	  var selectedLength = selectedRange.text.length;

	  // Duplicate selection so we can move range without breaking user selection.
	  var fromStart = selectedRange.duplicate();
	  fromStart.moveToElementText(node);
	  fromStart.setEndPoint('EndToStart', selectedRange);

	  var startOffset = fromStart.text.length;
	  var endOffset = startOffset + selectedLength;

	  return {
	    start: startOffset,
	    end: endOffset
	  };
	}

	/**
	 * @param {DOMElement} node
	 * @return {?object}
	 */
	function getModernOffsets(node) {
	  var selection = window.getSelection && window.getSelection();

	  if (!selection || selection.rangeCount === 0) {
	    return null;
	  }

	  var anchorNode = selection.anchorNode;
	  var anchorOffset = selection.anchorOffset;
	  var focusNode = selection.focusNode;
	  var focusOffset = selection.focusOffset;

	  var currentRange = selection.getRangeAt(0);

	  // In Firefox, range.startContainer and range.endContainer can be "anonymous
	  // divs", e.g. the up/down buttons on an <input type="number">. Anonymous
	  // divs do not seem to expose properties, triggering a "Permission denied
	  // error" if any of its properties are accessed. The only seemingly possible
	  // way to avoid erroring is to access a property that typically works for
	  // non-anonymous divs and catch any error that may otherwise arise. See
	  // https://bugzilla.mozilla.org/show_bug.cgi?id=208427
	  try {
	    /* eslint-disable no-unused-expressions */
	    currentRange.startContainer.nodeType;
	    currentRange.endContainer.nodeType;
	    /* eslint-enable no-unused-expressions */
	  } catch (e) {
	    return null;
	  }

	  // If the node and offset values are the same, the selection is collapsed.
	  // `Selection.isCollapsed` is available natively, but IE sometimes gets
	  // this value wrong.
	  var isSelectionCollapsed = isCollapsed(selection.anchorNode, selection.anchorOffset, selection.focusNode, selection.focusOffset);

	  var rangeLength = isSelectionCollapsed ? 0 : currentRange.toString().length;

	  var tempRange = currentRange.cloneRange();
	  tempRange.selectNodeContents(node);
	  tempRange.setEnd(currentRange.startContainer, currentRange.startOffset);

	  var isTempRangeCollapsed = isCollapsed(tempRange.startContainer, tempRange.startOffset, tempRange.endContainer, tempRange.endOffset);

	  var start = isTempRangeCollapsed ? 0 : tempRange.toString().length;
	  var end = start + rangeLength;

	  // Detect whether the selection is backward.
	  var detectionRange = document.createRange();
	  detectionRange.setStart(anchorNode, anchorOffset);
	  detectionRange.setEnd(focusNode, focusOffset);
	  var isBackward = detectionRange.collapsed;

	  return {
	    start: isBackward ? end : start,
	    end: isBackward ? start : end
	  };
	}

	/**
	 * @param {DOMElement|DOMTextNode} node
	 * @param {object} offsets
	 */
	function setIEOffsets(node, offsets) {
	  var range = document.selection.createRange().duplicate();
	  var start, end;

	  if (offsets.end === undefined) {
	    start = offsets.start;
	    end = start;
	  } else if (offsets.start > offsets.end) {
	    start = offsets.end;
	    end = offsets.start;
	  } else {
	    start = offsets.start;
	    end = offsets.end;
	  }

	  range.moveToElementText(node);
	  range.moveStart('character', start);
	  range.setEndPoint('EndToStart', range);
	  range.moveEnd('character', end - start);
	  range.select();
	}

	/**
	 * In modern non-IE browsers, we can support both forward and backward
	 * selections.
	 *
	 * Note: IE10+ supports the Selection object, but it does not support
	 * the `extend` method, which means that even in modern IE, it's not possible
	 * to programmatically create a backward selection. Thus, for all IE
	 * versions, we use the old IE API to create our selections.
	 *
	 * @param {DOMElement|DOMTextNode} node
	 * @param {object} offsets
	 */
	function setModernOffsets(node, offsets) {
	  if (!window.getSelection) {
	    return;
	  }

	  var selection = window.getSelection();
	  var length = node[getTextContentAccessor()].length;
	  var start = Math.min(offsets.start, length);
	  var end = offsets.end === undefined ? start : Math.min(offsets.end, length);

	  // IE 11 uses modern selection, but doesn't support the extend method.
	  // Flip backward selections, so we can set with a single range.
	  if (!selection.extend && start > end) {
	    var temp = end;
	    end = start;
	    start = temp;
	  }

	  var startMarker = getNodeForCharacterOffset(node, start);
	  var endMarker = getNodeForCharacterOffset(node, end);

	  if (startMarker && endMarker) {
	    var range = document.createRange();
	    range.setStart(startMarker.node, startMarker.offset);
	    selection.removeAllRanges();

	    if (start > end) {
	      selection.addRange(range);
	      selection.extend(endMarker.node, endMarker.offset);
	    } else {
	      range.setEnd(endMarker.node, endMarker.offset);
	      selection.addRange(range);
	    }
	  }
	}

	var useIEOffsets = ExecutionEnvironment.canUseDOM && 'selection' in document && !('getSelection' in window);

	var ReactDOMSelection = {
	  /**
	   * @param {DOMElement} node
	   */
	  getOffsets: useIEOffsets ? getIEOffsets : getModernOffsets,

	  /**
	   * @param {DOMElement|DOMTextNode} node
	   * @param {object} offsets
	   */
	  setOffsets: useIEOffsets ? setIEOffsets : setModernOffsets
	};

	module.exports = ReactDOMSelection;

/***/ },
/* 147 */
/***/ function(module, exports) {

	/**
	 * Copyright 2013-present, Facebook, Inc.
	 * All rights reserved.
	 *
	 * This source code is licensed under the BSD-style license found in the
	 * LICENSE file in the root directory of this source tree. An additional grant
	 * of patent rights can be found in the PATENTS file in the same directory.
	 *
	 * @providesModule getNodeForCharacterOffset
	 */

	'use strict';

	/**
	 * Given any node return the first leaf node without children.
	 *
	 * @param {DOMElement|DOMTextNode} node
	 * @return {DOMElement|DOMTextNode}
	 */

	function getLeafNode(node) {
	  while (node && node.firstChild) {
	    node = node.firstChild;
	  }
	  return node;
	}

	/**
	 * Get the next sibling within a container. This will walk up the
	 * DOM if a node's siblings have been exhausted.
	 *
	 * @param {DOMElement|DOMTextNode} node
	 * @return {?DOMElement|DOMTextNode}
	 */
	function getSiblingNode(node) {
	  while (node) {
	    if (node.nextSibling) {
	      return node.nextSibling;
	    }
	    node = node.parentNode;
	  }
	}

	/**
	 * Get object describing the nodes which contain characters at offset.
	 *
	 * @param {DOMElement|DOMTextNode} root
	 * @param {number} offset
	 * @return {?object}
	 */
	function getNodeForCharacterOffset(root, offset) {
	  var node = getLeafNode(root);
	  var nodeStart = 0;
	  var nodeEnd = 0;

	  while (node) {
	    if (node.nodeType === 3) {
	      nodeEnd = nodeStart + node.textContent.length;

	      if (nodeStart <= offset && nodeEnd >= offset) {
	        return {
	          node: node,
	          offset: offset - nodeStart
	        };
	      }

	      nodeStart = nodeEnd;
	    }

	    node = getLeafNode(getSiblingNode(node));
	  }
	}

	module.exports = getNodeForCharacterOffset;

/***/ },
/* 148 */
/***/ function(module, exports, __webpack_require__) {

	'use strict';

	/**
	 * Copyright (c) 2013-present, Facebook, Inc.
	 * All rights reserved.
	 *
	 * This source code is licensed under the BSD-style license found in the
	 * LICENSE file in the root directory of this source tree. An additional grant
	 * of patent rights can be found in the PATENTS file in the same directory.
	 *
	 * 
	 */

	var isTextNode = __webpack_require__(149);

	/*eslint-disable no-bitwise */

	/**
	 * Checks if a given DOM node contains or is another DOM node.
	 */
	function containsNode(outerNode, innerNode) {
	  if (!outerNode || !innerNode) {
	    return false;
	  } else if (outerNode === innerNode) {
	    return true;
	  } else if (isTextNode(outerNode)) {
	    return false;
	  } else if (isTextNode(innerNode)) {
	    return containsNode(outerNode, innerNode.parentNode);
	  } else if ('contains' in outerNode) {
	    return outerNode.contains(innerNode);
	  } else if (outerNode.compareDocumentPosition) {
	    return !!(outerNode.compareDocumentPosition(innerNode) & 16);
	  } else {
	    return false;
	  }
	}

	module.exports = containsNode;

/***/ },
/* 149 */
/***/ function(module, exports, __webpack_require__) {

	'use strict';

	/**
	 * Copyright (c) 2013-present, Facebook, Inc.
	 * All rights reserved.
	 *
	 * This source code is licensed under the BSD-style license found in the
	 * LICENSE file in the root directory of this source tree. An additional grant
	 * of patent rights can be found in the PATENTS file in the same directory.
	 *
	 * @typechecks
	 */

	var isNode = __webpack_require__(150);

	/**
	 * @param {*} object The object to check.
	 * @return {boolean} Whether or not the object is a DOM text node.
	 */
	function isTextNode(object) {
	  return isNode(object) && object.nodeType == 3;
	}

	module.exports = isTextNode;

/***/ },
/* 150 */
/***/ function(module, exports) {

	'use strict';

	/**
	 * Copyright (c) 2013-present, Facebook, Inc.
	 * All rights reserved.
	 *
	 * This source code is licensed under the BSD-style license found in the
	 * LICENSE file in the root directory of this source tree. An additional grant
	 * of patent rights can be found in the PATENTS file in the same directory.
	 *
	 * @typechecks
	 */

	/**
	 * @param {*} object The object to check.
	 * @return {boolean} Whether or not the object is a DOM node.
	 */
	function isNode(object) {
	  return !!(object && (typeof Node === 'function' ? object instanceof Node : typeof object === 'object' && typeof object.nodeType === 'number' && typeof object.nodeName === 'string'));
	}

	module.exports = isNode;

/***/ },
/* 151 */
/***/ function(module, exports) {

	'use strict';

	/**
	 * Copyright (c) 2013-present, Facebook, Inc.
	 * All rights reserved.
	 *
	 * This source code is licensed under the BSD-style license found in the
	 * LICENSE file in the root directory of this source tree. An additional grant
	 * of patent rights can be found in the PATENTS file in the same directory.
	 *
	 * @typechecks
	 */

	/* eslint-disable fb-www/typeof-undefined */

	/**
	 * Same as document.activeElement but wraps in a try-catch block. In IE it is
	 * not safe to call document.activeElement if there is nothing focused.
	 *
	 * The activeElement will be null only if the document or document body is not
	 * yet defined.
	 */
	function getActiveElement() /*?DOMElement*/{
	  if (typeof document === 'undefined') {
	    return null;
	  }
	  try {
	    return document.activeElement || document.body;
	  } catch (e) {
	    return document.body;
	  }
	}

	module.exports = getActiveElement;

/***/ },
/* 152 */
/***/ function(module, exports) {

	/**
	 * Copyright 2013-present, Facebook, Inc.
	 * All rights reserved.
	 *
	 * This source code is licensed under the BSD-style license found in the
	 * LICENSE file in the root directory of this source tree. An additional grant
	 * of patent rights can be found in the PATENTS file in the same directory.
	 *
	 * @providesModule SVGDOMPropertyConfig
	 */

	'use strict';

	var NS = {
	  xlink: 'http://www.w3.org/1999/xlink',
	  xml: 'http://www.w3.org/XML/1998/namespace'
	};

	// We use attributes for everything SVG so let's avoid some duplication and run
	// code instead.
	// The following are all specified in the HTML config already so we exclude here.
	// - class (as className)
	// - color
	// - height
	// - id
	// - lang
	// - max
	// - media
	// - method
	// - min
	// - name
	// - style
	// - target
	// - type
	// - width
	var ATTRS = {
	  accentHeight: 'accent-height',
	  accumulate: 0,
	  additive: 0,
	  alignmentBaseline: 'alignment-baseline',
	  allowReorder: 'allowReorder',
	  alphabetic: 0,
	  amplitude: 0,
	  arabicForm: 'arabic-form',
	  ascent: 0,
	  attributeName: 'attributeName',
	  attributeType: 'attributeType',
	  autoReverse: 'autoReverse',
	  azimuth: 0,
	  baseFrequency: 'baseFrequency',
	  baseProfile: 'baseProfile',
	  baselineShift: 'baseline-shift',
	  bbox: 0,
	  begin: 0,
	  bias: 0,
	  by: 0,
	  calcMode: 'calcMode',
	  capHeight: 'cap-height',
	  clip: 0,
	  clipPath: 'clip-path',
	  clipRule: 'clip-rule',
	  clipPathUnits: 'clipPathUnits',
	  colorInterpolation: 'color-interpolation',
	  colorInterpolationFilters: 'color-interpolation-filters',
	  colorProfile: 'color-profile',
	  colorRendering: 'color-rendering',
	  contentScriptType: 'contentScriptType',
	  contentStyleType: 'contentStyleType',
	  cursor: 0,
	  cx: 0,
	  cy: 0,
	  d: 0,
	  decelerate: 0,
	  descent: 0,
	  diffuseConstant: 'diffuseConstant',
	  direction: 0,
	  display: 0,
	  divisor: 0,
	  dominantBaseline: 'dominant-baseline',
	  dur: 0,
	  dx: 0,
	  dy: 0,
	  edgeMode: 'edgeMode',
	  elevation: 0,
	  enableBackground: 'enable-background',
	  end: 0,
	  exponent: 0,
	  externalResourcesRequired: 'externalResourcesRequired',
	  fill: 0,
	  fillOpacity: 'fill-opacity',
	  fillRule: 'fill-rule',
	  filter: 0,
	  filterRes: 'filterRes',
	  filterUnits: 'filterUnits',
	  floodColor: 'flood-color',
	  floodOpacity: 'flood-opacity',
	  focusable: 0,
	  fontFamily: 'font-family',
	  fontSize: 'font-size',
	  fontSizeAdjust: 'font-size-adjust',
	  fontStretch: 'font-stretch',
	  fontStyle: 'font-style',
	  fontVariant: 'font-variant',
	  fontWeight: 'font-weight',
	  format: 0,
	  from: 0,
	  fx: 0,
	  fy: 0,
	  g1: 0,
	  g2: 0,
	  glyphName: 'glyph-name',
	  glyphOrientationHorizontal: 'glyph-orientation-horizontal',
	  glyphOrientationVertical: 'glyph-orientation-vertical',
	  glyphRef: 'glyphRef',
	  gradientTransform: 'gradientTransform',
	  gradientUnits: 'gradientUnits',
	  hanging: 0,
	  horizAdvX: 'horiz-adv-x',
	  horizOriginX: 'horiz-origin-x',
	  ideographic: 0,
	  imageRendering: 'image-rendering',
	  'in': 0,
	  in2: 0,
	  intercept: 0,
	  k: 0,
	  k1: 0,
	  k2: 0,
	  k3: 0,
	  k4: 0,
	  kernelMatrix: 'kernelMatrix',
	  kernelUnitLength: 'kernelUnitLength',
	  kerning: 0,
	  keyPoints: 'keyPoints',
	  keySplines: 'keySplines',
	  keyTimes: 'keyTimes',
	  lengthAdjust: 'lengthAdjust',
	  letterSpacing: 'letter-spacing',
	  lightingColor: 'lighting-color',
	  limitingConeAngle: 'limitingConeAngle',
	  local: 0,
	  markerEnd: 'marker-end',
	  markerMid: 'marker-mid',
	  markerStart: 'marker-start',
	  markerHeight: 'markerHeight',
	  markerUnits: 'markerUnits',
	  markerWidth: 'markerWidth',
	  mask: 0,
	  maskContentUnits: 'maskContentUnits',
	  maskUnits: 'maskUnits',
	  mathematical: 0,
	  mode: 0,
	  numOctaves: 'numOctaves',
	  offset: 0,
	  opacity: 0,
	  operator: 0,
	  order: 0,
	  orient: 0,
	  orientation: 0,
	  origin: 0,
	  overflow: 0,
	  overlinePosition: 'overline-position',
	  overlineThickness: 'overline-thickness',
	  paintOrder: 'paint-order',
	  panose1: 'panose-1',
	  pathLength: 'pathLength',
	  patternContentUnits: 'patternContentUnits',
	  patternTransform: 'patternTransform',
	  patternUnits: 'patternUnits',
	  pointerEvents: 'pointer-events',
	  points: 0,
	  pointsAtX: 'pointsAtX',
	  pointsAtY: 'pointsAtY',
	  pointsAtZ: 'pointsAtZ',
	  preserveAlpha: 'preserveAlpha',
	  preserveAspectRatio: 'preserveAspectRatio',
	  primitiveUnits: 'primitiveUnits',
	  r: 0,
	  radius: 0,
	  refX: 'refX',
	  refY: 'refY',
	  renderingIntent: 'rendering-intent',
	  repeatCount: 'repeatCount',
	  repeatDur: 'repeatDur',
	  requiredExtensions: 'requiredExtensions',
	  requiredFeatures: 'requiredFeatures',
	  restart: 0,
	  result: 0,
	  rotate: 0,
	  rx: 0,
	  ry: 0,
	  scale: 0,
	  seed: 0,
	  shapeRendering: 'shape-rendering',
	  slope: 0,
	  spacing: 0,
	  specularConstant: 'specularConstant',
	  specularExponent: 'specularExponent',
	  speed: 0,
	  spreadMethod: 'spreadMethod',
	  startOffset: 'startOffset',
	  stdDeviation: 'stdDeviation',
	  stemh: 0,
	  stemv: 0,
	  stitchTiles: 'stitchTiles',
	  stopColor: 'stop-color',
	  stopOpacity: 'stop-opacity',
	  strikethroughPosition: 'strikethrough-position',
	  strikethroughThickness: 'strikethrough-thickness',
	  string: 0,
	  stroke: 0,
	  strokeDasharray: 'stroke-dasharray',
	  strokeDashoffset: 'stroke-dashoffset',
	  strokeLinecap: 'stroke-linecap',
	  strokeLinejoin: 'stroke-linejoin',
	  strokeMiterlimit: 'stroke-miterlimit',
	  strokeOpacity: 'stroke-opacity',
	  strokeWidth: 'stroke-width',
	  surfaceScale: 'surfaceScale',
	  systemLanguage: 'systemLanguage',
	  tableValues: 'tableValues',
	  targetX: 'targetX',
	  targetY: 'targetY',
	  textAnchor: 'text-anchor',
	  textDecoration: 'text-decoration',
	  textRendering: 'text-rendering',
	  textLength: 'textLength',
	  to: 0,
	  transform: 0,
	  u1: 0,
	  u2: 0,
	  underlinePosition: 'underline-position',
	  underlineThickness: 'underline-thickness',
	  unicode: 0,
	  unicodeBidi: 'unicode-bidi',
	  unicodeRange: 'unicode-range',
	  unitsPerEm: 'units-per-em',
	  vAlphabetic: 'v-alphabetic',
	  vHanging: 'v-hanging',
	  vIdeographic: 'v-ideographic',
	  vMathematical: 'v-mathematical',
	  values: 0,
	  vectorEffect: 'vector-effect',
	  version: 0,
	  vertAdvY: 'vert-adv-y',
	  vertOriginX: 'vert-origin-x',
	  vertOriginY: 'vert-origin-y',
	  viewBox: 'viewBox',
	  viewTarget: 'viewTarget',
	  visibility: 0,
	  widths: 0,
	  wordSpacing: 'word-spacing',
	  writingMode: 'writing-mode',
	  x: 0,
	  xHeight: 'x-height',
	  x1: 0,
	  x2: 0,
	  xChannelSelector: 'xChannelSelector',
	  xlinkActuate: 'xlink:actuate',
	  xlinkArcrole: 'xlink:arcrole',
	  xlinkHref: 'xlink:href',
	  xlinkRole: 'xlink:role',
	  xlinkShow: 'xlink:show',
	  xlinkTitle: 'xlink:title',
	  xlinkType: 'xlink:type',
	  xmlBase: 'xml:base',
	  xmlLang: 'xml:lang',
	  xmlSpace: 'xml:space',
	  y: 0,
	  y1: 0,
	  y2: 0,
	  yChannelSelector: 'yChannelSelector',
	  z: 0,
	  zoomAndPan: 'zoomAndPan'
	};

	var SVGDOMPropertyConfig = {
	  Properties: {},
	  DOMAttributeNamespaces: {
	    xlinkActuate: NS.xlink,
	    xlinkArcrole: NS.xlink,
	    xlinkHref: NS.xlink,
	    xlinkRole: NS.xlink,
	    xlinkShow: NS.xlink,
	    xlinkTitle: NS.xlink,
	    xlinkType: NS.xlink,
	    xmlBase: NS.xml,
	    xmlLang: NS.xml,
	    xmlSpace: NS.xml
	  },
	  DOMAttributeNames: {}
	};

	Object.keys(ATTRS).forEach(function (key) {
	  SVGDOMPropertyConfig.Properties[key] = 0;
	  if (ATTRS[key]) {
	    SVGDOMPropertyConfig.DOMAttributeNames[key] = ATTRS[key];
	  }
	});

	module.exports = SVGDOMPropertyConfig;

/***/ },
/* 153 */
/***/ function(module, exports, __webpack_require__) {

	/**
	 * Copyright 2013-present, Facebook, Inc.
	 * All rights reserved.
	 *
	 * This source code is licensed under the BSD-style license found in the
	 * LICENSE file in the root directory of this source tree. An additional grant
	 * of patent rights can be found in the PATENTS file in the same directory.
	 *
	 * @providesModule SelectEventPlugin
	 */

	'use strict';

	var EventConstants = __webpack_require__(41);
	var EventPropagators = __webpack_require__(42);
	var ExecutionEnvironment = __webpack_require__(49);
	var ReactDOMComponentTree = __webpack_require__(36);
	var ReactInputSelection = __webpack_require__(145);
	var SyntheticEvent = __webpack_require__(53);

	var getActiveElement = __webpack_require__(151);
	var isTextInputElement = __webpack_require__(71);
	var keyOf = __webpack_require__(25);
	var shallowEqual = __webpack_require__(134);

	var topLevelTypes = EventConstants.topLevelTypes;

	var skipSelectionChangeEvent = ExecutionEnvironment.canUseDOM && 'documentMode' in document && document.documentMode <= 11;

	var eventTypes = {
	  select: {
	    phasedRegistrationNames: {
	      bubbled: keyOf({ onSelect: null }),
	      captured: keyOf({ onSelectCapture: null })
	    },
	    dependencies: [topLevelTypes.topBlur, topLevelTypes.topContextMenu, topLevelTypes.topFocus, topLevelTypes.topKeyDown, topLevelTypes.topMouseDown, topLevelTypes.topMouseUp, topLevelTypes.topSelectionChange]
	  }
	};

	var activeElement = null;
	var activeElementInst = null;
	var lastSelection = null;
	var mouseDown = false;

	// Track whether a listener exists for this plugin. If none exist, we do
	// not extract events. See #3639.
	var hasListener = false;
	var ON_SELECT_KEY = keyOf({ onSelect: null });

	/**
	 * Get an object which is a unique representation of the current selection.
	 *
	 * The return value will not be consistent across nodes or browsers, but
	 * two identical selections on the same node will return identical objects.
	 *
	 * @param {DOMElement} node
	 * @return {object}
	 */
	function getSelection(node) {
	  if ('selectionStart' in node && ReactInputSelection.hasSelectionCapabilities(node)) {
	    return {
	      start: node.selectionStart,
	      end: node.selectionEnd
	    };
	  } else if (window.getSelection) {
	    var selection = window.getSelection();
	    return {
	      anchorNode: selection.anchorNode,
	      anchorOffset: selection.anchorOffset,
	      focusNode: selection.focusNode,
	      focusOffset: selection.focusOffset
	    };
	  } else if (document.selection) {
	    var range = document.selection.createRange();
	    return {
	      parentElement: range.parentElement(),
	      text: range.text,
	      top: range.boundingTop,
	      left: range.boundingLeft
	    };
	  }
	}

	/**
	 * Poll selection to see whether it's changed.
	 *
	 * @param {object} nativeEvent
	 * @return {?SyntheticEvent}
	 */
	function constructSelectEvent(nativeEvent, nativeEventTarget) {
	  // Ensure we have the right element, and that the user is not dragging a
	  // selection (this matches native `select` event behavior). In HTML5, select
	  // fires only on input and textarea thus if there's no focused element we
	  // won't dispatch.
	  if (mouseDown || activeElement == null || activeElement !== getActiveElement()) {
	    return null;
	  }

	  // Only fire when selection has actually changed.
	  var currentSelection = getSelection(activeElement);
	  if (!lastSelection || !shallowEqual(lastSelection, currentSelection)) {
	    lastSelection = currentSelection;

	    var syntheticEvent = SyntheticEvent.getPooled(eventTypes.select, activeElementInst, nativeEvent, nativeEventTarget);

	    syntheticEvent.type = 'select';
	    syntheticEvent.target = activeElement;

	    EventPropagators.accumulateTwoPhaseDispatches(syntheticEvent);

	    return syntheticEvent;
	  }

	  return null;
	}

	/**
	 * This plugin creates an `onSelect` event that normalizes select events
	 * across form elements.
	 *
	 * Supported elements are:
	 * - input (see `isTextInputElement`)
	 * - textarea
	 * - contentEditable
	 *
	 * This differs from native browser implementations in the following ways:
	 * - Fires on contentEditable fields as well as inputs.
	 * - Fires for collapsed selection.
	 * - Fires after user input.
	 */
	var SelectEventPlugin = {

	  eventTypes: eventTypes,

	  extractEvents: function (topLevelType, targetInst, nativeEvent, nativeEventTarget) {
	    if (!hasListener) {
	      return null;
	    }

	    var targetNode = targetInst ? ReactDOMComponentTree.getNodeFromInstance(targetInst) : window;

	    switch (topLevelType) {
	      // Track the input node that has focus.
	      case topLevelTypes.topFocus:
	        if (isTextInputElement(targetNode) || targetNode.contentEditable === 'true') {
	          activeElement = targetNode;
	          activeElementInst = targetInst;
	          lastSelection = null;
	        }
	        break;
	      case topLevelTypes.topBlur:
	        activeElement = null;
	        activeElementInst = null;
	        lastSelection = null;
	        break;

	      // Don't fire the event while the user is dragging. This matches the
	      // semantics of the native select event.
	      case topLevelTypes.topMouseDown:
	        mouseDown = true;
	        break;
	      case topLevelTypes.topContextMenu:
	      case topLevelTypes.topMouseUp:
	        mouseDown = false;
	        return constructSelectEvent(nativeEvent, nativeEventTarget);

	      // Chrome and IE fire non-standard event when selection is changed (and
	      // sometimes when it hasn't). IE's event fires out of order with respect
	      // to key and input events on deletion, so we discard it.
	      //
	      // Firefox doesn't support selectionchange, so check selection status
	      // after each key entry. The selection changes after keydown and before
	      // keyup, but we check on keydown as well in the case of holding down a
	      // key, when multiple keydown events are fired but only one keyup is.
	      // This is also our approach for IE handling, for the reason above.
	      case topLevelTypes.topSelectionChange:
	        if (skipSelectionChangeEvent) {
	          break;
	        }
	      // falls through
	      case topLevelTypes.topKeyDown:
	      case topLevelTypes.topKeyUp:
	        return constructSelectEvent(nativeEvent, nativeEventTarget);
	    }

	    return null;
	  },

	  didPutListener: function (inst, registrationName, listener) {
	    if (registrationName === ON_SELECT_KEY) {
	      hasListener = true;
	    }
	  }
	};

	module.exports = SelectEventPlugin;

/***/ },
/* 154 */
/***/ function(module, exports, __webpack_require__) {

	/* WEBPACK VAR INJECTION */(function(process) {/**
	 * Copyright 2013-present, Facebook, Inc.
	 * All rights reserved.
	 *
	 * This source code is licensed under the BSD-style license found in the
	 * LICENSE file in the root directory of this source tree. An additional grant
	 * of patent rights can be found in the PATENTS file in the same directory.
	 *
	 * @providesModule SimpleEventPlugin
	 */

	'use strict';

	var _prodInvariant = __webpack_require__(8);

	var EventConstants = __webpack_require__(41);
	var EventListener = __webpack_require__(141);
	var EventPropagators = __webpack_require__(42);
	var ReactDOMComponentTree = __webpack_require__(36);
	var SyntheticAnimationEvent = __webpack_require__(155);
	var SyntheticClipboardEvent = __webpack_require__(156);
	var SyntheticEvent = __webpack_require__(53);
	var SyntheticFocusEvent = __webpack_require__(157);
	var SyntheticKeyboardEvent = __webpack_require__(158);
	var SyntheticMouseEvent = __webpack_require__(74);
	var SyntheticDragEvent = __webpack_require__(161);
	var SyntheticTouchEvent = __webpack_require__(162);
	var SyntheticTransitionEvent = __webpack_require__(163);
	var SyntheticUIEvent = __webpack_require__(75);
	var SyntheticWheelEvent = __webpack_require__(164);

	var emptyFunction = __webpack_require__(13);
	var getEventCharCode = __webpack_require__(159);
	var invariant = __webpack_require__(9);
	var keyOf = __webpack_require__(25);

	var topLevelTypes = EventConstants.topLevelTypes;

	var eventTypes = {
	  abort: {
	    phasedRegistrationNames: {
	      bubbled: keyOf({ onAbort: true }),
	      captured: keyOf({ onAbortCapture: true })
	    }
	  },
	  animationEnd: {
	    phasedRegistrationNames: {
	      bubbled: keyOf({ onAnimationEnd: true }),
	      captured: keyOf({ onAnimationEndCapture: true })
	    }
	  },
	  animationIteration: {
	    phasedRegistrationNames: {
	      bubbled: keyOf({ onAnimationIteration: true }),
	      captured: keyOf({ onAnimationIterationCapture: true })
	    }
	  },
	  animationStart: {
	    phasedRegistrationNames: {
	      bubbled: keyOf({ onAnimationStart: true }),
	      captured: keyOf({ onAnimationStartCapture: true })
	    }
	  },
	  blur: {
	    phasedRegistrationNames: {
	      bubbled: keyOf({ onBlur: true }),
	      captured: keyOf({ onBlurCapture: true })
	    }
	  },
	  canPlay: {
	    phasedRegistrationNames: {
	      bubbled: keyOf({ onCanPlay: true }),
	      captured: keyOf({ onCanPlayCapture: true })
	    }
	  },
	  canPlayThrough: {
	    phasedRegistrationNames: {
	      bubbled: keyOf({ onCanPlayThrough: true }),
	      captured: keyOf({ onCanPlayThroughCapture: true })
	    }
	  },
	  click: {
	    phasedRegistrationNames: {
	      bubbled: keyOf({ onClick: true }),
	      captured: keyOf({ onClickCapture: true })
	    }
	  },
	  contextMenu: {
	    phasedRegistrationNames: {
	      bubbled: keyOf({ onContextMenu: true }),
	      captured: keyOf({ onContextMenuCapture: true })
	    }
	  },
	  copy: {
	    phasedRegistrationNames: {
	      bubbled: keyOf({ onCopy: true }),
	      captured: keyOf({ onCopyCapture: true })
	    }
	  },
	  cut: {
	    phasedRegistrationNames: {
	      bubbled: keyOf({ onCut: true }),
	      captured: keyOf({ onCutCapture: true })
	    }
	  },
	  doubleClick: {
	    phasedRegistrationNames: {
	      bubbled: keyOf({ onDoubleClick: true }),
	      captured: keyOf({ onDoubleClickCapture: true })
	    }
	  },
	  drag: {
	    phasedRegistrationNames: {
	      bubbled: keyOf({ onDrag: true }),
	      captured: keyOf({ onDragCapture: true })
	    }
	  },
	  dragEnd: {
	    phasedRegistrationNames: {
	      bubbled: keyOf({ onDragEnd: true }),
	      captured: keyOf({ onDragEndCapture: true })
	    }
	  },
	  dragEnter: {
	    phasedRegistrationNames: {
	      bubbled: keyOf({ onDragEnter: true }),
	      captured: keyOf({ onDragEnterCapture: true })
	    }
	  },
	  dragExit: {
	    phasedRegistrationNames: {
	      bubbled: keyOf({ onDragExit: true }),
	      captured: keyOf({ onDragExitCapture: true })
	    }
	  },
	  dragLeave: {
	    phasedRegistrationNames: {
	      bubbled: keyOf({ onDragLeave: true }),
	      captured: keyOf({ onDragLeaveCapture: true })
	    }
	  },
	  dragOver: {
	    phasedRegistrationNames: {
	      bubbled: keyOf({ onDragOver: true }),
	      captured: keyOf({ onDragOverCapture: true })
	    }
	  },
	  dragStart: {
	    phasedRegistrationNames: {
	      bubbled: keyOf({ onDragStart: true }),
	      captured: keyOf({ onDragStartCapture: true })
	    }
	  },
	  drop: {
	    phasedRegistrationNames: {
	      bubbled: keyOf({ onDrop: true }),
	      captured: keyOf({ onDropCapture: true })
	    }
	  },
	  durationChange: {
	    phasedRegistrationNames: {
	      bubbled: keyOf({ onDurationChange: true }),
	      captured: keyOf({ onDurationChangeCapture: true })
	    }
	  },
	  emptied: {
	    phasedRegistrationNames: {
	      bubbled: keyOf({ onEmptied: true }),
	      captured: keyOf({ onEmptiedCapture: true })
	    }
	  },
	  encrypted: {
	    phasedRegistrationNames: {
	      bubbled: keyOf({ onEncrypted: true }),
	      captured: keyOf({ onEncryptedCapture: true })
	    }
	  },
	  ended: {
	    phasedRegistrationNames: {
	      bubbled: keyOf({ onEnded: true }),
	      captured: keyOf({ onEndedCapture: true })
	    }
	  },
	  error: {
	    phasedRegistrationNames: {
	      bubbled: keyOf({ onError: true }),
	      captured: keyOf({ onErrorCapture: true })
	    }
	  },
	  focus: {
	    phasedRegistrationNames: {
	      bubbled: keyOf({ onFocus: true }),
	      captured: keyOf({ onFocusCapture: true })
	    }
	  },
	  input: {
	    phasedRegistrationNames: {
	      bubbled: keyOf({ onInput: true }),
	      captured: keyOf({ onInputCapture: true })
	    }
	  },
	  invalid: {
	    phasedRegistrationNames: {
	      bubbled: keyOf({ onInvalid: true }),
	      captured: keyOf({ onInvalidCapture: true })
	    }
	  },
	  keyDown: {
	    phasedRegistrationNames: {
	      bubbled: keyOf({ onKeyDown: true }),
	      captured: keyOf({ onKeyDownCapture: true })
	    }
	  },
	  keyPress: {
	    phasedRegistrationNames: {
	      bubbled: keyOf({ onKeyPress: true }),
	      captured: keyOf({ onKeyPressCapture: true })
	    }
	  },
	  keyUp: {
	    phasedRegistrationNames: {
	      bubbled: keyOf({ onKeyUp: true }),
	      captured: keyOf({ onKeyUpCapture: true })
	    }
	  },
	  load: {
	    phasedRegistrationNames: {
	      bubbled: keyOf({ onLoad: true }),
	      captured: keyOf({ onLoadCapture: true })
	    }
	  },
	  loadedData: {
	    phasedRegistrationNames: {
	      bubbled: keyOf({ onLoadedData: true }),
	      captured: keyOf({ onLoadedDataCapture: true })
	    }
	  },
	  loadedMetadata: {
	    phasedRegistrationNames: {
	      bubbled: keyOf({ onLoadedMetadata: true }),
	      captured: keyOf({ onLoadedMetadataCapture: true })
	    }
	  },
	  loadStart: {
	    phasedRegistrationNames: {
	      bubbled: keyOf({ onLoadStart: true }),
	      captured: keyOf({ onLoadStartCapture: true })
	    }
	  },
	  // Note: We do not allow listening to mouseOver events. Instead, use the
	  // onMouseEnter/onMouseLeave created by `EnterLeaveEventPlugin`.
	  mouseDown: {
	    phasedRegistrationNames: {
	      bubbled: keyOf({ onMouseDown: true }),
	      captured: keyOf({ onMouseDownCapture: true })
	    }
	  },
	  mouseMove: {
	    phasedRegistrationNames: {
	      bubbled: keyOf({ onMouseMove: true }),
	      captured: keyOf({ onMouseMoveCapture: true })
	    }
	  },
	  mouseOut: {
	    phasedRegistrationNames: {
	      bubbled: keyOf({ onMouseOut: true }),
	      captured: keyOf({ onMouseOutCapture: true })
	    }
	  },
	  mouseOver: {
	    phasedRegistrationNames: {
	      bubbled: keyOf({ onMouseOver: true }),
	      captured: keyOf({ onMouseOverCapture: true })
	    }
	  },
	  mouseUp: {
	    phasedRegistrationNames: {
	      bubbled: keyOf({ onMouseUp: true }),
	      captured: keyOf({ onMouseUpCapture: true })
	    }
	  },
	  paste: {
	    phasedRegistrationNames: {
	      bubbled: keyOf({ onPaste: true }),
	      captured: keyOf({ onPasteCapture: true })
	    }
	  },
	  pause: {
	    phasedRegistrationNames: {
	      bubbled: keyOf({ onPause: true }),
	      captured: keyOf({ onPauseCapture: true })
	    }
	  },
	  play: {
	    phasedRegistrationNames: {
	      bubbled: keyOf({ onPlay: true }),
	      captured: keyOf({ onPlayCapture: true })
	    }
	  },
	  playing: {
	    phasedRegistrationNames: {
	      bubbled: keyOf({ onPlaying: true }),
	      captured: keyOf({ onPlayingCapture: true })
	    }
	  },
	  progress: {
	    phasedRegistrationNames: {
	      bubbled: keyOf({ onProgress: true }),
	      captured: keyOf({ onProgressCapture: true })
	    }
	  },
	  rateChange: {
	    phasedRegistrationNames: {
	      bubbled: keyOf({ onRateChange: true }),
	      captured: keyOf({ onRateChangeCapture: true })
	    }
	  },
	  reset: {
	    phasedRegistrationNames: {
	      bubbled: keyOf({ onReset: true }),
	      captured: keyOf({ onResetCapture: true })
	    }
	  },
	  scroll: {
	    phasedRegistrationNames: {
	      bubbled: keyOf({ onScroll: true }),
	      captured: keyOf({ onScrollCapture: true })
	    }
	  },
	  seeked: {
	    phasedRegistrationNames: {
	      bubbled: keyOf({ onSeeked: true }),
	      captured: keyOf({ onSeekedCapture: true })
	    }
	  },
	  seeking: {
	    phasedRegistrationNames: {
	      bubbled: keyOf({ onSeeking: true }),
	      captured: keyOf({ onSeekingCapture: true })
	    }
	  },
	  stalled: {
	    phasedRegistrationNames: {
	      bubbled: keyOf({ onStalled: true }),
	      captured: keyOf({ onStalledCapture: true })
	    }
	  },
	  submit: {
	    phasedRegistrationNames: {
	      bubbled: keyOf({ onSubmit: true }),
	      captured: keyOf({ onSubmitCapture: true })
	    }
	  },
	  suspend: {
	    phasedRegistrationNames: {
	      bubbled: keyOf({ onSuspend: true }),
	      captured: keyOf({ onSuspendCapture: true })
	    }
	  },
	  timeUpdate: {
	    phasedRegistrationNames: {
	      bubbled: keyOf({ onTimeUpdate: true }),
	      captured: keyOf({ onTimeUpdateCapture: true })
	    }
	  },
	  touchCancel: {
	    phasedRegistrationNames: {
	      bubbled: keyOf({ onTouchCancel: true }),
	      captured: keyOf({ onTouchCancelCapture: true })
	    }
	  },
	  touchEnd: {
	    phasedRegistrationNames: {
	      bubbled: keyOf({ onTouchEnd: true }),
	      captured: keyOf({ onTouchEndCapture: true })
	    }
	  },
	  touchMove: {
	    phasedRegistrationNames: {
	      bubbled: keyOf({ onTouchMove: true }),
	      captured: keyOf({ onTouchMoveCapture: true })
	    }
	  },
	  touchStart: {
	    phasedRegistrationNames: {
	      bubbled: keyOf({ onTouchStart: true }),
	      captured: keyOf({ onTouchStartCapture: true })
	    }
	  },
	  transitionEnd: {
	    phasedRegistrationNames: {
	      bubbled: keyOf({ onTransitionEnd: true }),
	      captured: keyOf({ onTransitionEndCapture: true })
	    }
	  },
	  volumeChange: {
	    phasedRegistrationNames: {
	      bubbled: keyOf({ onVolumeChange: true }),
	      captured: keyOf({ onVolumeChangeCapture: true })
	    }
	  },
	  waiting: {
	    phasedRegistrationNames: {
	      bubbled: keyOf({ onWaiting: true }),
	      captured: keyOf({ onWaitingCapture: true })
	    }
	  },
	  wheel: {
	    phasedRegistrationNames: {
	      bubbled: keyOf({ onWheel: true }),
	      captured: keyOf({ onWheelCapture: true })
	    }
	  }
	};

	var topLevelEventsToDispatchConfig = {
	  topAbort: eventTypes.abort,
	  topAnimationEnd: eventTypes.animationEnd,
	  topAnimationIteration: eventTypes.animationIteration,
	  topAnimationStart: eventTypes.animationStart,
	  topBlur: eventTypes.blur,
	  topCanPlay: eventTypes.canPlay,
	  topCanPlayThrough: eventTypes.canPlayThrough,
	  topClick: eventTypes.click,
	  topContextMenu: eventTypes.contextMenu,
	  topCopy: eventTypes.copy,
	  topCut: eventTypes.cut,
	  topDoubleClick: eventTypes.doubleClick,
	  topDrag: eventTypes.drag,
	  topDragEnd: eventTypes.dragEnd,
	  topDragEnter: eventTypes.dragEnter,
	  topDragExit: eventTypes.dragExit,
	  topDragLeave: eventTypes.dragLeave,
	  topDragOver: eventTypes.dragOver,
	  topDragStart: eventTypes.dragStart,
	  topDrop: eventTypes.drop,
	  topDurationChange: eventTypes.durationChange,
	  topEmptied: eventTypes.emptied,
	  topEncrypted: eventTypes.encrypted,
	  topEnded: eventTypes.ended,
	  topError: eventTypes.error,
	  topFocus: eventTypes.focus,
	  topInput: eventTypes.input,
	  topInvalid: eventTypes.invalid,
	  topKeyDown: eventTypes.keyDown,
	  topKeyPress: eventTypes.keyPress,
	  topKeyUp: eventTypes.keyUp,
	  topLoad: eventTypes.load,
	  topLoadedData: eventTypes.loadedData,
	  topLoadedMetadata: eventTypes.loadedMetadata,
	  topLoadStart: eventTypes.loadStart,
	  topMouseDown: eventTypes.mouseDown,
	  topMouseMove: eventTypes.mouseMove,
	  topMouseOut: eventTypes.mouseOut,
	  topMouseOver: eventTypes.mouseOver,
	  topMouseUp: eventTypes.mouseUp,
	  topPaste: eventTypes.paste,
	  topPause: eventTypes.pause,
	  topPlay: eventTypes.play,
	  topPlaying: eventTypes.playing,
	  topProgress: eventTypes.progress,
	  topRateChange: eventTypes.rateChange,
	  topReset: eventTypes.reset,
	  topScroll: eventTypes.scroll,
	  topSeeked: eventTypes.seeked,
	  topSeeking: eventTypes.seeking,
	  topStalled: eventTypes.stalled,
	  topSubmit: eventTypes.submit,
	  topSuspend: eventTypes.suspend,
	  topTimeUpdate: eventTypes.timeUpdate,
	  topTouchCancel: eventTypes.touchCancel,
	  topTouchEnd: eventTypes.touchEnd,
	  topTouchMove: eventTypes.touchMove,
	  topTouchStart: eventTypes.touchStart,
	  topTransitionEnd: eventTypes.transitionEnd,
	  topVolumeChange: eventTypes.volumeChange,
	  topWaiting: eventTypes.waiting,
	  topWheel: eventTypes.wheel
	};

	for (var type in topLevelEventsToDispatchConfig) {
	  topLevelEventsToDispatchConfig[type].dependencies = [type];
	}

	var ON_CLICK_KEY = keyOf({ onClick: null });
	var onClickListeners = {};

	var SimpleEventPlugin = {

	  eventTypes: eventTypes,

	  extractEvents: function (topLevelType, targetInst, nativeEvent, nativeEventTarget) {
	    var dispatchConfig = topLevelEventsToDispatchConfig[topLevelType];
	    if (!dispatchConfig) {
	      return null;
	    }
	    var EventConstructor;
	    switch (topLevelType) {
	      case topLevelTypes.topAbort:
	      case topLevelTypes.topCanPlay:
	      case topLevelTypes.topCanPlayThrough:
	      case topLevelTypes.topDurationChange:
	      case topLevelTypes.topEmptied:
	      case topLevelTypes.topEncrypted:
	      case topLevelTypes.topEnded:
	      case topLevelTypes.topError:
	      case topLevelTypes.topInput:
	      case topLevelTypes.topInvalid:
	      case topLevelTypes.topLoad:
	      case topLevelTypes.topLoadedData:
	      case topLevelTypes.topLoadedMetadata:
	      case topLevelTypes.topLoadStart:
	      case topLevelTypes.topPause:
	      case topLevelTypes.topPlay:
	      case topLevelTypes.topPlaying:
	      case topLevelTypes.topProgress:
	      case topLevelTypes.topRateChange:
	      case topLevelTypes.topReset:
	      case topLevelTypes.topSeeked:
	      case topLevelTypes.topSeeking:
	      case topLevelTypes.topStalled:
	      case topLevelTypes.topSubmit:
	      case topLevelTypes.topSuspend:
	      case topLevelTypes.topTimeUpdate:
	      case topLevelTypes.topVolumeChange:
	      case topLevelTypes.topWaiting:
	        // HTML Events
	        // @see http://www.w3.org/TR/html5/index.html#events-0
	        EventConstructor = SyntheticEvent;
	        break;
	      case topLevelTypes.topKeyPress:
	        // Firefox creates a keypress event for function keys too. This removes
	        // the unwanted keypress events. Enter is however both printable and
	        // non-printable. One would expect Tab to be as well (but it isn't).
	        if (getEventCharCode(nativeEvent) === 0) {
	          return null;
	        }
	      /* falls through */
	      case topLevelTypes.topKeyDown:
	      case topLevelTypes.topKeyUp:
	        EventConstructor = SyntheticKeyboardEvent;
	        break;
	      case topLevelTypes.topBlur:
	      case topLevelTypes.topFocus:
	        EventConstructor = SyntheticFocusEvent;
	        break;
	      case topLevelTypes.topClick:
	        // Firefox creates a click event on right mouse clicks. This removes the
	        // unwanted click events.
	        if (nativeEvent.button === 2) {
	          return null;
	        }
	      /* falls through */
	      case topLevelTypes.topContextMenu:
	      case topLevelTypes.topDoubleClick:
	      case topLevelTypes.topMouseDown:
	      case topLevelTypes.topMouseMove:
	      case topLevelTypes.topMouseOut:
	      case topLevelTypes.topMouseOver:
	      case topLevelTypes.topMouseUp:
	        EventConstructor = SyntheticMouseEvent;
	        break;
	      case topLevelTypes.topDrag:
	      case topLevelTypes.topDragEnd:
	      case topLevelTypes.topDragEnter:
	      case topLevelTypes.topDragExit:
	      case topLevelTypes.topDragLeave:
	      case topLevelTypes.topDragOver:
	      case topLevelTypes.topDragStart:
	      case topLevelTypes.topDrop:
	        EventConstructor = SyntheticDragEvent;
	        break;
	      case topLevelTypes.topTouchCancel:
	      case topLevelTypes.topTouchEnd:
	      case topLevelTypes.topTouchMove:
	      case topLevelTypes.topTouchStart:
	        EventConstructor = SyntheticTouchEvent;
	        break;
	      case topLevelTypes.topAnimationEnd:
	      case topLevelTypes.topAnimationIteration:
	      case topLevelTypes.topAnimationStart:
	        EventConstructor = SyntheticAnimationEvent;
	        break;
	      case topLevelTypes.topTransitionEnd:
	        EventConstructor = SyntheticTransitionEvent;
	        break;
	      case topLevelTypes.topScroll:
	        EventConstructor = SyntheticUIEvent;
	        break;
	      case topLevelTypes.topWheel:
	        EventConstructor = SyntheticWheelEvent;
	        break;
	      case topLevelTypes.topCopy:
	      case topLevelTypes.topCut:
	      case topLevelTypes.topPaste:
	        EventConstructor = SyntheticClipboardEvent;
	        break;
	    }
	    !EventConstructor ? process.env.NODE_ENV !== 'production' ? invariant(false, 'SimpleEventPlugin: Unhandled event type, `%s`.', topLevelType) : _prodInvariant('86', topLevelType) : void 0;
	    var event = EventConstructor.getPooled(dispatchConfig, targetInst, nativeEvent, nativeEventTarget);
	    EventPropagators.accumulateTwoPhaseDispatches(event);
	    return event;
	  },

	  didPutListener: function (inst, registrationName, listener) {
	    // Mobile Safari does not fire properly bubble click events on
	    // non-interactive elements, which means delegated click listeners do not
	    // fire. The workaround for this bug involves attaching an empty click
	    // listener on the target node.
	    if (registrationName === ON_CLICK_KEY) {
	      var id = inst._rootNodeID;
	      var node = ReactDOMComponentTree.getNodeFromInstance(inst);
	      if (!onClickListeners[id]) {
	        onClickListeners[id] = EventListener.listen(node, 'click', emptyFunction);
	      }
	    }
	  },

	  willDeleteListener: function (inst, registrationName) {
	    if (registrationName === ON_CLICK_KEY) {
	      var id = inst._rootNodeID;
	      onClickListeners[id].remove();
	      delete onClickListeners[id];
	    }
	  }

	};

	module.exports = SimpleEventPlugin;
	/* WEBPACK VAR INJECTION */}.call(exports, __webpack_require__(4)))

/***/ },
/* 155 */
/***/ function(module, exports, __webpack_require__) {

	/**
	 * Copyright 2013-present, Facebook, Inc.
	 * All rights reserved.
	 *
	 * This source code is licensed under the BSD-style license found in the
	 * LICENSE file in the root directory of this source tree. An additional grant
	 * of patent rights can be found in the PATENTS file in the same directory.
	 *
	 * @providesModule SyntheticAnimationEvent
	 */

	'use strict';

	var SyntheticEvent = __webpack_require__(53);

	/**
	 * @interface Event
	 * @see http://www.w3.org/TR/css3-animations/#AnimationEvent-interface
	 * @see https://developer.mozilla.org/en-US/docs/Web/API/AnimationEvent
	 */
	var AnimationEventInterface = {
	  animationName: null,
	  elapsedTime: null,
	  pseudoElement: null
	};

	/**
	 * @param {object} dispatchConfig Configuration used to dispatch this event.
	 * @param {string} dispatchMarker Marker identifying the event target.
	 * @param {object} nativeEvent Native browser event.
	 * @extends {SyntheticEvent}
	 */
	function SyntheticAnimationEvent(dispatchConfig, dispatchMarker, nativeEvent, nativeEventTarget) {
	  return SyntheticEvent.call(this, dispatchConfig, dispatchMarker, nativeEvent, nativeEventTarget);
	}

	SyntheticEvent.augmentClass(SyntheticAnimationEvent, AnimationEventInterface);

	module.exports = SyntheticAnimationEvent;

/***/ },
/* 156 */
/***/ function(module, exports, __webpack_require__) {

	/**
	 * Copyright 2013-present, Facebook, Inc.
	 * All rights reserved.
	 *
	 * This source code is licensed under the BSD-style license found in the
	 * LICENSE file in the root directory of this source tree. An additional grant
	 * of patent rights can be found in the PATENTS file in the same directory.
	 *
	 * @providesModule SyntheticClipboardEvent
	 */

	'use strict';

	var SyntheticEvent = __webpack_require__(53);

	/**
	 * @interface Event
	 * @see http://www.w3.org/TR/clipboard-apis/
	 */
	var ClipboardEventInterface = {
	  clipboardData: function (event) {
	    return 'clipboardData' in event ? event.clipboardData : window.clipboardData;
	  }
	};

	/**
	 * @param {object} dispatchConfig Configuration used to dispatch this event.
	 * @param {string} dispatchMarker Marker identifying the event target.
	 * @param {object} nativeEvent Native browser event.
	 * @extends {SyntheticUIEvent}
	 */
	function SyntheticClipboardEvent(dispatchConfig, dispatchMarker, nativeEvent, nativeEventTarget) {
	  return SyntheticEvent.call(this, dispatchConfig, dispatchMarker, nativeEvent, nativeEventTarget);
	}

	SyntheticEvent.augmentClass(SyntheticClipboardEvent, ClipboardEventInterface);

	module.exports = SyntheticClipboardEvent;

/***/ },
/* 157 */
/***/ function(module, exports, __webpack_require__) {

	/**
	 * Copyright 2013-present, Facebook, Inc.
	 * All rights reserved.
	 *
	 * This source code is licensed under the BSD-style license found in the
	 * LICENSE file in the root directory of this source tree. An additional grant
	 * of patent rights can be found in the PATENTS file in the same directory.
	 *
	 * @providesModule SyntheticFocusEvent
	 */

	'use strict';

	var SyntheticUIEvent = __webpack_require__(75);

	/**
	 * @interface FocusEvent
	 * @see http://www.w3.org/TR/DOM-Level-3-Events/
	 */
	var FocusEventInterface = {
	  relatedTarget: null
	};

	/**
	 * @param {object} dispatchConfig Configuration used to dispatch this event.
	 * @param {string} dispatchMarker Marker identifying the event target.
	 * @param {object} nativeEvent Native browser event.
	 * @extends {SyntheticUIEvent}
	 */
	function SyntheticFocusEvent(dispatchConfig, dispatchMarker, nativeEvent, nativeEventTarget) {
	  return SyntheticUIEvent.call(this, dispatchConfig, dispatchMarker, nativeEvent, nativeEventTarget);
	}

	SyntheticUIEvent.augmentClass(SyntheticFocusEvent, FocusEventInterface);

	module.exports = SyntheticFocusEvent;

/***/ },
/* 158 */
/***/ function(module, exports, __webpack_require__) {

	/**
	 * Copyright 2013-present, Facebook, Inc.
	 * All rights reserved.
	 *
	 * This source code is licensed under the BSD-style license found in the
	 * LICENSE file in the root directory of this source tree. An additional grant
	 * of patent rights can be found in the PATENTS file in the same directory.
	 *
	 * @providesModule SyntheticKeyboardEvent
	 */

	'use strict';

	var SyntheticUIEvent = __webpack_require__(75);

	var getEventCharCode = __webpack_require__(159);
	var getEventKey = __webpack_require__(160);
	var getEventModifierState = __webpack_require__(77);

	/**
	 * @interface KeyboardEvent
	 * @see http://www.w3.org/TR/DOM-Level-3-Events/
	 */
	var KeyboardEventInterface = {
	  key: getEventKey,
	  location: null,
	  ctrlKey: null,
	  shiftKey: null,
	  altKey: null,
	  metaKey: null,
	  repeat: null,
	  locale: null,
	  getModifierState: getEventModifierState,
	  // Legacy Interface
	  charCode: function (event) {
	    // `charCode` is the result of a KeyPress event and represents the value of
	    // the actual printable character.

	    // KeyPress is deprecated, but its replacement is not yet final and not
	    // implemented in any major browser. Only KeyPress has charCode.
	    if (event.type === 'keypress') {
	      return getEventCharCode(event);
	    }
	    return 0;
	  },
	  keyCode: function (event) {
	    // `keyCode` is the result of a KeyDown/Up event and represents the value of
	    // physical keyboard key.

	    // The actual meaning of the value depends on the users' keyboard layout
	    // which cannot be detected. Assuming that it is a US keyboard layout
	    // provides a surprisingly accurate mapping for US and European users.
	    // Due to this, it is left to the user to implement at this time.
	    if (event.type === 'keydown' || event.type === 'keyup') {
	      return event.keyCode;
	    }
	    return 0;
	  },
	  which: function (event) {
	    // `which` is an alias for either `keyCode` or `charCode` depending on the
	    // type of the event.
	    if (event.type === 'keypress') {
	      return getEventCharCode(event);
	    }
	    if (event.type === 'keydown' || event.type === 'keyup') {
	      return event.keyCode;
	    }
	    return 0;
	  }
	};

	/**
	 * @param {object} dispatchConfig Configuration used to dispatch this event.
	 * @param {string} dispatchMarker Marker identifying the event target.
	 * @param {object} nativeEvent Native browser event.
	 * @extends {SyntheticUIEvent}
	 */
	function SyntheticKeyboardEvent(dispatchConfig, dispatchMarker, nativeEvent, nativeEventTarget) {
	  return SyntheticUIEvent.call(this, dispatchConfig, dispatchMarker, nativeEvent, nativeEventTarget);
	}

	SyntheticUIEvent.augmentClass(SyntheticKeyboardEvent, KeyboardEventInterface);

	module.exports = SyntheticKeyboardEvent;

/***/ },
/* 159 */
/***/ function(module, exports) {

	/**
	 * Copyright 2013-present, Facebook, Inc.
	 * All rights reserved.
	 *
	 * This source code is licensed under the BSD-style license found in the
	 * LICENSE file in the root directory of this source tree. An additional grant
	 * of patent rights can be found in the PATENTS file in the same directory.
	 *
	 * @providesModule getEventCharCode
	 */

	'use strict';

	/**
	 * `charCode` represents the actual "character code" and is safe to use with
	 * `String.fromCharCode`. As such, only keys that correspond to printable
	 * characters produce a valid `charCode`, the only exception to this is Enter.
	 * The Tab-key is considered non-printable and does not have a `charCode`,
	 * presumably because it does not produce a tab-character in browsers.
	 *
	 * @param {object} nativeEvent Native browser event.
	 * @return {number} Normalized `charCode` property.
	 */

	function getEventCharCode(nativeEvent) {
	  var charCode;
	  var keyCode = nativeEvent.keyCode;

	  if ('charCode' in nativeEvent) {
	    charCode = nativeEvent.charCode;

	    // FF does not set `charCode` for the Enter-key, check against `keyCode`.
	    if (charCode === 0 && keyCode === 13) {
	      charCode = 13;
	    }
	  } else {
	    // IE8 does not implement `charCode`, but `keyCode` has the correct value.
	    charCode = keyCode;
	  }

	  // Some non-printable keys are reported in `charCode`/`keyCode`, discard them.
	  // Must not discard the (non-)printable Enter-key.
	  if (charCode >= 32 || charCode === 13) {
	    return charCode;
	  }

	  return 0;
	}

	module.exports = getEventCharCode;

/***/ },
/* 160 */
/***/ function(module, exports, __webpack_require__) {

	/**
	 * Copyright 2013-present, Facebook, Inc.
	 * All rights reserved.
	 *
	 * This source code is licensed under the BSD-style license found in the
	 * LICENSE file in the root directory of this source tree. An additional grant
	 * of patent rights can be found in the PATENTS file in the same directory.
	 *
	 * @providesModule getEventKey
	 */

	'use strict';

	var getEventCharCode = __webpack_require__(159);

	/**
	 * Normalization of deprecated HTML5 `key` values
	 * @see https://developer.mozilla.org/en-US/docs/Web/API/KeyboardEvent#Key_names
	 */
	var normalizeKey = {
	  'Esc': 'Escape',
	  'Spacebar': ' ',
	  'Left': 'ArrowLeft',
	  'Up': 'ArrowUp',
	  'Right': 'ArrowRight',
	  'Down': 'ArrowDown',
	  'Del': 'Delete',
	  'Win': 'OS',
	  'Menu': 'ContextMenu',
	  'Apps': 'ContextMenu',
	  'Scroll': 'ScrollLock',
	  'MozPrintableKey': 'Unidentified'
	};

	/**
	 * Translation from legacy `keyCode` to HTML5 `key`
	 * Only special keys supported, all others depend on keyboard layout or browser
	 * @see https://developer.mozilla.org/en-US/docs/Web/API/KeyboardEvent#Key_names
	 */
	var translateToKey = {
	  8: 'Backspace',
	  9: 'Tab',
	  12: 'Clear',
	  13: 'Enter',
	  16: 'Shift',
	  17: 'Control',
	  18: 'Alt',
	  19: 'Pause',
	  20: 'CapsLock',
	  27: 'Escape',
	  32: ' ',
	  33: 'PageUp',
	  34: 'PageDown',
	  35: 'End',
	  36: 'Home',
	  37: 'ArrowLeft',
	  38: 'ArrowUp',
	  39: 'ArrowRight',
	  40: 'ArrowDown',
	  45: 'Insert',
	  46: 'Delete',
	  112: 'F1', 113: 'F2', 114: 'F3', 115: 'F4', 116: 'F5', 117: 'F6',
	  118: 'F7', 119: 'F8', 120: 'F9', 121: 'F10', 122: 'F11', 123: 'F12',
	  144: 'NumLock',
	  145: 'ScrollLock',
	  224: 'Meta'
	};

	/**
	 * @param {object} nativeEvent Native browser event.
	 * @return {string} Normalized `key` property.
	 */
	function getEventKey(nativeEvent) {
	  if (nativeEvent.key) {
	    // Normalize inconsistent values reported by browsers due to
	    // implementations of a working draft specification.

	    // FireFox implements `key` but returns `MozPrintableKey` for all
	    // printable characters (normalized to `Unidentified`), ignore it.
	    var key = normalizeKey[nativeEvent.key] || nativeEvent.key;
	    if (key !== 'Unidentified') {
	      return key;
	    }
	  }

	  // Browser does not implement `key`, polyfill as much of it as we can.
	  if (nativeEvent.type === 'keypress') {
	    var charCode = getEventCharCode(nativeEvent);

	    // The enter-key is technically both printable and non-printable and can
	    // thus be captured by `keypress`, no other non-printable key should.
	    return charCode === 13 ? 'Enter' : String.fromCharCode(charCode);
	  }
	  if (nativeEvent.type === 'keydown' || nativeEvent.type === 'keyup') {
	    // While user keyboard layout determines the actual meaning of each
	    // `keyCode` value, almost all function keys have a universal value.
	    return translateToKey[nativeEvent.keyCode] || 'Unidentified';
	  }
	  return '';
	}

	module.exports = getEventKey;

/***/ },
/* 161 */
/***/ function(module, exports, __webpack_require__) {

	/**
	 * Copyright 2013-present, Facebook, Inc.
	 * All rights reserved.
	 *
	 * This source code is licensed under the BSD-style license found in the
	 * LICENSE file in the root directory of this source tree. An additional grant
	 * of patent rights can be found in the PATENTS file in the same directory.
	 *
	 * @providesModule SyntheticDragEvent
	 */

	'use strict';

	var SyntheticMouseEvent = __webpack_require__(74);

	/**
	 * @interface DragEvent
	 * @see http://www.w3.org/TR/DOM-Level-3-Events/
	 */
	var DragEventInterface = {
	  dataTransfer: null
	};

	/**
	 * @param {object} dispatchConfig Configuration used to dispatch this event.
	 * @param {string} dispatchMarker Marker identifying the event target.
	 * @param {object} nativeEvent Native browser event.
	 * @extends {SyntheticUIEvent}
	 */
	function SyntheticDragEvent(dispatchConfig, dispatchMarker, nativeEvent, nativeEventTarget) {
	  return SyntheticMouseEvent.call(this, dispatchConfig, dispatchMarker, nativeEvent, nativeEventTarget);
	}

	SyntheticMouseEvent.augmentClass(SyntheticDragEvent, DragEventInterface);

	module.exports = SyntheticDragEvent;

/***/ },
/* 162 */
/***/ function(module, exports, __webpack_require__) {

	/**
	 * Copyright 2013-present, Facebook, Inc.
	 * All rights reserved.
	 *
	 * This source code is licensed under the BSD-style license found in the
	 * LICENSE file in the root directory of this source tree. An additional grant
	 * of patent rights can be found in the PATENTS file in the same directory.
	 *
	 * @providesModule SyntheticTouchEvent
	 */

	'use strict';

	var SyntheticUIEvent = __webpack_require__(75);

	var getEventModifierState = __webpack_require__(77);

	/**
	 * @interface TouchEvent
	 * @see http://www.w3.org/TR/touch-events/
	 */
	var TouchEventInterface = {
	  touches: null,
	  targetTouches: null,
	  changedTouches: null,
	  altKey: null,
	  metaKey: null,
	  ctrlKey: null,
	  shiftKey: null,
	  getModifierState: getEventModifierState
	};

	/**
	 * @param {object} dispatchConfig Configuration used to dispatch this event.
	 * @param {string} dispatchMarker Marker identifying the event target.
	 * @param {object} nativeEvent Native browser event.
	 * @extends {SyntheticUIEvent}
	 */
	function SyntheticTouchEvent(dispatchConfig, dispatchMarker, nativeEvent, nativeEventTarget) {
	  return SyntheticUIEvent.call(this, dispatchConfig, dispatchMarker, nativeEvent, nativeEventTarget);
	}

	SyntheticUIEvent.augmentClass(SyntheticTouchEvent, TouchEventInterface);

	module.exports = SyntheticTouchEvent;

/***/ },
/* 163 */
/***/ function(module, exports, __webpack_require__) {

	/**
	 * Copyright 2013-present, Facebook, Inc.
	 * All rights reserved.
	 *
	 * This source code is licensed under the BSD-style license found in the
	 * LICENSE file in the root directory of this source tree. An additional grant
	 * of patent rights can be found in the PATENTS file in the same directory.
	 *
	 * @providesModule SyntheticTransitionEvent
	 */

	'use strict';

	var SyntheticEvent = __webpack_require__(53);

	/**
	 * @interface Event
	 * @see http://www.w3.org/TR/2009/WD-css3-transitions-20090320/#transition-events-
	 * @see https://developer.mozilla.org/en-US/docs/Web/API/TransitionEvent
	 */
	var TransitionEventInterface = {
	  propertyName: null,
	  elapsedTime: null,
	  pseudoElement: null
	};

	/**
	 * @param {object} dispatchConfig Configuration used to dispatch this event.
	 * @param {string} dispatchMarker Marker identifying the event target.
	 * @param {object} nativeEvent Native browser event.
	 * @extends {SyntheticEvent}
	 */
	function SyntheticTransitionEvent(dispatchConfig, dispatchMarker, nativeEvent, nativeEventTarget) {
	  return SyntheticEvent.call(this, dispatchConfig, dispatchMarker, nativeEvent, nativeEventTarget);
	}

	SyntheticEvent.augmentClass(SyntheticTransitionEvent, TransitionEventInterface);

	module.exports = SyntheticTransitionEvent;

/***/ },
/* 164 */
/***/ function(module, exports, __webpack_require__) {

	/**
	 * Copyright 2013-present, Facebook, Inc.
	 * All rights reserved.
	 *
	 * This source code is licensed under the BSD-style license found in the
	 * LICENSE file in the root directory of this source tree. An additional grant
	 * of patent rights can be found in the PATENTS file in the same directory.
	 *
	 * @providesModule SyntheticWheelEvent
	 */

	'use strict';

	var SyntheticMouseEvent = __webpack_require__(74);

	/**
	 * @interface WheelEvent
	 * @see http://www.w3.org/TR/DOM-Level-3-Events/
	 */
	var WheelEventInterface = {
	  deltaX: function (event) {
	    return 'deltaX' in event ? event.deltaX :
	    // Fallback to `wheelDeltaX` for Webkit and normalize (right is positive).
	    'wheelDeltaX' in event ? -event.wheelDeltaX : 0;
	  },
	  deltaY: function (event) {
	    return 'deltaY' in event ? event.deltaY :
	    // Fallback to `wheelDeltaY` for Webkit and normalize (down is positive).
	    'wheelDeltaY' in event ? -event.wheelDeltaY :
	    // Fallback to `wheelDelta` for IE<9 and normalize (down is positive).
	    'wheelDelta' in event ? -event.wheelDelta : 0;
	  },
	  deltaZ: null,

	  // Browsers without "deltaMode" is reporting in raw wheel delta where one
	  // notch on the scroll is always +/- 120, roughly equivalent to pixels.
	  // A good approximation of DOM_DELTA_LINE (1) is 5% of viewport size or
	  // ~40 pixels, for DOM_DELTA_SCREEN (2) it is 87.5% of viewport size.
	  deltaMode: null
	};

	/**
	 * @param {object} dispatchConfig Configuration used to dispatch this event.
	 * @param {string} dispatchMarker Marker identifying the event target.
	 * @param {object} nativeEvent Native browser event.
	 * @extends {SyntheticMouseEvent}
	 */
	function SyntheticWheelEvent(dispatchConfig, dispatchMarker, nativeEvent, nativeEventTarget) {
	  return SyntheticMouseEvent.call(this, dispatchConfig, dispatchMarker, nativeEvent, nativeEventTarget);
	}

	SyntheticMouseEvent.augmentClass(SyntheticWheelEvent, WheelEventInterface);

	module.exports = SyntheticWheelEvent;

/***/ },
/* 165 */
/***/ function(module, exports, __webpack_require__) {

	/* WEBPACK VAR INJECTION */(function(process) {/**
	 * Copyright 2013-present, Facebook, Inc.
	 * All rights reserved.
	 *
	 * This source code is licensed under the BSD-style license found in the
	 * LICENSE file in the root directory of this source tree. An additional grant
	 * of patent rights can be found in the PATENTS file in the same directory.
	 *
	 * @providesModule ReactMount
	 */

	'use strict';

	var _prodInvariant = __webpack_require__(8);

	var DOMLazyTree = __webpack_require__(81);
	var DOMProperty = __webpack_require__(37);
	var ReactBrowserEventEmitter = __webpack_require__(110);
	var ReactCurrentOwner = __webpack_require__(11);
	var ReactDOMComponentTree = __webpack_require__(36);
	var ReactDOMContainerInfo = __webpack_require__(166);
	var ReactDOMFeatureFlags = __webpack_require__(167);
	var ReactElement = __webpack_require__(10);
	var ReactFeatureFlags = __webpack_require__(58);
	var ReactInstanceMap = __webpack_require__(122);
	var ReactInstrumentation = __webpack_require__(62);
	var ReactMarkupChecksum = __webpack_require__(168);
	var ReactReconciler = __webpack_require__(59);
	var ReactUpdateQueue = __webpack_require__(133);
	var ReactUpdates = __webpack_require__(56);

	var emptyObject = __webpack_require__(20);
	var instantiateReactComponent = __webpack_require__(124);
	var invariant = __webpack_require__(9);
	var setInnerHTML = __webpack_require__(83);
	var shouldUpdateReactComponent = __webpack_require__(127);
	var warning = __webpack_require__(12);

	var ATTR_NAME = DOMProperty.ID_ATTRIBUTE_NAME;
	var ROOT_ATTR_NAME = DOMProperty.ROOT_ATTRIBUTE_NAME;

	var ELEMENT_NODE_TYPE = 1;
	var DOC_NODE_TYPE = 9;
	var DOCUMENT_FRAGMENT_NODE_TYPE = 11;

	var instancesByReactRootID = {};

	/**
	 * Finds the index of the first character
	 * that's not common between the two given strings.
	 *
	 * @return {number} the index of the character where the strings diverge
	 */
	function firstDifferenceIndex(string1, string2) {
	  var minLen = Math.min(string1.length, string2.length);
	  for (var i = 0; i < minLen; i++) {
	    if (string1.charAt(i) !== string2.charAt(i)) {
	      return i;
	    }
	  }
	  return string1.length === string2.length ? -1 : minLen;
	}

	/**
	 * @param {DOMElement|DOMDocument} container DOM element that may contain
	 * a React component
	 * @return {?*} DOM element that may have the reactRoot ID, or null.
	 */
	function getReactRootElementInContainer(container) {
	  if (!container) {
	    return null;
	  }

	  if (container.nodeType === DOC_NODE_TYPE) {
	    return container.documentElement;
	  } else {
	    return container.firstChild;
	  }
	}

	function internalGetID(node) {
	  // If node is something like a window, document, or text node, none of
	  // which support attributes or a .getAttribute method, gracefully return
	  // the empty string, as if the attribute were missing.
	  return node.getAttribute && node.getAttribute(ATTR_NAME) || '';
	}

	/**
	 * Mounts this component and inserts it into the DOM.
	 *
	 * @param {ReactComponent} componentInstance The instance to mount.
	 * @param {DOMElement} container DOM element to mount into.
	 * @param {ReactReconcileTransaction} transaction
	 * @param {boolean} shouldReuseMarkup If true, do not insert markup
	 */
	function mountComponentIntoNode(wrapperInstance, container, transaction, shouldReuseMarkup, context) {
	  var markerName;
	  if (ReactFeatureFlags.logTopLevelRenders) {
	    var wrappedElement = wrapperInstance._currentElement.props;
	    var type = wrappedElement.type;
	    markerName = 'React mount: ' + (typeof type === 'string' ? type : type.displayName || type.name);
	    console.time(markerName);
	  }

	  var markup = ReactReconciler.mountComponent(wrapperInstance, transaction, null, ReactDOMContainerInfo(wrapperInstance, container), context);

	  if (markerName) {
	    console.timeEnd(markerName);
	  }

	  wrapperInstance._renderedComponent._topLevelWrapper = wrapperInstance;
	  ReactMount._mountImageIntoNode(markup, container, wrapperInstance, shouldReuseMarkup, transaction);
	}

	/**
	 * Batched mount.
	 *
	 * @param {ReactComponent} componentInstance The instance to mount.
	 * @param {DOMElement} container DOM element to mount into.
	 * @param {boolean} shouldReuseMarkup If true, do not insert markup
	 */
	function batchedMountComponentIntoNode(componentInstance, container, shouldReuseMarkup, context) {
	  var transaction = ReactUpdates.ReactReconcileTransaction.getPooled(
	  /* useCreateElement */
	  !shouldReuseMarkup && ReactDOMFeatureFlags.useCreateElement);
	  transaction.perform(mountComponentIntoNode, null, componentInstance, container, transaction, shouldReuseMarkup, context);
	  ReactUpdates.ReactReconcileTransaction.release(transaction);
	}

	/**
	 * Unmounts a component and removes it from the DOM.
	 *
	 * @param {ReactComponent} instance React component instance.
	 * @param {DOMElement} container DOM element to unmount from.
	 * @final
	 * @internal
	 * @see {ReactMount.unmountComponentAtNode}
	 */
	function unmountComponentFromNode(instance, container, safely) {
	  if (process.env.NODE_ENV !== 'production') {
	    ReactInstrumentation.debugTool.onBeginFlush();
	  }
	  ReactReconciler.unmountComponent(instance, safely);
	  if (process.env.NODE_ENV !== 'production') {
	    ReactInstrumentation.debugTool.onEndFlush();
	  }

	  if (container.nodeType === DOC_NODE_TYPE) {
	    container = container.documentElement;
	  }

	  // http://jsperf.com/emptying-a-node
	  while (container.lastChild) {
	    container.removeChild(container.lastChild);
	  }
	}

	/**
	 * True if the supplied DOM node has a direct React-rendered child that is
	 * not a React root element. Useful for warning in `render`,
	 * `unmountComponentAtNode`, etc.
	 *
	 * @param {?DOMElement} node The candidate DOM node.
	 * @return {boolean} True if the DOM element contains a direct child that was
	 * rendered by React but is not a root element.
	 * @internal
	 */
	function hasNonRootReactChild(container) {
	  var rootEl = getReactRootElementInContainer(container);
	  if (rootEl) {
	    var inst = ReactDOMComponentTree.getInstanceFromNode(rootEl);
	    return !!(inst && inst._hostParent);
	  }
	}

	function getHostRootInstanceInContainer(container) {
	  var rootEl = getReactRootElementInContainer(container);
	  var prevHostInstance = rootEl && ReactDOMComponentTree.getInstanceFromNode(rootEl);
	  return prevHostInstance && !prevHostInstance._hostParent ? prevHostInstance : null;
	}

	function getTopLevelWrapperInContainer(container) {
	  var root = getHostRootInstanceInContainer(container);
	  return root ? root._hostContainerInfo._topLevelWrapper : null;
	}

	/**
	 * Temporary (?) hack so that we can store all top-level pending updates on
	 * composites instead of having to worry about different types of components
	 * here.
	 */
	var topLevelRootCounter = 1;
	var TopLevelWrapper = function () {
	  this.rootID = topLevelRootCounter++;
	};
	TopLevelWrapper.prototype.isReactComponent = {};
	if (process.env.NODE_ENV !== 'production') {
	  TopLevelWrapper.displayName = 'TopLevelWrapper';
	}
	TopLevelWrapper.prototype.render = function () {
	  // this.props is actually a ReactElement
	  return this.props;
	};

	/**
	 * Mounting is the process of initializing a React component by creating its
	 * representative DOM elements and inserting them into a supplied `container`.
	 * Any prior content inside `container` is destroyed in the process.
	 *
	 *   ReactMount.render(
	 *     component,
	 *     document.getElementById('container')
	 *   );
	 *
	 *   <div id="container">                   <-- Supplied `container`.
	 *     <div data-reactid=".3">              <-- Rendered reactRoot of React
	 *       // ...                                 component.
	 *     </div>
	 *   </div>
	 *
	 * Inside of `container`, the first element rendered is the "reactRoot".
	 */
	var ReactMount = {

	  TopLevelWrapper: TopLevelWrapper,

	  /**
	   * Used by devtools. The keys are not important.
	   */
	  _instancesByReactRootID: instancesByReactRootID,

	  /**
	   * This is a hook provided to support rendering React components while
	   * ensuring that the apparent scroll position of its `container` does not
	   * change.
	   *
	   * @param {DOMElement} container The `container` being rendered into.
	   * @param {function} renderCallback This must be called once to do the render.
	   */
	  scrollMonitor: function (container, renderCallback) {
	    renderCallback();
	  },

	  /**
	   * Take a component that's already mounted into the DOM and replace its props
	   * @param {ReactComponent} prevComponent component instance already in the DOM
	   * @param {ReactElement} nextElement component instance to render
	   * @param {DOMElement} container container to render into
	   * @param {?function} callback function triggered on completion
	   */
	  _updateRootComponent: function (prevComponent, nextElement, nextContext, container, callback) {
	    ReactMount.scrollMonitor(container, function () {
	      ReactUpdateQueue.enqueueElementInternal(prevComponent, nextElement, nextContext);
	      if (callback) {
	        ReactUpdateQueue.enqueueCallbackInternal(prevComponent, callback);
	      }
	    });

	    return prevComponent;
	  },

	  /**
	   * Render a new component into the DOM. Hooked by devtools!
	   *
	   * @param {ReactElement} nextElement element to render
	   * @param {DOMElement} container container to render into
	   * @param {boolean} shouldReuseMarkup if we should skip the markup insertion
	   * @return {ReactComponent} nextComponent
	   */
	  _renderNewRootComponent: function (nextElement, container, shouldReuseMarkup, context) {
	    // Various parts of our code (such as ReactCompositeComponent's
	    // _renderValidatedComponent) assume that calls to render aren't nested;
	    // verify that that's the case.
	    process.env.NODE_ENV !== 'production' ? warning(ReactCurrentOwner.current == null, '_renderNewRootComponent(): Render methods should be a pure function ' + 'of props and state; triggering nested component updates from ' + 'render is not allowed. If necessary, trigger nested updates in ' + 'componentDidUpdate. Check the render method of %s.', ReactCurrentOwner.current && ReactCurrentOwner.current.getName() || 'ReactCompositeComponent') : void 0;

	    !(container && (container.nodeType === ELEMENT_NODE_TYPE || container.nodeType === DOC_NODE_TYPE || container.nodeType === DOCUMENT_FRAGMENT_NODE_TYPE)) ? process.env.NODE_ENV !== 'production' ? invariant(false, '_registerComponent(...): Target container is not a DOM element.') : _prodInvariant('37') : void 0;

	    ReactBrowserEventEmitter.ensureScrollValueMonitoring();
	    var componentInstance = instantiateReactComponent(nextElement, false);

	    // The initial render is synchronous but any updates that happen during
	    // rendering, in componentWillMount or componentDidMount, will be batched
	    // according to the current batching strategy.

	    ReactUpdates.batchedUpdates(batchedMountComponentIntoNode, componentInstance, container, shouldReuseMarkup, context);

	    var wrapperID = componentInstance._instance.rootID;
	    instancesByReactRootID[wrapperID] = componentInstance;

	    if (process.env.NODE_ENV !== 'production') {
	      // The instance here is TopLevelWrapper so we report mount for its child.
	      ReactInstrumentation.debugTool.onMountRootComponent(componentInstance._renderedComponent._debugID);
	    }

	    return componentInstance;
	  },

	  /**
	   * Renders a React component into the DOM in the supplied `container`.
	   *
	   * If the React component was previously rendered into `container`, this will
	   * perform an update on it and only mutate the DOM as necessary to reflect the
	   * latest React component.
	   *
	   * @param {ReactComponent} parentComponent The conceptual parent of this render tree.
	   * @param {ReactElement} nextElement Component element to render.
	   * @param {DOMElement} container DOM element to render into.
	   * @param {?function} callback function triggered on completion
	   * @return {ReactComponent} Component instance rendered in `container`.
	   */
	  renderSubtreeIntoContainer: function (parentComponent, nextElement, container, callback) {
	    !(parentComponent != null && ReactInstanceMap.has(parentComponent)) ? process.env.NODE_ENV !== 'production' ? invariant(false, 'parentComponent must be a valid React Component') : _prodInvariant('38') : void 0;
	    return ReactMount._renderSubtreeIntoContainer(parentComponent, nextElement, container, callback);
	  },

	  _renderSubtreeIntoContainer: function (parentComponent, nextElement, container, callback) {
	    ReactUpdateQueue.validateCallback(callback, 'ReactDOM.render');
	    !ReactElement.isValidElement(nextElement) ? process.env.NODE_ENV !== 'production' ? invariant(false, 'ReactDOM.render(): Invalid component element.%s', typeof nextElement === 'string' ? ' Instead of passing a string like \'div\', pass ' + 'React.createElement(\'div\') or <div />.' : typeof nextElement === 'function' ? ' Instead of passing a class like Foo, pass ' + 'React.createElement(Foo) or <Foo />.' :
	    // Check if it quacks like an element
	    nextElement != null && nextElement.props !== undefined ? ' This may be caused by unintentionally loading two independent ' + 'copies of React.' : '') : _prodInvariant('39', typeof nextElement === 'string' ? ' Instead of passing a string like \'div\', pass ' + 'React.createElement(\'div\') or <div />.' : typeof nextElement === 'function' ? ' Instead of passing a class like Foo, pass ' + 'React.createElement(Foo) or <Foo />.' : nextElement != null && nextElement.props !== undefined ? ' This may be caused by unintentionally loading two independent ' + 'copies of React.' : '') : void 0;

	    process.env.NODE_ENV !== 'production' ? warning(!container || !container.tagName || container.tagName.toUpperCase() !== 'BODY', 'render(): Rendering components directly into document.body is ' + 'discouraged, since its children are often manipulated by third-party ' + 'scripts and browser extensions. This may lead to subtle ' + 'reconciliation issues. Try rendering into a container element created ' + 'for your app.') : void 0;

	    var nextWrappedElement = ReactElement(TopLevelWrapper, null, null, null, null, null, nextElement);

	    var nextContext;
	    if (parentComponent) {
	      var parentInst = ReactInstanceMap.get(parentComponent);
	      nextContext = parentInst._processChildContext(parentInst._context);
	    } else {
	      nextContext = emptyObject;
	    }

	    var prevComponent = getTopLevelWrapperInContainer(container);

	    if (prevComponent) {
	      var prevWrappedElement = prevComponent._currentElement;
	      var prevElement = prevWrappedElement.props;
	      if (shouldUpdateReactComponent(prevElement, nextElement)) {
	        var publicInst = prevComponent._renderedComponent.getPublicInstance();
	        var updatedCallback = callback && function () {
	          callback.call(publicInst);
	        };
	        ReactMount._updateRootComponent(prevComponent, nextWrappedElement, nextContext, container, updatedCallback);
	        return publicInst;
	      } else {
	        ReactMount.unmountComponentAtNode(container);
	      }
	    }

	    var reactRootElement = getReactRootElementInContainer(container);
	    var containerHasReactMarkup = reactRootElement && !!internalGetID(reactRootElement);
	    var containerHasNonRootReactChild = hasNonRootReactChild(container);

	    if (process.env.NODE_ENV !== 'production') {
	      process.env.NODE_ENV !== 'production' ? warning(!containerHasNonRootReactChild, 'render(...): Replacing React-rendered children with a new root ' + 'component. If you intended to update the children of this node, ' + 'you should instead have the existing children update their state ' + 'and render the new components instead of calling ReactDOM.render.') : void 0;

	      if (!containerHasReactMarkup || reactRootElement.nextSibling) {
	        var rootElementSibling = reactRootElement;
	        while (rootElementSibling) {
	          if (internalGetID(rootElementSibling)) {
	            process.env.NODE_ENV !== 'production' ? warning(false, 'render(): Target node has markup rendered by React, but there ' + 'are unrelated nodes as well. This is most commonly caused by ' + 'white-space inserted around server-rendered markup.') : void 0;
	            break;
	          }
	          rootElementSibling = rootElementSibling.nextSibling;
	        }
	      }
	    }

	    var shouldReuseMarkup = containerHasReactMarkup && !prevComponent && !containerHasNonRootReactChild;
	    var component = ReactMount._renderNewRootComponent(nextWrappedElement, container, shouldReuseMarkup, nextContext)._renderedComponent.getPublicInstance();
	    if (callback) {
	      callback.call(component);
	    }
	    return component;
	  },

	  /**
	   * Renders a React component into the DOM in the supplied `container`.
	   * See https://facebook.github.io/react/docs/top-level-api.html#reactdom.render
	   *
	   * If the React component was previously rendered into `container`, this will
	   * perform an update on it and only mutate the DOM as necessary to reflect the
	   * latest React component.
	   *
	   * @param {ReactElement} nextElement Component element to render.
	   * @param {DOMElement} container DOM element to render into.
	   * @param {?function} callback function triggered on completion
	   * @return {ReactComponent} Component instance rendered in `container`.
	   */
	  render: function (nextElement, container, callback) {
	    return ReactMount._renderSubtreeIntoContainer(null, nextElement, container, callback);
	  },

	  /**
	   * Unmounts and destroys the React component rendered in the `container`.
	   * See https://facebook.github.io/react/docs/top-level-api.html#reactdom.unmountcomponentatnode
	   *
	   * @param {DOMElement} container DOM element containing a React component.
	   * @return {boolean} True if a component was found in and unmounted from
	   *                   `container`
	   */
	  unmountComponentAtNode: function (container) {
	    // Various parts of our code (such as ReactCompositeComponent's
	    // _renderValidatedComponent) assume that calls to render aren't nested;
	    // verify that that's the case. (Strictly speaking, unmounting won't cause a
	    // render but we still don't expect to be in a render call here.)
	    process.env.NODE_ENV !== 'production' ? warning(ReactCurrentOwner.current == null, 'unmountComponentAtNode(): Render methods should be a pure function ' + 'of props and state; triggering nested component updates from render ' + 'is not allowed. If necessary, trigger nested updates in ' + 'componentDidUpdate. Check the render method of %s.', ReactCurrentOwner.current && ReactCurrentOwner.current.getName() || 'ReactCompositeComponent') : void 0;

	    !(container && (container.nodeType === ELEMENT_NODE_TYPE || container.nodeType === DOC_NODE_TYPE || container.nodeType === DOCUMENT_FRAGMENT_NODE_TYPE)) ? process.env.NODE_ENV !== 'production' ? invariant(false, 'unmountComponentAtNode(...): Target container is not a DOM element.') : _prodInvariant('40') : void 0;

	    var prevComponent = getTopLevelWrapperInContainer(container);
	    if (!prevComponent) {
	      // Check if the node being unmounted was rendered by React, but isn't a
	      // root node.
	      var containerHasNonRootReactChild = hasNonRootReactChild(container);

	      // Check if the container itself is a React root node.
	      var isContainerReactRoot = container.nodeType === 1 && container.hasAttribute(ROOT_ATTR_NAME);

	      if (process.env.NODE_ENV !== 'production') {
	        process.env.NODE_ENV !== 'production' ? warning(!containerHasNonRootReactChild, 'unmountComponentAtNode(): The node you\'re attempting to unmount ' + 'was rendered by React and is not a top-level container. %s', isContainerReactRoot ? 'You may have accidentally passed in a React root node instead ' + 'of its container.' : 'Instead, have the parent component update its state and ' + 'rerender in order to remove this component.') : void 0;
	      }

	      return false;
	    }
	    delete instancesByReactRootID[prevComponent._instance.rootID];
	    ReactUpdates.batchedUpdates(unmountComponentFromNode, prevComponent, container, false);
	    return true;
	  },

	  _mountImageIntoNode: function (markup, container, instance, shouldReuseMarkup, transaction) {
	    !(container && (container.nodeType === ELEMENT_NODE_TYPE || container.nodeType === DOC_NODE_TYPE || container.nodeType === DOCUMENT_FRAGMENT_NODE_TYPE)) ? process.env.NODE_ENV !== 'production' ? invariant(false, 'mountComponentIntoNode(...): Target container is not valid.') : _prodInvariant('41') : void 0;

	    if (shouldReuseMarkup) {
	      var rootElement = getReactRootElementInContainer(container);
	      if (ReactMarkupChecksum.canReuseMarkup(markup, rootElement)) {
	        ReactDOMComponentTree.precacheNode(instance, rootElement);
	        return;
	      } else {
	        var checksum = rootElement.getAttribute(ReactMarkupChecksum.CHECKSUM_ATTR_NAME);
	        rootElement.removeAttribute(ReactMarkupChecksum.CHECKSUM_ATTR_NAME);

	        var rootMarkup = rootElement.outerHTML;
	        rootElement.setAttribute(ReactMarkupChecksum.CHECKSUM_ATTR_NAME, checksum);

	        var normalizedMarkup = markup;
	        if (process.env.NODE_ENV !== 'production') {
	          // because rootMarkup is retrieved from the DOM, various normalizations
	          // will have occurred which will not be present in `markup`. Here,
	          // insert markup into a <div> or <iframe> depending on the container
	          // type to perform the same normalizations before comparing.
	          var normalizer;
	          if (container.nodeType === ELEMENT_NODE_TYPE) {
	            normalizer = document.createElement('div');
	            normalizer.innerHTML = markup;
	            normalizedMarkup = normalizer.innerHTML;
	          } else {
	            normalizer = document.createElement('iframe');
	            document.body.appendChild(normalizer);
	            normalizer.contentDocument.write(markup);
	            normalizedMarkup = normalizer.contentDocument.documentElement.outerHTML;
	            document.body.removeChild(normalizer);
	          }
	        }

	        var diffIndex = firstDifferenceIndex(normalizedMarkup, rootMarkup);
	        var difference = ' (client) ' + normalizedMarkup.substring(diffIndex - 20, diffIndex + 20) + '\n (server) ' + rootMarkup.substring(diffIndex - 20, diffIndex + 20);

	        !(container.nodeType !== DOC_NODE_TYPE) ? process.env.NODE_ENV !== 'production' ? invariant(false, 'You\'re trying to render a component to the document using server rendering but the checksum was invalid. This usually means you rendered a different component type or props on the client from the one on the server, or your render() methods are impure. React cannot handle this case due to cross-browser quirks by rendering at the document root. You should look for environment dependent code in your components and ensure the props are the same client and server side:\n%s', difference) : _prodInvariant('42', difference) : void 0;

	        if (process.env.NODE_ENV !== 'production') {
	          process.env.NODE_ENV !== 'production' ? warning(false, 'React attempted to reuse markup in a container but the ' + 'checksum was invalid. This generally means that you are ' + 'using server rendering and the markup generated on the ' + 'server was not what the client was expecting. React injected ' + 'new markup to compensate which works but you have lost many ' + 'of the benefits of server rendering. Instead, figure out ' + 'why the markup being generated is different on the client ' + 'or server:\n%s', difference) : void 0;
	        }
	      }
	    }

	    !(container.nodeType !== DOC_NODE_TYPE) ? process.env.NODE_ENV !== 'production' ? invariant(false, 'You\'re trying to render a component to the document but you didn\'t use server rendering. We can\'t do this without using server rendering due to cross-browser quirks. See ReactDOMServer.renderToString() for server rendering.') : _prodInvariant('43') : void 0;

	    if (transaction.useCreateElement) {
	      while (container.lastChild) {
	        container.removeChild(container.lastChild);
	      }
	      DOMLazyTree.insertTreeBefore(container, markup, null);
	    } else {
	      setInnerHTML(container, markup);
	      ReactDOMComponentTree.precacheNode(instance, container.firstChild);
	    }

	    if (process.env.NODE_ENV !== 'production') {
	      var hostNode = ReactDOMComponentTree.getInstanceFromNode(container.firstChild);
	      if (hostNode._debugID !== 0) {
	        ReactInstrumentation.debugTool.onHostOperation(hostNode._debugID, 'mount', markup.toString());
	      }
	    }
	  }
	};

	module.exports = ReactMount;
	/* WEBPACK VAR INJECTION */}.call(exports, __webpack_require__(4)))

/***/ },
/* 166 */
/***/ function(module, exports, __webpack_require__) {

	/* WEBPACK VAR INJECTION */(function(process) {/**
	 * Copyright 2013-present, Facebook, Inc.
	 * All rights reserved.
	 *
	 * This source code is licensed under the BSD-style license found in the
	 * LICENSE file in the root directory of this source tree. An additional grant
	 * of patent rights can be found in the PATENTS file in the same directory.
	 *
	 * @providesModule ReactDOMContainerInfo
	 */

	'use strict';

	var validateDOMNesting = __webpack_require__(135);

	var DOC_NODE_TYPE = 9;

	function ReactDOMContainerInfo(topLevelWrapper, node) {
	  var info = {
	    _topLevelWrapper: topLevelWrapper,
	    _idCounter: 1,
	    _ownerDocument: node ? node.nodeType === DOC_NODE_TYPE ? node : node.ownerDocument : null,
	    _node: node,
	    _tag: node ? node.nodeName.toLowerCase() : null,
	    _namespaceURI: node ? node.namespaceURI : null
	  };
	  if (process.env.NODE_ENV !== 'production') {
	    info._ancestorInfo = node ? validateDOMNesting.updatedAncestorInfo(null, info._tag, null) : null;
	  }
	  return info;
	}

	module.exports = ReactDOMContainerInfo;
	/* WEBPACK VAR INJECTION */}.call(exports, __webpack_require__(4)))

/***/ },
/* 167 */
/***/ function(module, exports) {

	/**
	 * Copyright 2013-present, Facebook, Inc.
	 * All rights reserved.
	 *
	 * This source code is licensed under the BSD-style license found in the
	 * LICENSE file in the root directory of this source tree. An additional grant
	 * of patent rights can be found in the PATENTS file in the same directory.
	 *
	 * @providesModule ReactDOMFeatureFlags
	 */

	'use strict';

	var ReactDOMFeatureFlags = {
	  useCreateElement: true
	};

	module.exports = ReactDOMFeatureFlags;

/***/ },
/* 168 */
/***/ function(module, exports, __webpack_require__) {

	/**
	 * Copyright 2013-present, Facebook, Inc.
	 * All rights reserved.
	 *
	 * This source code is licensed under the BSD-style license found in the
	 * LICENSE file in the root directory of this source tree. An additional grant
	 * of patent rights can be found in the PATENTS file in the same directory.
	 *
	 * @providesModule ReactMarkupChecksum
	 */

	'use strict';

	var adler32 = __webpack_require__(169);

	var TAG_END = /\/?>/;
	var COMMENT_START = /^<\!\-\-/;

	var ReactMarkupChecksum = {
	  CHECKSUM_ATTR_NAME: 'data-react-checksum',

	  /**
	   * @param {string} markup Markup string
	   * @return {string} Markup string with checksum attribute attached
	   */
	  addChecksumToMarkup: function (markup) {
	    var checksum = adler32(markup);

	    // Add checksum (handle both parent tags, comments and self-closing tags)
	    if (COMMENT_START.test(markup)) {
	      return markup;
	    } else {
	      return markup.replace(TAG_END, ' ' + ReactMarkupChecksum.CHECKSUM_ATTR_NAME + '="' + checksum + '"$&');
	    }
	  },

	  /**
	   * @param {string} markup to use
	   * @param {DOMElement} element root React element
	   * @returns {boolean} whether or not the markup is the same
	   */
	  canReuseMarkup: function (markup, element) {
	    var existingChecksum = element.getAttribute(ReactMarkupChecksum.CHECKSUM_ATTR_NAME);
	    existingChecksum = existingChecksum && parseInt(existingChecksum, 10);
	    var markupChecksum = adler32(markup);
	    return markupChecksum === existingChecksum;
	  }
	};

	module.exports = ReactMarkupChecksum;

/***/ },
/* 169 */
/***/ function(module, exports) {

	/**
	 * Copyright 2013-present, Facebook, Inc.
	 * All rights reserved.
	 *
	 * This source code is licensed under the BSD-style license found in the
	 * LICENSE file in the root directory of this source tree. An additional grant
	 * of patent rights can be found in the PATENTS file in the same directory.
	 *
	 * @providesModule adler32
	 * 
	 */

	'use strict';

	var MOD = 65521;

	// adler32 is not cryptographically strong, and is only used to sanity check that
	// markup generated on the server matches the markup generated on the client.
	// This implementation (a modified version of the SheetJS version) has been optimized
	// for our use case, at the expense of conforming to the adler32 specification
	// for non-ascii inputs.
	function adler32(data) {
	  var a = 1;
	  var b = 0;
	  var i = 0;
	  var l = data.length;
	  var m = l & ~0x3;
	  while (i < m) {
	    var n = Math.min(i + 4096, m);
	    for (; i < n; i += 4) {
	      b += (a += data.charCodeAt(i)) + (a += data.charCodeAt(i + 1)) + (a += data.charCodeAt(i + 2)) + (a += data.charCodeAt(i + 3));
	    }
	    a %= MOD;
	    b %= MOD;
	  }
	  for (; i < l; i++) {
	    b += a += data.charCodeAt(i);
	  }
	  a %= MOD;
	  b %= MOD;
	  return a | b << 16;
	}

	module.exports = adler32;

/***/ },
/* 170 */
/***/ function(module, exports, __webpack_require__) {

	/* WEBPACK VAR INJECTION */(function(process) {/**
	 * Copyright 2013-present, Facebook, Inc.
	 * All rights reserved.
	 *
	 * This source code is licensed under the BSD-style license found in the
	 * LICENSE file in the root directory of this source tree. An additional grant
	 * of patent rights can be found in the PATENTS file in the same directory.
	 *
	 * @providesModule findDOMNode
	 */

	'use strict';

	var _prodInvariant = __webpack_require__(8);

	var ReactCurrentOwner = __webpack_require__(11);
	var ReactDOMComponentTree = __webpack_require__(36);
	var ReactInstanceMap = __webpack_require__(122);

	var getHostComponentFromComposite = __webpack_require__(171);
	var invariant = __webpack_require__(9);
	var warning = __webpack_require__(12);

	/**
	 * Returns the DOM node rendered by this element.
	 *
	 * See https://facebook.github.io/react/docs/top-level-api.html#reactdom.finddomnode
	 *
	 * @param {ReactComponent|DOMElement} componentOrElement
	 * @return {?DOMElement} The root node of this element.
	 */
	function findDOMNode(componentOrElement) {
	  if (process.env.NODE_ENV !== 'production') {
	    var owner = ReactCurrentOwner.current;
	    if (owner !== null) {
	      process.env.NODE_ENV !== 'production' ? warning(owner._warnedAboutRefsInRender, '%s is accessing findDOMNode inside its render(). ' + 'render() should be a pure function of props and state. It should ' + 'never access something that requires stale data from the previous ' + 'render, such as refs. Move this logic to componentDidMount and ' + 'componentDidUpdate instead.', owner.getName() || 'A component') : void 0;
	      owner._warnedAboutRefsInRender = true;
	    }
	  }
	  if (componentOrElement == null) {
	    return null;
	  }
	  if (componentOrElement.nodeType === 1) {
	    return componentOrElement;
	  }

	  var inst = ReactInstanceMap.get(componentOrElement);
	  if (inst) {
	    inst = getHostComponentFromComposite(inst);
	    return inst ? ReactDOMComponentTree.getNodeFromInstance(inst) : null;
	  }

	  if (typeof componentOrElement.render === 'function') {
	     true ? process.env.NODE_ENV !== 'production' ? invariant(false, 'findDOMNode was called on an unmounted component.') : _prodInvariant('44') : void 0;
	  } else {
	     true ? process.env.NODE_ENV !== 'production' ? invariant(false, 'Element appears to be neither ReactComponent nor DOMNode (keys: %s)', Object.keys(componentOrElement)) : _prodInvariant('45', Object.keys(componentOrElement)) : void 0;
	  }
	}

	module.exports = findDOMNode;
	/* WEBPACK VAR INJECTION */}.call(exports, __webpack_require__(4)))

/***/ },
/* 171 */
/***/ function(module, exports, __webpack_require__) {

	/**
	 * Copyright 2013-present, Facebook, Inc.
	 * All rights reserved.
	 *
	 * This source code is licensed under the BSD-style license found in the
	 * LICENSE file in the root directory of this source tree. An additional grant
	 * of patent rights can be found in the PATENTS file in the same directory.
	 *
	 * @providesModule getHostComponentFromComposite
	 */

	'use strict';

	var ReactNodeTypes = __webpack_require__(126);

	function getHostComponentFromComposite(inst) {
	  var type;

	  while ((type = inst._renderedNodeType) === ReactNodeTypes.COMPOSITE) {
	    inst = inst._renderedComponent;
	  }

	  if (type === ReactNodeTypes.HOST) {
	    return inst._renderedComponent;
	  } else if (type === ReactNodeTypes.EMPTY) {
	    return null;
	  }
	}

	module.exports = getHostComponentFromComposite;

/***/ },
/* 172 */
/***/ function(module, exports, __webpack_require__) {

	/**
	 * Copyright 2013-present, Facebook, Inc.
	 * All rights reserved.
	 *
	 * This source code is licensed under the BSD-style license found in the
	 * LICENSE file in the root directory of this source tree. An additional grant
	 * of patent rights can be found in the PATENTS file in the same directory.
	 *
	* @providesModule renderSubtreeIntoContainer
	*/

	'use strict';

	var ReactMount = __webpack_require__(165);

	module.exports = ReactMount.renderSubtreeIntoContainer;

/***/ },
/* 173 */
/***/ function(module, exports, __webpack_require__) {

	'use strict';

	exports.__esModule = true;
	exports.createMemoryHistory = exports.hashHistory = exports.browserHistory = exports.applyRouterMiddleware = exports.formatPattern = exports.useRouterHistory = exports.match = exports.routerShape = exports.locationShape = exports.PropTypes = exports.RoutingContext = exports.RouterContext = exports.createRoutes = exports.useRoutes = exports.RouteContext = exports.Lifecycle = exports.History = exports.Route = exports.Redirect = exports.IndexRoute = exports.IndexRedirect = exports.withRouter = exports.IndexLink = exports.Link = exports.Router = undefined;

	var _RouteUtils = __webpack_require__(174);

	Object.defineProperty(exports, 'createRoutes', {
	  enumerable: true,
	  get: function get() {
	    return _RouteUtils.createRoutes;
	  }
	});

	var _PropTypes2 = __webpack_require__(175);

	Object.defineProperty(exports, 'locationShape', {
	  enumerable: true,
	  get: function get() {
	    return _PropTypes2.locationShape;
	  }
	});
	Object.defineProperty(exports, 'routerShape', {
	  enumerable: true,
	  get: function get() {
	    return _PropTypes2.routerShape;
	  }
	});

	var _PatternUtils = __webpack_require__(180);

	Object.defineProperty(exports, 'formatPattern', {
	  enumerable: true,
	  get: function get() {
	    return _PatternUtils.formatPattern;
	  }
	});

	var _Router2 = __webpack_require__(182);

	var _Router3 = _interopRequireDefault(_Router2);

	var _Link2 = __webpack_require__(212);

	var _Link3 = _interopRequireDefault(_Link2);

	var _IndexLink2 = __webpack_require__(213);

	var _IndexLink3 = _interopRequireDefault(_IndexLink2);

	var _withRouter2 = __webpack_require__(214);

	var _withRouter3 = _interopRequireDefault(_withRouter2);

	var _IndexRedirect2 = __webpack_require__(216);

	var _IndexRedirect3 = _interopRequireDefault(_IndexRedirect2);

	var _IndexRoute2 = __webpack_require__(218);

	var _IndexRoute3 = _interopRequireDefault(_IndexRoute2);

	var _Redirect2 = __webpack_require__(217);

	var _Redirect3 = _interopRequireDefault(_Redirect2);

	var _Route2 = __webpack_require__(219);

	var _Route3 = _interopRequireDefault(_Route2);

	var _History2 = __webpack_require__(220);

	var _History3 = _interopRequireDefault(_History2);

	var _Lifecycle2 = __webpack_require__(221);

	var _Lifecycle3 = _interopRequireDefault(_Lifecycle2);

	var _RouteContext2 = __webpack_require__(222);

	var _RouteContext3 = _interopRequireDefault(_RouteContext2);

	var _useRoutes2 = __webpack_require__(223);

	var _useRoutes3 = _interopRequireDefault(_useRoutes2);

	var _RouterContext2 = __webpack_require__(209);

	var _RouterContext3 = _interopRequireDefault(_RouterContext2);

	var _RoutingContext2 = __webpack_require__(224);

	var _RoutingContext3 = _interopRequireDefault(_RoutingContext2);

	var _PropTypes3 = _interopRequireDefault(_PropTypes2);

	var _match2 = __webpack_require__(225);

	var _match3 = _interopRequireDefault(_match2);

	var _useRouterHistory2 = __webpack_require__(229);

	var _useRouterHistory3 = _interopRequireDefault(_useRouterHistory2);

	var _applyRouterMiddleware2 = __webpack_require__(230);

	var _applyRouterMiddleware3 = _interopRequireDefault(_applyRouterMiddleware2);

	var _browserHistory2 = __webpack_require__(231);

	var _browserHistory3 = _interopRequireDefault(_browserHistory2);

	var _hashHistory2 = __webpack_require__(234);

	var _hashHistory3 = _interopRequireDefault(_hashHistory2);

	var _createMemoryHistory2 = __webpack_require__(226);

	var _createMemoryHistory3 = _interopRequireDefault(_createMemoryHistory2);

	function _interopRequireDefault(obj) { return obj && obj.__esModule ? obj : { default: obj }; }

	exports.Router = _Router3.default; /* components */

	exports.Link = _Link3.default;
	exports.IndexLink = _IndexLink3.default;
	exports.withRouter = _withRouter3.default;

	/* components (configuration) */

	exports.IndexRedirect = _IndexRedirect3.default;
	exports.IndexRoute = _IndexRoute3.default;
	exports.Redirect = _Redirect3.default;
	exports.Route = _Route3.default;

	/* mixins */

	exports.History = _History3.default;
	exports.Lifecycle = _Lifecycle3.default;
	exports.RouteContext = _RouteContext3.default;

	/* utils */

	exports.useRoutes = _useRoutes3.default;
	exports.RouterContext = _RouterContext3.default;
	exports.RoutingContext = _RoutingContext3.default;
	exports.PropTypes = _PropTypes3.default;
	exports.match = _match3.default;
	exports.useRouterHistory = _useRouterHistory3.default;
	exports.applyRouterMiddleware = _applyRouterMiddleware3.default;

	/* histories */

	exports.browserHistory = _browserHistory3.default;
	exports.hashHistory = _hashHistory3.default;
	exports.createMemoryHistory = _createMemoryHistory3.default;

/***/ },
/* 174 */
/***/ function(module, exports, __webpack_require__) {

	'use strict';

	exports.__esModule = true;

	var _extends = Object.assign || function (target) { for (var i = 1; i < arguments.length; i++) { var source = arguments[i]; for (var key in source) { if (Object.prototype.hasOwnProperty.call(source, key)) { target[key] = source[key]; } } } return target; };

	exports.isReactChildren = isReactChildren;
	exports.createRouteFromReactElement = createRouteFromReactElement;
	exports.createRoutesFromReactChildren = createRoutesFromReactChildren;
	exports.createRoutes = createRoutes;

	var _react = __webpack_require__(2);

	var _react2 = _interopRequireDefault(_react);

	function _interopRequireDefault(obj) { return obj && obj.__esModule ? obj : { default: obj }; }

	function isValidChild(object) {
	  return object == null || _react2.default.isValidElement(object);
	}

	function isReactChildren(object) {
	  return isValidChild(object) || Array.isArray(object) && object.every(isValidChild);
	}

	function createRoute(defaultProps, props) {
	  return _extends({}, defaultProps, props);
	}

	function createRouteFromReactElement(element) {
	  var type = element.type;
	  var route = createRoute(type.defaultProps, element.props);

	  if (route.children) {
	    var childRoutes = createRoutesFromReactChildren(route.children, route);

	    if (childRoutes.length) route.childRoutes = childRoutes;

	    delete route.children;
	  }

	  return route;
	}

	/**
	 * Creates and returns a routes object from the given ReactChildren. JSX
	 * provides a convenient way to visualize how routes in the hierarchy are
	 * nested.
	 *
	 *   import { Route, createRoutesFromReactChildren } from 'react-router'
	 *
	 *   const routes = createRoutesFromReactChildren(
	 *     <Route component={App}>
	 *       <Route path="home" component={Dashboard}/>
	 *       <Route path="news" component={NewsFeed}/>
	 *     </Route>
	 *   )
	 *
	 * Note: This method is automatically used when you provide <Route> children
	 * to a <Router> component.
	 */
	function createRoutesFromReactChildren(children, parentRoute) {
	  var routes = [];

	  _react2.default.Children.forEach(children, function (element) {
	    if (_react2.default.isValidElement(element)) {
	      // Component classes may have a static create* method.
	      if (element.type.createRouteFromReactElement) {
	        var route = element.type.createRouteFromReactElement(element, parentRoute);

	        if (route) routes.push(route);
	      } else {
	        routes.push(createRouteFromReactElement(element));
	      }
	    }
	  });

	  return routes;
	}

	/**
	 * Creates and returns an array of routes from the given object which
	 * may be a JSX route, a plain object route, or an array of either.
	 */
	function createRoutes(routes) {
	  if (isReactChildren(routes)) {
	    routes = createRoutesFromReactChildren(routes);
	  } else if (routes && !Array.isArray(routes)) {
	    routes = [routes];
	  }

	  return routes;
	}

/***/ },
/* 175 */
/***/ function(module, exports, __webpack_require__) {

	/* WEBPACK VAR INJECTION */(function(process) {'use strict';

	exports.__esModule = true;
	exports.router = exports.routes = exports.route = exports.components = exports.component = exports.location = exports.history = exports.falsy = exports.locationShape = exports.routerShape = undefined;

	var _react = __webpack_require__(2);

	var _deprecateObjectProperties = __webpack_require__(176);

	var _deprecateObjectProperties2 = _interopRequireDefault(_deprecateObjectProperties);

	var _InternalPropTypes = __webpack_require__(179);

	var InternalPropTypes = _interopRequireWildcard(_InternalPropTypes);

	var _routerWarning = __webpack_require__(177);

	var _routerWarning2 = _interopRequireDefault(_routerWarning);

	function _interopRequireWildcard(obj) { if (obj && obj.__esModule) { return obj; } else { var newObj = {}; if (obj != null) { for (var key in obj) { if (Object.prototype.hasOwnProperty.call(obj, key)) newObj[key] = obj[key]; } } newObj.default = obj; return newObj; } }

	function _interopRequireDefault(obj) { return obj && obj.__esModule ? obj : { default: obj }; }

	var func = _react.PropTypes.func;
	var object = _react.PropTypes.object;
	var shape = _react.PropTypes.shape;
	var string = _react.PropTypes.string;
	var routerShape = exports.routerShape = shape({
	  push: func.isRequired,
	  replace: func.isRequired,
	  go: func.isRequired,
	  goBack: func.isRequired,
	  goForward: func.isRequired,
	  setRouteLeaveHook: func.isRequired,
	  isActive: func.isRequired
	});

	var locationShape = exports.locationShape = shape({
	  pathname: string.isRequired,
	  search: string.isRequired,
	  state: object,
	  action: string.isRequired,
	  key: string
	});

	// Deprecated stuff below:

	var falsy = exports.falsy = InternalPropTypes.falsy;
	var history = exports.history = InternalPropTypes.history;
	var location = exports.location = locationShape;
	var component = exports.component = InternalPropTypes.component;
	var components = exports.components = InternalPropTypes.components;
	var route = exports.route = InternalPropTypes.route;
	var routes = exports.routes = InternalPropTypes.routes;
	var router = exports.router = routerShape;

	if (process.env.NODE_ENV !== 'production') {
	  (function () {
	    var deprecatePropType = function deprecatePropType(propType, message) {
	      return function () {
	        process.env.NODE_ENV !== 'production' ? (0, _routerWarning2.default)(false, message) : void 0;
	        return propType.apply(undefined, arguments);
	      };
	    };

	    var deprecateInternalPropType = function deprecateInternalPropType(propType) {
	      return deprecatePropType(propType, 'This prop type is not intended for external use, and was previously exported by mistake. These internal prop types are deprecated for external use, and will be removed in a later version.');
	    };

	    var deprecateRenamedPropType = function deprecateRenamedPropType(propType, name) {
	      return deprecatePropType(propType, 'The `' + name + '` prop type is now exported as `' + name + 'Shape` to avoid name conflicts. This export is deprecated and will be removed in a later version.');
	    };

	    exports.falsy = falsy = deprecateInternalPropType(falsy);
	    exports.history = history = deprecateInternalPropType(history);
	    exports.component = component = deprecateInternalPropType(component);
	    exports.components = components = deprecateInternalPropType(components);
	    exports.route = route = deprecateInternalPropType(route);
	    exports.routes = routes = deprecateInternalPropType(routes);

	    exports.location = location = deprecateRenamedPropType(location, 'location');
	    exports.router = router = deprecateRenamedPropType(router, 'router');
	  })();
	}

	var defaultExport = {
	  falsy: falsy,
	  history: history,
	  location: location,
	  component: component,
	  components: components,
	  route: route,
	  // For some reason, routes was never here.
	  router: router
	};

	if (process.env.NODE_ENV !== 'production') {
	  defaultExport = (0, _deprecateObjectProperties2.default)(defaultExport, 'The default export from `react-router/lib/PropTypes` is deprecated. Please use the named exports instead.');
	}

	exports.default = defaultExport;
	/* WEBPACK VAR INJECTION */}.call(exports, __webpack_require__(4)))

/***/ },
/* 176 */
/***/ function(module, exports, __webpack_require__) {

	/* WEBPACK VAR INJECTION */(function(process) {'use strict';

	exports.__esModule = true;
	exports.canUseMembrane = undefined;

	var _routerWarning = __webpack_require__(177);

	var _routerWarning2 = _interopRequireDefault(_routerWarning);

	function _interopRequireDefault(obj) { return obj && obj.__esModule ? obj : { default: obj }; }

	var canUseMembrane = exports.canUseMembrane = false;

	// No-op by default.
	var deprecateObjectProperties = function deprecateObjectProperties(object) {
	  return object;
	};

	if (process.env.NODE_ENV !== 'production') {
	  try {
	    if (Object.defineProperty({}, 'x', {
	      get: function get() {
	        return true;
	      }
	    }).x) {
	      exports.canUseMembrane = canUseMembrane = true;
	    }
	    /* eslint-disable no-empty */
	  } catch (e) {}
	  /* eslint-enable no-empty */

	  if (canUseMembrane) {
	    deprecateObjectProperties = function deprecateObjectProperties(object, message) {
	      // Wrap the deprecated object in a membrane to warn on property access.
	      var membrane = {};

	      var _loop = function _loop(prop) {
	        if (!Object.prototype.hasOwnProperty.call(object, prop)) {
	          return 'continue';
	        }

	        if (typeof object[prop] === 'function') {
	          // Can't use fat arrow here because of use of arguments below.
	          membrane[prop] = function () {
	            process.env.NODE_ENV !== 'production' ? (0, _routerWarning2.default)(false, message) : void 0;
	            return object[prop].apply(object, arguments);
	          };
	          return 'continue';
	        }

	        // These properties are non-enumerable to prevent React dev tools from
	        // seeing them and causing spurious warnings when accessing them. In
	        // principle this could be done with a proxy, but support for the
	        // ownKeys trap on proxies is not universal, even among browsers that
	        // otherwise support proxies.
	        Object.defineProperty(membrane, prop, {
	          get: function get() {
	            process.env.NODE_ENV !== 'production' ? (0, _routerWarning2.default)(false, message) : void 0;
	            return object[prop];
	          }
	        });
	      };

	      for (var prop in object) {
	        var _ret = _loop(prop);

	        if (_ret === 'continue') continue;
	      }

	      return membrane;
	    };
	  }
	}

	exports.default = deprecateObjectProperties;
	/* WEBPACK VAR INJECTION */}.call(exports, __webpack_require__(4)))

/***/ },
/* 177 */
/***/ function(module, exports, __webpack_require__) {

	'use strict';

	exports.__esModule = true;
	exports.default = routerWarning;
	exports._resetWarned = _resetWarned;

	var _warning = __webpack_require__(178);

	var _warning2 = _interopRequireDefault(_warning);

	function _interopRequireDefault(obj) { return obj && obj.__esModule ? obj : { default: obj }; }

	var warned = {};

	function routerWarning(falseToWarn, message) {
	  // Only issue deprecation warnings once.
	  if (message.indexOf('deprecated') !== -1) {
	    if (warned[message]) {
	      return;
	    }

	    warned[message] = true;
	  }

	  message = '[react-router] ' + message;

	  for (var _len = arguments.length, args = Array(_len > 2 ? _len - 2 : 0), _key = 2; _key < _len; _key++) {
	    args[_key - 2] = arguments[_key];
	  }

	  _warning2.default.apply(undefined, [falseToWarn, message].concat(args));
	}

	function _resetWarned() {
	  warned = {};
	}

/***/ },
/* 178 */
/***/ function(module, exports, __webpack_require__) {

	/* WEBPACK VAR INJECTION */(function(process) {/**
	 * Copyright 2014-2015, Facebook, Inc.
	 * All rights reserved.
	 *
	 * This source code is licensed under the BSD-style license found in the
	 * LICENSE file in the root directory of this source tree. An additional grant
	 * of patent rights can be found in the PATENTS file in the same directory.
	 */

	'use strict';

	/**
	 * Similar to invariant but only logs a warning if the condition is not met.
	 * This can be used to log issues in development environments in critical
	 * paths. Removing the logging code for production environments will keep the
	 * same logic and follow the same code paths.
	 */

	var warning = function() {};

	if (process.env.NODE_ENV !== 'production') {
	  warning = function(condition, format, args) {
	    var len = arguments.length;
	    args = new Array(len > 2 ? len - 2 : 0);
	    for (var key = 2; key < len; key++) {
	      args[key - 2] = arguments[key];
	    }
	    if (format === undefined) {
	      throw new Error(
	        '`warning(condition, format, ...args)` requires a warning ' +
	        'message argument'
	      );
	    }

	    if (format.length < 10 || (/^[s\W]*$/).test(format)) {
	      throw new Error(
	        'The warning format should be able to uniquely identify this ' +
	        'warning. Please, use a more descriptive format than: ' + format
	      );
	    }

	    if (!condition) {
	      var argIndex = 0;
	      var message = 'Warning: ' +
	        format.replace(/%s/g, function() {
	          return args[argIndex++];
	        });
	      if (typeof console !== 'undefined') {
	        console.error(message);
	      }
	      try {
	        // This error was thrown as a convenience so that you can use this stack
	        // to find the callsite that caused this warning to fire.
	        throw new Error(message);
	      } catch(x) {}
	    }
	  };
	}

	module.exports = warning;

	/* WEBPACK VAR INJECTION */}.call(exports, __webpack_require__(4)))

/***/ },
/* 179 */
/***/ function(module, exports, __webpack_require__) {

	'use strict';

	exports.__esModule = true;
	exports.routes = exports.route = exports.components = exports.component = exports.history = undefined;
	exports.falsy = falsy;

	var _react = __webpack_require__(2);

	var func = _react.PropTypes.func;
	var object = _react.PropTypes.object;
	var arrayOf = _react.PropTypes.arrayOf;
	var oneOfType = _react.PropTypes.oneOfType;
	var element = _react.PropTypes.element;
	var shape = _react.PropTypes.shape;
	var string = _react.PropTypes.string;
	function falsy(props, propName, componentName) {
	  if (props[propName]) return new Error('<' + componentName + '> should not have a "' + propName + '" prop');
	}

	var history = exports.history = shape({
	  listen: func.isRequired,
	  push: func.isRequired,
	  replace: func.isRequired,
	  go: func.isRequired,
	  goBack: func.isRequired,
	  goForward: func.isRequired
	});

	var component = exports.component = oneOfType([func, string]);
	var components = exports.components = oneOfType([component, object]);
	var route = exports.route = oneOfType([object, element]);
	var routes = exports.routes = oneOfType([route, arrayOf(route)]);

/***/ },
/* 180 */
/***/ function(module, exports, __webpack_require__) {

	/* WEBPACK VAR INJECTION */(function(process) {'use strict';

	exports.__esModule = true;
	exports.compilePattern = compilePattern;
	exports.matchPattern = matchPattern;
	exports.getParamNames = getParamNames;
	exports.getParams = getParams;
	exports.formatPattern = formatPattern;

	var _invariant = __webpack_require__(181);

	var _invariant2 = _interopRequireDefault(_invariant);

	function _interopRequireDefault(obj) { return obj && obj.__esModule ? obj : { default: obj }; }

	function escapeRegExp(string) {
	  return string.replace(/[.*+?^${}()|[\]\\]/g, '\\$&');
	}

	function _compilePattern(pattern) {
	  var regexpSource = '';
	  var paramNames = [];
	  var tokens = [];

	  var match = void 0,
	      lastIndex = 0,
	      matcher = /:([a-zA-Z_$][a-zA-Z0-9_$]*)|\*\*|\*|\(|\)/g;
	  while (match = matcher.exec(pattern)) {
	    if (match.index !== lastIndex) {
	      tokens.push(pattern.slice(lastIndex, match.index));
	      regexpSource += escapeRegExp(pattern.slice(lastIndex, match.index));
	    }

	    if (match[1]) {
	      regexpSource += '([^/]+)';
	      paramNames.push(match[1]);
	    } else if (match[0] === '**') {
	      regexpSource += '(.*)';
	      paramNames.push('splat');
	    } else if (match[0] === '*') {
	      regexpSource += '(.*?)';
	      paramNames.push('splat');
	    } else if (match[0] === '(') {
	      regexpSource += '(?:';
	    } else if (match[0] === ')') {
	      regexpSource += ')?';
	    }

	    tokens.push(match[0]);

	    lastIndex = matcher.lastIndex;
	  }

	  if (lastIndex !== pattern.length) {
	    tokens.push(pattern.slice(lastIndex, pattern.length));
	    regexpSource += escapeRegExp(pattern.slice(lastIndex, pattern.length));
	  }

	  return {
	    pattern: pattern,
	    regexpSource: regexpSource,
	    paramNames: paramNames,
	    tokens: tokens
	  };
	}

	var CompiledPatternsCache = {};

	function compilePattern(pattern) {
	  if (!(pattern in CompiledPatternsCache)) CompiledPatternsCache[pattern] = _compilePattern(pattern);

	  return CompiledPatternsCache[pattern];
	}

	/**
	 * Attempts to match a pattern on the given pathname. Patterns may use
	 * the following special characters:
	 *
	 * - :paramName     Matches a URL segment up to the next /, ?, or #. The
	 *                  captured string is considered a "param"
	 * - ()             Wraps a segment of the URL that is optional
	 * - *              Consumes (non-greedy) all characters up to the next
	 *                  character in the pattern, or to the end of the URL if
	 *                  there is none
	 * - **             Consumes (greedy) all characters up to the next character
	 *                  in the pattern, or to the end of the URL if there is none
	 *
	 *  The function calls callback(error, matched) when finished.
	 * The return value is an object with the following properties:
	 *
	 * - remainingPathname
	 * - paramNames
	 * - paramValues
	 */
	function matchPattern(pattern, pathname) {
	  // Ensure pattern starts with leading slash for consistency with pathname.
	  if (pattern.charAt(0) !== '/') {
	    pattern = '/' + pattern;
	  }

	  var _compilePattern2 = compilePattern(pattern);

	  var regexpSource = _compilePattern2.regexpSource;
	  var paramNames = _compilePattern2.paramNames;
	  var tokens = _compilePattern2.tokens;


	  if (pattern.charAt(pattern.length - 1) !== '/') {
	    regexpSource += '/?'; // Allow optional path separator at end.
	  }

	  // Special-case patterns like '*' for catch-all routes.
	  if (tokens[tokens.length - 1] === '*') {
	    regexpSource += '$';
	  }

	  var match = pathname.match(new RegExp('^' + regexpSource, 'i'));
	  if (match == null) {
	    return null;
	  }

	  var matchedPath = match[0];
	  var remainingPathname = pathname.substr(matchedPath.length);

	  if (remainingPathname) {
	    // Require that the match ends at a path separator, if we didn't match
	    // the full path, so any remaining pathname is a new path segment.
	    if (matchedPath.charAt(matchedPath.length - 1) !== '/') {
	      return null;
	    }

	    // If there is a remaining pathname, treat the path separator as part of
	    // the remaining pathname for properly continuing the match.
	    remainingPathname = '/' + remainingPathname;
	  }

	  return {
	    remainingPathname: remainingPathname,
	    paramNames: paramNames,
	    paramValues: match.slice(1).map(function (v) {
	      return v && decodeURIComponent(v);
	    })
	  };
	}

	function getParamNames(pattern) {
	  return compilePattern(pattern).paramNames;
	}

	function getParams(pattern, pathname) {
	  var match = matchPattern(pattern, pathname);
	  if (!match) {
	    return null;
	  }

	  var paramNames = match.paramNames;
	  var paramValues = match.paramValues;

	  var params = {};

	  paramNames.forEach(function (paramName, index) {
	    params[paramName] = paramValues[index];
	  });

	  return params;
	}

	/**
	 * Returns a version of the given pattern with params interpolated. Throws
	 * if there is a dynamic segment of the pattern for which there is no param.
	 */
	function formatPattern(pattern, params) {
	  params = params || {};

	  var _compilePattern3 = compilePattern(pattern);

	  var tokens = _compilePattern3.tokens;

	  var parenCount = 0,
	      pathname = '',
	      splatIndex = 0;

	  var token = void 0,
	      paramName = void 0,
	      paramValue = void 0;
	  for (var i = 0, len = tokens.length; i < len; ++i) {
	    token = tokens[i];

	    if (token === '*' || token === '**') {
	      paramValue = Array.isArray(params.splat) ? params.splat[splatIndex++] : params.splat;

	      !(paramValue != null || parenCount > 0) ? process.env.NODE_ENV !== 'production' ? (0, _invariant2.default)(false, 'Missing splat #%s for path "%s"', splatIndex, pattern) : (0, _invariant2.default)(false) : void 0;

	      if (paramValue != null) pathname += encodeURI(paramValue);
	    } else if (token === '(') {
	      parenCount += 1;
	    } else if (token === ')') {
	      parenCount -= 1;
	    } else if (token.charAt(0) === ':') {
	      paramName = token.substring(1);
	      paramValue = params[paramName];

	      !(paramValue != null || parenCount > 0) ? process.env.NODE_ENV !== 'production' ? (0, _invariant2.default)(false, 'Missing "%s" parameter for path "%s"', paramName, pattern) : (0, _invariant2.default)(false) : void 0;

	      if (paramValue != null) pathname += encodeURIComponent(paramValue);
	    } else {
	      pathname += token;
	    }
	  }

	  return pathname.replace(/\/+/g, '/');
	}
	/* WEBPACK VAR INJECTION */}.call(exports, __webpack_require__(4)))

/***/ },
/* 181 */
/***/ function(module, exports, __webpack_require__) {

	/* WEBPACK VAR INJECTION */(function(process) {/**
	 * Copyright 2013-2015, Facebook, Inc.
	 * All rights reserved.
	 *
	 * This source code is licensed under the BSD-style license found in the
	 * LICENSE file in the root directory of this source tree. An additional grant
	 * of patent rights can be found in the PATENTS file in the same directory.
	 */

	'use strict';

	/**
	 * Use invariant() to assert state which your program assumes to be true.
	 *
	 * Provide sprintf-style format (only %s is supported) and arguments
	 * to provide information about what broke and what you were
	 * expecting.
	 *
	 * The invariant message will be stripped in production, but the invariant
	 * will remain to ensure logic does not differ in production.
	 */

	var invariant = function(condition, format, a, b, c, d, e, f) {
	  if (process.env.NODE_ENV !== 'production') {
	    if (format === undefined) {
	      throw new Error('invariant requires an error message argument');
	    }
	  }

	  if (!condition) {
	    var error;
	    if (format === undefined) {
	      error = new Error(
	        'Minified exception occurred; use the non-minified dev environment ' +
	        'for the full error message and additional helpful warnings.'
	      );
	    } else {
	      var args = [a, b, c, d, e, f];
	      var argIndex = 0;
	      error = new Error(
	        format.replace(/%s/g, function() { return args[argIndex++]; })
	      );
	      error.name = 'Invariant Violation';
	    }

	    error.framesToPop = 1; // we don't care about invariant's own frame
	    throw error;
	  }
	};

	module.exports = invariant;

	/* WEBPACK VAR INJECTION */}.call(exports, __webpack_require__(4)))

/***/ },
/* 182 */
/***/ function(module, exports, __webpack_require__) {

	/* WEBPACK VAR INJECTION */(function(process) {'use strict';

	exports.__esModule = true;

	var _extends = Object.assign || function (target) { for (var i = 1; i < arguments.length; i++) { var source = arguments[i]; for (var key in source) { if (Object.prototype.hasOwnProperty.call(source, key)) { target[key] = source[key]; } } } return target; };

	var _createHashHistory = __webpack_require__(183);

	var _createHashHistory2 = _interopRequireDefault(_createHashHistory);

	var _useQueries = __webpack_require__(198);

	var _useQueries2 = _interopRequireDefault(_useQueries);

	var _invariant = __webpack_require__(181);

	var _invariant2 = _interopRequireDefault(_invariant);

	var _react = __webpack_require__(2);

	var _react2 = _interopRequireDefault(_react);

	var _createTransitionManager = __webpack_require__(201);

	var _createTransitionManager2 = _interopRequireDefault(_createTransitionManager);

	var _InternalPropTypes = __webpack_require__(179);

	var _RouterContext = __webpack_require__(209);

	var _RouterContext2 = _interopRequireDefault(_RouterContext);

	var _RouteUtils = __webpack_require__(174);

	var _RouterUtils = __webpack_require__(211);

	var _routerWarning = __webpack_require__(177);

	var _routerWarning2 = _interopRequireDefault(_routerWarning);

	function _interopRequireDefault(obj) { return obj && obj.__esModule ? obj : { default: obj }; }

	function _objectWithoutProperties(obj, keys) { var target = {}; for (var i in obj) { if (keys.indexOf(i) >= 0) continue; if (!Object.prototype.hasOwnProperty.call(obj, i)) continue; target[i] = obj[i]; } return target; }

	function isDeprecatedHistory(history) {
	  return !history || !history.__v2_compatible__;
	}

	/* istanbul ignore next: sanity check */
	function isUnsupportedHistory(history) {
	  // v3 histories expose getCurrentLocation, but aren't currently supported.
	  return history && history.getCurrentLocation;
	}

	var _React$PropTypes = _react2.default.PropTypes;
	var func = _React$PropTypes.func;
	var object = _React$PropTypes.object;

	/**
	 * A <Router> is a high-level API for automatically setting up
	 * a router that renders a <RouterContext> with all the props
	 * it needs each time the URL changes.
	 */

	var Router = _react2.default.createClass({
	  displayName: 'Router',


	  propTypes: {
	    history: object,
	    children: _InternalPropTypes.routes,
	    routes: _InternalPropTypes.routes, // alias for children
	    render: func,
	    createElement: func,
	    onError: func,
	    onUpdate: func,

	    // Deprecated:
	    parseQueryString: func,
	    stringifyQuery: func,

	    // PRIVATE: For client-side rehydration of server match.
	    matchContext: object
	  },

	  getDefaultProps: function getDefaultProps() {
	    return {
	      render: function render(props) {
	        return _react2.default.createElement(_RouterContext2.default, props);
	      }
	    };
	  },
	  getInitialState: function getInitialState() {
	    return {
	      location: null,
	      routes: null,
	      params: null,
	      components: null
	    };
	  },
	  handleError: function handleError(error) {
	    if (this.props.onError) {
	      this.props.onError.call(this, error);
	    } else {
	      // Throw errors by default so we don't silently swallow them!
	      throw error; // This error probably occurred in getChildRoutes or getComponents.
	    }
	  },
	  componentWillMount: function componentWillMount() {
	    var _this = this;

	    var _props = this.props;
	    var parseQueryString = _props.parseQueryString;
	    var stringifyQuery = _props.stringifyQuery;

	    process.env.NODE_ENV !== 'production' ? (0, _routerWarning2.default)(!(parseQueryString || stringifyQuery), '`parseQueryString` and `stringifyQuery` are deprecated. Please create a custom history. http://tiny.cc/router-customquerystring') : void 0;

	    var _createRouterObjects = this.createRouterObjects();

	    var history = _createRouterObjects.history;
	    var transitionManager = _createRouterObjects.transitionManager;
	    var router = _createRouterObjects.router;


	    this._unlisten = transitionManager.listen(function (error, state) {
	      if (error) {
	        _this.handleError(error);
	      } else {
	        _this.setState(state, _this.props.onUpdate);
	      }
	    });

	    this.history = history;
	    this.router = router;
	  },
	  createRouterObjects: function createRouterObjects() {
	    var matchContext = this.props.matchContext;

	    if (matchContext) {
	      return matchContext;
	    }

	    var history = this.props.history;
	    var _props2 = this.props;
	    var routes = _props2.routes;
	    var children = _props2.children;


	    !!isUnsupportedHistory(history) ? process.env.NODE_ENV !== 'production' ? (0, _invariant2.default)(false, 'You have provided a history object created with history v3.x. ' + 'This version of React Router is not compatible with v3 history ' + 'objects. Please use history v2.x instead.') : (0, _invariant2.default)(false) : void 0;

	    if (isDeprecatedHistory(history)) {
	      history = this.wrapDeprecatedHistory(history);
	    }

	    var transitionManager = (0, _createTransitionManager2.default)(history, (0, _RouteUtils.createRoutes)(routes || children));
	    var router = (0, _RouterUtils.createRouterObject)(history, transitionManager);
	    var routingHistory = (0, _RouterUtils.createRoutingHistory)(history, transitionManager);

	    return { history: routingHistory, transitionManager: transitionManager, router: router };
	  },
	  wrapDeprecatedHistory: function wrapDeprecatedHistory(history) {
	    var _props3 = this.props;
	    var parseQueryString = _props3.parseQueryString;
	    var stringifyQuery = _props3.stringifyQuery;


	    var createHistory = void 0;
	    if (history) {
	      process.env.NODE_ENV !== 'production' ? (0, _routerWarning2.default)(false, 'It appears you have provided a deprecated history object to `<Router/>`, please use a history provided by ' + 'React Router with `import { browserHistory } from \'react-router\'` or `import { hashHistory } from \'react-router\'`. ' + 'If you are using a custom history please create it with `useRouterHistory`, see http://tiny.cc/router-usinghistory for details.') : void 0;
	      createHistory = function createHistory() {
	        return history;
	      };
	    } else {
	      process.env.NODE_ENV !== 'production' ? (0, _routerWarning2.default)(false, '`Router` no longer defaults the history prop to hash history. Please use the `hashHistory` singleton instead. http://tiny.cc/router-defaulthistory') : void 0;
	      createHistory = _createHashHistory2.default;
	    }

	    return (0, _useQueries2.default)(createHistory)({ parseQueryString: parseQueryString, stringifyQuery: stringifyQuery });
	  },


	  /* istanbul ignore next: sanity check */
	  componentWillReceiveProps: function componentWillReceiveProps(nextProps) {
	    process.env.NODE_ENV !== 'production' ? (0, _routerWarning2.default)(nextProps.history === this.props.history, 'You cannot change <Router history>; it will be ignored') : void 0;

	    process.env.NODE_ENV !== 'production' ? (0, _routerWarning2.default)((nextProps.routes || nextProps.children) === (this.props.routes || this.props.children), 'You cannot change <Router routes>; it will be ignored') : void 0;
	  },
	  componentWillUnmount: function componentWillUnmount() {
	    if (this._unlisten) this._unlisten();
	  },
	  render: function render() {
	    var _state = this.state;
	    var location = _state.location;
	    var routes = _state.routes;
	    var params = _state.params;
	    var components = _state.components;
	    var _props4 = this.props;
	    var createElement = _props4.createElement;
	    var render = _props4.render;

	    var props = _objectWithoutProperties(_props4, ['createElement', 'render']);

	    if (location == null) return null; // Async match

	    // Only forward non-Router-specific props to routing context, as those are
	    // the only ones that might be custom routing context props.
	    Object.keys(Router.propTypes).forEach(function (propType) {
	      return delete props[propType];
	    });

	    return render(_extends({}, props, {
	      history: this.history,
	      router: this.router,
	      location: location,
	      routes: routes,
	      params: params,
	      components: components,
	      createElement: createElement
	    }));
	  }
	});

	exports.default = Router;
	module.exports = exports['default'];
	/* WEBPACK VAR INJECTION */}.call(exports, __webpack_require__(4)))

/***/ },
/* 183 */
/***/ function(module, exports, __webpack_require__) {

	/* WEBPACK VAR INJECTION */(function(process) {'use strict';

	exports.__esModule = true;

	var _extends = Object.assign || function (target) { for (var i = 1; i < arguments.length; i++) { var source = arguments[i]; for (var key in source) { if (Object.prototype.hasOwnProperty.call(source, key)) { target[key] = source[key]; } } } return target; };

	function _interopRequireDefault(obj) { return obj && obj.__esModule ? obj : { 'default': obj }; }

	var _warning = __webpack_require__(178);

	var _warning2 = _interopRequireDefault(_warning);

	var _invariant = __webpack_require__(181);

	var _invariant2 = _interopRequireDefault(_invariant);

	var _Actions = __webpack_require__(184);

	var _PathUtils = __webpack_require__(185);

	var _ExecutionEnvironment = __webpack_require__(186);

	var _DOMUtils = __webpack_require__(187);

	var _DOMStateStorage = __webpack_require__(188);

	var _createDOMHistory = __webpack_require__(189);

	var _createDOMHistory2 = _interopRequireDefault(_createDOMHistory);

	function isAbsolutePath(path) {
	  return typeof path === 'string' && path.charAt(0) === '/';
	}

	function ensureSlash() {
	  var path = _DOMUtils.getHashPath();

	  if (isAbsolutePath(path)) return true;

	  _DOMUtils.replaceHashPath('/' + path);

	  return false;
	}

	function addQueryStringValueToPath(path, key, value) {
	  return path + (path.indexOf('?') === -1 ? '?' : '&') + (key + '=' + value);
	}

	function stripQueryStringValueFromPath(path, key) {
	  return path.replace(new RegExp('[?&]?' + key + '=[a-zA-Z0-9]+'), '');
	}

	function getQueryStringValueFromPath(path, key) {
	  var match = path.match(new RegExp('\\?.*?\\b' + key + '=(.+?)\\b'));
	  return match && match[1];
	}

	var DefaultQueryKey = '_k';

	function createHashHistory() {
	  var options = arguments.length <= 0 || arguments[0] === undefined ? {} : arguments[0];

	  !_ExecutionEnvironment.canUseDOM ? process.env.NODE_ENV !== 'production' ? _invariant2['default'](false, 'Hash history needs a DOM') : _invariant2['default'](false) : undefined;

	  var queryKey = options.queryKey;

	  if (queryKey === undefined || !!queryKey) queryKey = typeof queryKey === 'string' ? queryKey : DefaultQueryKey;

	  function getCurrentLocation() {
	    var path = _DOMUtils.getHashPath();

	    var key = undefined,
	        state = undefined;
	    if (queryKey) {
	      key = getQueryStringValueFromPath(path, queryKey);
	      path = stripQueryStringValueFromPath(path, queryKey);

	      if (key) {
	        state = _DOMStateStorage.readState(key);
	      } else {
	        state = null;
	        key = history.createKey();
	        _DOMUtils.replaceHashPath(addQueryStringValueToPath(path, queryKey, key));
	      }
	    } else {
	      key = state = null;
	    }

	    var location = _PathUtils.parsePath(path);

	    return history.createLocation(_extends({}, location, { state: state }), undefined, key);
	  }

	  function startHashChangeListener(_ref) {
	    var transitionTo = _ref.transitionTo;

	    function hashChangeListener() {
	      if (!ensureSlash()) return; // Always make sure hashes are preceeded with a /.

	      transitionTo(getCurrentLocation());
	    }

	    ensureSlash();
	    _DOMUtils.addEventListener(window, 'hashchange', hashChangeListener);

	    return function () {
	      _DOMUtils.removeEventListener(window, 'hashchange', hashChangeListener);
	    };
	  }

	  function finishTransition(location) {
	    var basename = location.basename;
	    var pathname = location.pathname;
	    var search = location.search;
	    var state = location.state;
	    var action = location.action;
	    var key = location.key;

	    if (action === _Actions.POP) return; // Nothing to do.

	    var path = (basename || '') + pathname + search;

	    if (queryKey) {
	      path = addQueryStringValueToPath(path, queryKey, key);
	      _DOMStateStorage.saveState(key, state);
	    } else {
	      // Drop key and state.
	      location.key = location.state = null;
	    }

	    var currentHash = _DOMUtils.getHashPath();

	    if (action === _Actions.PUSH) {
	      if (currentHash !== path) {
	        window.location.hash = path;
	      } else {
	        process.env.NODE_ENV !== 'production' ? _warning2['default'](false, 'You cannot PUSH the same path using hash history') : undefined;
	      }
	    } else if (currentHash !== path) {
	      // REPLACE
	      _DOMUtils.replaceHashPath(path);
	    }
	  }

	  var history = _createDOMHistory2['default'](_extends({}, options, {
	    getCurrentLocation: getCurrentLocation,
	    finishTransition: finishTransition,
	    saveState: _DOMStateStorage.saveState
	  }));

	  var listenerCount = 0,
	      stopHashChangeListener = undefined;

	  function listenBefore(listener) {
	    if (++listenerCount === 1) stopHashChangeListener = startHashChangeListener(history);

	    var unlisten = history.listenBefore(listener);

	    return function () {
	      unlisten();

	      if (--listenerCount === 0) stopHashChangeListener();
	    };
	  }

	  function listen(listener) {
	    if (++listenerCount === 1) stopHashChangeListener = startHashChangeListener(history);

	    var unlisten = history.listen(listener);

	    return function () {
	      unlisten();

	      if (--listenerCount === 0) stopHashChangeListener();
	    };
	  }

	  function push(location) {
	    process.env.NODE_ENV !== 'production' ? _warning2['default'](queryKey || location.state == null, 'You cannot use state without a queryKey it will be dropped') : undefined;

	    history.push(location);
	  }

	  function replace(location) {
	    process.env.NODE_ENV !== 'production' ? _warning2['default'](queryKey || location.state == null, 'You cannot use state without a queryKey it will be dropped') : undefined;

	    history.replace(location);
	  }

	  var goIsSupportedWithoutReload = _DOMUtils.supportsGoWithoutReloadUsingHash();

	  function go(n) {
	    process.env.NODE_ENV !== 'production' ? _warning2['default'](goIsSupportedWithoutReload, 'Hash history go(n) causes a full page reload in this browser') : undefined;

	    history.go(n);
	  }

	  function createHref(path) {
	    return '#' + history.createHref(path);
	  }

	  // deprecated
	  function registerTransitionHook(hook) {
	    if (++listenerCount === 1) stopHashChangeListener = startHashChangeListener(history);

	    history.registerTransitionHook(hook);
	  }

	  // deprecated
	  function unregisterTransitionHook(hook) {
	    history.unregisterTransitionHook(hook);

	    if (--listenerCount === 0) stopHashChangeListener();
	  }

	  // deprecated
	  function pushState(state, path) {
	    process.env.NODE_ENV !== 'production' ? _warning2['default'](queryKey || state == null, 'You cannot use state without a queryKey it will be dropped') : undefined;

	    history.pushState(state, path);
	  }

	  // deprecated
	  function replaceState(state, path) {
	    process.env.NODE_ENV !== 'production' ? _warning2['default'](queryKey || state == null, 'You cannot use state without a queryKey it will be dropped') : undefined;

	    history.replaceState(state, path);
	  }

	  return _extends({}, history, {
	    listenBefore: listenBefore,
	    listen: listen,
	    push: push,
	    replace: replace,
	    go: go,
	    createHref: createHref,

	    registerTransitionHook: registerTransitionHook, // deprecated - warning is in createHistory
	    unregisterTransitionHook: unregisterTransitionHook, // deprecated - warning is in createHistory
	    pushState: pushState, // deprecated - warning is in createHistory
	    replaceState: replaceState // deprecated - warning is in createHistory
	  });
	}

	exports['default'] = createHashHistory;
	module.exports = exports['default'];
	/* WEBPACK VAR INJECTION */}.call(exports, __webpack_require__(4)))

/***/ },
/* 184 */
/***/ function(module, exports) {

	/**
	 * Indicates that navigation was caused by a call to history.push.
	 */
	'use strict';

	exports.__esModule = true;
	var PUSH = 'PUSH';

	exports.PUSH = PUSH;
	/**
	 * Indicates that navigation was caused by a call to history.replace.
	 */
	var REPLACE = 'REPLACE';

	exports.REPLACE = REPLACE;
	/**
	 * Indicates that navigation was caused by some other action such
	 * as using a browser's back/forward buttons and/or manually manipulating
	 * the URL in a browser's location bar. This is the default.
	 *
	 * See https://developer.mozilla.org/en-US/docs/Web/API/WindowEventHandlers/onpopstate
	 * for more information.
	 */
	var POP = 'POP';

	exports.POP = POP;
	exports['default'] = {
	  PUSH: PUSH,
	  REPLACE: REPLACE,
	  POP: POP
	};

/***/ },
/* 185 */
/***/ function(module, exports, __webpack_require__) {

	/* WEBPACK VAR INJECTION */(function(process) {'use strict';

	exports.__esModule = true;
	exports.extractPath = extractPath;
	exports.parsePath = parsePath;

	function _interopRequireDefault(obj) { return obj && obj.__esModule ? obj : { 'default': obj }; }

	var _warning = __webpack_require__(178);

	var _warning2 = _interopRequireDefault(_warning);

	function extractPath(string) {
	  var match = string.match(/^https?:\/\/[^\/]*/);

	  if (match == null) return string;

	  return string.substring(match[0].length);
	}

	function parsePath(path) {
	  var pathname = extractPath(path);
	  var search = '';
	  var hash = '';

	  process.env.NODE_ENV !== 'production' ? _warning2['default'](path === pathname, 'A path must be pathname + search + hash only, not a fully qualified URL like "%s"', path) : undefined;

	  var hashIndex = pathname.indexOf('#');
	  if (hashIndex !== -1) {
	    hash = pathname.substring(hashIndex);
	    pathname = pathname.substring(0, hashIndex);
	  }

	  var searchIndex = pathname.indexOf('?');
	  if (searchIndex !== -1) {
	    search = pathname.substring(searchIndex);
	    pathname = pathname.substring(0, searchIndex);
	  }

	  if (pathname === '') pathname = '/';

	  return {
	    pathname: pathname,
	    search: search,
	    hash: hash
	  };
	}
	/* WEBPACK VAR INJECTION */}.call(exports, __webpack_require__(4)))

/***/ },
/* 186 */
/***/ function(module, exports) {

	'use strict';

	exports.__esModule = true;
	var canUseDOM = !!(typeof window !== 'undefined' && window.document && window.document.createElement);
	exports.canUseDOM = canUseDOM;

/***/ },
/* 187 */
/***/ function(module, exports) {

	'use strict';

	exports.__esModule = true;
	exports.addEventListener = addEventListener;
	exports.removeEventListener = removeEventListener;
	exports.getHashPath = getHashPath;
	exports.replaceHashPath = replaceHashPath;
	exports.getWindowPath = getWindowPath;
	exports.go = go;
	exports.getUserConfirmation = getUserConfirmation;
	exports.supportsHistory = supportsHistory;
	exports.supportsGoWithoutReloadUsingHash = supportsGoWithoutReloadUsingHash;

	function addEventListener(node, event, listener) {
	  if (node.addEventListener) {
	    node.addEventListener(event, listener, false);
	  } else {
	    node.attachEvent('on' + event, listener);
	  }
	}

	function removeEventListener(node, event, listener) {
	  if (node.removeEventListener) {
	    node.removeEventListener(event, listener, false);
	  } else {
	    node.detachEvent('on' + event, listener);
	  }
	}

	function getHashPath() {
	  // We can't use window.location.hash here because it's not
	  // consistent across browsers - Firefox will pre-decode it!
	  return window.location.href.split('#')[1] || '';
	}

	function replaceHashPath(path) {
	  window.location.replace(window.location.pathname + window.location.search + '#' + path);
	}

	function getWindowPath() {
	  return window.location.pathname + window.location.search + window.location.hash;
	}

	function go(n) {
	  if (n) window.history.go(n);
	}

	function getUserConfirmation(message, callback) {
	  callback(window.confirm(message));
	}

	/**
	 * Returns true if the HTML5 history API is supported. Taken from Modernizr.
	 *
	 * https://github.com/Modernizr/Modernizr/blob/master/LICENSE
	 * https://github.com/Modernizr/Modernizr/blob/master/feature-detects/history.js
	 * changed to avoid false negatives for Windows Phones: https://github.com/rackt/react-router/issues/586
	 */

	function supportsHistory() {
	  var ua = navigator.userAgent;
	  if ((ua.indexOf('Android 2.') !== -1 || ua.indexOf('Android 4.0') !== -1) && ua.indexOf('Mobile Safari') !== -1 && ua.indexOf('Chrome') === -1 && ua.indexOf('Windows Phone') === -1) {
	    return false;
	  }
	  return window.history && 'pushState' in window.history;
	}

	/**
	 * Returns false if using go(n) with hash history causes a full page reload.
	 */

	function supportsGoWithoutReloadUsingHash() {
	  var ua = navigator.userAgent;
	  return ua.indexOf('Firefox') === -1;
	}

/***/ },
/* 188 */
/***/ function(module, exports, __webpack_require__) {

	/* WEBPACK VAR INJECTION */(function(process) {/*eslint-disable no-empty */
	'use strict';

	exports.__esModule = true;
	exports.saveState = saveState;
	exports.readState = readState;

	function _interopRequireDefault(obj) { return obj && obj.__esModule ? obj : { 'default': obj }; }

	var _warning = __webpack_require__(178);

	var _warning2 = _interopRequireDefault(_warning);

	var KeyPrefix = '@@History/';
	var QuotaExceededErrors = ['QuotaExceededError', 'QUOTA_EXCEEDED_ERR'];

	var SecurityError = 'SecurityError';

	function createKey(key) {
	  return KeyPrefix + key;
	}

	function saveState(key, state) {
	  try {
	    if (state == null) {
	      window.sessionStorage.removeItem(createKey(key));
	    } else {
	      window.sessionStorage.setItem(createKey(key), JSON.stringify(state));
	    }
	  } catch (error) {
	    if (error.name === SecurityError) {
	      // Blocking cookies in Chrome/Firefox/Safari throws SecurityError on any
	      // attempt to access window.sessionStorage.
	      process.env.NODE_ENV !== 'production' ? _warning2['default'](false, '[history] Unable to save state; sessionStorage is not available due to security settings') : undefined;

	      return;
	    }

	    if (QuotaExceededErrors.indexOf(error.name) >= 0 && window.sessionStorage.length === 0) {
	      // Safari "private mode" throws QuotaExceededError.
	      process.env.NODE_ENV !== 'production' ? _warning2['default'](false, '[history] Unable to save state; sessionStorage is not available in Safari private mode') : undefined;

	      return;
	    }

	    throw error;
	  }
	}

	function readState(key) {
	  var json = undefined;
	  try {
	    json = window.sessionStorage.getItem(createKey(key));
	  } catch (error) {
	    if (error.name === SecurityError) {
	      // Blocking cookies in Chrome/Firefox/Safari throws SecurityError on any
	      // attempt to access window.sessionStorage.
	      process.env.NODE_ENV !== 'production' ? _warning2['default'](false, '[history] Unable to read state; sessionStorage is not available due to security settings') : undefined;

	      return null;
	    }
	  }

	  if (json) {
	    try {
	      return JSON.parse(json);
	    } catch (error) {
	      // Ignore invalid JSON.
	    }
	  }

	  return null;
	}
	/* WEBPACK VAR INJECTION */}.call(exports, __webpack_require__(4)))

/***/ },
/* 189 */
/***/ function(module, exports, __webpack_require__) {

	/* WEBPACK VAR INJECTION */(function(process) {'use strict';

	exports.__esModule = true;

	var _extends = Object.assign || function (target) { for (var i = 1; i < arguments.length; i++) { var source = arguments[i]; for (var key in source) { if (Object.prototype.hasOwnProperty.call(source, key)) { target[key] = source[key]; } } } return target; };

	function _interopRequireDefault(obj) { return obj && obj.__esModule ? obj : { 'default': obj }; }

	var _invariant = __webpack_require__(181);

	var _invariant2 = _interopRequireDefault(_invariant);

	var _ExecutionEnvironment = __webpack_require__(186);

	var _DOMUtils = __webpack_require__(187);

	var _createHistory = __webpack_require__(190);

	var _createHistory2 = _interopRequireDefault(_createHistory);

	function createDOMHistory(options) {
	  var history = _createHistory2['default'](_extends({
	    getUserConfirmation: _DOMUtils.getUserConfirmation
	  }, options, {
	    go: _DOMUtils.go
	  }));

	  function listen(listener) {
	    !_ExecutionEnvironment.canUseDOM ? process.env.NODE_ENV !== 'production' ? _invariant2['default'](false, 'DOM history needs a DOM') : _invariant2['default'](false) : undefined;

	    return history.listen(listener);
	  }

	  return _extends({}, history, {
	    listen: listen
	  });
	}

	exports['default'] = createDOMHistory;
	module.exports = exports['default'];
	/* WEBPACK VAR INJECTION */}.call(exports, __webpack_require__(4)))

/***/ },
/* 190 */
/***/ function(module, exports, __webpack_require__) {

	/* WEBPACK VAR INJECTION */(function(process) {'use strict';

	exports.__esModule = true;

	var _extends = Object.assign || function (target) { for (var i = 1; i < arguments.length; i++) { var source = arguments[i]; for (var key in source) { if (Object.prototype.hasOwnProperty.call(source, key)) { target[key] = source[key]; } } } return target; };

	function _interopRequireDefault(obj) { return obj && obj.__esModule ? obj : { 'default': obj }; }

	var _warning = __webpack_require__(178);

	var _warning2 = _interopRequireDefault(_warning);

	var _deepEqual = __webpack_require__(191);

	var _deepEqual2 = _interopRequireDefault(_deepEqual);

	var _PathUtils = __webpack_require__(185);

	var _AsyncUtils = __webpack_require__(194);

	var _Actions = __webpack_require__(184);

	var _createLocation2 = __webpack_require__(195);

	var _createLocation3 = _interopRequireDefault(_createLocation2);

	var _runTransitionHook = __webpack_require__(196);

	var _runTransitionHook2 = _interopRequireDefault(_runTransitionHook);

	var _deprecate = __webpack_require__(197);

	var _deprecate2 = _interopRequireDefault(_deprecate);

	function createRandomKey(length) {
	  return Math.random().toString(36).substr(2, length);
	}

	function locationsAreEqual(a, b) {
	  return a.pathname === b.pathname && a.search === b.search &&
	  //a.action === b.action && // Different action !== location change.
	  a.key === b.key && _deepEqual2['default'](a.state, b.state);
	}

	var DefaultKeyLength = 6;

	function createHistory() {
	  var options = arguments.length <= 0 || arguments[0] === undefined ? {} : arguments[0];
	  var getCurrentLocation = options.getCurrentLocation;
	  var finishTransition = options.finishTransition;
	  var saveState = options.saveState;
	  var go = options.go;
	  var getUserConfirmation = options.getUserConfirmation;
	  var keyLength = options.keyLength;

	  if (typeof keyLength !== 'number') keyLength = DefaultKeyLength;

	  var transitionHooks = [];

	  function listenBefore(hook) {
	    transitionHooks.push(hook);

	    return function () {
	      transitionHooks = transitionHooks.filter(function (item) {
	        return item !== hook;
	      });
	    };
	  }

	  var allKeys = [];
	  var changeListeners = [];
	  var location = undefined;

	  function getCurrent() {
	    if (pendingLocation && pendingLocation.action === _Actions.POP) {
	      return allKeys.indexOf(pendingLocation.key);
	    } else if (location) {
	      return allKeys.indexOf(location.key);
	    } else {
	      return -1;
	    }
	  }

	  function updateLocation(newLocation) {
	    var current = getCurrent();

	    location = newLocation;

	    if (location.action === _Actions.PUSH) {
	      allKeys = [].concat(allKeys.slice(0, current + 1), [location.key]);
	    } else if (location.action === _Actions.REPLACE) {
	      allKeys[current] = location.key;
	    }

	    changeListeners.forEach(function (listener) {
	      listener(location);
	    });
	  }

	  function listen(listener) {
	    changeListeners.push(listener);

	    if (location) {
	      listener(location);
	    } else {
	      var _location = getCurrentLocation();
	      allKeys = [_location.key];
	      updateLocation(_location);
	    }

	    return function () {
	      changeListeners = changeListeners.filter(function (item) {
	        return item !== listener;
	      });
	    };
	  }

	  function confirmTransitionTo(location, callback) {
	    _AsyncUtils.loopAsync(transitionHooks.length, function (index, next, done) {
	      _runTransitionHook2['default'](transitionHooks[index], location, function (result) {
	        if (result != null) {
	          done(result);
	        } else {
	          next();
	        }
	      });
	    }, function (message) {
	      if (getUserConfirmation && typeof message === 'string') {
	        getUserConfirmation(message, function (ok) {
	          callback(ok !== false);
	        });
	      } else {
	        callback(message !== false);
	      }
	    });
	  }

	  var pendingLocation = undefined;

	  function transitionTo(nextLocation) {
	    if (location && locationsAreEqual(location, nextLocation)) return; // Nothing to do.

	    pendingLocation = nextLocation;

	    confirmTransitionTo(nextLocation, function (ok) {
	      if (pendingLocation !== nextLocation) return; // Transition was interrupted.

	      if (ok) {
	        // treat PUSH to current path like REPLACE to be consistent with browsers
	        if (nextLocation.action === _Actions.PUSH) {
	          var prevPath = createPath(location);
	          var nextPath = createPath(nextLocation);

	          if (nextPath === prevPath && _deepEqual2['default'](location.state, nextLocation.state)) nextLocation.action = _Actions.REPLACE;
	        }

	        if (finishTransition(nextLocation) !== false) updateLocation(nextLocation);
	      } else if (location && nextLocation.action === _Actions.POP) {
	        var prevIndex = allKeys.indexOf(location.key);
	        var nextIndex = allKeys.indexOf(nextLocation.key);

	        if (prevIndex !== -1 && nextIndex !== -1) go(prevIndex - nextIndex); // Restore the URL.
	      }
	    });
	  }

	  function push(location) {
	    transitionTo(createLocation(location, _Actions.PUSH, createKey()));
	  }

	  function replace(location) {
	    transitionTo(createLocation(location, _Actions.REPLACE, createKey()));
	  }

	  function goBack() {
	    go(-1);
	  }

	  function goForward() {
	    go(1);
	  }

	  function createKey() {
	    return createRandomKey(keyLength);
	  }

	  function createPath(location) {
	    if (location == null || typeof location === 'string') return location;

	    var pathname = location.pathname;
	    var search = location.search;
	    var hash = location.hash;

	    var result = pathname;

	    if (search) result += search;

	    if (hash) result += hash;

	    return result;
	  }

	  function createHref(location) {
	    return createPath(location);
	  }

	  function createLocation(location, action) {
	    var key = arguments.length <= 2 || arguments[2] === undefined ? createKey() : arguments[2];

	    if (typeof action === 'object') {
	      process.env.NODE_ENV !== 'production' ? _warning2['default'](false, 'The state (2nd) argument to history.createLocation is deprecated; use a ' + 'location descriptor instead') : undefined;

	      if (typeof location === 'string') location = _PathUtils.parsePath(location);

	      location = _extends({}, location, { state: action });

	      action = key;
	      key = arguments[3] || createKey();
	    }

	    return _createLocation3['default'](location, action, key);
	  }

	  // deprecated
	  function setState(state) {
	    if (location) {
	      updateLocationState(location, state);
	      updateLocation(location);
	    } else {
	      updateLocationState(getCurrentLocation(), state);
	    }
	  }

	  function updateLocationState(location, state) {
	    location.state = _extends({}, location.state, state);
	    saveState(location.key, location.state);
	  }

	  // deprecated
	  function registerTransitionHook(hook) {
	    if (transitionHooks.indexOf(hook) === -1) transitionHooks.push(hook);
	  }

	  // deprecated
	  function unregisterTransitionHook(hook) {
	    transitionHooks = transitionHooks.filter(function (item) {
	      return item !== hook;
	    });
	  }

	  // deprecated
	  function pushState(state, path) {
	    if (typeof path === 'string') path = _PathUtils.parsePath(path);

	    push(_extends({ state: state }, path));
	  }

	  // deprecated
	  function replaceState(state, path) {
	    if (typeof path === 'string') path = _PathUtils.parsePath(path);

	    replace(_extends({ state: state }, path));
	  }

	  return {
	    listenBefore: listenBefore,
	    listen: listen,
	    transitionTo: transitionTo,
	    push: push,
	    replace: replace,
	    go: go,
	    goBack: goBack,
	    goForward: goForward,
	    createKey: createKey,
	    createPath: createPath,
	    createHref: createHref,
	    createLocation: createLocation,

	    setState: _deprecate2['default'](setState, 'setState is deprecated; use location.key to save state instead'),
	    registerTransitionHook: _deprecate2['default'](registerTransitionHook, 'registerTransitionHook is deprecated; use listenBefore instead'),
	    unregisterTransitionHook: _deprecate2['default'](unregisterTransitionHook, 'unregisterTransitionHook is deprecated; use the callback returned from listenBefore instead'),
	    pushState: _deprecate2['default'](pushState, 'pushState is deprecated; use push instead'),
	    replaceState: _deprecate2['default'](replaceState, 'replaceState is deprecated; use replace instead')
	  };
	}

	exports['default'] = createHistory;
	module.exports = exports['default'];
	/* WEBPACK VAR INJECTION */}.call(exports, __webpack_require__(4)))

/***/ },
/* 191 */
/***/ function(module, exports, __webpack_require__) {

	var pSlice = Array.prototype.slice;
	var objectKeys = __webpack_require__(192);
	var isArguments = __webpack_require__(193);

	var deepEqual = module.exports = function (actual, expected, opts) {
	  if (!opts) opts = {};
	  // 7.1. All identical values are equivalent, as determined by ===.
	  if (actual === expected) {
	    return true;

	  } else if (actual instanceof Date && expected instanceof Date) {
	    return actual.getTime() === expected.getTime();

	  // 7.3. Other pairs that do not both pass typeof value == 'object',
	  // equivalence is determined by ==.
	  } else if (!actual || !expected || typeof actual != 'object' && typeof expected != 'object') {
	    return opts.strict ? actual === expected : actual == expected;

	  // 7.4. For all other Object pairs, including Array objects, equivalence is
	  // determined by having the same number of owned properties (as verified
	  // with Object.prototype.hasOwnProperty.call), the same set of keys
	  // (although not necessarily the same order), equivalent values for every
	  // corresponding key, and an identical 'prototype' property. Note: this
	  // accounts for both named and indexed properties on Arrays.
	  } else {
	    return objEquiv(actual, expected, opts);
	  }
	}

	function isUndefinedOrNull(value) {
	  return value === null || value === undefined;
	}

	function isBuffer (x) {
	  if (!x || typeof x !== 'object' || typeof x.length !== 'number') return false;
	  if (typeof x.copy !== 'function' || typeof x.slice !== 'function') {
	    return false;
	  }
	  if (x.length > 0 && typeof x[0] !== 'number') return false;
	  return true;
	}

	function objEquiv(a, b, opts) {
	  var i, key;
	  if (isUndefinedOrNull(a) || isUndefinedOrNull(b))
	    return false;
	  // an identical 'prototype' property.
	  if (a.prototype !== b.prototype) return false;
	  //~~~I've managed to break Object.keys through screwy arguments passing.
	  //   Converting to array solves the problem.
	  if (isArguments(a)) {
	    if (!isArguments(b)) {
	      return false;
	    }
	    a = pSlice.call(a);
	    b = pSlice.call(b);
	    return deepEqual(a, b, opts);
	  }
	  if (isBuffer(a)) {
	    if (!isBuffer(b)) {
	      return false;
	    }
	    if (a.length !== b.length) return false;
	    for (i = 0; i < a.length; i++) {
	      if (a[i] !== b[i]) return false;
	    }
	    return true;
	  }
	  try {
	    var ka = objectKeys(a),
	        kb = objectKeys(b);
	  } catch (e) {//happens when one is a string literal and the other isn't
	    return false;
	  }
	  // having the same number of owned properties (keys incorporates
	  // hasOwnProperty)
	  if (ka.length != kb.length)
	    return false;
	  //the same set of keys (although not necessarily the same order),
	  ka.sort();
	  kb.sort();
	  //~~~cheap key test
	  for (i = ka.length - 1; i >= 0; i--) {
	    if (ka[i] != kb[i])
	      return false;
	  }
	  //equivalent values for every corresponding key, and
	  //~~~possibly expensive deep test
	  for (i = ka.length - 1; i >= 0; i--) {
	    key = ka[i];
	    if (!deepEqual(a[key], b[key], opts)) return false;
	  }
	  return typeof a === typeof b;
	}


/***/ },
/* 192 */
/***/ function(module, exports) {

	exports = module.exports = typeof Object.keys === 'function'
	  ? Object.keys : shim;

	exports.shim = shim;
	function shim (obj) {
	  var keys = [];
	  for (var key in obj) keys.push(key);
	  return keys;
	}


/***/ },
/* 193 */
/***/ function(module, exports) {

	var supportsArgumentsClass = (function(){
	  return Object.prototype.toString.call(arguments)
	})() == '[object Arguments]';

	exports = module.exports = supportsArgumentsClass ? supported : unsupported;

	exports.supported = supported;
	function supported(object) {
	  return Object.prototype.toString.call(object) == '[object Arguments]';
	};

	exports.unsupported = unsupported;
	function unsupported(object){
	  return object &&
	    typeof object == 'object' &&
	    typeof object.length == 'number' &&
	    Object.prototype.hasOwnProperty.call(object, 'callee') &&
	    !Object.prototype.propertyIsEnumerable.call(object, 'callee') ||
	    false;
	};


/***/ },
/* 194 */
/***/ function(module, exports) {

	"use strict";

	exports.__esModule = true;
	var _slice = Array.prototype.slice;
	exports.loopAsync = loopAsync;

	function loopAsync(turns, work, callback) {
	  var currentTurn = 0,
	      isDone = false;
	  var sync = false,
	      hasNext = false,
	      doneArgs = undefined;

	  function done() {
	    isDone = true;
	    if (sync) {
	      // Iterate instead of recursing if possible.
	      doneArgs = [].concat(_slice.call(arguments));
	      return;
	    }

	    callback.apply(this, arguments);
	  }

	  function next() {
	    if (isDone) {
	      return;
	    }

	    hasNext = true;
	    if (sync) {
	      // Iterate instead of recursing if possible.
	      return;
	    }

	    sync = true;

	    while (!isDone && currentTurn < turns && hasNext) {
	      hasNext = false;
	      work.call(this, currentTurn++, next, done);
	    }

	    sync = false;

	    if (isDone) {
	      // This means the loop finished synchronously.
	      callback.apply(this, doneArgs);
	      return;
	    }

	    if (currentTurn >= turns && hasNext) {
	      isDone = true;
	      callback();
	    }
	  }

	  next();
	}

/***/ },
/* 195 */
/***/ function(module, exports, __webpack_require__) {

	/* WEBPACK VAR INJECTION */(function(process) {'use strict';

	exports.__esModule = true;

	var _extends = Object.assign || function (target) { for (var i = 1; i < arguments.length; i++) { var source = arguments[i]; for (var key in source) { if (Object.prototype.hasOwnProperty.call(source, key)) { target[key] = source[key]; } } } return target; };

	function _interopRequireDefault(obj) { return obj && obj.__esModule ? obj : { 'default': obj }; }

	var _warning = __webpack_require__(178);

	var _warning2 = _interopRequireDefault(_warning);

	var _Actions = __webpack_require__(184);

	var _PathUtils = __webpack_require__(185);

	function createLocation() {
	  var location = arguments.length <= 0 || arguments[0] === undefined ? '/' : arguments[0];
	  var action = arguments.length <= 1 || arguments[1] === undefined ? _Actions.POP : arguments[1];
	  var key = arguments.length <= 2 || arguments[2] === undefined ? null : arguments[2];

	  var _fourthArg = arguments.length <= 3 || arguments[3] === undefined ? null : arguments[3];

	  if (typeof location === 'string') location = _PathUtils.parsePath(location);

	  if (typeof action === 'object') {
	    process.env.NODE_ENV !== 'production' ? _warning2['default'](false, 'The state (2nd) argument to createLocation is deprecated; use a ' + 'location descriptor instead') : undefined;

	    location = _extends({}, location, { state: action });

	    action = key || _Actions.POP;
	    key = _fourthArg;
	  }

	  var pathname = location.pathname || '/';
	  var search = location.search || '';
	  var hash = location.hash || '';
	  var state = location.state || null;

	  return {
	    pathname: pathname,
	    search: search,
	    hash: hash,
	    state: state,
	    action: action,
	    key: key
	  };
	}

	exports['default'] = createLocation;
	module.exports = exports['default'];
	/* WEBPACK VAR INJECTION */}.call(exports, __webpack_require__(4)))

/***/ },
/* 196 */
/***/ function(module, exports, __webpack_require__) {

	/* WEBPACK VAR INJECTION */(function(process) {'use strict';

	exports.__esModule = true;

	function _interopRequireDefault(obj) { return obj && obj.__esModule ? obj : { 'default': obj }; }

	var _warning = __webpack_require__(178);

	var _warning2 = _interopRequireDefault(_warning);

	function runTransitionHook(hook, location, callback) {
	  var result = hook(location, callback);

	  if (hook.length < 2) {
	    // Assume the hook runs synchronously and automatically
	    // call the callback with the return value.
	    callback(result);
	  } else {
	    process.env.NODE_ENV !== 'production' ? _warning2['default'](result === undefined, 'You should not "return" in a transition hook with a callback argument; call the callback instead') : undefined;
	  }
	}

	exports['default'] = runTransitionHook;
	module.exports = exports['default'];
	/* WEBPACK VAR INJECTION */}.call(exports, __webpack_require__(4)))

/***/ },
/* 197 */
/***/ function(module, exports, __webpack_require__) {

	/* WEBPACK VAR INJECTION */(function(process) {'use strict';

	exports.__esModule = true;

	function _interopRequireDefault(obj) { return obj && obj.__esModule ? obj : { 'default': obj }; }

	var _warning = __webpack_require__(178);

	var _warning2 = _interopRequireDefault(_warning);

	function deprecate(fn, message) {
	  return function () {
	    process.env.NODE_ENV !== 'production' ? _warning2['default'](false, '[history] ' + message) : undefined;
	    return fn.apply(this, arguments);
	  };
	}

	exports['default'] = deprecate;
	module.exports = exports['default'];
	/* WEBPACK VAR INJECTION */}.call(exports, __webpack_require__(4)))

/***/ },
/* 198 */
/***/ function(module, exports, __webpack_require__) {

	/* WEBPACK VAR INJECTION */(function(process) {'use strict';

	exports.__esModule = true;

	var _extends = Object.assign || function (target) { for (var i = 1; i < arguments.length; i++) { var source = arguments[i]; for (var key in source) { if (Object.prototype.hasOwnProperty.call(source, key)) { target[key] = source[key]; } } } return target; };

	function _interopRequireDefault(obj) { return obj && obj.__esModule ? obj : { 'default': obj }; }

	var _warning = __webpack_require__(178);

	var _warning2 = _interopRequireDefault(_warning);

	var _queryString = __webpack_require__(199);

	var _runTransitionHook = __webpack_require__(196);

	var _runTransitionHook2 = _interopRequireDefault(_runTransitionHook);

	var _PathUtils = __webpack_require__(185);

	var _deprecate = __webpack_require__(197);

	var _deprecate2 = _interopRequireDefault(_deprecate);

	var SEARCH_BASE_KEY = '$searchBase';

	function defaultStringifyQuery(query) {
	  return _queryString.stringify(query).replace(/%20/g, '+');
	}

	var defaultParseQueryString = _queryString.parse;

	function isNestedObject(object) {
	  for (var p in object) {
	    if (Object.prototype.hasOwnProperty.call(object, p) && typeof object[p] === 'object' && !Array.isArray(object[p]) && object[p] !== null) return true;
	  }return false;
	}

	/**
	 * Returns a new createHistory function that may be used to create
	 * history objects that know how to handle URL queries.
	 */
	function useQueries(createHistory) {
	  return function () {
	    var options = arguments.length <= 0 || arguments[0] === undefined ? {} : arguments[0];

	    var history = createHistory(options);

	    var stringifyQuery = options.stringifyQuery;
	    var parseQueryString = options.parseQueryString;

	    if (typeof stringifyQuery !== 'function') stringifyQuery = defaultStringifyQuery;

	    if (typeof parseQueryString !== 'function') parseQueryString = defaultParseQueryString;

	    function addQuery(location) {
	      if (location.query == null) {
	        var search = location.search;

	        location.query = parseQueryString(search.substring(1));
	        location[SEARCH_BASE_KEY] = { search: search, searchBase: '' };
	      }

	      // TODO: Instead of all the book-keeping here, this should just strip the
	      // stringified query from the search.

	      return location;
	    }

	    function appendQuery(location, query) {
	      var _extends2;

	      var searchBaseSpec = location[SEARCH_BASE_KEY];
	      var queryString = query ? stringifyQuery(query) : '';
	      if (!searchBaseSpec && !queryString) {
	        return location;
	      }

	      process.env.NODE_ENV !== 'production' ? _warning2['default'](stringifyQuery !== defaultStringifyQuery || !isNestedObject(query), 'useQueries does not stringify nested query objects by default; ' + 'use a custom stringifyQuery function') : undefined;

	      if (typeof location === 'string') location = _PathUtils.parsePath(location);

	      var searchBase = undefined;
	      if (searchBaseSpec && location.search === searchBaseSpec.search) {
	        searchBase = searchBaseSpec.searchBase;
	      } else {
	        searchBase = location.search || '';
	      }

	      var search = searchBase;
	      if (queryString) {
	        search += (search ? '&' : '?') + queryString;
	      }

	      return _extends({}, location, (_extends2 = {
	        search: search
	      }, _extends2[SEARCH_BASE_KEY] = { search: search, searchBase: searchBase }, _extends2));
	    }

	    // Override all read methods with query-aware versions.
	    function listenBefore(hook) {
	      return history.listenBefore(function (location, callback) {
	        _runTransitionHook2['default'](hook, addQuery(location), callback);
	      });
	    }

	    function listen(listener) {
	      return history.listen(function (location) {
	        listener(addQuery(location));
	      });
	    }

	    // Override all write methods with query-aware versions.
	    function push(location) {
	      history.push(appendQuery(location, location.query));
	    }

	    function replace(location) {
	      history.replace(appendQuery(location, location.query));
	    }

	    function createPath(location, query) {
	      process.env.NODE_ENV !== 'production' ? _warning2['default'](!query, 'the query argument to createPath is deprecated; use a location descriptor instead') : undefined;

	      return history.createPath(appendQuery(location, query || location.query));
	    }

	    function createHref(location, query) {
	      process.env.NODE_ENV !== 'production' ? _warning2['default'](!query, 'the query argument to createHref is deprecated; use a location descriptor instead') : undefined;

	      return history.createHref(appendQuery(location, query || location.query));
	    }

	    function createLocation(location) {
	      for (var _len = arguments.length, args = Array(_len > 1 ? _len - 1 : 0), _key = 1; _key < _len; _key++) {
	        args[_key - 1] = arguments[_key];
	      }

	      var fullLocation = history.createLocation.apply(history, [appendQuery(location, location.query)].concat(args));
	      if (location.query) {
	        fullLocation.query = location.query;
	      }
	      return addQuery(fullLocation);
	    }

	    // deprecated
	    function pushState(state, path, query) {
	      if (typeof path === 'string') path = _PathUtils.parsePath(path);

	      push(_extends({ state: state }, path, { query: query }));
	    }

	    // deprecated
	    function replaceState(state, path, query) {
	      if (typeof path === 'string') path = _PathUtils.parsePath(path);

	      replace(_extends({ state: state }, path, { query: query }));
	    }

	    return _extends({}, history, {
	      listenBefore: listenBefore,
	      listen: listen,
	      push: push,
	      replace: replace,
	      createPath: createPath,
	      createHref: createHref,
	      createLocation: createLocation,

	      pushState: _deprecate2['default'](pushState, 'pushState is deprecated; use push instead'),
	      replaceState: _deprecate2['default'](replaceState, 'replaceState is deprecated; use replace instead')
	    });
	  };
	}

	exports['default'] = useQueries;
	module.exports = exports['default'];
	/* WEBPACK VAR INJECTION */}.call(exports, __webpack_require__(4)))

/***/ },
/* 199 */
/***/ function(module, exports, __webpack_require__) {

	'use strict';
	var strictUriEncode = __webpack_require__(200);

	exports.extract = function (str) {
		return str.split('?')[1] || '';
	};

	exports.parse = function (str) {
		if (typeof str !== 'string') {
			return {};
		}

		str = str.trim().replace(/^(\?|#|&)/, '');

		if (!str) {
			return {};
		}

		return str.split('&').reduce(function (ret, param) {
			var parts = param.replace(/\+/g, ' ').split('=');
			// Firefox (pre 40) decodes `%3D` to `=`
			// https://github.com/sindresorhus/query-string/pull/37
			var key = parts.shift();
			var val = parts.length > 0 ? parts.join('=') : undefined;

			key = decodeURIComponent(key);

			// missing `=` should be `null`:
			// http://w3.org/TR/2012/WD-url-20120524/#collect-url-parameters
			val = val === undefined ? null : decodeURIComponent(val);

			if (!ret.hasOwnProperty(key)) {
				ret[key] = val;
			} else if (Array.isArray(ret[key])) {
				ret[key].push(val);
			} else {
				ret[key] = [ret[key], val];
			}

			return ret;
		}, {});
	};

	exports.stringify = function (obj) {
		return obj ? Object.keys(obj).sort().map(function (key) {
			var val = obj[key];

			if (val === undefined) {
				return '';
			}

			if (val === null) {
				return key;
			}

			if (Array.isArray(val)) {
				return val.slice().sort().map(function (val2) {
					return strictUriEncode(key) + '=' + strictUriEncode(val2);
				}).join('&');
			}

			return strictUriEncode(key) + '=' + strictUriEncode(val);
		}).filter(function (x) {
			return x.length > 0;
		}).join('&') : '';
	};


/***/ },
/* 200 */
/***/ function(module, exports) {

	'use strict';
	module.exports = function (str) {
		return encodeURIComponent(str).replace(/[!'()*]/g, function (c) {
			return '%' + c.charCodeAt(0).toString(16).toUpperCase();
		});
	};


/***/ },
/* 201 */
/***/ function(module, exports, __webpack_require__) {

	/* WEBPACK VAR INJECTION */(function(process) {'use strict';

	exports.__esModule = true;

	var _extends = Object.assign || function (target) { for (var i = 1; i < arguments.length; i++) { var source = arguments[i]; for (var key in source) { if (Object.prototype.hasOwnProperty.call(source, key)) { target[key] = source[key]; } } } return target; };

	exports.default = createTransitionManager;

	var _routerWarning = __webpack_require__(177);

	var _routerWarning2 = _interopRequireDefault(_routerWarning);

	var _Actions = __webpack_require__(184);

	var _computeChangedRoutes2 = __webpack_require__(202);

	var _computeChangedRoutes3 = _interopRequireDefault(_computeChangedRoutes2);

	var _TransitionUtils = __webpack_require__(203);

	var _isActive2 = __webpack_require__(205);

	var _isActive3 = _interopRequireDefault(_isActive2);

	var _getComponents = __webpack_require__(206);

	var _getComponents2 = _interopRequireDefault(_getComponents);

	var _matchRoutes = __webpack_require__(208);

	var _matchRoutes2 = _interopRequireDefault(_matchRoutes);

	function _interopRequireDefault(obj) { return obj && obj.__esModule ? obj : { default: obj }; }

	function hasAnyProperties(object) {
	  for (var p in object) {
	    if (Object.prototype.hasOwnProperty.call(object, p)) return true;
	  }return false;
	}

	function createTransitionManager(history, routes) {
	  var state = {};

	  // Signature should be (location, indexOnly), but needs to support (path,
	  // query, indexOnly)
	  function isActive(location) {
	    var indexOnlyOrDeprecatedQuery = arguments.length <= 1 || arguments[1] === undefined ? false : arguments[1];
	    var deprecatedIndexOnly = arguments.length <= 2 || arguments[2] === undefined ? null : arguments[2];

	    var indexOnly = void 0;
	    if (indexOnlyOrDeprecatedQuery && indexOnlyOrDeprecatedQuery !== true || deprecatedIndexOnly !== null) {
	      process.env.NODE_ENV !== 'production' ? (0, _routerWarning2.default)(false, '`isActive(pathname, query, indexOnly) is deprecated; use `isActive(location, indexOnly)` with a location descriptor instead. http://tiny.cc/router-isActivedeprecated') : void 0;
	      location = { pathname: location, query: indexOnlyOrDeprecatedQuery };
	      indexOnly = deprecatedIndexOnly || false;
	    } else {
	      location = history.createLocation(location);
	      indexOnly = indexOnlyOrDeprecatedQuery;
	    }

	    return (0, _isActive3.default)(location, indexOnly, state.location, state.routes, state.params);
	  }

	  function createLocationFromRedirectInfo(location) {
	    return history.createLocation(location, _Actions.REPLACE);
	  }

	  var partialNextState = void 0;

	  function match(location, callback) {
	    if (partialNextState && partialNextState.location === location) {
	      // Continue from where we left off.
	      finishMatch(partialNextState, callback);
	    } else {
	      (0, _matchRoutes2.default)(routes, location, function (error, nextState) {
	        if (error) {
	          callback(error);
	        } else if (nextState) {
	          finishMatch(_extends({}, nextState, { location: location }), callback);
	        } else {
	          callback();
	        }
	      });
	    }
	  }

	  function finishMatch(nextState, callback) {
	    var _computeChangedRoutes = (0, _computeChangedRoutes3.default)(state, nextState);

	    var leaveRoutes = _computeChangedRoutes.leaveRoutes;
	    var changeRoutes = _computeChangedRoutes.changeRoutes;
	    var enterRoutes = _computeChangedRoutes.enterRoutes;


	    (0, _TransitionUtils.runLeaveHooks)(leaveRoutes, state);

	    // Tear down confirmation hooks for left routes
	    leaveRoutes.filter(function (route) {
	      return enterRoutes.indexOf(route) === -1;
	    }).forEach(removeListenBeforeHooksForRoute);

	    // change and enter hooks are run in series
	    (0, _TransitionUtils.runChangeHooks)(changeRoutes, state, nextState, function (error, redirectInfo) {
	      if (error || redirectInfo) return handleErrorOrRedirect(error, redirectInfo);

	      (0, _TransitionUtils.runEnterHooks)(enterRoutes, nextState, finishEnterHooks);
	    });

	    function finishEnterHooks(error, redirectInfo) {
	      if (error || redirectInfo) return handleErrorOrRedirect(error, redirectInfo);

	      // TODO: Fetch components after state is updated.
	      (0, _getComponents2.default)(nextState, function (error, components) {
	        if (error) {
	          callback(error);
	        } else {
	          // TODO: Make match a pure function and have some other API
	          // for "match and update state".
	          callback(null, null, state = _extends({}, nextState, { components: components }));
	        }
	      });
	    }

	    function handleErrorOrRedirect(error, redirectInfo) {
	      if (error) callback(error);else callback(null, createLocationFromRedirectInfo(redirectInfo));
	    }
	  }

	  var RouteGuid = 1;

	  function getRouteID(route) {
	    var create = arguments.length <= 1 || arguments[1] === undefined ? true : arguments[1];

	    return route.__id__ || create && (route.__id__ = RouteGuid++);
	  }

	  var RouteHooks = Object.create(null);

	  function getRouteHooksForRoutes(routes) {
	    return routes.reduce(function (hooks, route) {
	      hooks.push.apply(hooks, RouteHooks[getRouteID(route)]);
	      return hooks;
	    }, []);
	  }

	  function transitionHook(location, callback) {
	    (0, _matchRoutes2.default)(routes, location, function (error, nextState) {
	      if (nextState == null) {
	        // TODO: We didn't actually match anything, but hang
	        // onto error/nextState so we don't have to matchRoutes
	        // again in the listen callback.
	        callback();
	        return;
	      }

	      // Cache some state here so we don't have to
	      // matchRoutes() again in the listen callback.
	      partialNextState = _extends({}, nextState, { location: location });

	      var hooks = getRouteHooksForRoutes((0, _computeChangedRoutes3.default)(state, partialNextState).leaveRoutes);

	      var result = void 0;
	      for (var i = 0, len = hooks.length; result == null && i < len; ++i) {
	        // Passing the location arg here indicates to
	        // the user that this is a transition hook.
	        result = hooks[i](location);
	      }

	      callback(result);
	    });
	  }

	  /* istanbul ignore next: untestable with Karma */
	  function beforeUnloadHook() {
	    // Synchronously check to see if any route hooks want
	    // to prevent the current window/tab from closing.
	    if (state.routes) {
	      var hooks = getRouteHooksForRoutes(state.routes);

	      var message = void 0;
	      for (var i = 0, len = hooks.length; typeof message !== 'string' && i < len; ++i) {
	        // Passing no args indicates to the user that this is a
	        // beforeunload hook. We don't know the next location.
	        message = hooks[i]();
	      }

	      return message;
	    }
	  }

	  var unlistenBefore = void 0,
	      unlistenBeforeUnload = void 0;

	  function removeListenBeforeHooksForRoute(route) {
	    var routeID = getRouteID(route, false);
	    if (!routeID) {
	      return;
	    }

	    delete RouteHooks[routeID];

	    if (!hasAnyProperties(RouteHooks)) {
	      // teardown transition & beforeunload hooks
	      if (unlistenBefore) {
	        unlistenBefore();
	        unlistenBefore = null;
	      }

	      if (unlistenBeforeUnload) {
	        unlistenBeforeUnload();
	        unlistenBeforeUnload = null;
	      }
	    }
	  }

	  /**
	   * Registers the given hook function to run before leaving the given route.
	   *
	   * During a normal transition, the hook function receives the next location
	   * as its only argument and can return either a prompt message (string) to show the user,
	   * to make sure they want to leave the page; or `false`, to prevent the transition.
	   * Any other return value will have no effect.
	   *
	   * During the beforeunload event (in browsers) the hook receives no arguments.
	   * In this case it must return a prompt message to prevent the transition.
	   *
	   * Returns a function that may be used to unbind the listener.
	   */
	  function listenBeforeLeavingRoute(route, hook) {
	    // TODO: Warn if they register for a route that isn't currently
	    // active. They're probably doing something wrong, like re-creating
	    // route objects on every location change.
	    var routeID = getRouteID(route);
	    var hooks = RouteHooks[routeID];

	    if (!hooks) {
	      var thereWereNoRouteHooks = !hasAnyProperties(RouteHooks);

	      RouteHooks[routeID] = [hook];

	      if (thereWereNoRouteHooks) {
	        // setup transition & beforeunload hooks
	        unlistenBefore = history.listenBefore(transitionHook);

	        if (history.listenBeforeUnload) unlistenBeforeUnload = history.listenBeforeUnload(beforeUnloadHook);
	      }
	    } else {
	      if (hooks.indexOf(hook) === -1) {
	        process.env.NODE_ENV !== 'production' ? (0, _routerWarning2.default)(false, 'adding multiple leave hooks for the same route is deprecated; manage multiple confirmations in your own code instead') : void 0;

	        hooks.push(hook);
	      }
	    }

	    return function () {
	      var hooks = RouteHooks[routeID];

	      if (hooks) {
	        var newHooks = hooks.filter(function (item) {
	          return item !== hook;
	        });

	        if (newHooks.length === 0) {
	          removeListenBeforeHooksForRoute(route);
	        } else {
	          RouteHooks[routeID] = newHooks;
	        }
	      }
	    };
	  }

	  /**
	   * This is the API for stateful environments. As the location
	   * changes, we update state and call the listener. We can also
	   * gracefully handle errors and redirects.
	   */
	  function listen(listener) {
	    // TODO: Only use a single history listener. Otherwise we'll
	    // end up with multiple concurrent calls to match.
	    return history.listen(function (location) {
	      if (state.location === location) {
	        listener(null, state);
	      } else {
	        match(location, function (error, redirectLocation, nextState) {
	          if (error) {
	            listener(error);
	          } else if (redirectLocation) {
	            history.transitionTo(redirectLocation);
	          } else if (nextState) {
	            listener(null, nextState);
	          } else {
	            process.env.NODE_ENV !== 'production' ? (0, _routerWarning2.default)(false, 'Location "%s" did not match any routes', location.pathname + location.search + location.hash) : void 0;
	          }
	        });
	      }
	    });
	  }

	  return {
	    isActive: isActive,
	    match: match,
	    listenBeforeLeavingRoute: listenBeforeLeavingRoute,
	    listen: listen
	  };
	}

	//export default useRoutes
	module.exports = exports['default'];
	/* WEBPACK VAR INJECTION */}.call(exports, __webpack_require__(4)))

/***/ },
/* 202 */
/***/ function(module, exports, __webpack_require__) {

	'use strict';

	exports.__esModule = true;

	var _PatternUtils = __webpack_require__(180);

	function routeParamsChanged(route, prevState, nextState) {
	  if (!route.path) return false;

	  var paramNames = (0, _PatternUtils.getParamNames)(route.path);

	  return paramNames.some(function (paramName) {
	    return prevState.params[paramName] !== nextState.params[paramName];
	  });
	}

	/**
	 * Returns an object of { leaveRoutes, changeRoutes, enterRoutes } determined by
	 * the change from prevState to nextState. We leave routes if either
	 * 1) they are not in the next state or 2) they are in the next state
	 * but their params have changed (i.e. /users/123 => /users/456).
	 *
	 * leaveRoutes are ordered starting at the leaf route of the tree
	 * we're leaving up to the common parent route. enterRoutes are ordered
	 * from the top of the tree we're entering down to the leaf route.
	 *
	 * changeRoutes are any routes that didn't leave or enter during
	 * the transition.
	 */
	function computeChangedRoutes(prevState, nextState) {
	  var prevRoutes = prevState && prevState.routes;
	  var nextRoutes = nextState.routes;

	  var leaveRoutes = void 0,
	      changeRoutes = void 0,
	      enterRoutes = void 0;
	  if (prevRoutes) {
	    (function () {
	      var parentIsLeaving = false;
	      leaveRoutes = prevRoutes.filter(function (route) {
	        if (parentIsLeaving) {
	          return true;
	        } else {
	          var isLeaving = nextRoutes.indexOf(route) === -1 || routeParamsChanged(route, prevState, nextState);
	          if (isLeaving) parentIsLeaving = true;
	          return isLeaving;
	        }
	      });

	      // onLeave hooks start at the leaf route.
	      leaveRoutes.reverse();

	      enterRoutes = [];
	      changeRoutes = [];

	      nextRoutes.forEach(function (route) {
	        var isNew = prevRoutes.indexOf(route) === -1;
	        var paramsChanged = leaveRoutes.indexOf(route) !== -1;

	        if (isNew || paramsChanged) enterRoutes.push(route);else changeRoutes.push(route);
	      });
	    })();
	  } else {
	    leaveRoutes = [];
	    changeRoutes = [];
	    enterRoutes = nextRoutes;
	  }

	  return {
	    leaveRoutes: leaveRoutes,
	    changeRoutes: changeRoutes,
	    enterRoutes: enterRoutes
	  };
	}

	exports.default = computeChangedRoutes;
	module.exports = exports['default'];

/***/ },
/* 203 */
/***/ function(module, exports, __webpack_require__) {

	/* WEBPACK VAR INJECTION */(function(process) {'use strict';

	exports.__esModule = true;
	exports.runEnterHooks = runEnterHooks;
	exports.runChangeHooks = runChangeHooks;
	exports.runLeaveHooks = runLeaveHooks;

	var _AsyncUtils = __webpack_require__(204);

	var _routerWarning = __webpack_require__(177);

	var _routerWarning2 = _interopRequireDefault(_routerWarning);

	function _interopRequireDefault(obj) { return obj && obj.__esModule ? obj : { default: obj }; }

	function createTransitionHook(hook, route, asyncArity) {
	  return function () {
	    for (var _len = arguments.length, args = Array(_len), _key = 0; _key < _len; _key++) {
	      args[_key] = arguments[_key];
	    }

	    hook.apply(route, args);

	    if (hook.length < asyncArity) {
	      var callback = args[args.length - 1];
	      // Assume hook executes synchronously and
	      // automatically call the callback.
	      callback();
	    }
	  };
	}

	function getEnterHooks(routes) {
	  return routes.reduce(function (hooks, route) {
	    if (route.onEnter) hooks.push(createTransitionHook(route.onEnter, route, 3));

	    return hooks;
	  }, []);
	}

	function getChangeHooks(routes) {
	  return routes.reduce(function (hooks, route) {
	    if (route.onChange) hooks.push(createTransitionHook(route.onChange, route, 4));
	    return hooks;
	  }, []);
	}

	function runTransitionHooks(length, iter, callback) {
	  if (!length) {
	    callback();
	    return;
	  }

	  var redirectInfo = void 0;
	  function replace(location, deprecatedPathname, deprecatedQuery) {
	    if (deprecatedPathname) {
	      process.env.NODE_ENV !== 'production' ? (0, _routerWarning2.default)(false, '`replaceState(state, pathname, query) is deprecated; use `replace(location)` with a location descriptor instead. http://tiny.cc/router-isActivedeprecated') : void 0;
	      redirectInfo = {
	        pathname: deprecatedPathname,
	        query: deprecatedQuery,
	        state: location
	      };

	      return;
	    }

	    redirectInfo = location;
	  }

	  (0, _AsyncUtils.loopAsync)(length, function (index, next, done) {
	    iter(index, replace, function (error) {
	      if (error || redirectInfo) {
	        done(error, redirectInfo); // No need to continue.
	      } else {
	        next();
	      }
	    });
	  }, callback);
	}

	/**
	 * Runs all onEnter hooks in the given array of routes in order
	 * with onEnter(nextState, replace, callback) and calls
	 * callback(error, redirectInfo) when finished. The first hook
	 * to use replace short-circuits the loop.
	 *
	 * If a hook needs to run asynchronously, it may use the callback
	 * function. However, doing so will cause the transition to pause,
	 * which could lead to a non-responsive UI if the hook is slow.
	 */
	function runEnterHooks(routes, nextState, callback) {
	  var hooks = getEnterHooks(routes);
	  return runTransitionHooks(hooks.length, function (index, replace, next) {
	    hooks[index](nextState, replace, next);
	  }, callback);
	}

	/**
	 * Runs all onChange hooks in the given array of routes in order
	 * with onChange(prevState, nextState, replace, callback) and calls
	 * callback(error, redirectInfo) when finished. The first hook
	 * to use replace short-circuits the loop.
	 *
	 * If a hook needs to run asynchronously, it may use the callback
	 * function. However, doing so will cause the transition to pause,
	 * which could lead to a non-responsive UI if the hook is slow.
	 */
	function runChangeHooks(routes, state, nextState, callback) {
	  var hooks = getChangeHooks(routes);
	  return runTransitionHooks(hooks.length, function (index, replace, next) {
	    hooks[index](state, nextState, replace, next);
	  }, callback);
	}

	/**
	 * Runs all onLeave hooks in the given array of routes in order.
	 */
	function runLeaveHooks(routes, prevState) {
	  for (var i = 0, len = routes.length; i < len; ++i) {
	    if (routes[i].onLeave) routes[i].onLeave.call(routes[i], prevState);
	  }
	}
	/* WEBPACK VAR INJECTION */}.call(exports, __webpack_require__(4)))

/***/ },
/* 204 */
/***/ function(module, exports) {

	"use strict";

	exports.__esModule = true;
	exports.loopAsync = loopAsync;
	exports.mapAsync = mapAsync;
	function loopAsync(turns, work, callback) {
	  var currentTurn = 0,
	      isDone = false;
	  var sync = false,
	      hasNext = false,
	      doneArgs = void 0;

	  function done() {
	    isDone = true;
	    if (sync) {
	      // Iterate instead of recursing if possible.
	      doneArgs = [].concat(Array.prototype.slice.call(arguments));
	      return;
	    }

	    callback.apply(this, arguments);
	  }

	  function next() {
	    if (isDone) {
	      return;
	    }

	    hasNext = true;
	    if (sync) {
	      // Iterate instead of recursing if possible.
	      return;
	    }

	    sync = true;

	    while (!isDone && currentTurn < turns && hasNext) {
	      hasNext = false;
	      work.call(this, currentTurn++, next, done);
	    }

	    sync = false;

	    if (isDone) {
	      // This means the loop finished synchronously.
	      callback.apply(this, doneArgs);
	      return;
	    }

	    if (currentTurn >= turns && hasNext) {
	      isDone = true;
	      callback();
	    }
	  }

	  next();
	}

	function mapAsync(array, work, callback) {
	  var length = array.length;
	  var values = [];

	  if (length === 0) return callback(null, values);

	  var isDone = false,
	      doneCount = 0;

	  function done(index, error, value) {
	    if (isDone) return;

	    if (error) {
	      isDone = true;
	      callback(error);
	    } else {
	      values[index] = value;

	      isDone = ++doneCount === length;

	      if (isDone) callback(null, values);
	    }
	  }

	  array.forEach(function (item, index) {
	    work(item, index, function (error, value) {
	      done(index, error, value);
	    });
	  });
	}

/***/ },
/* 205 */
/***/ function(module, exports, __webpack_require__) {

	'use strict';

	exports.__esModule = true;

	var _typeof = typeof Symbol === "function" && typeof Symbol.iterator === "symbol" ? function (obj) { return typeof obj; } : function (obj) { return obj && typeof Symbol === "function" && obj.constructor === Symbol ? "symbol" : typeof obj; };

	exports.default = isActive;

	var _PatternUtils = __webpack_require__(180);

	function deepEqual(a, b) {
	  if (a == b) return true;

	  if (a == null || b == null) return false;

	  if (Array.isArray(a)) {
	    return Array.isArray(b) && a.length === b.length && a.every(function (item, index) {
	      return deepEqual(item, b[index]);
	    });
	  }

	  if ((typeof a === 'undefined' ? 'undefined' : _typeof(a)) === 'object') {
	    for (var p in a) {
	      if (!Object.prototype.hasOwnProperty.call(a, p)) {
	        continue;
	      }

	      if (a[p] === undefined) {
	        if (b[p] !== undefined) {
	          return false;
	        }
	      } else if (!Object.prototype.hasOwnProperty.call(b, p)) {
	        return false;
	      } else if (!deepEqual(a[p], b[p])) {
	        return false;
	      }
	    }

	    return true;
	  }

	  return String(a) === String(b);
	}

	/**
	 * Returns true if the current pathname matches the supplied one, net of
	 * leading and trailing slash normalization. This is sufficient for an
	 * indexOnly route match.
	 */
	function pathIsActive(pathname, currentPathname) {
	  // Normalize leading slash for consistency. Leading slash on pathname has
	  // already been normalized in isActive. See caveat there.
	  if (currentPathname.charAt(0) !== '/') {
	    currentPathname = '/' + currentPathname;
	  }

	  // Normalize the end of both path names too. Maybe `/foo/` shouldn't show
	  // `/foo` as active, but in this case, we would already have failed the
	  // match.
	  if (pathname.charAt(pathname.length - 1) !== '/') {
	    pathname += '/';
	  }
	  if (currentPathname.charAt(currentPathname.length - 1) !== '/') {
	    currentPathname += '/';
	  }

	  return currentPathname === pathname;
	}

	/**
	 * Returns true if the given pathname matches the active routes and params.
	 */
	function routeIsActive(pathname, routes, params) {
	  var remainingPathname = pathname,
	      paramNames = [],
	      paramValues = [];

	  // for...of would work here but it's probably slower post-transpilation.
	  for (var i = 0, len = routes.length; i < len; ++i) {
	    var route = routes[i];
	    var pattern = route.path || '';

	    if (pattern.charAt(0) === '/') {
	      remainingPathname = pathname;
	      paramNames = [];
	      paramValues = [];
	    }

	    if (remainingPathname !== null && pattern) {
	      var matched = (0, _PatternUtils.matchPattern)(pattern, remainingPathname);
	      if (matched) {
	        remainingPathname = matched.remainingPathname;
	        paramNames = [].concat(paramNames, matched.paramNames);
	        paramValues = [].concat(paramValues, matched.paramValues);
	      } else {
	        remainingPathname = null;
	      }

	      if (remainingPathname === '') {
	        // We have an exact match on the route. Just check that all the params
	        // match.
	        // FIXME: This doesn't work on repeated params.
	        return paramNames.every(function (paramName, index) {
	          return String(paramValues[index]) === String(params[paramName]);
	        });
	      }
	    }
	  }

	  return false;
	}

	/**
	 * Returns true if all key/value pairs in the given query are
	 * currently active.
	 */
	function queryIsActive(query, activeQuery) {
	  if (activeQuery == null) return query == null;

	  if (query == null) return true;

	  return deepEqual(query, activeQuery);
	}

	/**
	 * Returns true if a <Link> to the given pathname/query combination is
	 * currently active.
	 */
	function isActive(_ref, indexOnly, currentLocation, routes, params) {
	  var pathname = _ref.pathname;
	  var query = _ref.query;

	  if (currentLocation == null) return false;

	  // TODO: This is a bit ugly. It keeps around support for treating pathnames
	  // without preceding slashes as absolute paths, but possibly also works
	  // around the same quirks with basenames as in matchRoutes.
	  if (pathname.charAt(0) !== '/') {
	    pathname = '/' + pathname;
	  }

	  if (!pathIsActive(pathname, currentLocation.pathname)) {
	    // The path check is necessary and sufficient for indexOnly, but otherwise
	    // we still need to check the routes.
	    if (indexOnly || !routeIsActive(pathname, routes, params)) {
	      return false;
	    }
	  }

	  return queryIsActive(query, currentLocation.query);
	}
	module.exports = exports['default'];

/***/ },
/* 206 */
/***/ function(module, exports, __webpack_require__) {

	'use strict';

	exports.__esModule = true;

	var _AsyncUtils = __webpack_require__(204);

	var _makeStateWithLocation = __webpack_require__(207);

	var _makeStateWithLocation2 = _interopRequireDefault(_makeStateWithLocation);

	function _interopRequireDefault(obj) { return obj && obj.__esModule ? obj : { default: obj }; }

	function getComponentsForRoute(nextState, route, callback) {
	  if (route.component || route.components) {
	    callback(null, route.component || route.components);
	    return;
	  }

	  var getComponent = route.getComponent || route.getComponents;
	  if (!getComponent) {
	    callback();
	    return;
	  }

	  var location = nextState.location;

	  var nextStateWithLocation = (0, _makeStateWithLocation2.default)(nextState, location);

	  getComponent.call(route, nextStateWithLocation, callback);
	}

	/**
	 * Asynchronously fetches all components needed for the given router
	 * state and calls callback(error, components) when finished.
	 *
	 * Note: This operation may finish synchronously if no routes have an
	 * asynchronous getComponents method.
	 */
	function getComponents(nextState, callback) {
	  (0, _AsyncUtils.mapAsync)(nextState.routes, function (route, index, callback) {
	    getComponentsForRoute(nextState, route, callback);
	  }, callback);
	}

	exports.default = getComponents;
	module.exports = exports['default'];

/***/ },
/* 207 */
/***/ function(module, exports, __webpack_require__) {

	/* WEBPACK VAR INJECTION */(function(process) {'use strict';

	exports.__esModule = true;

	var _extends = Object.assign || function (target) { for (var i = 1; i < arguments.length; i++) { var source = arguments[i]; for (var key in source) { if (Object.prototype.hasOwnProperty.call(source, key)) { target[key] = source[key]; } } } return target; };

	exports.default = makeStateWithLocation;

	var _deprecateObjectProperties = __webpack_require__(176);

	var _routerWarning = __webpack_require__(177);

	var _routerWarning2 = _interopRequireDefault(_routerWarning);

	function _interopRequireDefault(obj) { return obj && obj.__esModule ? obj : { default: obj }; }

	function makeStateWithLocation(state, location) {
	  if (process.env.NODE_ENV !== 'production' && _deprecateObjectProperties.canUseMembrane) {
	    var stateWithLocation = _extends({}, state);

	    // I don't use deprecateObjectProperties here because I want to keep the
	    // same code path between development and production, in that we just
	    // assign extra properties to the copy of the state object in both cases.

	    var _loop = function _loop(prop) {
	      if (!Object.prototype.hasOwnProperty.call(location, prop)) {
	        return 'continue';
	      }

	      Object.defineProperty(stateWithLocation, prop, {
	        get: function get() {
	          process.env.NODE_ENV !== 'production' ? (0, _routerWarning2.default)(false, 'Accessing location properties directly from the first argument to `getComponent`, `getComponents`, `getChildRoutes`, and `getIndexRoute` is deprecated. That argument is now the router state (`nextState` or `partialNextState`) rather than the location. To access the location, use `nextState.location` or `partialNextState.location`.') : void 0;
	          return location[prop];
	        }
	      });
	    };

	    for (var prop in location) {
	      var _ret = _loop(prop);

	      if (_ret === 'continue') continue;
	    }

	    return stateWithLocation;
	  }

	  return _extends({}, state, location);
	}
	module.exports = exports['default'];
	/* WEBPACK VAR INJECTION */}.call(exports, __webpack_require__(4)))

/***/ },
/* 208 */
/***/ function(module, exports, __webpack_require__) {

	/* WEBPACK VAR INJECTION */(function(process) {'use strict';

	exports.__esModule = true;

	var _extends = Object.assign || function (target) { for (var i = 1; i < arguments.length; i++) { var source = arguments[i]; for (var key in source) { if (Object.prototype.hasOwnProperty.call(source, key)) { target[key] = source[key]; } } } return target; };

	var _typeof = typeof Symbol === "function" && typeof Symbol.iterator === "symbol" ? function (obj) { return typeof obj; } : function (obj) { return obj && typeof Symbol === "function" && obj.constructor === Symbol ? "symbol" : typeof obj; };

	exports.default = matchRoutes;

	var _AsyncUtils = __webpack_require__(204);

	var _makeStateWithLocation = __webpack_require__(207);

	var _makeStateWithLocation2 = _interopRequireDefault(_makeStateWithLocation);

	var _PatternUtils = __webpack_require__(180);

	var _routerWarning = __webpack_require__(177);

	var _routerWarning2 = _interopRequireDefault(_routerWarning);

	var _RouteUtils = __webpack_require__(174);

	function _interopRequireDefault(obj) { return obj && obj.__esModule ? obj : { default: obj }; }

	function getChildRoutes(route, location, paramNames, paramValues, callback) {
	  if (route.childRoutes) {
	    return [null, route.childRoutes];
	  }
	  if (!route.getChildRoutes) {
	    return [];
	  }

	  var sync = true,
	      result = void 0;

	  var partialNextState = {
	    location: location,
	    params: createParams(paramNames, paramValues)
	  };

	  var partialNextStateWithLocation = (0, _makeStateWithLocation2.default)(partialNextState, location);

	  route.getChildRoutes(partialNextStateWithLocation, function (error, childRoutes) {
	    childRoutes = !error && (0, _RouteUtils.createRoutes)(childRoutes);
	    if (sync) {
	      result = [error, childRoutes];
	      return;
	    }

	    callback(error, childRoutes);
	  });

	  sync = false;
	  return result; // Might be undefined.
	}

	function getIndexRoute(route, location, paramNames, paramValues, callback) {
	  if (route.indexRoute) {
	    callback(null, route.indexRoute);
	  } else if (route.getIndexRoute) {
	    var partialNextState = {
	      location: location,
	      params: createParams(paramNames, paramValues)
	    };

	    var partialNextStateWithLocation = (0, _makeStateWithLocation2.default)(partialNextState, location);

	    route.getIndexRoute(partialNextStateWithLocation, function (error, indexRoute) {
	      callback(error, !error && (0, _RouteUtils.createRoutes)(indexRoute)[0]);
	    });
	  } else if (route.childRoutes) {
	    (function () {
	      var pathless = route.childRoutes.filter(function (childRoute) {
	        return !childRoute.path;
	      });

	      (0, _AsyncUtils.loopAsync)(pathless.length, function (index, next, done) {
	        getIndexRoute(pathless[index], location, paramNames, paramValues, function (error, indexRoute) {
	          if (error || indexRoute) {
	            var routes = [pathless[index]].concat(Array.isArray(indexRoute) ? indexRoute : [indexRoute]);
	            done(error, routes);
	          } else {
	            next();
	          }
	        });
	      }, function (err, routes) {
	        callback(null, routes);
	      });
	    })();
	  } else {
	    callback();
	  }
	}

	function assignParams(params, paramNames, paramValues) {
	  return paramNames.reduce(function (params, paramName, index) {
	    var paramValue = paramValues && paramValues[index];

	    if (Array.isArray(params[paramName])) {
	      params[paramName].push(paramValue);
	    } else if (paramName in params) {
	      params[paramName] = [params[paramName], paramValue];
	    } else {
	      params[paramName] = paramValue;
	    }

	    return params;
	  }, params);
	}

	function createParams(paramNames, paramValues) {
	  return assignParams({}, paramNames, paramValues);
	}

	function matchRouteDeep(route, location, remainingPathname, paramNames, paramValues, callback) {
	  var pattern = route.path || '';

	  if (pattern.charAt(0) === '/') {
	    remainingPathname = location.pathname;
	    paramNames = [];
	    paramValues = [];
	  }

	  // Only try to match the path if the route actually has a pattern, and if
	  // we're not just searching for potential nested absolute paths.
	  if (remainingPathname !== null && pattern) {
	    try {
	      var matched = (0, _PatternUtils.matchPattern)(pattern, remainingPathname);
	      if (matched) {
	        remainingPathname = matched.remainingPathname;
	        paramNames = [].concat(paramNames, matched.paramNames);
	        paramValues = [].concat(paramValues, matched.paramValues);
	      } else {
	        remainingPathname = null;
	      }
	    } catch (error) {
	      callback(error);
	    }

	    // By assumption, pattern is non-empty here, which is the prerequisite for
	    // actually terminating a match.
	    if (remainingPathname === '') {
	      var _ret2 = function () {
	        var match = {
	          routes: [route],
	          params: createParams(paramNames, paramValues)
	        };

	        getIndexRoute(route, location, paramNames, paramValues, function (error, indexRoute) {
	          if (error) {
	            callback(error);
	          } else {
	            if (Array.isArray(indexRoute)) {
	              var _match$routes;

	              process.env.NODE_ENV !== 'production' ? (0, _routerWarning2.default)(indexRoute.every(function (route) {
	                return !route.path;
	              }), 'Index routes should not have paths') : void 0;
	              (_match$routes = match.routes).push.apply(_match$routes, indexRoute);
	            } else if (indexRoute) {
	              process.env.NODE_ENV !== 'production' ? (0, _routerWarning2.default)(!indexRoute.path, 'Index routes should not have paths') : void 0;
	              match.routes.push(indexRoute);
	            }

	            callback(null, match);
	          }
	        });

	        return {
	          v: void 0
	        };
	      }();

	      if ((typeof _ret2 === 'undefined' ? 'undefined' : _typeof(_ret2)) === "object") return _ret2.v;
	    }
	  }

	  if (remainingPathname != null || route.childRoutes) {
	    // Either a) this route matched at least some of the path or b)
	    // we don't have to load this route's children asynchronously. In
	    // either case continue checking for matches in the subtree.
	    var onChildRoutes = function onChildRoutes(error, childRoutes) {
	      if (error) {
	        callback(error);
	      } else if (childRoutes) {
	        // Check the child routes to see if any of them match.
	        matchRoutes(childRoutes, location, function (error, match) {
	          if (error) {
	            callback(error);
	          } else if (match) {
	            // A child route matched! Augment the match and pass it up the stack.
	            match.routes.unshift(route);
	            callback(null, match);
	          } else {
	            callback();
	          }
	        }, remainingPathname, paramNames, paramValues);
	      } else {
	        callback();
	      }
	    };

	    var result = getChildRoutes(route, location, paramNames, paramValues, onChildRoutes);
	    if (result) {
	      onChildRoutes.apply(undefined, result);
	    }
	  } else {
	    callback();
	  }
	}

	/**
	 * Asynchronously matches the given location to a set of routes and calls
	 * callback(error, state) when finished. The state object will have the
	 * following properties:
	 *
	 * - routes       An array of routes that matched, in hierarchical order
	 * - params       An object of URL parameters
	 *
	 * Note: This operation may finish synchronously if no routes have an
	 * asynchronous getChildRoutes method.
	 */
	function matchRoutes(routes, location, callback, remainingPathname) {
	  var paramNames = arguments.length <= 4 || arguments[4] === undefined ? [] : arguments[4];
	  var paramValues = arguments.length <= 5 || arguments[5] === undefined ? [] : arguments[5];

	  if (remainingPathname === undefined) {
	    // TODO: This is a little bit ugly, but it works around a quirk in history
	    // that strips the leading slash from pathnames when using basenames with
	    // trailing slashes.
	    if (location.pathname.charAt(0) !== '/') {
	      location = _extends({}, location, {
	        pathname: '/' + location.pathname
	      });
	    }
	    remainingPathname = location.pathname;
	  }

	  (0, _AsyncUtils.loopAsync)(routes.length, function (index, next, done) {
	    matchRouteDeep(routes[index], location, remainingPathname, paramNames, paramValues, function (error, match) {
	      if (error || match) {
	        done(error, match);
	      } else {
	        next();
	      }
	    });
	  }, callback);
	}
	module.exports = exports['default'];
	/* WEBPACK VAR INJECTION */}.call(exports, __webpack_require__(4)))

/***/ },
/* 209 */
/***/ function(module, exports, __webpack_require__) {

	/* WEBPACK VAR INJECTION */(function(process) {'use strict';

	exports.__esModule = true;

	var _typeof = typeof Symbol === "function" && typeof Symbol.iterator === "symbol" ? function (obj) { return typeof obj; } : function (obj) { return obj && typeof Symbol === "function" && obj.constructor === Symbol ? "symbol" : typeof obj; };

	var _extends = Object.assign || function (target) { for (var i = 1; i < arguments.length; i++) { var source = arguments[i]; for (var key in source) { if (Object.prototype.hasOwnProperty.call(source, key)) { target[key] = source[key]; } } } return target; };

	var _invariant = __webpack_require__(181);

	var _invariant2 = _interopRequireDefault(_invariant);

	var _react = __webpack_require__(2);

	var _react2 = _interopRequireDefault(_react);

	var _deprecateObjectProperties = __webpack_require__(176);

	var _deprecateObjectProperties2 = _interopRequireDefault(_deprecateObjectProperties);

	var _getRouteParams = __webpack_require__(210);

	var _getRouteParams2 = _interopRequireDefault(_getRouteParams);

	var _RouteUtils = __webpack_require__(174);

	var _routerWarning = __webpack_require__(177);

	var _routerWarning2 = _interopRequireDefault(_routerWarning);

	function _interopRequireDefault(obj) { return obj && obj.__esModule ? obj : { default: obj }; }

	var _React$PropTypes = _react2.default.PropTypes;
	var array = _React$PropTypes.array;
	var func = _React$PropTypes.func;
	var object = _React$PropTypes.object;

	/**
	 * A <RouterContext> renders the component tree for a given router state
	 * and sets the history object and the current location in context.
	 */

	var RouterContext = _react2.default.createClass({
	  displayName: 'RouterContext',


	  propTypes: {
	    history: object,
	    router: object.isRequired,
	    location: object.isRequired,
	    routes: array.isRequired,
	    params: object.isRequired,
	    components: array.isRequired,
	    createElement: func.isRequired
	  },

	  getDefaultProps: function getDefaultProps() {
	    return {
	      createElement: _react2.default.createElement
	    };
	  },


	  childContextTypes: {
	    history: object,
	    location: object.isRequired,
	    router: object.isRequired
	  },

	  getChildContext: function getChildContext() {
	    var _props = this.props;
	    var router = _props.router;
	    var history = _props.history;
	    var location = _props.location;

	    if (!router) {
	      process.env.NODE_ENV !== 'production' ? (0, _routerWarning2.default)(false, '`<RouterContext>` expects a `router` rather than a `history`') : void 0;

	      router = _extends({}, history, {
	        setRouteLeaveHook: history.listenBeforeLeavingRoute
	      });
	      delete router.listenBeforeLeavingRoute;
	    }

	    if (process.env.NODE_ENV !== 'production') {
	      location = (0, _deprecateObjectProperties2.default)(location, '`context.location` is deprecated, please use a route component\'s `props.location` instead. http://tiny.cc/router-accessinglocation');
	    }

	    return { history: history, location: location, router: router };
	  },
	  createElement: function createElement(component, props) {
	    return component == null ? null : this.props.createElement(component, props);
	  },
	  render: function render() {
	    var _this = this;

	    var _props2 = this.props;
	    var history = _props2.history;
	    var location = _props2.location;
	    var routes = _props2.routes;
	    var params = _props2.params;
	    var components = _props2.components;

	    var element = null;

	    if (components) {
	      element = components.reduceRight(function (element, components, index) {
	        if (components == null) return element; // Don't create new children; use the grandchildren.

	        var route = routes[index];
	        var routeParams = (0, _getRouteParams2.default)(route, params);
	        var props = {
	          history: history,
	          location: location,
	          params: params,
	          route: route,
	          routeParams: routeParams,
	          routes: routes
	        };

	        if ((0, _RouteUtils.isReactChildren)(element)) {
	          props.children = element;
	        } else if (element) {
	          for (var prop in element) {
	            if (Object.prototype.hasOwnProperty.call(element, prop)) props[prop] = element[prop];
	          }
	        }

	        if ((typeof components === 'undefined' ? 'undefined' : _typeof(components)) === 'object') {
	          var elements = {};

	          for (var key in components) {
	            if (Object.prototype.hasOwnProperty.call(components, key)) {
	              // Pass through the key as a prop to createElement to allow
	              // custom createElement functions to know which named component
	              // they're rendering, for e.g. matching up to fetched data.
	              elements[key] = _this.createElement(components[key], _extends({
	                key: key }, props));
	            }
	          }

	          return elements;
	        }

	        return _this.createElement(components, props);
	      }, element);
	    }

	    !(element === null || element === false || _react2.default.isValidElement(element)) ? process.env.NODE_ENV !== 'production' ? (0, _invariant2.default)(false, 'The root route must render a single element') : (0, _invariant2.default)(false) : void 0;

	    return element;
	  }
	});

	exports.default = RouterContext;
	module.exports = exports['default'];
	/* WEBPACK VAR INJECTION */}.call(exports, __webpack_require__(4)))

/***/ },
/* 210 */
/***/ function(module, exports, __webpack_require__) {

	'use strict';

	exports.__esModule = true;

	var _PatternUtils = __webpack_require__(180);

	/**
	 * Extracts an object of params the given route cares about from
	 * the given params object.
	 */
	function getRouteParams(route, params) {
	  var routeParams = {};

	  if (!route.path) return routeParams;

	  (0, _PatternUtils.getParamNames)(route.path).forEach(function (p) {
	    if (Object.prototype.hasOwnProperty.call(params, p)) {
	      routeParams[p] = params[p];
	    }
	  });

	  return routeParams;
	}

	exports.default = getRouteParams;
	module.exports = exports['default'];

/***/ },
/* 211 */
/***/ function(module, exports, __webpack_require__) {

	/* WEBPACK VAR INJECTION */(function(process) {'use strict';

	exports.__esModule = true;

	var _extends = Object.assign || function (target) { for (var i = 1; i < arguments.length; i++) { var source = arguments[i]; for (var key in source) { if (Object.prototype.hasOwnProperty.call(source, key)) { target[key] = source[key]; } } } return target; };

	exports.createRouterObject = createRouterObject;
	exports.createRoutingHistory = createRoutingHistory;

	var _deprecateObjectProperties = __webpack_require__(176);

	var _deprecateObjectProperties2 = _interopRequireDefault(_deprecateObjectProperties);

	function _interopRequireDefault(obj) { return obj && obj.__esModule ? obj : { default: obj }; }

	function createRouterObject(history, transitionManager) {
	  return _extends({}, history, {
	    setRouteLeaveHook: transitionManager.listenBeforeLeavingRoute,
	    isActive: transitionManager.isActive
	  });
	}

	// deprecated
	function createRoutingHistory(history, transitionManager) {
	  history = _extends({}, history, transitionManager);

	  if (process.env.NODE_ENV !== 'production') {
	    history = (0, _deprecateObjectProperties2.default)(history, '`props.history` and `context.history` are deprecated. Please use `context.router`. http://tiny.cc/router-contextchanges');
	  }

	  return history;
	}
	/* WEBPACK VAR INJECTION */}.call(exports, __webpack_require__(4)))

/***/ },
/* 212 */
/***/ function(module, exports, __webpack_require__) {

	/* WEBPACK VAR INJECTION */(function(process) {'use strict';

	exports.__esModule = true;

	var _extends = Object.assign || function (target) { for (var i = 1; i < arguments.length; i++) { var source = arguments[i]; for (var key in source) { if (Object.prototype.hasOwnProperty.call(source, key)) { target[key] = source[key]; } } } return target; };

	var _react = __webpack_require__(2);

	var _react2 = _interopRequireDefault(_react);

	var _routerWarning = __webpack_require__(177);

	var _routerWarning2 = _interopRequireDefault(_routerWarning);

	var _invariant = __webpack_require__(181);

	var _invariant2 = _interopRequireDefault(_invariant);

	var _PropTypes = __webpack_require__(175);

	function _interopRequireDefault(obj) { return obj && obj.__esModule ? obj : { default: obj }; }

	function _objectWithoutProperties(obj, keys) { var target = {}; for (var i in obj) { if (keys.indexOf(i) >= 0) continue; if (!Object.prototype.hasOwnProperty.call(obj, i)) continue; target[i] = obj[i]; } return target; }

	var _React$PropTypes = _react2.default.PropTypes;
	var bool = _React$PropTypes.bool;
	var object = _React$PropTypes.object;
	var string = _React$PropTypes.string;
	var func = _React$PropTypes.func;
	var oneOfType = _React$PropTypes.oneOfType;


	function isLeftClickEvent(event) {
	  return event.button === 0;
	}

	function isModifiedEvent(event) {
	  return !!(event.metaKey || event.altKey || event.ctrlKey || event.shiftKey);
	}

	// TODO: De-duplicate against hasAnyProperties in createTransitionManager.
	function isEmptyObject(object) {
	  for (var p in object) {
	    if (Object.prototype.hasOwnProperty.call(object, p)) return false;
	  }return true;
	}

	function createLocationDescriptor(to, _ref) {
	  var query = _ref.query;
	  var hash = _ref.hash;
	  var state = _ref.state;

	  if (query || hash || state) {
	    return { pathname: to, query: query, hash: hash, state: state };
	  }

	  return to;
	}

	/**
	 * A <Link> is used to create an <a> element that links to a route.
	 * When that route is active, the link gets the value of its
	 * activeClassName prop.
	 *
	 * For example, assuming you have the following route:
	 *
	 *   <Route path="/posts/:postID" component={Post} />
	 *
	 * You could use the following component to link to that route:
	 *
	 *   <Link to={`/posts/${post.id}`} />
	 *
	 * Links may pass along location state and/or query string parameters
	 * in the state/query props, respectively.
	 *
	 *   <Link ... query={{ show: true }} state={{ the: 'state' }} />
	 */
	var Link = _react2.default.createClass({
	  displayName: 'Link',


	  contextTypes: {
	    router: _PropTypes.routerShape
	  },

	  propTypes: {
	    to: oneOfType([string, object]).isRequired,
	    query: object,
	    hash: string,
	    state: object,
	    activeStyle: object,
	    activeClassName: string,
	    onlyActiveOnIndex: bool.isRequired,
	    onClick: func,
	    target: string
	  },

	  getDefaultProps: function getDefaultProps() {
	    return {
	      onlyActiveOnIndex: false,
	      style: {}
	    };
	  },
	  handleClick: function handleClick(event) {
	    if (this.props.onClick) this.props.onClick(event);

	    if (event.defaultPrevented) return;

	    !this.context.router ? process.env.NODE_ENV !== 'production' ? (0, _invariant2.default)(false, '<Link>s rendered outside of a router context cannot navigate.') : (0, _invariant2.default)(false) : void 0;

	    if (isModifiedEvent(event) || !isLeftClickEvent(event)) return;

	    // If target prop is set (e.g. to "_blank"), let browser handle link.
	    /* istanbul ignore if: untestable with Karma */
	    if (this.props.target) return;

	    event.preventDefault();

	    var _props = this.props;
	    var to = _props.to;
	    var query = _props.query;
	    var hash = _props.hash;
	    var state = _props.state;

	    var location = createLocationDescriptor(to, { query: query, hash: hash, state: state });

	    this.context.router.push(location);
	  },
	  render: function render() {
	    var _props2 = this.props;
	    var to = _props2.to;
	    var query = _props2.query;
	    var hash = _props2.hash;
	    var state = _props2.state;
	    var activeClassName = _props2.activeClassName;
	    var activeStyle = _props2.activeStyle;
	    var onlyActiveOnIndex = _props2.onlyActiveOnIndex;

	    var props = _objectWithoutProperties(_props2, ['to', 'query', 'hash', 'state', 'activeClassName', 'activeStyle', 'onlyActiveOnIndex']);

	    process.env.NODE_ENV !== 'production' ? (0, _routerWarning2.default)(!(query || hash || state), 'the `query`, `hash`, and `state` props on `<Link>` are deprecated, use `<Link to={{ pathname, query, hash, state }}/>. http://tiny.cc/router-isActivedeprecated') : void 0;

	    // Ignore if rendered outside the context of router, simplifies unit testing.
	    var router = this.context.router;


	    if (router) {
	      var location = createLocationDescriptor(to, { query: query, hash: hash, state: state });
	      props.href = router.createHref(location);

	      if (activeClassName || activeStyle != null && !isEmptyObject(activeStyle)) {
	        if (router.isActive(location, onlyActiveOnIndex)) {
	          if (activeClassName) {
	            if (props.className) {
	              props.className += ' ' + activeClassName;
	            } else {
	              props.className = activeClassName;
	            }
	          }

	          if (activeStyle) props.style = _extends({}, props.style, activeStyle);
	        }
	      }
	    }

	    return _react2.default.createElement('a', _extends({}, props, { onClick: this.handleClick }));
	  }
	});

	exports.default = Link;
	module.exports = exports['default'];
	/* WEBPACK VAR INJECTION */}.call(exports, __webpack_require__(4)))

/***/ },
/* 213 */
/***/ function(module, exports, __webpack_require__) {

	'use strict';

	exports.__esModule = true;

	var _extends = Object.assign || function (target) { for (var i = 1; i < arguments.length; i++) { var source = arguments[i]; for (var key in source) { if (Object.prototype.hasOwnProperty.call(source, key)) { target[key] = source[key]; } } } return target; };

	var _react = __webpack_require__(2);

	var _react2 = _interopRequireDefault(_react);

	var _Link = __webpack_require__(212);

	var _Link2 = _interopRequireDefault(_Link);

	function _interopRequireDefault(obj) { return obj && obj.__esModule ? obj : { default: obj }; }

	/**
	 * An <IndexLink> is used to link to an <IndexRoute>.
	 */
	var IndexLink = _react2.default.createClass({
	  displayName: 'IndexLink',
	  render: function render() {
	    return _react2.default.createElement(_Link2.default, _extends({}, this.props, { onlyActiveOnIndex: true }));
	  }
	});

	exports.default = IndexLink;
	module.exports = exports['default'];

/***/ },
/* 214 */
/***/ function(module, exports, __webpack_require__) {

	'use strict';

	exports.__esModule = true;

	var _extends = Object.assign || function (target) { for (var i = 1; i < arguments.length; i++) { var source = arguments[i]; for (var key in source) { if (Object.prototype.hasOwnProperty.call(source, key)) { target[key] = source[key]; } } } return target; };

	exports.default = withRouter;

	var _react = __webpack_require__(2);

	var _react2 = _interopRequireDefault(_react);

	var _hoistNonReactStatics = __webpack_require__(215);

	var _hoistNonReactStatics2 = _interopRequireDefault(_hoistNonReactStatics);

	var _PropTypes = __webpack_require__(175);

	function _interopRequireDefault(obj) { return obj && obj.__esModule ? obj : { default: obj }; }

	function getDisplayName(WrappedComponent) {
	  return WrappedComponent.displayName || WrappedComponent.name || 'Component';
	}

	function withRouter(WrappedComponent) {
	  var WithRouter = _react2.default.createClass({
	    displayName: 'WithRouter',

	    contextTypes: { router: _PropTypes.routerShape },
	    render: function render() {
	      return _react2.default.createElement(WrappedComponent, _extends({}, this.props, { router: this.context.router }));
	    }
	  });

	  WithRouter.displayName = 'withRouter(' + getDisplayName(WrappedComponent) + ')';
	  WithRouter.WrappedComponent = WrappedComponent;

	  return (0, _hoistNonReactStatics2.default)(WithRouter, WrappedComponent);
	}
	module.exports = exports['default'];

/***/ },
/* 215 */
/***/ function(module, exports) {

	/**
	 * Copyright 2015, Yahoo! Inc.
	 * Copyrights licensed under the New BSD License. See the accompanying LICENSE file for terms.
	 */
	'use strict';

	var REACT_STATICS = {
	    childContextTypes: true,
	    contextTypes: true,
	    defaultProps: true,
	    displayName: true,
	    getDefaultProps: true,
	    mixins: true,
	    propTypes: true,
	    type: true
	};

	var KNOWN_STATICS = {
	    name: true,
	    length: true,
	    prototype: true,
	    caller: true,
	    arguments: true,
	    arity: true
	};

	var isGetOwnPropertySymbolsAvailable = typeof Object.getOwnPropertySymbols === 'function';

	module.exports = function hoistNonReactStatics(targetComponent, sourceComponent, customStatics) {
	    if (typeof sourceComponent !== 'string') { // don't hoist over string (html) components
	        var keys = Object.getOwnPropertyNames(sourceComponent);

	        /* istanbul ignore else */
	        if (isGetOwnPropertySymbolsAvailable) {
	            keys = keys.concat(Object.getOwnPropertySymbols(sourceComponent));
	        }

	        for (var i = 0; i < keys.length; ++i) {
	            if (!REACT_STATICS[keys[i]] && !KNOWN_STATICS[keys[i]] && (!customStatics || !customStatics[keys[i]])) {
	                try {
	                    targetComponent[keys[i]] = sourceComponent[keys[i]];
	                } catch (error) {

	                }
	            }
	        }
	    }

	    return targetComponent;
	};


/***/ },
/* 216 */
/***/ function(module, exports, __webpack_require__) {

	/* WEBPACK VAR INJECTION */(function(process) {'use strict';

	exports.__esModule = true;

	var _react = __webpack_require__(2);

	var _react2 = _interopRequireDefault(_react);

	var _routerWarning = __webpack_require__(177);

	var _routerWarning2 = _interopRequireDefault(_routerWarning);

	var _invariant = __webpack_require__(181);

	var _invariant2 = _interopRequireDefault(_invariant);

	var _Redirect = __webpack_require__(217);

	var _Redirect2 = _interopRequireDefault(_Redirect);

	var _InternalPropTypes = __webpack_require__(179);

	function _interopRequireDefault(obj) { return obj && obj.__esModule ? obj : { default: obj }; }

	var _React$PropTypes = _react2.default.PropTypes;
	var string = _React$PropTypes.string;
	var object = _React$PropTypes.object;

	/**
	 * An <IndexRedirect> is used to redirect from an indexRoute.
	 */

	var IndexRedirect = _react2.default.createClass({
	  displayName: 'IndexRedirect',


	  statics: {
	    createRouteFromReactElement: function createRouteFromReactElement(element, parentRoute) {
	      /* istanbul ignore else: sanity check */
	      if (parentRoute) {
	        parentRoute.indexRoute = _Redirect2.default.createRouteFromReactElement(element);
	      } else {
	        process.env.NODE_ENV !== 'production' ? (0, _routerWarning2.default)(false, 'An <IndexRedirect> does not make sense at the root of your route config') : void 0;
	      }
	    }
	  },

	  propTypes: {
	    to: string.isRequired,
	    query: object,
	    state: object,
	    onEnter: _InternalPropTypes.falsy,
	    children: _InternalPropTypes.falsy
	  },

	  /* istanbul ignore next: sanity check */
	  render: function render() {
	     true ? process.env.NODE_ENV !== 'production' ? (0, _invariant2.default)(false, '<IndexRedirect> elements are for router configuration only and should not be rendered') : (0, _invariant2.default)(false) : void 0;
	  }
	});

	exports.default = IndexRedirect;
	module.exports = exports['default'];
	/* WEBPACK VAR INJECTION */}.call(exports, __webpack_require__(4)))

/***/ },
/* 217 */
/***/ function(module, exports, __webpack_require__) {

	/* WEBPACK VAR INJECTION */(function(process) {'use strict';

	exports.__esModule = true;

	var _react = __webpack_require__(2);

	var _react2 = _interopRequireDefault(_react);

	var _invariant = __webpack_require__(181);

	var _invariant2 = _interopRequireDefault(_invariant);

	var _RouteUtils = __webpack_require__(174);

	var _PatternUtils = __webpack_require__(180);

	var _InternalPropTypes = __webpack_require__(179);

	function _interopRequireDefault(obj) { return obj && obj.__esModule ? obj : { default: obj }; }

	var _React$PropTypes = _react2.default.PropTypes;
	var string = _React$PropTypes.string;
	var object = _React$PropTypes.object;

	/**
	 * A <Redirect> is used to declare another URL path a client should
	 * be sent to when they request a given URL.
	 *
	 * Redirects are placed alongside routes in the route configuration
	 * and are traversed in the same manner.
	 */

	var Redirect = _react2.default.createClass({
	  displayName: 'Redirect',


	  statics: {
	    createRouteFromReactElement: function createRouteFromReactElement(element) {
	      var route = (0, _RouteUtils.createRouteFromReactElement)(element);

	      if (route.from) route.path = route.from;

	      route.onEnter = function (nextState, replace) {
	        var location = nextState.location;
	        var params = nextState.params;


	        var pathname = void 0;
	        if (route.to.charAt(0) === '/') {
	          pathname = (0, _PatternUtils.formatPattern)(route.to, params);
	        } else if (!route.to) {
	          pathname = location.pathname;
	        } else {
	          var routeIndex = nextState.routes.indexOf(route);
	          var parentPattern = Redirect.getRoutePattern(nextState.routes, routeIndex - 1);
	          var pattern = parentPattern.replace(/\/*$/, '/') + route.to;
	          pathname = (0, _PatternUtils.formatPattern)(pattern, params);
	        }

	        replace({
	          pathname: pathname,
	          query: route.query || location.query,
	          state: route.state || location.state
	        });
	      };

	      return route;
	    },
	    getRoutePattern: function getRoutePattern(routes, routeIndex) {
	      var parentPattern = '';

	      for (var i = routeIndex; i >= 0; i--) {
	        var route = routes[i];
	        var pattern = route.path || '';

	        parentPattern = pattern.replace(/\/*$/, '/') + parentPattern;

	        if (pattern.indexOf('/') === 0) break;
	      }

	      return '/' + parentPattern;
	    }
	  },

	  propTypes: {
	    path: string,
	    from: string, // Alias for path
	    to: string.isRequired,
	    query: object,
	    state: object,
	    onEnter: _InternalPropTypes.falsy,
	    children: _InternalPropTypes.falsy
	  },

	  /* istanbul ignore next: sanity check */
	  render: function render() {
	     true ? process.env.NODE_ENV !== 'production' ? (0, _invariant2.default)(false, '<Redirect> elements are for router configuration only and should not be rendered') : (0, _invariant2.default)(false) : void 0;
	  }
	});

	exports.default = Redirect;
	module.exports = exports['default'];
	/* WEBPACK VAR INJECTION */}.call(exports, __webpack_require__(4)))

/***/ },
/* 218 */
/***/ function(module, exports, __webpack_require__) {

	/* WEBPACK VAR INJECTION */(function(process) {'use strict';

	exports.__esModule = true;

	var _react = __webpack_require__(2);

	var _react2 = _interopRequireDefault(_react);

	var _routerWarning = __webpack_require__(177);

	var _routerWarning2 = _interopRequireDefault(_routerWarning);

	var _invariant = __webpack_require__(181);

	var _invariant2 = _interopRequireDefault(_invariant);

	var _RouteUtils = __webpack_require__(174);

	var _InternalPropTypes = __webpack_require__(179);

	function _interopRequireDefault(obj) { return obj && obj.__esModule ? obj : { default: obj }; }

	var func = _react2.default.PropTypes.func;

	/**
	 * An <IndexRoute> is used to specify its parent's <Route indexRoute> in
	 * a JSX route config.
	 */

	var IndexRoute = _react2.default.createClass({
	  displayName: 'IndexRoute',


	  statics: {
	    createRouteFromReactElement: function createRouteFromReactElement(element, parentRoute) {
	      /* istanbul ignore else: sanity check */
	      if (parentRoute) {
	        parentRoute.indexRoute = (0, _RouteUtils.createRouteFromReactElement)(element);
	      } else {
	        process.env.NODE_ENV !== 'production' ? (0, _routerWarning2.default)(false, 'An <IndexRoute> does not make sense at the root of your route config') : void 0;
	      }
	    }
	  },

	  propTypes: {
	    path: _InternalPropTypes.falsy,
	    component: _InternalPropTypes.component,
	    components: _InternalPropTypes.components,
	    getComponent: func,
	    getComponents: func
	  },

	  /* istanbul ignore next: sanity check */
	  render: function render() {
	     true ? process.env.NODE_ENV !== 'production' ? (0, _invariant2.default)(false, '<IndexRoute> elements are for router configuration only and should not be rendered') : (0, _invariant2.default)(false) : void 0;
	  }
	});

	exports.default = IndexRoute;
	module.exports = exports['default'];
	/* WEBPACK VAR INJECTION */}.call(exports, __webpack_require__(4)))

/***/ },
/* 219 */
/***/ function(module, exports, __webpack_require__) {

	/* WEBPACK VAR INJECTION */(function(process) {'use strict';

	exports.__esModule = true;

	var _react = __webpack_require__(2);

	var _react2 = _interopRequireDefault(_react);

	var _invariant = __webpack_require__(181);

	var _invariant2 = _interopRequireDefault(_invariant);

	var _RouteUtils = __webpack_require__(174);

	var _InternalPropTypes = __webpack_require__(179);

	function _interopRequireDefault(obj) { return obj && obj.__esModule ? obj : { default: obj }; }

	var _React$PropTypes = _react2.default.PropTypes;
	var string = _React$PropTypes.string;
	var func = _React$PropTypes.func;

	/**
	 * A <Route> is used to declare which components are rendered to the
	 * page when the URL matches a given pattern.
	 *
	 * Routes are arranged in a nested tree structure. When a new URL is
	 * requested, the tree is searched depth-first to find a route whose
	 * path matches the URL.  When one is found, all routes in the tree
	 * that lead to it are considered "active" and their components are
	 * rendered into the DOM, nested in the same order as in the tree.
	 */

	var Route = _react2.default.createClass({
	  displayName: 'Route',


	  statics: {
	    createRouteFromReactElement: _RouteUtils.createRouteFromReactElement
	  },

	  propTypes: {
	    path: string,
	    component: _InternalPropTypes.component,
	    components: _InternalPropTypes.components,
	    getComponent: func,
	    getComponents: func
	  },

	  /* istanbul ignore next: sanity check */
	  render: function render() {
	     true ? process.env.NODE_ENV !== 'production' ? (0, _invariant2.default)(false, '<Route> elements are for router configuration only and should not be rendered') : (0, _invariant2.default)(false) : void 0;
	  }
	});

	exports.default = Route;
	module.exports = exports['default'];
	/* WEBPACK VAR INJECTION */}.call(exports, __webpack_require__(4)))

/***/ },
/* 220 */
/***/ function(module, exports, __webpack_require__) {

	/* WEBPACK VAR INJECTION */(function(process) {'use strict';

	exports.__esModule = true;

	var _routerWarning = __webpack_require__(177);

	var _routerWarning2 = _interopRequireDefault(_routerWarning);

	var _InternalPropTypes = __webpack_require__(179);

	function _interopRequireDefault(obj) { return obj && obj.__esModule ? obj : { default: obj }; }

	/**
	 * A mixin that adds the "history" instance variable to components.
	 */
	var History = {

	  contextTypes: {
	    history: _InternalPropTypes.history
	  },

	  componentWillMount: function componentWillMount() {
	    process.env.NODE_ENV !== 'production' ? (0, _routerWarning2.default)(false, 'the `History` mixin is deprecated, please access `context.router` with your own `contextTypes`. http://tiny.cc/router-historymixin') : void 0;
	    this.history = this.context.history;
	  }
	};

	exports.default = History;
	module.exports = exports['default'];
	/* WEBPACK VAR INJECTION */}.call(exports, __webpack_require__(4)))

/***/ },
/* 221 */
/***/ function(module, exports, __webpack_require__) {

	/* WEBPACK VAR INJECTION */(function(process) {'use strict';

	exports.__esModule = true;

	var _routerWarning = __webpack_require__(177);

	var _routerWarning2 = _interopRequireDefault(_routerWarning);

	var _react = __webpack_require__(2);

	var _react2 = _interopRequireDefault(_react);

	var _invariant = __webpack_require__(181);

	var _invariant2 = _interopRequireDefault(_invariant);

	function _interopRequireDefault(obj) { return obj && obj.__esModule ? obj : { default: obj }; }

	var object = _react2.default.PropTypes.object;

	/**
	 * The Lifecycle mixin adds the routerWillLeave lifecycle method to a
	 * component that may be used to cancel a transition or prompt the user
	 * for confirmation.
	 *
	 * On standard transitions, routerWillLeave receives a single argument: the
	 * location we're transitioning to. To cancel the transition, return false.
	 * To prompt the user for confirmation, return a prompt message (string).
	 *
	 * During the beforeunload event (assuming you're using the useBeforeUnload
	 * history enhancer), routerWillLeave does not receive a location object
	 * because it isn't possible for us to know the location we're transitioning
	 * to. In this case routerWillLeave must return a prompt message to prevent
	 * the user from closing the window/tab.
	 */

	var Lifecycle = {

	  contextTypes: {
	    history: object.isRequired,
	    // Nested children receive the route as context, either
	    // set by the route component using the RouteContext mixin
	    // or by some other ancestor.
	    route: object
	  },

	  propTypes: {
	    // Route components receive the route object as a prop.
	    route: object
	  },

	  componentDidMount: function componentDidMount() {
	    process.env.NODE_ENV !== 'production' ? (0, _routerWarning2.default)(false, 'the `Lifecycle` mixin is deprecated, please use `context.router.setRouteLeaveHook(route, hook)`. http://tiny.cc/router-lifecyclemixin') : void 0;
	    !this.routerWillLeave ? process.env.NODE_ENV !== 'production' ? (0, _invariant2.default)(false, 'The Lifecycle mixin requires you to define a routerWillLeave method') : (0, _invariant2.default)(false) : void 0;

	    var route = this.props.route || this.context.route;

	    !route ? process.env.NODE_ENV !== 'production' ? (0, _invariant2.default)(false, 'The Lifecycle mixin must be used on either a) a <Route component> or ' + 'b) a descendant of a <Route component> that uses the RouteContext mixin') : (0, _invariant2.default)(false) : void 0;

	    this._unlistenBeforeLeavingRoute = this.context.history.listenBeforeLeavingRoute(route, this.routerWillLeave);
	  },
	  componentWillUnmount: function componentWillUnmount() {
	    if (this._unlistenBeforeLeavingRoute) this._unlistenBeforeLeavingRoute();
	  }
	};

	exports.default = Lifecycle;
	module.exports = exports['default'];
	/* WEBPACK VAR INJECTION */}.call(exports, __webpack_require__(4)))

/***/ },
/* 222 */
/***/ function(module, exports, __webpack_require__) {

	/* WEBPACK VAR INJECTION */(function(process) {'use strict';

	exports.__esModule = true;

	var _routerWarning = __webpack_require__(177);

	var _routerWarning2 = _interopRequireDefault(_routerWarning);

	var _react = __webpack_require__(2);

	var _react2 = _interopRequireDefault(_react);

	function _interopRequireDefault(obj) { return obj && obj.__esModule ? obj : { default: obj }; }

	var object = _react2.default.PropTypes.object;

	/**
	 * The RouteContext mixin provides a convenient way for route
	 * components to set the route in context. This is needed for
	 * routes that render elements that want to use the Lifecycle
	 * mixin to prevent transitions.
	 */

	var RouteContext = {

	  propTypes: {
	    route: object.isRequired
	  },

	  childContextTypes: {
	    route: object.isRequired
	  },

	  getChildContext: function getChildContext() {
	    return {
	      route: this.props.route
	    };
	  },
	  componentWillMount: function componentWillMount() {
	    process.env.NODE_ENV !== 'production' ? (0, _routerWarning2.default)(false, 'The `RouteContext` mixin is deprecated. You can provide `this.props.route` on context with your own `contextTypes`. http://tiny.cc/router-routecontextmixin') : void 0;
	  }
	};

	exports.default = RouteContext;
	module.exports = exports['default'];
	/* WEBPACK VAR INJECTION */}.call(exports, __webpack_require__(4)))

/***/ },
/* 223 */
/***/ function(module, exports, __webpack_require__) {

	/* WEBPACK VAR INJECTION */(function(process) {'use strict';

	exports.__esModule = true;

	var _extends = Object.assign || function (target) { for (var i = 1; i < arguments.length; i++) { var source = arguments[i]; for (var key in source) { if (Object.prototype.hasOwnProperty.call(source, key)) { target[key] = source[key]; } } } return target; };

	var _useQueries = __webpack_require__(198);

	var _useQueries2 = _interopRequireDefault(_useQueries);

	var _createTransitionManager = __webpack_require__(201);

	var _createTransitionManager2 = _interopRequireDefault(_createTransitionManager);

	var _routerWarning = __webpack_require__(177);

	var _routerWarning2 = _interopRequireDefault(_routerWarning);

	function _interopRequireDefault(obj) { return obj && obj.__esModule ? obj : { default: obj }; }

	function _objectWithoutProperties(obj, keys) { var target = {}; for (var i in obj) { if (keys.indexOf(i) >= 0) continue; if (!Object.prototype.hasOwnProperty.call(obj, i)) continue; target[i] = obj[i]; } return target; }

	/**
	 * Returns a new createHistory function that may be used to create
	 * history objects that know about routing.
	 *
	 * Enhances history objects with the following methods:
	 *
	 * - listen((error, nextState) => {})
	 * - listenBeforeLeavingRoute(route, (nextLocation) => {})
	 * - match(location, (error, redirectLocation, nextState) => {})
	 * - isActive(pathname, query, indexOnly=false)
	 */
	function useRoutes(createHistory) {
	  process.env.NODE_ENV !== 'production' ? (0, _routerWarning2.default)(false, '`useRoutes` is deprecated. Please use `createTransitionManager` instead.') : void 0;

	  return function () {
	    var _ref = arguments.length <= 0 || arguments[0] === undefined ? {} : arguments[0];

	    var routes = _ref.routes;

	    var options = _objectWithoutProperties(_ref, ['routes']);

	    var history = (0, _useQueries2.default)(createHistory)(options);
	    var transitionManager = (0, _createTransitionManager2.default)(history, routes);
	    return _extends({}, history, transitionManager);
	  };
	}

	exports.default = useRoutes;
	module.exports = exports['default'];
	/* WEBPACK VAR INJECTION */}.call(exports, __webpack_require__(4)))

/***/ },
/* 224 */
/***/ function(module, exports, __webpack_require__) {

	/* WEBPACK VAR INJECTION */(function(process) {'use strict';

	exports.__esModule = true;

	var _react = __webpack_require__(2);

	var _react2 = _interopRequireDefault(_react);

	var _RouterContext = __webpack_require__(209);

	var _RouterContext2 = _interopRequireDefault(_RouterContext);

	var _routerWarning = __webpack_require__(177);

	var _routerWarning2 = _interopRequireDefault(_routerWarning);

	function _interopRequireDefault(obj) { return obj && obj.__esModule ? obj : { default: obj }; }

	var RoutingContext = _react2.default.createClass({
	  displayName: 'RoutingContext',
	  componentWillMount: function componentWillMount() {
	    process.env.NODE_ENV !== 'production' ? (0, _routerWarning2.default)(false, '`RoutingContext` has been renamed to `RouterContext`. Please use `import { RouterContext } from \'react-router\'`. http://tiny.cc/router-routercontext') : void 0;
	  },
	  render: function render() {
	    return _react2.default.createElement(_RouterContext2.default, this.props);
	  }
	});

	exports.default = RoutingContext;
	module.exports = exports['default'];
	/* WEBPACK VAR INJECTION */}.call(exports, __webpack_require__(4)))

/***/ },
/* 225 */
/***/ function(module, exports, __webpack_require__) {

	/* WEBPACK VAR INJECTION */(function(process) {'use strict';

	exports.__esModule = true;

	var _extends = Object.assign || function (target) { for (var i = 1; i < arguments.length; i++) { var source = arguments[i]; for (var key in source) { if (Object.prototype.hasOwnProperty.call(source, key)) { target[key] = source[key]; } } } return target; };

	var _invariant = __webpack_require__(181);

	var _invariant2 = _interopRequireDefault(_invariant);

	var _createMemoryHistory = __webpack_require__(226);

	var _createMemoryHistory2 = _interopRequireDefault(_createMemoryHistory);

	var _createTransitionManager = __webpack_require__(201);

	var _createTransitionManager2 = _interopRequireDefault(_createTransitionManager);

	var _RouteUtils = __webpack_require__(174);

	var _RouterUtils = __webpack_require__(211);

	function _interopRequireDefault(obj) { return obj && obj.__esModule ? obj : { default: obj }; }

	function _objectWithoutProperties(obj, keys) { var target = {}; for (var i in obj) { if (keys.indexOf(i) >= 0) continue; if (!Object.prototype.hasOwnProperty.call(obj, i)) continue; target[i] = obj[i]; } return target; }

	/**
	 * A high-level API to be used for server-side rendering.
	 *
	 * This function matches a location to a set of routes and calls
	 * callback(error, redirectLocation, renderProps) when finished.
	 *
	 * Note: You probably don't want to use this in a browser unless you're using
	 * server-side rendering with async routes.
	 */
	function match(_ref, callback) {
	  var history = _ref.history;
	  var routes = _ref.routes;
	  var location = _ref.location;

	  var options = _objectWithoutProperties(_ref, ['history', 'routes', 'location']);

	  !(history || location) ? process.env.NODE_ENV !== 'production' ? (0, _invariant2.default)(false, 'match needs a history or a location') : (0, _invariant2.default)(false) : void 0;

	  history = history ? history : (0, _createMemoryHistory2.default)(options);
	  var transitionManager = (0, _createTransitionManager2.default)(history, (0, _RouteUtils.createRoutes)(routes));

	  var unlisten = void 0;

	  if (location) {
	    // Allow match({ location: '/the/path', ... })
	    location = history.createLocation(location);
	  } else {
	    // Pick up the location from the history via synchronous history.listen
	    // call if needed.
	    unlisten = history.listen(function (historyLocation) {
	      location = historyLocation;
	    });
	  }

	  var router = (0, _RouterUtils.createRouterObject)(history, transitionManager);
	  history = (0, _RouterUtils.createRoutingHistory)(history, transitionManager);

	  transitionManager.match(location, function (error, redirectLocation, nextState) {
	    callback(error, redirectLocation, nextState && _extends({}, nextState, {
	      history: history,
	      router: router,
	      matchContext: { history: history, transitionManager: transitionManager, router: router }
	    }));

	    // Defer removing the listener to here to prevent DOM histories from having
	    // to unwind DOM event listeners unnecessarily, in case callback renders a
	    // <Router> and attaches another history listener.
	    if (unlisten) {
	      unlisten();
	    }
	  });
	}

	exports.default = match;
	module.exports = exports['default'];
	/* WEBPACK VAR INJECTION */}.call(exports, __webpack_require__(4)))

/***/ },
/* 226 */
/***/ function(module, exports, __webpack_require__) {

	'use strict';

	exports.__esModule = true;
	exports.default = createMemoryHistory;

	var _useQueries = __webpack_require__(198);

	var _useQueries2 = _interopRequireDefault(_useQueries);

	var _useBasename = __webpack_require__(227);

	var _useBasename2 = _interopRequireDefault(_useBasename);

	var _createMemoryHistory = __webpack_require__(228);

	var _createMemoryHistory2 = _interopRequireDefault(_createMemoryHistory);

	function _interopRequireDefault(obj) { return obj && obj.__esModule ? obj : { default: obj }; }

	function createMemoryHistory(options) {
	  // signatures and type checking differ between `useRoutes` and
	  // `createMemoryHistory`, have to create `memoryHistory` first because
	  // `useQueries` doesn't understand the signature
	  var memoryHistory = (0, _createMemoryHistory2.default)(options);
	  var createHistory = function createHistory() {
	    return memoryHistory;
	  };
	  var history = (0, _useQueries2.default)((0, _useBasename2.default)(createHistory))(options);
	  history.__v2_compatible__ = true;
	  return history;
	}
	module.exports = exports['default'];

/***/ },
/* 227 */
/***/ function(module, exports, __webpack_require__) {

	/* WEBPACK VAR INJECTION */(function(process) {'use strict';

	exports.__esModule = true;

	var _extends = Object.assign || function (target) { for (var i = 1; i < arguments.length; i++) { var source = arguments[i]; for (var key in source) { if (Object.prototype.hasOwnProperty.call(source, key)) { target[key] = source[key]; } } } return target; };

	function _interopRequireDefault(obj) { return obj && obj.__esModule ? obj : { 'default': obj }; }

	var _warning = __webpack_require__(178);

	var _warning2 = _interopRequireDefault(_warning);

	var _ExecutionEnvironment = __webpack_require__(186);

	var _PathUtils = __webpack_require__(185);

	var _runTransitionHook = __webpack_require__(196);

	var _runTransitionHook2 = _interopRequireDefault(_runTransitionHook);

	var _deprecate = __webpack_require__(197);

	var _deprecate2 = _interopRequireDefault(_deprecate);

	function useBasename(createHistory) {
	  return function () {
	    var options = arguments.length <= 0 || arguments[0] === undefined ? {} : arguments[0];

	    var history = createHistory(options);

	    var basename = options.basename;

	    var checkedBaseHref = false;

	    function checkBaseHref() {
	      if (checkedBaseHref) {
	        return;
	      }

	      // Automatically use the value of <base href> in HTML
	      // documents as basename if it's not explicitly given.
	      if (basename == null && _ExecutionEnvironment.canUseDOM) {
	        var base = document.getElementsByTagName('base')[0];
	        var baseHref = base && base.getAttribute('href');

	        if (baseHref != null) {
	          basename = baseHref;

	          process.env.NODE_ENV !== 'production' ? _warning2['default'](false, 'Automatically setting basename using <base href> is deprecated and will ' + 'be removed in the next major release. The semantics of <base href> are ' + 'subtly different from basename. Please pass the basename explicitly in ' + 'the options to createHistory') : undefined;
	        }
	      }

	      checkedBaseHref = true;
	    }

	    function addBasename(location) {
	      checkBaseHref();

	      if (basename && location.basename == null) {
	        if (location.pathname.indexOf(basename) === 0) {
	          location.pathname = location.pathname.substring(basename.length);
	          location.basename = basename;

	          if (location.pathname === '') location.pathname = '/';
	        } else {
	          location.basename = '';
	        }
	      }

	      return location;
	    }

	    function prependBasename(location) {
	      checkBaseHref();

	      if (!basename) return location;

	      if (typeof location === 'string') location = _PathUtils.parsePath(location);

	      var pname = location.pathname;
	      var normalizedBasename = basename.slice(-1) === '/' ? basename : basename + '/';
	      var normalizedPathname = pname.charAt(0) === '/' ? pname.slice(1) : pname;
	      var pathname = normalizedBasename + normalizedPathname;

	      return _extends({}, location, {
	        pathname: pathname
	      });
	    }

	    // Override all read methods with basename-aware versions.
	    function listenBefore(hook) {
	      return history.listenBefore(function (location, callback) {
	        _runTransitionHook2['default'](hook, addBasename(location), callback);
	      });
	    }

	    function listen(listener) {
	      return history.listen(function (location) {
	        listener(addBasename(location));
	      });
	    }

	    // Override all write methods with basename-aware versions.
	    function push(location) {
	      history.push(prependBasename(location));
	    }

	    function replace(location) {
	      history.replace(prependBasename(location));
	    }

	    function createPath(location) {
	      return history.createPath(prependBasename(location));
	    }

	    function createHref(location) {
	      return history.createHref(prependBasename(location));
	    }

	    function createLocation(location) {
	      for (var _len = arguments.length, args = Array(_len > 1 ? _len - 1 : 0), _key = 1; _key < _len; _key++) {
	        args[_key - 1] = arguments[_key];
	      }

	      return addBasename(history.createLocation.apply(history, [prependBasename(location)].concat(args)));
	    }

	    // deprecated
	    function pushState(state, path) {
	      if (typeof path === 'string') path = _PathUtils.parsePath(path);

	      push(_extends({ state: state }, path));
	    }

	    // deprecated
	    function replaceState(state, path) {
	      if (typeof path === 'string') path = _PathUtils.parsePath(path);

	      replace(_extends({ state: state }, path));
	    }

	    return _extends({}, history, {
	      listenBefore: listenBefore,
	      listen: listen,
	      push: push,
	      replace: replace,
	      createPath: createPath,
	      createHref: createHref,
	      createLocation: createLocation,

	      pushState: _deprecate2['default'](pushState, 'pushState is deprecated; use push instead'),
	      replaceState: _deprecate2['default'](replaceState, 'replaceState is deprecated; use replace instead')
	    });
	  };
	}

	exports['default'] = useBasename;
	module.exports = exports['default'];
	/* WEBPACK VAR INJECTION */}.call(exports, __webpack_require__(4)))

/***/ },
/* 228 */
/***/ function(module, exports, __webpack_require__) {

	/* WEBPACK VAR INJECTION */(function(process) {'use strict';

	exports.__esModule = true;

	var _extends = Object.assign || function (target) { for (var i = 1; i < arguments.length; i++) { var source = arguments[i]; for (var key in source) { if (Object.prototype.hasOwnProperty.call(source, key)) { target[key] = source[key]; } } } return target; };

	function _interopRequireDefault(obj) { return obj && obj.__esModule ? obj : { 'default': obj }; }

	var _warning = __webpack_require__(178);

	var _warning2 = _interopRequireDefault(_warning);

	var _invariant = __webpack_require__(181);

	var _invariant2 = _interopRequireDefault(_invariant);

	var _PathUtils = __webpack_require__(185);

	var _Actions = __webpack_require__(184);

	var _createHistory = __webpack_require__(190);

	var _createHistory2 = _interopRequireDefault(_createHistory);

	function createStateStorage(entries) {
	  return entries.filter(function (entry) {
	    return entry.state;
	  }).reduce(function (memo, entry) {
	    memo[entry.key] = entry.state;
	    return memo;
	  }, {});
	}

	function createMemoryHistory() {
	  var options = arguments.length <= 0 || arguments[0] === undefined ? {} : arguments[0];

	  if (Array.isArray(options)) {
	    options = { entries: options };
	  } else if (typeof options === 'string') {
	    options = { entries: [options] };
	  }

	  var history = _createHistory2['default'](_extends({}, options, {
	    getCurrentLocation: getCurrentLocation,
	    finishTransition: finishTransition,
	    saveState: saveState,
	    go: go
	  }));

	  var _options = options;
	  var entries = _options.entries;
	  var current = _options.current;

	  if (typeof entries === 'string') {
	    entries = [entries];
	  } else if (!Array.isArray(entries)) {
	    entries = ['/'];
	  }

	  entries = entries.map(function (entry) {
	    var key = history.createKey();

	    if (typeof entry === 'string') return { pathname: entry, key: key };

	    if (typeof entry === 'object' && entry) return _extends({}, entry, { key: key });

	     true ? process.env.NODE_ENV !== 'production' ? _invariant2['default'](false, 'Unable to create history entry from %s', entry) : _invariant2['default'](false) : undefined;
	  });

	  if (current == null) {
	    current = entries.length - 1;
	  } else {
	    !(current >= 0 && current < entries.length) ? process.env.NODE_ENV !== 'production' ? _invariant2['default'](false, 'Current index must be >= 0 and < %s, was %s', entries.length, current) : _invariant2['default'](false) : undefined;
	  }

	  var storage = createStateStorage(entries);

	  function saveState(key, state) {
	    storage[key] = state;
	  }

	  function readState(key) {
	    return storage[key];
	  }

	  function getCurrentLocation() {
	    var entry = entries[current];
	    var basename = entry.basename;
	    var pathname = entry.pathname;
	    var search = entry.search;

	    var path = (basename || '') + pathname + (search || '');

	    var key = undefined,
	        state = undefined;
	    if (entry.key) {
	      key = entry.key;
	      state = readState(key);
	    } else {
	      key = history.createKey();
	      state = null;
	      entry.key = key;
	    }

	    var location = _PathUtils.parsePath(path);

	    return history.createLocation(_extends({}, location, { state: state }), undefined, key);
	  }

	  function canGo(n) {
	    var index = current + n;
	    return index >= 0 && index < entries.length;
	  }

	  function go(n) {
	    if (n) {
	      if (!canGo(n)) {
	        process.env.NODE_ENV !== 'production' ? _warning2['default'](false, 'Cannot go(%s) there is not enough history', n) : undefined;
	        return;
	      }

	      current += n;

	      var currentLocation = getCurrentLocation();

	      // change action to POP
	      history.transitionTo(_extends({}, currentLocation, { action: _Actions.POP }));
	    }
	  }

	  function finishTransition(location) {
	    switch (location.action) {
	      case _Actions.PUSH:
	        current += 1;

	        // if we are not on the top of stack
	        // remove rest and push new
	        if (current < entries.length) entries.splice(current);

	        entries.push(location);
	        saveState(location.key, location.state);
	        break;
	      case _Actions.REPLACE:
	        entries[current] = location;
	        saveState(location.key, location.state);
	        break;
	    }
	  }

	  return history;
	}

	exports['default'] = createMemoryHistory;
	module.exports = exports['default'];
	/* WEBPACK VAR INJECTION */}.call(exports, __webpack_require__(4)))

/***/ },
/* 229 */
/***/ function(module, exports, __webpack_require__) {

	'use strict';

	exports.__esModule = true;
	exports.default = useRouterHistory;

	var _useQueries = __webpack_require__(198);

	var _useQueries2 = _interopRequireDefault(_useQueries);

	var _useBasename = __webpack_require__(227);

	var _useBasename2 = _interopRequireDefault(_useBasename);

	function _interopRequireDefault(obj) { return obj && obj.__esModule ? obj : { default: obj }; }

	function useRouterHistory(createHistory) {
	  return function (options) {
	    var history = (0, _useQueries2.default)((0, _useBasename2.default)(createHistory))(options);
	    history.__v2_compatible__ = true;
	    return history;
	  };
	}
	module.exports = exports['default'];

/***/ },
/* 230 */
/***/ function(module, exports, __webpack_require__) {

	'use strict';

	exports.__esModule = true;

	var _extends = Object.assign || function (target) { for (var i = 1; i < arguments.length; i++) { var source = arguments[i]; for (var key in source) { if (Object.prototype.hasOwnProperty.call(source, key)) { target[key] = source[key]; } } } return target; };

	var _react = __webpack_require__(2);

	var _react2 = _interopRequireDefault(_react);

	var _RouterContext = __webpack_require__(209);

	var _RouterContext2 = _interopRequireDefault(_RouterContext);

	function _interopRequireDefault(obj) { return obj && obj.__esModule ? obj : { default: obj }; }

	exports.default = function () {
	  for (var _len = arguments.length, middlewares = Array(_len), _key = 0; _key < _len; _key++) {
	    middlewares[_key] = arguments[_key];
	  }

	  var withContext = middlewares.map(function (m) {
	    return m.renderRouterContext;
	  }).filter(function (f) {
	    return f;
	  });
	  var withComponent = middlewares.map(function (m) {
	    return m.renderRouteComponent;
	  }).filter(function (f) {
	    return f;
	  });
	  var makeCreateElement = function makeCreateElement() {
	    var baseCreateElement = arguments.length <= 0 || arguments[0] === undefined ? _react.createElement : arguments[0];
	    return function (Component, props) {
	      return withComponent.reduceRight(function (previous, renderRouteComponent) {
	        return renderRouteComponent(previous, props);
	      }, baseCreateElement(Component, props));
	    };
	  };

	  return function (renderProps) {
	    return withContext.reduceRight(function (previous, renderRouterContext) {
	      return renderRouterContext(previous, renderProps);
	    }, _react2.default.createElement(_RouterContext2.default, _extends({}, renderProps, {
	      createElement: makeCreateElement(renderProps.createElement)
	    })));
	  };
	};

	module.exports = exports['default'];

/***/ },
/* 231 */
/***/ function(module, exports, __webpack_require__) {

	'use strict';

	exports.__esModule = true;

	var _createBrowserHistory = __webpack_require__(232);

	var _createBrowserHistory2 = _interopRequireDefault(_createBrowserHistory);

	var _createRouterHistory = __webpack_require__(233);

	var _createRouterHistory2 = _interopRequireDefault(_createRouterHistory);

	function _interopRequireDefault(obj) { return obj && obj.__esModule ? obj : { default: obj }; }

	exports.default = (0, _createRouterHistory2.default)(_createBrowserHistory2.default);
	module.exports = exports['default'];

/***/ },
/* 232 */
/***/ function(module, exports, __webpack_require__) {

	/* WEBPACK VAR INJECTION */(function(process) {'use strict';

	exports.__esModule = true;

	var _extends = Object.assign || function (target) { for (var i = 1; i < arguments.length; i++) { var source = arguments[i]; for (var key in source) { if (Object.prototype.hasOwnProperty.call(source, key)) { target[key] = source[key]; } } } return target; };

	function _interopRequireDefault(obj) { return obj && obj.__esModule ? obj : { 'default': obj }; }

	var _invariant = __webpack_require__(181);

	var _invariant2 = _interopRequireDefault(_invariant);

	var _Actions = __webpack_require__(184);

	var _PathUtils = __webpack_require__(185);

	var _ExecutionEnvironment = __webpack_require__(186);

	var _DOMUtils = __webpack_require__(187);

	var _DOMStateStorage = __webpack_require__(188);

	var _createDOMHistory = __webpack_require__(189);

	var _createDOMHistory2 = _interopRequireDefault(_createDOMHistory);

	/**
	 * Creates and returns a history object that uses HTML5's history API
	 * (pushState, replaceState, and the popstate event) to manage history.
	 * This is the recommended method of managing history in browsers because
	 * it provides the cleanest URLs.
	 *
	 * Note: In browsers that do not support the HTML5 history API full
	 * page reloads will be used to preserve URLs.
	 */
	function createBrowserHistory() {
	  var options = arguments.length <= 0 || arguments[0] === undefined ? {} : arguments[0];

	  !_ExecutionEnvironment.canUseDOM ? process.env.NODE_ENV !== 'production' ? _invariant2['default'](false, 'Browser history needs a DOM') : _invariant2['default'](false) : undefined;

	  var forceRefresh = options.forceRefresh;

	  var isSupported = _DOMUtils.supportsHistory();
	  var useRefresh = !isSupported || forceRefresh;

	  function getCurrentLocation(historyState) {
	    try {
	      historyState = historyState || window.history.state || {};
	    } catch (e) {
	      historyState = {};
	    }

	    var path = _DOMUtils.getWindowPath();
	    var _historyState = historyState;
	    var key = _historyState.key;

	    var state = undefined;
	    if (key) {
	      state = _DOMStateStorage.readState(key);
	    } else {
	      state = null;
	      key = history.createKey();

	      if (isSupported) window.history.replaceState(_extends({}, historyState, { key: key }), null);
	    }

	    var location = _PathUtils.parsePath(path);

	    return history.createLocation(_extends({}, location, { state: state }), undefined, key);
	  }

	  function startPopStateListener(_ref) {
	    var transitionTo = _ref.transitionTo;

	    function popStateListener(event) {
	      if (event.state === undefined) return; // Ignore extraneous popstate events in WebKit.

	      transitionTo(getCurrentLocation(event.state));
	    }

	    _DOMUtils.addEventListener(window, 'popstate', popStateListener);

	    return function () {
	      _DOMUtils.removeEventListener(window, 'popstate', popStateListener);
	    };
	  }

	  function finishTransition(location) {
	    var basename = location.basename;
	    var pathname = location.pathname;
	    var search = location.search;
	    var hash = location.hash;
	    var state = location.state;
	    var action = location.action;
	    var key = location.key;

	    if (action === _Actions.POP) return; // Nothing to do.

	    _DOMStateStorage.saveState(key, state);

	    var path = (basename || '') + pathname + search + hash;
	    var historyState = {
	      key: key
	    };

	    if (action === _Actions.PUSH) {
	      if (useRefresh) {
	        window.location.href = path;
	        return false; // Prevent location update.
	      } else {
	          window.history.pushState(historyState, null, path);
	        }
	    } else {
	      // REPLACE
	      if (useRefresh) {
	        window.location.replace(path);
	        return false; // Prevent location update.
	      } else {
	          window.history.replaceState(historyState, null, path);
	        }
	    }
	  }

	  var history = _createDOMHistory2['default'](_extends({}, options, {
	    getCurrentLocation: getCurrentLocation,
	    finishTransition: finishTransition,
	    saveState: _DOMStateStorage.saveState
	  }));

	  var listenerCount = 0,
	      stopPopStateListener = undefined;

	  function listenBefore(listener) {
	    if (++listenerCount === 1) stopPopStateListener = startPopStateListener(history);

	    var unlisten = history.listenBefore(listener);

	    return function () {
	      unlisten();

	      if (--listenerCount === 0) stopPopStateListener();
	    };
	  }

	  function listen(listener) {
	    if (++listenerCount === 1) stopPopStateListener = startPopStateListener(history);

	    var unlisten = history.listen(listener);

	    return function () {
	      unlisten();

	      if (--listenerCount === 0) stopPopStateListener();
	    };
	  }

	  // deprecated
	  function registerTransitionHook(hook) {
	    if (++listenerCount === 1) stopPopStateListener = startPopStateListener(history);

	    history.registerTransitionHook(hook);
	  }

	  // deprecated
	  function unregisterTransitionHook(hook) {
	    history.unregisterTransitionHook(hook);

	    if (--listenerCount === 0) stopPopStateListener();
	  }

	  return _extends({}, history, {
	    listenBefore: listenBefore,
	    listen: listen,
	    registerTransitionHook: registerTransitionHook,
	    unregisterTransitionHook: unregisterTransitionHook
	  });
	}

	exports['default'] = createBrowserHistory;
	module.exports = exports['default'];
	/* WEBPACK VAR INJECTION */}.call(exports, __webpack_require__(4)))

/***/ },
/* 233 */
/***/ function(module, exports, __webpack_require__) {

	'use strict';

	exports.__esModule = true;

	exports.default = function (createHistory) {
	  var history = void 0;
	  if (canUseDOM) history = (0, _useRouterHistory2.default)(createHistory)();
	  return history;
	};

	var _useRouterHistory = __webpack_require__(229);

	var _useRouterHistory2 = _interopRequireDefault(_useRouterHistory);

	function _interopRequireDefault(obj) { return obj && obj.__esModule ? obj : { default: obj }; }

	var canUseDOM = !!(typeof window !== 'undefined' && window.document && window.document.createElement);

	module.exports = exports['default'];

/***/ },
/* 234 */
/***/ function(module, exports, __webpack_require__) {

	'use strict';

	exports.__esModule = true;

	var _createHashHistory = __webpack_require__(183);

	var _createHashHistory2 = _interopRequireDefault(_createHashHistory);

	var _createRouterHistory = __webpack_require__(233);

	var _createRouterHistory2 = _interopRequireDefault(_createRouterHistory);

	function _interopRequireDefault(obj) { return obj && obj.__esModule ? obj : { default: obj }; }

	exports.default = (0, _createRouterHistory2.default)(_createHashHistory2.default);
	module.exports = exports['default'];

/***/ },
/* 235 */
/***/ function(module, exports, __webpack_require__) {

	'use strict';

	Object.defineProperty(exports, "__esModule", {
	  value: true
	});

	var _createClass = function () { function defineProperties(target, props) { for (var i = 0; i < props.length; i++) { var descriptor = props[i]; descriptor.enumerable = descriptor.enumerable || false; descriptor.configurable = true; if ("value" in descriptor) descriptor.writable = true; Object.defineProperty(target, descriptor.key, descriptor); } } return function (Constructor, protoProps, staticProps) { if (protoProps) defineProperties(Constructor.prototype, protoProps); if (staticProps) defineProperties(Constructor, staticProps); return Constructor; }; }();

	var _react = __webpack_require__(2);

	var _react2 = _interopRequireDefault(_react);

	var _summary = __webpack_require__(236);

	var _summary2 = _interopRequireDefault(_summary);

	var _company = __webpack_require__(246);

	var _company2 = _interopRequireDefault(_company);

	var _navBar = __webpack_require__(247);

	var _navBar2 = _interopRequireDefault(_navBar);

	var _footer = __webpack_require__(504);

	var _footer2 = _interopRequireDefault(_footer);

	function _interopRequireDefault(obj) { return obj && obj.__esModule ? obj : { default: obj }; }

	function _classCallCheck(instance, Constructor) { if (!(instance instanceof Constructor)) { throw new TypeError("Cannot call a class as a function"); } }

	function _possibleConstructorReturn(self, call) { if (!self) { throw new ReferenceError("this hasn't been initialised - super() hasn't been called"); } return call && (typeof call === "object" || typeof call === "function") ? call : self; }

	function _inherits(subClass, superClass) { if (typeof superClass !== "function" && superClass !== null) { throw new TypeError("Super expression must either be null or a function, not " + typeof superClass); } subClass.prototype = Object.create(superClass && superClass.prototype, { constructor: { value: subClass, enumerable: false, writable: true, configurable: true } }); if (superClass) Object.setPrototypeOf ? Object.setPrototypeOf(subClass, superClass) : subClass.__proto__ = superClass; }

	var AppComponent = function (_Component) {
	  _inherits(AppComponent, _Component);

	  function AppComponent(props) {
	    _classCallCheck(this, AppComponent);

	    var _this = _possibleConstructorReturn(this, Object.getPrototypeOf(AppComponent).call(this, props));

	    _this.state = {
	      currentCompany: null,
	      companyGoogleTrendsData: null,
	      isSummary: true
	    };
	    _this.selectCompany = _this.selectCompany.bind(_this);
	    return _this;
	  }

	  _createClass(AppComponent, [{
	    key: 'selectCompany',
	    value: function selectCompany(company) {
	      var _this2 = this;

	      this.setState({ currentCompany: company, isSummary: false });
	      alert('I selected this company ' + company);

	      // fetch company specific Google Trends data
	      fetch('api/googletrends/' + company, { method: 'GET' }).then(function (res) {
	        return res.json();
	      }).then(function (data) {
	        console.log('Company Google Trends Data ', data);
	        _this2.setState({ companyGoogleTrendsData: data });
	      }).catch(function (err) {
	        console.log(err);
	      });
	    }
	  }, {
	    key: 'render',
	    value: function render() {
	      var partial = void 0;
	      if (this.state.isSummary) {
	        partial = _react2.default.createElement(_summary2.default, null);
	      } else {
	        partial = _react2.default.createElement(_company2.default, null);
	      }

	      return _react2.default.createElement(
	        'div',
	        null,
	        _react2.default.createElement(
	          'header',
	          null,
	          _react2.default.createElement(_navBar2.default, { selectCompany: this.selectCompany })
	        ),
	        _react2.default.createElement(
	          'div',
	          { className: 'main-content z-depth-5' },
	          partial
	        ),
	        _react2.default.createElement(_footer2.default, null)
	      );
	    }
	  }]);

	  return AppComponent;
	}(_react.Component);

	exports.default = AppComponent;

/***/ },
/* 236 */
/***/ function(module, exports, __webpack_require__) {

	'use strict';

	Object.defineProperty(exports, "__esModule", {
	  value: true
	});

	var _createClass = function () { function defineProperties(target, props) { for (var i = 0; i < props.length; i++) { var descriptor = props[i]; descriptor.enumerable = descriptor.enumerable || false; descriptor.configurable = true; if ("value" in descriptor) descriptor.writable = true; Object.defineProperty(target, descriptor.key, descriptor); } } return function (Constructor, protoProps, staticProps) { if (protoProps) defineProperties(Constructor.prototype, protoProps); if (staticProps) defineProperties(Constructor, staticProps); return Constructor; }; }();

	var _react = __webpack_require__(2);

	var _react2 = _interopRequireDefault(_react);

	var _googletrends = __webpack_require__(237);

	var _googletrends2 = _interopRequireDefault(_googletrends);

	var _sentiment = __webpack_require__(240);

	var _sentiment2 = _interopRequireDefault(_sentiment);

	var _news = __webpack_require__(242);

	var _news2 = _interopRequireDefault(_news);

	var _twitter = __webpack_require__(243);

	var _twitter2 = _interopRequireDefault(_twitter);

	var _twitterLiveSummary = __webpack_require__(244);

	var _twitterLiveSummary2 = _interopRequireDefault(_twitterLiveSummary);

	var _twitterLive = __webpack_require__(245);

	var _twitterLive2 = _interopRequireDefault(_twitterLive);

	function _interopRequireDefault(obj) { return obj && obj.__esModule ? obj : { default: obj }; }

	function _classCallCheck(instance, Constructor) { if (!(instance instanceof Constructor)) { throw new TypeError("Cannot call a class as a function"); } }

	function _possibleConstructorReturn(self, call) { if (!self) { throw new ReferenceError("this hasn't been initialised - super() hasn't been called"); } return call && (typeof call === "object" || typeof call === "function") ? call : self; }

	function _inherits(subClass, superClass) { if (typeof superClass !== "function" && superClass !== null) { throw new TypeError("Super expression must either be null or a function, not " + typeof superClass); } subClass.prototype = Object.create(superClass && superClass.prototype, { constructor: { value: subClass, enumerable: false, writable: true, configurable: true } }); if (superClass) Object.setPrototypeOf ? Object.setPrototypeOf(subClass, superClass) : subClass.__proto__ = superClass; }

	var SummaryComponent = function (_Component) {
	  _inherits(SummaryComponent, _Component);

	  function SummaryComponent(props) {
	    _classCallCheck(this, SummaryComponent);

	    var _this = _possibleConstructorReturn(this, Object.getPrototypeOf(SummaryComponent).call(this, props));

	    _this.state = {
	      googleTrendsData: null,
	      newsData: null,
	      sentimentData: null,
	      twitterData: null
	    };

	    _this.fetchTweets = _this.fetchTweets.bind(_this);
	    return _this;
	  }

	  _createClass(SummaryComponent, [{
	    key: 'fetchTweets',
	    value: function fetchTweets() {
	      var _this2 = this;

	      var self = this;
	      fetch('api/twitter', { method: 'GET' }).then(function (res) {
	        return res.json();
	      }).then(function (data) {
	        console.log('SETTINGSTATE', data);
	        _this2.setState({ twitterData: data }).bind(self);
	      }).catch(function (err) {
	        console.log(err);
	      });
	    }
	  }, {
	    key: 'componentWillMount',
	    value: function componentWillMount() {
	      var _this3 = this;

	      fetch('api/googletrends', { method: 'GET' }).then(function (res) {
	        return res.json();
	      }).then(function (data) {
	        _this3.setState({ googleTrendsData: data });
	        console.log('Google Trends Data ', data);
	      }).catch(function (err) {
	        console.log(err);
	      });

	      ////////NEWS VOLUME////////
	      // fetch('api/news', {method: 'GET'})
	      //   .then((res) => {
	      //     return res.json();
	      //   })
	      //   .then((data) => {
	      //     this.setState({newsData: data});
	      //
	      //   })
	      //   .catch((err) => {
	      //     console.log(err);
	      //   });

	      //////NEWS SENTIMENT////////
	      fetch('api/news/sentiment', { method: 'GET' }).then(function (res) {
	        //console.log('fetch is working. Response:',res)
	        return res.json();
	      }).then(function (data) {
	        _this3.setState({ sentimentData: data });
	      }).catch(function (err) {
	        console.log(err);
	      });

	      fetch('api/twitter', { method: 'GET' }).then(function (res) {
	        // console.log('twitter fetch working. Response:',res)
	        return res.json();
	      }).then(function (data) {
	        _this3.setState({ twitterData: data });
	      }).catch(function (err) {
	        console.log(err);
	      });
	    }
	  }, {
	    key: 'componentDidMount',
	    value: function componentDidMount() {
	      setInterval(this.fetchTweets, 10000);
	    }
	  }, {
	    key: 'render',
	    value: function render() {

	      return _react2.default.createElement(
	        'div',
	        { className: 'container' },
	        _react2.default.createElement('img', { className: 'header-image', src: 'http://previews.123rf.com/images/ashdesign/ashdesign1010/ashdesign101000010/8127340-3D-Stock-Market-Data-Blue-Background-Stock-Photo.jpg', alt: 'Main Street Analytics' }),
	        _react2.default.createElement(
	          'div',
	          { className: 'row' },
	          _react2.default.createElement(
	            'div',
	            { className: 'section-headline col-md-12' },
	            _react2.default.createElement(
	              'h3',
	              { className: 'ta-center' },
	              _react2.default.createElement('i', { className: 'fa fa-twitter', 'aria-hidden': 'true' }),
	              'What\'s Tweeting'
	            ),
	            _react2.default.createElement(_twitterLiveSummary2.default, { twitterData: this.state.twitterData, currentCompany: this.state.currentCompany }),
	            _react2.default.createElement(_twitter2.default, { twitterData: this.state.twitterData, currentCompany: this.state.currentCompany }),
	            _react2.default.createElement(_twitterLive2.default, { twitterData: this.state.twitterData, currentCompany: this.state.currentCompany })
	          )
	        ),
	        _react2.default.createElement(
	          'div',
	          { className: 'row' },
	          _react2.default.createElement(
	            'div',
	            { className: 'section-headline col-md-12' },
	            _react2.default.createElement(
	              'h3',
	              { className: 'ta-center' },
	              'What\'s Being Searched'
	            )
	          )
	        ),
	        _react2.default.createElement(_googletrends2.default, { googleTrendsData: this.state.googleTrendsData, companyGoogleTrendsData: this.props.companyGoogleTrendsData }),
	        _react2.default.createElement(
	          'div',
	          { className: 'row' },
	          _react2.default.createElement(
	            'div',
	            { className: 'section-headline col-md-12' },
	            _react2.default.createElement(
	              'h3',
	              { className: 'ta-center' },
	              'Market Sentiment'
	            )
	          )
	        ),
	        _react2.default.createElement(_sentiment2.default, { sentimentData: this.state.sentimentData, currentCompany: this.state.currentCompany }),
	        _react2.default.createElement(
	          'div',
	          { className: 'row' },
	          _react2.default.createElement('div', { className: 'footer-top col-md-12' }),
	          _react2.default.createElement(
	            'div',
	            { className: 'footer col-md-12' },
	            'Footer text goes here'
	          )
	        ),
	        _react2.default.createElement(
	          'div',
	          null,
	          _react2.default.createElement(_news2.default, { newsData: this.state.newsData })
	        )
	      );
	    }
	  }]);

	  return SummaryComponent;
	}(_react.Component);

	exports.default = SummaryComponent;

/***/ },
/* 237 */
/***/ function(module, exports, __webpack_require__) {

	'use strict';

	Object.defineProperty(exports, "__esModule", {
	  value: true
	});

	var _createClass = function () { function defineProperties(target, props) { for (var i = 0; i < props.length; i++) { var descriptor = props[i]; descriptor.enumerable = descriptor.enumerable || false; descriptor.configurable = true; if ("value" in descriptor) descriptor.writable = true; Object.defineProperty(target, descriptor.key, descriptor); } } return function (Constructor, protoProps, staticProps) { if (protoProps) defineProperties(Constructor.prototype, protoProps); if (staticProps) defineProperties(Constructor, staticProps); return Constructor; }; }();

	var _react = __webpack_require__(2);

	var _react2 = _interopRequireDefault(_react);

	var _linechart = __webpack_require__(238);

	var _linechart2 = _interopRequireDefault(_linechart);

	function _interopRequireDefault(obj) { return obj && obj.__esModule ? obj : { default: obj }; }

	function _classCallCheck(instance, Constructor) { if (!(instance instanceof Constructor)) { throw new TypeError("Cannot call a class as a function"); } }

	function _possibleConstructorReturn(self, call) { if (!self) { throw new ReferenceError("this hasn't been initialised - super() hasn't been called"); } return call && (typeof call === "object" || typeof call === "function") ? call : self; }

	function _inherits(subClass, superClass) { if (typeof superClass !== "function" && superClass !== null) { throw new TypeError("Super expression must either be null or a function, not " + typeof superClass); } subClass.prototype = Object.create(superClass && superClass.prototype, { constructor: { value: subClass, enumerable: false, writable: true, configurable: true } }); if (superClass) Object.setPrototypeOf ? Object.setPrototypeOf(subClass, superClass) : subClass.__proto__ = superClass; }

	var GoogleTrends = function (_Component) {
	  _inherits(GoogleTrends, _Component);

	  function GoogleTrends(props) {
	    _classCallCheck(this, GoogleTrends);

	    var _this = _possibleConstructorReturn(this, Object.getPrototypeOf(GoogleTrends).call(this, props));

	    _this.state = {
	      currentChart: 'car',
	      data: _this.props.googleTrendsData,
	      companyGoogleTrendsData: _this.props.companyGoogleTrendsData
	    };

	    _this.handleClick = _this.handleClick.bind(_this);
	    return _this;
	  }

	  _createClass(GoogleTrends, [{
	    key: 'handleClick',
	    value: function handleClick(event) {
	      this.setState({ currentChart: event.target.value });
	    }
	  }, {
	    key: 'renderLineChart',
	    value: function renderLineChart(index, color) {
	      return _react2.default.createElement(_linechart2.default, {
	        data: this.props.googleTrendsData[index].searchVolume,
	        keyword: this.props.googleTrendsData[index].keyword,
	        x: 'date',
	        y: 'volume',
	        height: 300,
	        width: 600,
	        color: color
	      });
	    }
	  }, {
	    key: 'render',
	    value: function render() {
	      var partial = void 0;

	      if (!this.props.googleTrendsData) {
	        return _react2.default.createElement(
	          'div',
	          null,
	          'Loading Google Trends data...'
	        );
	      }

	      if (this.state.currentChart === 'car') {
	        partial = this.renderLineChart(0, 'red');
	      } else if (this.state.currentChart === 'hedge') {
	        partial = this.renderLineChart(2, 'blue');
	      } else if (this.state.currentChart === 'dow jones') {
	        partial = this.renderLineChart(1, 'green');
	      } else if (this.state.currentChart === 'unemployment') {
	        partial = this.renderLineChart(3, 'yellow');
	      } else if (this.state.currentChart === 'panic') {
	        partial = this.renderLineChart(4, 'orange');
	      } else if (this.state.currentChart === 'real estate agent') {
	        partial = this.renderLineChart(5, 'black');
	      } else if (this.state.currentChart === 'inflation') {
	        partial = this.renderLineChart(6, 'gray');
	      } else if (this.state.currentChart === 'restaurant') {
	        partial = this.renderLineChart(7, 'pink');
	      }

	      return _react2.default.createElement(
	        'section',
	        { className: 'google-trends' },
	        _react2.default.createElement(
	          'div',
	          { className: 'row quote' },
	          _react2.default.createElement(
	            'quote',
	            null,
	            '"Research published today in Nature Scientific Reports finds that ',
	            _react2.default.createElement(
	              'span',
	              { className: 'stand-out' },
	              'Google search behaviour'
	            ),
	            ' is not only a clear indicator of movements in the market; it also ',
	            _react2.default.createElement(
	              'span',
	              { className: 'stand-out' },
	              'gives insight into the likely future behaviour of economic actors'
	            ),
	            '."'
	          ),
	          ' ',
	          _react2.default.createElement(
	            'small',
	            null,
	            '~ Nature.com: Quantifying Trading Behavior in Financial Markets Using Google Trends'
	          )
	        ),
	        _react2.default.createElement(
	          'div',
	          { className: 'row' },
	          _react2.default.createElement(
	            'div',
	            { className: 'col-md-8' },
	            _react2.default.createElement(
	              'nav',
	              { className: 'google-trends-nav' },
	              _react2.default.createElement(
	                'button',
	                { onClick: this.handleClick, value: 'car', className: 'btn btn-warning btn-rounded waves-effect' },
	                'Car'
	              ),
	              _react2.default.createElement(
	                'button',
	                { onClick: this.handleClick, value: 'dow jones', className: 'btn btn-warning btn-rounded waves-effect' },
	                'Dow Jones'
	              ),
	              _react2.default.createElement(
	                'button',
	                { onClick: this.handleClick, value: 'hedge', className: 'btn btn-warning btn-rounded waves-effect' },
	                'Hedge'
	              ),
	              _react2.default.createElement(
	                'button',
	                { onClick: this.handleClick, value: 'panic', className: 'btn btn-warning btn-rounded waves-effect' },
	                'Panic'
	              ),
	              _react2.default.createElement(
	                'button',
	                { onClick: this.handleClick, value: 'unemployment', className: 'btn btn-warning btn-rounded waves-effect' },
	                'Unemployment'
	              ),
	              _react2.default.createElement(
	                'button',
	                { onClick: this.handleClick, value: 'real estate agent', className: 'btn btn-warning btn-rounded waves-effect' },
	                'Real Estate Agent'
	              ),
	              _react2.default.createElement(
	                'button',
	                { onClick: this.handleClick, value: 'inflation', className: 'btn btn-warning btn-rounded waves-effect' },
	                'Inflation'
	              ),
	              _react2.default.createElement(
	                'button',
	                { onClick: this.handleClick, value: 'restaurant', className: 'btn btn-warning btn-rounded waves-effect' },
	                'Restaurant'
	              )
	            ),
	            _react2.default.createElement(
	              'article',
	              null,
	              partial
	            )
	          ),
	          _react2.default.createElement(
	            'div',
	            { className: 'col-md-4' },
	            _react2.default.createElement(
	              'div',
	              { className: 'card' },
	              _react2.default.createElement(
	                'h3',
	                { className: 'card-header red white-text' },
	                'What are we looking at?'
	              ),
	              _react2.default.createElement(
	                'div',
	                { className: 'card-block' },
	                _react2.default.createElement(
	                  'h4',
	                  { className: 'card-title' },
	                  'Google search trends can help you get a pulse on economic and market indicators'
	                ),
	                _react2.default.createElement(
	                  'p',
	                  { className: 'card-text' },
	                  _react2.default.createElement(
	                    'ul',
	                    null,
	                    _react2.default.createElement(
	                      'li',
	                      null,
	                      _react2.default.createElement(
	                        'strong',
	                        null,
	                        'Cars & Restaurants'
	                      ),
	                      ': Pulse on consumer spending'
	                    ),
	                    _react2.default.createElement(
	                      'li',
	                      null,
	                      _react2.default.createElement(
	                        'strong',
	                        null,
	                        'Real Estate Agent'
	                      ),
	                      ': Pulse on housing market demand'
	                    ),
	                    _react2.default.createElement(
	                      'li',
	                      null,
	                      _react2.default.createElement(
	                        'strong',
	                        null,
	                        'Unemployment'
	                      ),
	                      ': Pulse on jobs'
	                    ),
	                    _react2.default.createElement(
	                      'li',
	                      null,
	                      _react2.default.createElement(
	                        'strong',
	                        null,
	                        'Inflation'
	                      ),
	                      ': Pulse on inflation'
	                    ),
	                    _react2.default.createElement(
	                      'li',
	                      null,
	                      _react2.default.createElement(
	                        'strong',
	                        null,
	                        'Dow Jones'
	                      ),
	                      ': Pulse on market volatility'
	                    ),
	                    _react2.default.createElement(
	                      'li',
	                      null,
	                      _react2.default.createElement(
	                        'strong',
	                        null,
	                        'Hedge & Panic'
	                      ),
	                      ': Pulse on market fear'
	                    )
	                  )
	                )
	              )
	            )
	          )
	        ),
	        _react2.default.createElement(
	          'div',
	          { className: 'row' },
	          _react2.default.createElement(
	            'div',
	            { className: 'card card-danger text-xs-center z-depth-2 col-md-3 infobox' },
	            _react2.default.createElement(
	              'div',
	              { className: 'card-block' },
	              _react2.default.createElement(
	                'p',
	                { className: 'white-text' },
	                _react2.default.createElement(
	                  'span',
	                  { className: 'stand-out-white' },
	                  '6% increase in searches for "restaurant" from May 2016 to June 2016'
	                )
	              )
	            )
	          ),
	          _react2.default.createElement(
	            'div',
	            { className: 'card card-warning text-xs-center z-depth-2 col-md-3 infobox' },
	            _react2.default.createElement(
	              'div',
	              { className: 'card-block' },
	              _react2.default.createElement(
	                'p',
	                { className: 'white-text' },
	                _react2.default.createElement(
	                  'span',
	                  { className: 'stand-out-white' },
	                  '6% increase in searches for "restaurant" from May 2016 to June 2016'
	                )
	              )
	            )
	          ),
	          _react2.default.createElement(
	            'div',
	            { className: 'card card-info text-xs-center z-depth-2 col-md-3 infobox' },
	            _react2.default.createElement(
	              'div',
	              { className: 'card-block' },
	              _react2.default.createElement(
	                'p',
	                { className: 'white-text' },
	                _react2.default.createElement(
	                  'span',
	                  { className: 'stand-out-white' },
	                  '6% increase in searches for "restaurant" from May 2016 to June 2016'
	                )
	              )
	            )
	          ),
	          _react2.default.createElement(
	            'div',
	            { className: 'google-summary col-md-4 card card-block' },
	            _react2.default.createElement(
	              'p',
	              null,
	              _react2.default.createElement(
	                'b',
	                null,
	                'Lorem Ipsum'
	              ),
	              ' is simply dummy text of the printing and typesetting industry. Lorem Ipsum has been the industry\'s standard dummy text ever since the ',
	              _react2.default.createElement(
	                'span',
	                { className: 'stand-out' },
	                '1500'
	              ),
	              's, when an unknown printer took a galley of type and scrambled it to make a type specimen book. It has survived not only five centuries, but also the leap into electronic typesetting, remaining essentially unchanged.'
	            )
	          )
	        )
	      );
	    }
	  }]);

	  return GoogleTrends;
	}(_react.Component);

	exports.default = GoogleTrends;

/***/ },
/* 238 */
/***/ function(module, exports, __webpack_require__) {

	'use strict';

	Object.defineProperty(exports, "__esModule", {
	  value: true
	});

	var _createClass = function () { function defineProperties(target, props) { for (var i = 0; i < props.length; i++) { var descriptor = props[i]; descriptor.enumerable = descriptor.enumerable || false; descriptor.configurable = true; if ("value" in descriptor) descriptor.writable = true; Object.defineProperty(target, descriptor.key, descriptor); } } return function (Constructor, protoProps, staticProps) { if (protoProps) defineProperties(Constructor.prototype, protoProps); if (staticProps) defineProperties(Constructor, staticProps); return Constructor; }; }();

	var _react = __webpack_require__(2);

	var _react2 = _interopRequireDefault(_react);

	var _victory = __webpack_require__(239);

	function _interopRequireDefault(obj) { return obj && obj.__esModule ? obj : { default: obj }; }

	function _classCallCheck(instance, Constructor) { if (!(instance instanceof Constructor)) { throw new TypeError("Cannot call a class as a function"); } }

	function _possibleConstructorReturn(self, call) { if (!self) { throw new ReferenceError("this hasn't been initialised - super() hasn't been called"); } return call && (typeof call === "object" || typeof call === "function") ? call : self; }

	function _inherits(subClass, superClass) { if (typeof superClass !== "function" && superClass !== null) { throw new TypeError("Super expression must either be null or a function, not " + typeof superClass); } subClass.prototype = Object.create(superClass && superClass.prototype, { constructor: { value: subClass, enumerable: false, writable: true, configurable: true } }); if (superClass) Object.setPrototypeOf ? Object.setPrototypeOf(subClass, superClass) : subClass.__proto__ = superClass; }

	// LineChart component to be reused for Google Trends chart

	var LineChart = function (_Component) {
	  _inherits(LineChart, _Component);

	  function LineChart(props) {
	    _classCallCheck(this, LineChart);

	    return _possibleConstructorReturn(this, Object.getPrototypeOf(LineChart).call(this, props));
	  }

	  _createClass(LineChart, [{
	    key: 'computeDomain',
	    value: function computeDomain() {
	      var volumeArray = this.props.data.map(function (item) {
	        return item['volume'];
	      });
	      var max = Math.max.apply(null, volumeArray);
	      var min = Math.min.apply(null, volumeArray);

	      return [min, max];
	    }
	  }, {
	    key: 'render',
	    value: function render() {
	      return _react2.default.createElement(
	        'div',
	        null,
	        _react2.default.createElement(
	          'h4',
	          null,
	          _react2.default.createElement(
	            'strong',
	            null,
	            'Google searches for "',
	            this.props.keyword,
	            '" 2004 - present'
	          )
	        ),
	        _react2.default.createElement(
	          'svg',
	          { width: this.props.width, height: this.props.height },
	          _react2.default.createElement(_victory.VictoryLine, {
	            data: this.props.data,
	            x: this.props.x,
	            y: this.props.y,
	            label: this.props.keyword,
	            standalone: false,
	            height: this.props.height,
	            width: this.props.width,
	            style: {
	              data: {
	                stroke: this.props.color,
	                strokeWidth: 2
	              }
	            }
	          }),
	          _react2.default.createElement(_victory.VictoryAxis, {
	            height: this.props.height,
	            width: this.props.width,
	            tickValues: ['2004', '2006', '2008', '2010', '2012', '2014', '2016'],
	            standalone: false
	          }),
	          _react2.default.createElement(_victory.VictoryAxis, { dependentAxis: true,
	            height: this.props.height,
	            width: this.props.width,
	            label: 'Volume',
	            standalone: false,
	            domain: this.computeDomain(),
	            scale: "linear",
	            style: {
	              grid: {
	                stroke: "grey",
	                strokeWidth: 1
	              }
	            }
	          })
	        )
	      );
	    }
	  }]);

	  return LineChart;
	}(_react.Component);

	exports.default = LineChart;

/***/ },
/* 239 */
/***/ function(module, exports, __webpack_require__) {

	(function webpackUniversalModuleDefinition(root, factory) {
		if(true)
			module.exports = factory(__webpack_require__(2));
		else if(typeof define === 'function' && define.amd)
			define(["react"], factory);
		else if(typeof exports === 'object')
			exports["Victory"] = factory(require("react"));
		else
			root["Victory"] = factory(root["React"]);
	})(this, function(__WEBPACK_EXTERNAL_MODULE_157__) {
	return /******/ (function(modules) { // webpackBootstrap
	/******/ 	// The module cache
	/******/ 	var installedModules = {};
	/******/
	/******/ 	// The require function
	/******/ 	function __webpack_require__(moduleId) {
	/******/
	/******/ 		// Check if module is in cache
	/******/ 		if(installedModules[moduleId])
	/******/ 			return installedModules[moduleId].exports;
	/******/
	/******/ 		// Create a new module (and put it into the cache)
	/******/ 		var module = installedModules[moduleId] = {
	/******/ 			exports: {},
	/******/ 			id: moduleId,
	/******/ 			loaded: false
	/******/ 		};
	/******/
	/******/ 		// Execute the module function
	/******/ 		modules[moduleId].call(module.exports, module, module.exports, __webpack_require__);
	/******/
	/******/ 		// Flag the module as loaded
	/******/ 		module.loaded = true;
	/******/
	/******/ 		// Return the exports of the module
	/******/ 		return module.exports;
	/******/ 	}
	/******/
	/******/
	/******/ 	// expose the modules object (__webpack_modules__)
	/******/ 	__webpack_require__.m = modules;
	/******/
	/******/ 	// expose the module cache
	/******/ 	__webpack_require__.c = installedModules;
	/******/
	/******/ 	// __webpack_public_path__
	/******/ 	__webpack_require__.p = "";
	/******/
	/******/ 	// Load entry module and return exports
	/******/ 	return __webpack_require__(0);
	/******/ })
	/************************************************************************/
	/******/ ([
	/* 0 */
	/***/ function(module, exports, __webpack_require__) {

		"use strict";
		
		Object.defineProperty(exports, "__esModule", {
		  value: true
		});
		exports.VictoryTransition = exports.VictoryStack = exports.VictoryScatter = exports.VictoryPie = exports.VictoryLabel = exports.VictoryLine = exports.VictoryGroup = exports.VictoryChart = exports.VictoryBar = exports.VictoryAxis = exports.VictoryArea = exports.VictoryAnimation = undefined;
		
		var _victoryCore = __webpack_require__(1);
		
		var _victoryChart = __webpack_require__(173);
		
		var _victoryPie = __webpack_require__(391);
		
		exports.VictoryAnimation = _victoryCore.VictoryAnimation;
		exports.VictoryArea = _victoryChart.VictoryArea;
		exports.VictoryAxis = _victoryChart.VictoryAxis;
		exports.VictoryBar = _victoryChart.VictoryBar;
		exports.VictoryChart = _victoryChart.VictoryChart;
		exports.VictoryGroup = _victoryChart.VictoryGroup;
		exports.VictoryLine = _victoryChart.VictoryLine;
		exports.VictoryLabel = _victoryCore.VictoryLabel;
		exports.VictoryPie = _victoryPie.VictoryPie;
		exports.VictoryScatter = _victoryChart.VictoryScatter;
		exports.VictoryStack = _victoryChart.VictoryStack;
		exports.VictoryTransition = _victoryCore.VictoryTransition;

	/***/ },
	/* 1 */
	/***/ function(module, exports, __webpack_require__) {

		"use strict";
		
		Object.defineProperty(exports, "__esModule", {
		  value: true
		});
		exports.VictoryTransition = exports.VictoryLabel = exports.VictoryAnimation = exports.Transitions = exports.PropTypes = exports.Style = exports.Log = exports.Helpers = exports.Collection = undefined;
		
		var _collection = __webpack_require__(2);
		
		Object.defineProperty(exports, "Collection", {
		  enumerable: true,
		  get: function get() {
		    return _interopRequireDefault(_collection).default;
		  }
		});
		
		var _helpers = __webpack_require__(3);
		
		Object.defineProperty(exports, "Helpers", {
		  enumerable: true,
		  get: function get() {
		    return _interopRequireDefault(_helpers).default;
		  }
		});
		
		var _log = __webpack_require__(149);
		
		Object.defineProperty(exports, "Log", {
		  enumerable: true,
		  get: function get() {
		    return _interopRequireDefault(_log).default;
		  }
		});
		
		var _style = __webpack_require__(151);
		
		Object.defineProperty(exports, "Style", {
		  enumerable: true,
		  get: function get() {
		    return _interopRequireDefault(_style).default;
		  }
		});
		
		var _propTypes = __webpack_require__(156);
		
		Object.defineProperty(exports, "PropTypes", {
		  enumerable: true,
		  get: function get() {
		    return _interopRequireDefault(_propTypes).default;
		  }
		});
		
		var _victoryAnimation = __webpack_require__(158);
		
		Object.defineProperty(exports, "VictoryAnimation", {
		  enumerable: true,
		  get: function get() {
		    return _interopRequireDefault(_victoryAnimation).default;
		  }
		});
		
		var _victoryLabel = __webpack_require__(164);
		
		Object.defineProperty(exports, "VictoryLabel", {
		  enumerable: true,
		  get: function get() {
		    return _interopRequireDefault(_victoryLabel).default;
		  }
		});
		
		var _victoryTransition = __webpack_require__(168);
		
		Object.defineProperty(exports, "VictoryTransition", {
		  enumerable: true,
		  get: function get() {
		    return _interopRequireDefault(_victoryTransition).default;
		  }
		});
		
		var _transitions = __webpack_require__(166);
		
		var Transitions = _interopRequireWildcard(_transitions);
		
		function _interopRequireWildcard(obj) { if (obj && obj.__esModule) { return obj; } else { var newObj = {}; if (obj != null) { for (var key in obj) { if (Object.prototype.hasOwnProperty.call(obj, key)) newObj[key] = obj[key]; } } newObj.default = obj; return newObj; } }
		
		function _interopRequireDefault(obj) { return obj && obj.__esModule ? obj : { default: obj }; }
		
		exports.Transitions = Transitions;

	/***/ },
	/* 2 */
	/***/ function(module, exports) {

		"use strict";
		
		Object.defineProperty(exports, "__esModule", {
		  value: true
		});
		exports.default = {
		  isNonEmptyArray: function isNonEmptyArray(collection) {
		    return Array.isArray(collection) && collection.length > 0;
		  },
		  containsStrings: function containsStrings(collection) {
		    return Array.isArray(collection) && collection.some(function (value) {
		      return typeof value === "string";
		    });
		  },
		  containsDates: function containsDates(collection) {
		    return Array.isArray(collection) && collection.some(function (value) {
		      return value instanceof Date;
		    });
		  },
		  containsOnlyStrings: function containsOnlyStrings(collection) {
		    return this.isNonEmptyArray(collection) && collection.every(function (value) {
		      return typeof value === "string";
		    });
		  },
		  isArrayOfArrays: function isArrayOfArrays(collection) {
		    return this.isNonEmptyArray(collection) && collection.every(Array.isArray);
		  },
		  removeUndefined: function removeUndefined(arr) {
		    return arr.filter(function (el) {
		      return el !== undefined;
		    });
		  }
		};

	/***/ },
	/* 3 */
	/***/ function(module, exports, __webpack_require__) {

		"use strict";
		
		Object.defineProperty(exports, "__esModule", {
		  value: true
		});
		
		var _typeof = typeof Symbol === "function" && typeof Symbol.iterator === "symbol" ? function (obj) { return typeof obj; } : function (obj) { return obj && typeof Symbol === "function" && obj.constructor === Symbol ? "symbol" : typeof obj; };
		
		var _defaults = __webpack_require__(4);
		
		var _defaults2 = _interopRequireDefault(_defaults);
		
		var _isFunction = __webpack_require__(16);
		
		var _isFunction2 = _interopRequireDefault(_isFunction);
		
		var _property = __webpack_require__(38);
		
		var _property2 = _interopRequireDefault(_property);
		
		var _partial = __webpack_require__(47);
		
		var _partial2 = _interopRequireDefault(_partial);
		
		var _set = __webpack_require__(83);
		
		var _set2 = _interopRequireDefault(_set);
		
		var _merge = __webpack_require__(85);
		
		var _merge2 = _interopRequireDefault(_merge);
		
		function _interopRequireDefault(obj) { return obj && obj.__esModule ? obj : { default: obj }; }
		
		function _defineProperty(obj, key, value) { if (key in obj) { Object.defineProperty(obj, key, { value: value, enumerable: true, configurable: true, writable: true }); } else { obj[key] = value; } return obj; }
		
		exports.default = {
		  getPadding: function getPadding(props) {
		    var padding = typeof props.padding === "number" ? props.padding : 0;
		    var paddingObj = _typeof(props.padding) === "object" ? props.padding : {};
		    return {
		      top: paddingObj.top || padding,
		      bottom: paddingObj.bottom || padding,
		      left: paddingObj.left || padding,
		      right: paddingObj.right || padding
		    };
		  },
		  getStyles: function getStyles(style, defaultStyles, height, width) {
		    // eslint-disable-line max-params
		    if (!style) {
		      return (0, _defaults2.default)({ parent: { height: height, width: width } }, defaultStyles);
		    }
		
		    var data = style.data;
		    var labels = style.labels;
		    var parent = style.parent;
		
		    return {
		      parent: (0, _defaults2.default)({ height: height, width: width }, parent, defaultStyles.parent),
		      labels: (0, _defaults2.default)({}, labels, defaultStyles.labels),
		      data: (0, _defaults2.default)({}, data, defaultStyles.data)
		    };
		  },
		  evaluateProp: function evaluateProp(prop, data) {
		    return (0, _isFunction2.default)(prop) ? prop(data) : prop;
		  },
		  evaluateStyle: function evaluateStyle(style, data) {
		    var _this = this;
		
		    if (!Object.keys(style).some(function (value) {
		      return (0, _isFunction2.default)(style[value]);
		    })) {
		      return style;
		    }
		    return Object.keys(style).reduce(function (prev, curr) {
		      prev[curr] = _this.evaluateProp(style[curr], data);
		      return prev;
		    }, {});
		  },
		  getRange: function getRange(props, axis) {
		    // determine how to lay the axis and what direction positive and negative are
		    var horizontal = props.horizontal;
		
		    var isVertical = horizontal && axis === "x" || !horizontal && axis !== "x";
		    var isDependent = horizontal && !isVertical || !horizontal && isVertical;
		    var padding = this.getPadding(props);
		    if (isVertical) {
		      var bottomToTop = [props.height - padding.bottom, padding.top];
		      return isDependent ? bottomToTop : bottomToTop.reverse();
		    }
		    return [padding.left, props.width - padding.right];
		  },
		
		
		  // for components that take single datasets
		  getData: function getData(props) {
		    if (props.data) {
		      return this.formatData(props.data, props);
		    }
		  },
		  formatData: function formatData(dataset, props, stringMap) {
		    if (!dataset) {
		      return [];
		    }
		    stringMap = stringMap || {
		      x: this.createStringMap(props, "x"),
		      y: this.createStringMap(props, "y")
		    };
		    var accessor = {
		      x: this.createAccessor(props.x),
		      y: this.createAccessor(props.y)
		    };
		
		    return dataset.map(function (datum) {
		      var x = accessor.x(datum);
		      var y = accessor.y(datum);
		      var xName = typeof x === "string" ? { xName: x } : undefined;
		      var yName = typeof y === "string" ? { yName: y } : undefined;
		      return (0, _defaults2.default)({
		        // map string data to numeric values, and add names
		        x: typeof x === "string" ? stringMap.x[x] : x,
		        y: typeof y === "string" ? stringMap.y[y] : y
		      }, xName, yName, datum);
		    });
		  },
		  createStringMap: function createStringMap(props, axis) {
		    var stringsFromData = this.getStringsFromData(props, axis);
		    if (stringsFromData.length) {
		      return stringsFromData.reduce(function (acc, string, index) {
		        acc[string] = index + 1;
		        return acc;
		      }, {});
		    }
		    return null;
		  },
		  getStringsFromData: function getStringsFromData(props, axis) {
		    if (!props.data) {
		      return [];
		    }
		    var key = typeof props[axis] === "undefined" ? axis : props[axis];
		    var accessor = this.createAccessor(key);
		    var dataStrings = props.data.map(function (datum) {
		      return accessor(datum);
		    }).filter(function (datum) {
		      return typeof datum === "string";
		    });
		    // return a unique set of strings
		    return dataStrings.reduce(function (prev, curr) {
		      if (typeof curr !== "undefined" && curr !== null && prev.indexOf(curr) === -1) {
		        prev.push(curr);
		      }
		      return prev;
		    }, []);
		  },
		  createAccessor: function createAccessor(key) {
		    // creates a data accessor function
		    // given a property key, path, array index, or null for identity.
		    if ((0, _isFunction2.default)(key)) {
		      return key;
		    } else if (key === null || typeof key === "undefined") {
		      // null/undefined means "return the data item itself"
		      return function (x) {
		        return x;
		      };
		    }
		    // otherwise, assume it is an array index, property key or path (_.property handles all three)
		    return (0, _property2.default)(key);
		  },
		  getPartialEvents: function getPartialEvents(events, index, childProps) {
		    return events ? Object.keys(events).reduce(function (memo, eventName) {
		      /* eslint max-params: 0 */
		      memo[eventName] = (0, _partial2.default)(events[eventName], _partial2.default.placeholder, // evt will still be the first argument for event handlers
		      childProps, // event handlers will have access to data component props, including data
		      index, // used in setting a unique state property
		      eventName // used in setting a unique state property
		      );
		      return memo;
		    }, {}) : {};
		  },
		  getEvents: function getEvents(events, namespace) {
		    var _this2 = this;
		
		    var stateName = namespace + "State";
		    var onEvent = function onEvent(evt, childProps, index, eventName) {
		      if (_this2.props.events[namespace] && _this2.props.events[namespace][eventName]) {
		        _this2.setState(_defineProperty({}, stateName, (0, _merge2.default)({}, _this2.state[stateName], (0, _set2.default)({}, index, _this2.props.events[namespace][eventName](evt, childProps, index)))));
		      }
		    };
		
		    return events ? Object.keys(this.props.events[namespace]).reduce(function (memo, event) {
		      memo[event] = onEvent;
		      return memo;
		    }, {}) : {};
		  }
		};

	/***/ },
	/* 4 */
	/***/ function(module, exports, __webpack_require__) {

		var apply = __webpack_require__(5),
		    assignInDefaults = __webpack_require__(6),
		    assignInWith = __webpack_require__(8),
		    rest = __webpack_require__(20);
		
		/**
		 * Assigns own and inherited enumerable properties of source objects to the
		 * destination object for all destination properties that resolve to `undefined`.
		 * Source objects are applied from left to right. Once a property is set,
		 * additional values of the same property are ignored.
		 *
		 * **Note:** This method mutates `object`.
		 *
		 * @static
		 * @memberOf _
		 * @category Object
		 * @param {Object} object The destination object.
		 * @param {...Object} [sources] The source objects.
		 * @returns {Object} Returns `object`.
		 * @example
		 *
		 * _.defaults({ 'user': 'barney' }, { 'age': 36 }, { 'user': 'fred' });
		 * // => { 'user': 'barney', 'age': 36 }
		 */
		var defaults = rest(function(args) {
		  args.push(undefined, assignInDefaults);
		  return apply(assignInWith, undefined, args);
		});
		
		module.exports = defaults;


	/***/ },
	/* 5 */
	/***/ function(module, exports) {

		/**
		 * A faster alternative to `Function#apply`, this function invokes `func`
		 * with the `this` binding of `thisArg` and the arguments of `args`.
		 *
		 * @private
		 * @param {Function} func The function to invoke.
		 * @param {*} thisArg The `this` binding of `func`.
		 * @param {...*} args The arguments to invoke `func` with.
		 * @returns {*} Returns the result of `func`.
		 */
		function apply(func, thisArg, args) {
		  var length = args.length;
		  switch (length) {
		    case 0: return func.call(thisArg);
		    case 1: return func.call(thisArg, args[0]);
		    case 2: return func.call(thisArg, args[0], args[1]);
		    case 3: return func.call(thisArg, args[0], args[1], args[2]);
		  }
		  return func.apply(thisArg, args);
		}
		
		module.exports = apply;


	/***/ },
	/* 6 */
	/***/ function(module, exports, __webpack_require__) {

		var eq = __webpack_require__(7);
		
		/** Used for built-in method references. */
		var objectProto = Object.prototype;
		
		/** Used to check objects for own properties. */
		var hasOwnProperty = objectProto.hasOwnProperty;
		
		/**
		 * Used by `_.defaults` to customize its `_.assignIn` use.
		 *
		 * @private
		 * @param {*} objValue The destination value.
		 * @param {*} srcValue The source value.
		 * @param {string} key The key of the property to assign.
		 * @param {Object} object The parent object of `objValue`.
		 * @returns {*} Returns the value to assign.
		 */
		function assignInDefaults(objValue, srcValue, key, object) {
		  if (objValue === undefined ||
		      (eq(objValue, objectProto[key]) && !hasOwnProperty.call(object, key))) {
		    return srcValue;
		  }
		  return objValue;
		}
		
		module.exports = assignInDefaults;


	/***/ },
	/* 7 */
	/***/ function(module, exports) {

		/**
		 * Performs a [`SameValueZero`](http://ecma-international.org/ecma-262/6.0/#sec-samevaluezero)
		 * comparison between two values to determine if they are equivalent.
		 *
		 * @static
		 * @memberOf _
		 * @category Lang
		 * @param {*} value The value to compare.
		 * @param {*} other The other value to compare.
		 * @returns {boolean} Returns `true` if the values are equivalent, else `false`.
		 * @example
		 *
		 * var object = { 'user': 'fred' };
		 * var other = { 'user': 'fred' };
		 *
		 * _.eq(object, object);
		 * // => true
		 *
		 * _.eq(object, other);
		 * // => false
		 *
		 * _.eq('a', 'a');
		 * // => true
		 *
		 * _.eq('a', Object('a'));
		 * // => false
		 *
		 * _.eq(NaN, NaN);
		 * // => true
		 */
		function eq(value, other) {
		  return value === other || (value !== value && other !== other);
		}
		
		module.exports = eq;


	/***/ },
	/* 8 */
	/***/ function(module, exports, __webpack_require__) {

		var copyObjectWith = __webpack_require__(9),
		    createAssigner = __webpack_require__(11),
		    keysIn = __webpack_require__(23);
		
		/**
		 * This method is like `_.assignIn` except that it accepts `customizer` which
		 * is invoked to produce the assigned values. If `customizer` returns `undefined`
		 * assignment is handled by the method instead. The `customizer` is invoked
		 * with five arguments: (objValue, srcValue, key, object, source).
		 *
		 * **Note:** This method mutates `object`.
		 *
		 * @static
		 * @memberOf _
		 * @alias extendWith
		 * @category Object
		 * @param {Object} object The destination object.
		 * @param {...Object} sources The source objects.
		 * @param {Function} [customizer] The function to customize assigned values.
		 * @returns {Object} Returns `object`.
		 * @example
		 *
		 * function customizer(objValue, srcValue) {
		 *   return _.isUndefined(objValue) ? srcValue : objValue;
		 * }
		 *
		 * var defaults = _.partialRight(_.assignInWith, customizer);
		 *
		 * defaults({ 'a': 1 }, { 'b': 2 }, { 'a': 3 });
		 * // => { 'a': 1, 'b': 2 }
		 */
		var assignInWith = createAssigner(function(object, source, srcIndex, customizer) {
		  copyObjectWith(source, keysIn(source), object, customizer);
		});
		
		module.exports = assignInWith;


	/***/ },
	/* 9 */
	/***/ function(module, exports, __webpack_require__) {

		var assignValue = __webpack_require__(10);
		
		/**
		 * This function is like `copyObject` except that it accepts a function to
		 * customize copied values.
		 *
		 * @private
		 * @param {Object} source The object to copy properties from.
		 * @param {Array} props The property names to copy.
		 * @param {Object} [object={}] The object to copy properties to.
		 * @param {Function} [customizer] The function to customize copied values.
		 * @returns {Object} Returns `object`.
		 */
		function copyObjectWith(source, props, object, customizer) {
		  object || (object = {});
		
		  var index = -1,
		      length = props.length;
		
		  while (++index < length) {
		    var key = props[index];
		
		    var newValue = customizer
		      ? customizer(object[key], source[key], key, object, source)
		      : source[key];
		
		    assignValue(object, key, newValue);
		  }
		  return object;
		}
		
		module.exports = copyObjectWith;


	/***/ },
	/* 10 */
	/***/ function(module, exports, __webpack_require__) {

		var eq = __webpack_require__(7);
		
		/** Used for built-in method references. */
		var objectProto = Object.prototype;
		
		/** Used to check objects for own properties. */
		var hasOwnProperty = objectProto.hasOwnProperty;
		
		/**
		 * Assigns `value` to `key` of `object` if the existing value is not equivalent
		 * using [`SameValueZero`](http://ecma-international.org/ecma-262/6.0/#sec-samevaluezero)
		 * for equality comparisons.
		 *
		 * @private
		 * @param {Object} object The object to modify.
		 * @param {string} key The key of the property to assign.
		 * @param {*} value The value to assign.
		 */
		function assignValue(object, key, value) {
		  var objValue = object[key];
		  if (!(hasOwnProperty.call(object, key) && eq(objValue, value)) ||
		      (value === undefined && !(key in object))) {
		    object[key] = value;
		  }
		}
		
		module.exports = assignValue;


	/***/ },
	/* 11 */
	/***/ function(module, exports, __webpack_require__) {

		var isIterateeCall = __webpack_require__(12),
		    rest = __webpack_require__(20);
		
		/**
		 * Creates a function like `_.assign`.
		 *
		 * @private
		 * @param {Function} assigner The function to assign values.
		 * @returns {Function} Returns the new assigner function.
		 */
		function createAssigner(assigner) {
		  return rest(function(object, sources) {
		    var index = -1,
		        length = sources.length,
		        customizer = length > 1 ? sources[length - 1] : undefined,
		        guard = length > 2 ? sources[2] : undefined;
		
		    customizer = typeof customizer == 'function'
		      ? (length--, customizer)
		      : undefined;
		
		    if (guard && isIterateeCall(sources[0], sources[1], guard)) {
		      customizer = length < 3 ? undefined : customizer;
		      length = 1;
		    }
		    object = Object(object);
		    while (++index < length) {
		      var source = sources[index];
		      if (source) {
		        assigner(object, source, index, customizer);
		      }
		    }
		    return object;
		  });
		}
		
		module.exports = createAssigner;


	/***/ },
	/* 12 */
	/***/ function(module, exports, __webpack_require__) {

		var eq = __webpack_require__(7),
		    isArrayLike = __webpack_require__(13),
		    isIndex = __webpack_require__(19),
		    isObject = __webpack_require__(17);
		
		/**
		 * Checks if the given arguments are from an iteratee call.
		 *
		 * @private
		 * @param {*} value The potential iteratee value argument.
		 * @param {*} index The potential iteratee index or key argument.
		 * @param {*} object The potential iteratee object argument.
		 * @returns {boolean} Returns `true` if the arguments are from an iteratee call, else `false`.
		 */
		function isIterateeCall(value, index, object) {
		  if (!isObject(object)) {
		    return false;
		  }
		  var type = typeof index;
		  if (type == 'number'
		      ? (isArrayLike(object) && isIndex(index, object.length))
		      : (type == 'string' && index in object)) {
		    return eq(object[index], value);
		  }
		  return false;
		}
		
		module.exports = isIterateeCall;


	/***/ },
	/* 13 */
	/***/ function(module, exports, __webpack_require__) {

		var getLength = __webpack_require__(14),
		    isFunction = __webpack_require__(16),
		    isLength = __webpack_require__(18);
		
		/**
		 * Checks if `value` is array-like. A value is considered array-like if it's
		 * not a function and has a `value.length` that's an integer greater than or
		 * equal to `0` and less than or equal to `Number.MAX_SAFE_INTEGER`.
		 *
		 * @static
		 * @memberOf _
		 * @category Lang
		 * @param {*} value The value to check.
		 * @returns {boolean} Returns `true` if `value` is array-like, else `false`.
		 * @example
		 *
		 * _.isArrayLike([1, 2, 3]);
		 * // => true
		 *
		 * _.isArrayLike(document.body.children);
		 * // => true
		 *
		 * _.isArrayLike('abc');
		 * // => true
		 *
		 * _.isArrayLike(_.noop);
		 * // => false
		 */
		function isArrayLike(value) {
		  return value != null && isLength(getLength(value)) && !isFunction(value);
		}
		
		module.exports = isArrayLike;


	/***/ },
	/* 14 */
	/***/ function(module, exports, __webpack_require__) {

		var baseProperty = __webpack_require__(15);
		
		/**
		 * Gets the "length" property value of `object`.
		 *
		 * **Note:** This function is used to avoid a [JIT bug](https://bugs.webkit.org/show_bug.cgi?id=142792)
		 * that affects Safari on at least iOS 8.1-8.3 ARM64.
		 *
		 * @private
		 * @param {Object} object The object to query.
		 * @returns {*} Returns the "length" value.
		 */
		var getLength = baseProperty('length');
		
		module.exports = getLength;


	/***/ },
	/* 15 */
	/***/ function(module, exports) {

		/**
		 * The base implementation of `_.property` without support for deep paths.
		 *
		 * @private
		 * @param {string} key The key of the property to get.
		 * @returns {Function} Returns the new function.
		 */
		function baseProperty(key) {
		  return function(object) {
		    return object == null ? undefined : object[key];
		  };
		}
		
		module.exports = baseProperty;


	/***/ },
	/* 16 */
	/***/ function(module, exports, __webpack_require__) {

		var isObject = __webpack_require__(17);
		
		/** `Object#toString` result references. */
		var funcTag = '[object Function]',
		    genTag = '[object GeneratorFunction]';
		
		/** Used for built-in method references. */
		var objectProto = Object.prototype;
		
		/**
		 * Used to resolve the [`toStringTag`](http://ecma-international.org/ecma-262/6.0/#sec-object.prototype.tostring)
		 * of values.
		 */
		var objectToString = objectProto.toString;
		
		/**
		 * Checks if `value` is classified as a `Function` object.
		 *
		 * @static
		 * @memberOf _
		 * @category Lang
		 * @param {*} value The value to check.
		 * @returns {boolean} Returns `true` if `value` is correctly classified, else `false`.
		 * @example
		 *
		 * _.isFunction(_);
		 * // => true
		 *
		 * _.isFunction(/abc/);
		 * // => false
		 */
		function isFunction(value) {
		  // The use of `Object#toString` avoids issues with the `typeof` operator
		  // in Safari 8 which returns 'object' for typed array and weak map constructors,
		  // and PhantomJS 1.9 which returns 'function' for `NodeList` instances.
		  var tag = isObject(value) ? objectToString.call(value) : '';
		  return tag == funcTag || tag == genTag;
		}
		
		module.exports = isFunction;


	/***/ },
	/* 17 */
	/***/ function(module, exports) {

		/**
		 * Checks if `value` is the [language type](https://es5.github.io/#x8) of `Object`.
		 * (e.g. arrays, functions, objects, regexes, `new Number(0)`, and `new String('')`)
		 *
		 * @static
		 * @memberOf _
		 * @category Lang
		 * @param {*} value The value to check.
		 * @returns {boolean} Returns `true` if `value` is an object, else `false`.
		 * @example
		 *
		 * _.isObject({});
		 * // => true
		 *
		 * _.isObject([1, 2, 3]);
		 * // => true
		 *
		 * _.isObject(_.noop);
		 * // => true
		 *
		 * _.isObject(null);
		 * // => false
		 */
		function isObject(value) {
		  var type = typeof value;
		  return !!value && (type == 'object' || type == 'function');
		}
		
		module.exports = isObject;


	/***/ },
	/* 18 */
	/***/ function(module, exports) {

		/** Used as references for various `Number` constants. */
		var MAX_SAFE_INTEGER = 9007199254740991;
		
		/**
		 * Checks if `value` is a valid array-like length.
		 *
		 * **Note:** This function is loosely based on [`ToLength`](http://ecma-international.org/ecma-262/6.0/#sec-tolength).
		 *
		 * @static
		 * @memberOf _
		 * @category Lang
		 * @param {*} value The value to check.
		 * @returns {boolean} Returns `true` if `value` is a valid length, else `false`.
		 * @example
		 *
		 * _.isLength(3);
		 * // => true
		 *
		 * _.isLength(Number.MIN_VALUE);
		 * // => false
		 *
		 * _.isLength(Infinity);
		 * // => false
		 *
		 * _.isLength('3');
		 * // => false
		 */
		function isLength(value) {
		  return typeof value == 'number' &&
		    value > -1 && value % 1 == 0 && value <= MAX_SAFE_INTEGER;
		}
		
		module.exports = isLength;


	/***/ },
	/* 19 */
	/***/ function(module, exports) {

		/** Used as references for various `Number` constants. */
		var MAX_SAFE_INTEGER = 9007199254740991;
		
		/** Used to detect unsigned integer values. */
		var reIsUint = /^(?:0|[1-9]\d*)$/;
		
		/**
		 * Checks if `value` is a valid array-like index.
		 *
		 * @private
		 * @param {*} value The value to check.
		 * @param {number} [length=MAX_SAFE_INTEGER] The upper bounds of a valid index.
		 * @returns {boolean} Returns `true` if `value` is a valid index, else `false`.
		 */
		function isIndex(value, length) {
		  value = (typeof value == 'number' || reIsUint.test(value)) ? +value : -1;
		  length = length == null ? MAX_SAFE_INTEGER : length;
		  return value > -1 && value % 1 == 0 && value < length;
		}
		
		module.exports = isIndex;


	/***/ },
	/* 20 */
	/***/ function(module, exports, __webpack_require__) {

		var apply = __webpack_require__(5),
		    toInteger = __webpack_require__(21);
		
		/** Used as the `TypeError` message for "Functions" methods. */
		var FUNC_ERROR_TEXT = 'Expected a function';
		
		/* Built-in method references for those with the same name as other `lodash` methods. */
		var nativeMax = Math.max;
		
		/**
		 * Creates a function that invokes `func` with the `this` binding of the
		 * created function and arguments from `start` and beyond provided as an array.
		 *
		 * **Note:** This method is based on the [rest parameter](https://mdn.io/rest_parameters).
		 *
		 * @static
		 * @memberOf _
		 * @category Function
		 * @param {Function} func The function to apply a rest parameter to.
		 * @param {number} [start=func.length-1] The start position of the rest parameter.
		 * @returns {Function} Returns the new function.
		 * @example
		 *
		 * var say = _.rest(function(what, names) {
		 *   return what + ' ' + _.initial(names).join(', ') +
		 *     (_.size(names) > 1 ? ', & ' : '') + _.last(names);
		 * });
		 *
		 * say('hello', 'fred', 'barney', 'pebbles');
		 * // => 'hello fred, barney, & pebbles'
		 */
		function rest(func, start) {
		  if (typeof func != 'function') {
		    throw new TypeError(FUNC_ERROR_TEXT);
		  }
		  start = nativeMax(start === undefined ? (func.length - 1) : toInteger(start), 0);
		  return function() {
		    var args = arguments,
		        index = -1,
		        length = nativeMax(args.length - start, 0),
		        array = Array(length);
		
		    while (++index < length) {
		      array[index] = args[start + index];
		    }
		    switch (start) {
		      case 0: return func.call(this, array);
		      case 1: return func.call(this, args[0], array);
		      case 2: return func.call(this, args[0], args[1], array);
		    }
		    var otherArgs = Array(start + 1);
		    index = -1;
		    while (++index < start) {
		      otherArgs[index] = args[index];
		    }
		    otherArgs[start] = array;
		    return apply(func, this, otherArgs);
		  };
		}
		
		module.exports = rest;


	/***/ },
	/* 21 */
	/***/ function(module, exports, __webpack_require__) {

		var toNumber = __webpack_require__(22);
		
		/** Used as references for various `Number` constants. */
		var INFINITY = 1 / 0,
		    MAX_INTEGER = 1.7976931348623157e+308;
		
		/**
		 * Converts `value` to an integer.
		 *
		 * **Note:** This function is loosely based on [`ToInteger`](http://www.ecma-international.org/ecma-262/6.0/#sec-tointeger).
		 *
		 * @static
		 * @memberOf _
		 * @category Lang
		 * @param {*} value The value to convert.
		 * @returns {number} Returns the converted integer.
		 * @example
		 *
		 * _.toInteger(3);
		 * // => 3
		 *
		 * _.toInteger(Number.MIN_VALUE);
		 * // => 0
		 *
		 * _.toInteger(Infinity);
		 * // => 1.7976931348623157e+308
		 *
		 * _.toInteger('3');
		 * // => 3
		 */
		function toInteger(value) {
		  if (!value) {
		    return value === 0 ? value : 0;
		  }
		  value = toNumber(value);
		  if (value === INFINITY || value === -INFINITY) {
		    var sign = (value < 0 ? -1 : 1);
		    return sign * MAX_INTEGER;
		  }
		  var remainder = value % 1;
		  return value === value ? (remainder ? value - remainder : value) : 0;
		}
		
		module.exports = toInteger;


	/***/ },
	/* 22 */
	/***/ function(module, exports, __webpack_require__) {

		var isFunction = __webpack_require__(16),
		    isObject = __webpack_require__(17);
		
		/** Used as references for various `Number` constants. */
		var NAN = 0 / 0;
		
		/** Used to match leading and trailing whitespace. */
		var reTrim = /^\s+|\s+$/g;
		
		/** Used to detect bad signed hexadecimal string values. */
		var reIsBadHex = /^[-+]0x[0-9a-f]+$/i;
		
		/** Used to detect binary string values. */
		var reIsBinary = /^0b[01]+$/i;
		
		/** Used to detect octal string values. */
		var reIsOctal = /^0o[0-7]+$/i;
		
		/** Built-in method references without a dependency on `root`. */
		var freeParseInt = parseInt;
		
		/**
		 * Converts `value` to a number.
		 *
		 * @static
		 * @memberOf _
		 * @category Lang
		 * @param {*} value The value to process.
		 * @returns {number} Returns the number.
		 * @example
		 *
		 * _.toNumber(3);
		 * // => 3
		 *
		 * _.toNumber(Number.MIN_VALUE);
		 * // => 5e-324
		 *
		 * _.toNumber(Infinity);
		 * // => Infinity
		 *
		 * _.toNumber('3');
		 * // => 3
		 */
		function toNumber(value) {
		  if (isObject(value)) {
		    var other = isFunction(value.valueOf) ? value.valueOf() : value;
		    value = isObject(other) ? (other + '') : other;
		  }
		  if (typeof value != 'string') {
		    return value === 0 ? value : +value;
		  }
		  value = value.replace(reTrim, '');
		  var isBinary = reIsBinary.test(value);
		  return (isBinary || reIsOctal.test(value))
		    ? freeParseInt(value.slice(2), isBinary ? 2 : 8)
		    : (reIsBadHex.test(value) ? NAN : +value);
		}
		
		module.exports = toNumber;


	/***/ },
	/* 23 */
	/***/ function(module, exports, __webpack_require__) {

		var baseKeysIn = __webpack_require__(24),
		    indexKeys = __webpack_require__(30),
		    isIndex = __webpack_require__(19),
		    isPrototype = __webpack_require__(37);
		
		/** Used for built-in method references. */
		var objectProto = Object.prototype;
		
		/** Used to check objects for own properties. */
		var hasOwnProperty = objectProto.hasOwnProperty;
		
		/**
		 * Creates an array of the own and inherited enumerable property names of `object`.
		 *
		 * **Note:** Non-object values are coerced to objects.
		 *
		 * @static
		 * @memberOf _
		 * @category Object
		 * @param {Object} object The object to query.
		 * @returns {Array} Returns the array of property names.
		 * @example
		 *
		 * function Foo() {
		 *   this.a = 1;
		 *   this.b = 2;
		 * }
		 *
		 * Foo.prototype.c = 3;
		 *
		 * _.keysIn(new Foo);
		 * // => ['a', 'b', 'c'] (iteration order is not guaranteed)
		 */
		function keysIn(object) {
		  var index = -1,
		      isProto = isPrototype(object),
		      props = baseKeysIn(object),
		      propsLength = props.length,
		      indexes = indexKeys(object),
		      skipIndexes = !!indexes,
		      result = indexes || [],
		      length = result.length;
		
		  while (++index < propsLength) {
		    var key = props[index];
		    if (!(skipIndexes && (key == 'length' || isIndex(key, length))) &&
		        !(key == 'constructor' && (isProto || !hasOwnProperty.call(object, key)))) {
		      result.push(key);
		    }
		  }
		  return result;
		}
		
		module.exports = keysIn;


	/***/ },
	/* 24 */
	/***/ function(module, exports, __webpack_require__) {

		var Reflect = __webpack_require__(25),
		    iteratorToArray = __webpack_require__(29);
		
		/** Used for built-in method references. */
		var objectProto = Object.prototype;
		
		/** Built-in value references. */
		var enumerate = Reflect ? Reflect.enumerate : undefined,
		    propertyIsEnumerable = objectProto.propertyIsEnumerable;
		
		/**
		 * The base implementation of `_.keysIn` which doesn't skip the constructor
		 * property of prototypes or treat sparse arrays as dense.
		 *
		 * @private
		 * @param {Object} object The object to query.
		 * @returns {Array} Returns the array of property names.
		 */
		function baseKeysIn(object) {
		  object = object == null ? object : Object(object);
		
		  var result = [];
		  for (var key in object) {
		    result.push(key);
		  }
		  return result;
		}
		
		// Fallback for IE < 9 with es6-shim.
		if (enumerate && !propertyIsEnumerable.call({ 'valueOf': 1 }, 'valueOf')) {
		  baseKeysIn = function(object) {
		    return iteratorToArray(enumerate(object));
		  };
		}
		
		module.exports = baseKeysIn;


	/***/ },
	/* 25 */
	/***/ function(module, exports, __webpack_require__) {

		var root = __webpack_require__(26);
		
		/** Built-in value references. */
		var Reflect = root.Reflect;
		
		module.exports = Reflect;


	/***/ },
	/* 26 */
	/***/ function(module, exports, __webpack_require__) {

		/* WEBPACK VAR INJECTION */(function(module, global) {var checkGlobal = __webpack_require__(28);
		
		/** Used to determine if values are of the language type `Object`. */
		var objectTypes = {
		  'function': true,
		  'object': true
		};
		
		/** Detect free variable `exports`. */
		var freeExports = (objectTypes[typeof exports] && exports && !exports.nodeType)
		  ? exports
		  : undefined;
		
		/** Detect free variable `module`. */
		var freeModule = (objectTypes[typeof module] && module && !module.nodeType)
		  ? module
		  : undefined;
		
		/** Detect free variable `global` from Node.js. */
		var freeGlobal = checkGlobal(freeExports && freeModule && typeof global == 'object' && global);
		
		/** Detect free variable `self`. */
		var freeSelf = checkGlobal(objectTypes[typeof self] && self);
		
		/** Detect free variable `window`. */
		var freeWindow = checkGlobal(objectTypes[typeof window] && window);
		
		/** Detect `this` as the global object. */
		var thisGlobal = checkGlobal(objectTypes[typeof this] && this);
		
		/**
		 * Used as a reference to the global object.
		 *
		 * The `this` value is used if it's the global object to avoid Greasemonkey's
		 * restricted `window` object, otherwise the `window` object is used.
		 */
		var root = freeGlobal ||
		  ((freeWindow !== (thisGlobal && thisGlobal.window)) && freeWindow) ||
		    freeSelf || thisGlobal || Function('return this')();
		
		module.exports = root;
		
		/* WEBPACK VAR INJECTION */}.call(exports, __webpack_require__(27)(module), (function() { return this; }())))

	/***/ },
	/* 27 */
	/***/ function(module, exports) {

		module.exports = function(module) {
			if(!module.webpackPolyfill) {
				module.deprecate = function() {};
				module.paths = [];
				// module.parent = undefined by default
				module.children = [];
				module.webpackPolyfill = 1;
			}
			return module;
		}


	/***/ },
	/* 28 */
	/***/ function(module, exports) {

		/**
		 * Checks if `value` is a global object.
		 *
		 * @private
		 * @param {*} value The value to check.
		 * @returns {null|Object} Returns `value` if it's a global object, else `null`.
		 */
		function checkGlobal(value) {
		  return (value && value.Object === Object) ? value : null;
		}
		
		module.exports = checkGlobal;


	/***/ },
	/* 29 */
	/***/ function(module, exports) {

		/**
		 * Converts `iterator` to an array.
		 *
		 * @private
		 * @param {Object} iterator The iterator to convert.
		 * @returns {Array} Returns the converted array.
		 */
		function iteratorToArray(iterator) {
		  var data,
		      result = [];
		
		  while (!(data = iterator.next()).done) {
		    result.push(data.value);
		  }
		  return result;
		}
		
		module.exports = iteratorToArray;


	/***/ },
	/* 30 */
	/***/ function(module, exports, __webpack_require__) {

		var baseTimes = __webpack_require__(31),
		    isArguments = __webpack_require__(32),
		    isArray = __webpack_require__(35),
		    isLength = __webpack_require__(18),
		    isString = __webpack_require__(36);
		
		/**
		 * Creates an array of index keys for `object` values of arrays,
		 * `arguments` objects, and strings, otherwise `null` is returned.
		 *
		 * @private
		 * @param {Object} object The object to query.
		 * @returns {Array|null} Returns index keys, else `null`.
		 */
		function indexKeys(object) {
		  var length = object ? object.length : undefined;
		  if (isLength(length) &&
		      (isArray(object) || isString(object) || isArguments(object))) {
		    return baseTimes(length, String);
		  }
		  return null;
		}
		
		module.exports = indexKeys;


	/***/ },
	/* 31 */
	/***/ function(module, exports) {

		/**
		 * The base implementation of `_.times` without support for iteratee shorthands
		 * or max array length checks.
		 *
		 * @private
		 * @param {number} n The number of times to invoke `iteratee`.
		 * @param {Function} iteratee The function invoked per iteration.
		 * @returns {Array} Returns the array of results.
		 */
		function baseTimes(n, iteratee) {
		  var index = -1,
		      result = Array(n);
		
		  while (++index < n) {
		    result[index] = iteratee(index);
		  }
		  return result;
		}
		
		module.exports = baseTimes;


	/***/ },
	/* 32 */
	/***/ function(module, exports, __webpack_require__) {

		var isArrayLikeObject = __webpack_require__(33);
		
		/** `Object#toString` result references. */
		var argsTag = '[object Arguments]';
		
		/** Used for built-in method references. */
		var objectProto = Object.prototype;
		
		/** Used to check objects for own properties. */
		var hasOwnProperty = objectProto.hasOwnProperty;
		
		/**
		 * Used to resolve the [`toStringTag`](http://ecma-international.org/ecma-262/6.0/#sec-object.prototype.tostring)
		 * of values.
		 */
		var objectToString = objectProto.toString;
		
		/** Built-in value references. */
		var propertyIsEnumerable = objectProto.propertyIsEnumerable;
		
		/**
		 * Checks if `value` is likely an `arguments` object.
		 *
		 * @static
		 * @memberOf _
		 * @category Lang
		 * @param {*} value The value to check.
		 * @returns {boolean} Returns `true` if `value` is correctly classified, else `false`.
		 * @example
		 *
		 * _.isArguments(function() { return arguments; }());
		 * // => true
		 *
		 * _.isArguments([1, 2, 3]);
		 * // => false
		 */
		function isArguments(value) {
		  // Safari 8.1 incorrectly makes `arguments.callee` enumerable in strict mode.
		  return isArrayLikeObject(value) && hasOwnProperty.call(value, 'callee') &&
		    (!propertyIsEnumerable.call(value, 'callee') || objectToString.call(value) == argsTag);
		}
		
		module.exports = isArguments;


	/***/ },
	/* 33 */
	/***/ function(module, exports, __webpack_require__) {

		var isArrayLike = __webpack_require__(13),
		    isObjectLike = __webpack_require__(34);
		
		/**
		 * This method is like `_.isArrayLike` except that it also checks if `value`
		 * is an object.
		 *
		 * @static
		 * @memberOf _
		 * @category Lang
		 * @param {*} value The value to check.
		 * @returns {boolean} Returns `true` if `value` is an array-like object, else `false`.
		 * @example
		 *
		 * _.isArrayLikeObject([1, 2, 3]);
		 * // => true
		 *
		 * _.isArrayLikeObject(document.body.children);
		 * // => true
		 *
		 * _.isArrayLikeObject('abc');
		 * // => false
		 *
		 * _.isArrayLikeObject(_.noop);
		 * // => false
		 */
		function isArrayLikeObject(value) {
		  return isObjectLike(value) && isArrayLike(value);
		}
		
		module.exports = isArrayLikeObject;


	/***/ },
	/* 34 */
	/***/ function(module, exports) {

		/**
		 * Checks if `value` is object-like. A value is object-like if it's not `null`
		 * and has a `typeof` result of "object".
		 *
		 * @static
		 * @memberOf _
		 * @category Lang
		 * @param {*} value The value to check.
		 * @returns {boolean} Returns `true` if `value` is object-like, else `false`.
		 * @example
		 *
		 * _.isObjectLike({});
		 * // => true
		 *
		 * _.isObjectLike([1, 2, 3]);
		 * // => true
		 *
		 * _.isObjectLike(_.noop);
		 * // => false
		 *
		 * _.isObjectLike(null);
		 * // => false
		 */
		function isObjectLike(value) {
		  return !!value && typeof value == 'object';
		}
		
		module.exports = isObjectLike;


	/***/ },
	/* 35 */
	/***/ function(module, exports) {

		/**
		 * Checks if `value` is classified as an `Array` object.
		 *
		 * @static
		 * @memberOf _
		 * @type {Function}
		 * @category Lang
		 * @param {*} value The value to check.
		 * @returns {boolean} Returns `true` if `value` is correctly classified, else `false`.
		 * @example
		 *
		 * _.isArray([1, 2, 3]);
		 * // => true
		 *
		 * _.isArray(document.body.children);
		 * // => false
		 *
		 * _.isArray('abc');
		 * // => false
		 *
		 * _.isArray(_.noop);
		 * // => false
		 */
		var isArray = Array.isArray;
		
		module.exports = isArray;


	/***/ },
	/* 36 */
	/***/ function(module, exports, __webpack_require__) {

		var isArray = __webpack_require__(35),
		    isObjectLike = __webpack_require__(34);
		
		/** `Object#toString` result references. */
		var stringTag = '[object String]';
		
		/** Used for built-in method references. */
		var objectProto = Object.prototype;
		
		/**
		 * Used to resolve the [`toStringTag`](http://ecma-international.org/ecma-262/6.0/#sec-object.prototype.tostring)
		 * of values.
		 */
		var objectToString = objectProto.toString;
		
		/**
		 * Checks if `value` is classified as a `String` primitive or object.
		 *
		 * @static
		 * @memberOf _
		 * @category Lang
		 * @param {*} value The value to check.
		 * @returns {boolean} Returns `true` if `value` is correctly classified, else `false`.
		 * @example
		 *
		 * _.isString('abc');
		 * // => true
		 *
		 * _.isString(1);
		 * // => false
		 */
		function isString(value) {
		  return typeof value == 'string' ||
		    (!isArray(value) && isObjectLike(value) && objectToString.call(value) == stringTag);
		}
		
		module.exports = isString;


	/***/ },
	/* 37 */
	/***/ function(module, exports) {

		/** Used for built-in method references. */
		var objectProto = Object.prototype;
		
		/**
		 * Checks if `value` is likely a prototype object.
		 *
		 * @private
		 * @param {*} value The value to check.
		 * @returns {boolean} Returns `true` if `value` is a prototype, else `false`.
		 */
		function isPrototype(value) {
		  var Ctor = value && value.constructor,
		      proto = (typeof Ctor == 'function' && Ctor.prototype) || objectProto;
		
		  return value === proto;
		}
		
		module.exports = isPrototype;


	/***/ },
	/* 38 */
	/***/ function(module, exports, __webpack_require__) {

		var baseProperty = __webpack_require__(15),
		    basePropertyDeep = __webpack_require__(39),
		    isKey = __webpack_require__(46);
		
		/**
		 * Creates a function that returns the value at `path` of a given object.
		 *
		 * @static
		 * @memberOf _
		 * @category Util
		 * @param {Array|string} path The path of the property to get.
		 * @returns {Function} Returns the new function.
		 * @example
		 *
		 * var objects = [
		 *   { 'a': { 'b': { 'c': 2 } } },
		 *   { 'a': { 'b': { 'c': 1 } } }
		 * ];
		 *
		 * _.map(objects, _.property('a.b.c'));
		 * // => [2, 1]
		 *
		 * _.map(_.sortBy(objects, _.property(['a', 'b', 'c'])), 'a.b.c');
		 * // => [1, 2]
		 */
		function property(path) {
		  return isKey(path) ? baseProperty(path) : basePropertyDeep(path);
		}
		
		module.exports = property;


	/***/ },
	/* 39 */
	/***/ function(module, exports, __webpack_require__) {

		var baseGet = __webpack_require__(40);
		
		/**
		 * A specialized version of `baseProperty` which supports deep paths.
		 *
		 * @private
		 * @param {Array|string} path The path of the property to get.
		 * @returns {Function} Returns the new function.
		 */
		function basePropertyDeep(path) {
		  return function(object) {
		    return baseGet(object, path);
		  };
		}
		
		module.exports = basePropertyDeep;


	/***/ },
	/* 40 */
	/***/ function(module, exports, __webpack_require__) {

		var baseCastPath = __webpack_require__(41),
		    isKey = __webpack_require__(46);
		
		/**
		 * The base implementation of `_.get` without support for default values.
		 *
		 * @private
		 * @param {Object} object The object to query.
		 * @param {Array|string} path The path of the property to get.
		 * @returns {*} Returns the resolved value.
		 */
		function baseGet(object, path) {
		  path = isKey(path, object) ? [path + ''] : baseCastPath(path);
		
		  var index = 0,
		      length = path.length;
		
		  while (object != null && index < length) {
		    object = object[path[index++]];
		  }
		  return (index && index == length) ? object : undefined;
		}
		
		module.exports = baseGet;


	/***/ },
	/* 41 */
	/***/ function(module, exports, __webpack_require__) {

		var isArray = __webpack_require__(35),
		    stringToPath = __webpack_require__(42);
		
		/**
		 * Casts `value` to a path array if it's not one.
		 *
		 * @private
		 * @param {*} value The value to inspect.
		 * @returns {Array} Returns the cast property path array.
		 */
		function baseCastPath(value) {
		  return isArray(value) ? value : stringToPath(value);
		}
		
		module.exports = baseCastPath;


	/***/ },
	/* 42 */
	/***/ function(module, exports, __webpack_require__) {

		var toString = __webpack_require__(43);
		
		/** Used to match property names within property paths. */
		var rePropName = /[^.[\]]+|\[(?:(-?\d+(?:\.\d+)?)|(["'])((?:(?!\2)[^\\]|\\.)*?)\2)\]/g;
		
		/** Used to match backslashes in property paths. */
		var reEscapeChar = /\\(\\)?/g;
		
		/**
		 * Converts `string` to a property path array.
		 *
		 * @private
		 * @param {string} string The string to convert.
		 * @returns {Array} Returns the property path array.
		 */
		function stringToPath(string) {
		  var result = [];
		  toString(string).replace(rePropName, function(match, number, quote, string) {
		    result.push(quote ? string.replace(reEscapeChar, '$1') : (number || match));
		  });
		  return result;
		}
		
		module.exports = stringToPath;


	/***/ },
	/* 43 */
	/***/ function(module, exports, __webpack_require__) {

		var Symbol = __webpack_require__(44),
		    isSymbol = __webpack_require__(45);
		
		/** Used as references for various `Number` constants. */
		var INFINITY = 1 / 0;
		
		/** Used to convert symbols to primitives and strings. */
		var symbolProto = Symbol ? Symbol.prototype : undefined,
		    symbolToString = symbolProto ? symbolProto.toString : undefined;
		
		/**
		 * Converts `value` to a string if it's not one. An empty string is returned
		 * for `null` and `undefined` values. The sign of `-0` is preserved.
		 *
		 * @static
		 * @memberOf _
		 * @category Lang
		 * @param {*} value The value to process.
		 * @returns {string} Returns the string.
		 * @example
		 *
		 * _.toString(null);
		 * // => ''
		 *
		 * _.toString(-0);
		 * // => '-0'
		 *
		 * _.toString([1, 2, 3]);
		 * // => '1,2,3'
		 */
		function toString(value) {
		  // Exit early for strings to avoid a performance hit in some environments.
		  if (typeof value == 'string') {
		    return value;
		  }
		  if (value == null) {
		    return '';
		  }
		  if (isSymbol(value)) {
		    return symbolToString ? symbolToString.call(value) : '';
		  }
		  var result = (value + '');
		  return (result == '0' && (1 / value) == -INFINITY) ? '-0' : result;
		}
		
		module.exports = toString;


	/***/ },
	/* 44 */
	/***/ function(module, exports, __webpack_require__) {

		var root = __webpack_require__(26);
		
		/** Built-in value references. */
		var Symbol = root.Symbol;
		
		module.exports = Symbol;


	/***/ },
	/* 45 */
	/***/ function(module, exports, __webpack_require__) {

		var isObjectLike = __webpack_require__(34);
		
		/** `Object#toString` result references. */
		var symbolTag = '[object Symbol]';
		
		/** Used for built-in method references. */
		var objectProto = Object.prototype;
		
		/**
		 * Used to resolve the [`toStringTag`](http://ecma-international.org/ecma-262/6.0/#sec-object.prototype.tostring)
		 * of values.
		 */
		var objectToString = objectProto.toString;
		
		/**
		 * Checks if `value` is classified as a `Symbol` primitive or object.
		 *
		 * @static
		 * @memberOf _
		 * @category Lang
		 * @param {*} value The value to check.
		 * @returns {boolean} Returns `true` if `value` is correctly classified, else `false`.
		 * @example
		 *
		 * _.isSymbol(Symbol.iterator);
		 * // => true
		 *
		 * _.isSymbol('abc');
		 * // => false
		 */
		function isSymbol(value) {
		  return typeof value == 'symbol' ||
		    (isObjectLike(value) && objectToString.call(value) == symbolTag);
		}
		
		module.exports = isSymbol;


	/***/ },
	/* 46 */
	/***/ function(module, exports, __webpack_require__) {

		var isArray = __webpack_require__(35);
		
		/** Used to match property names within property paths. */
		var reIsDeepProp = /\.|\[(?:[^[\]]*|(["'])(?:(?!\1)[^\\]|\\.)*?\1)\]/,
		    reIsPlainProp = /^\w*$/;
		
		/**
		 * Checks if `value` is a property name and not a property path.
		 *
		 * @private
		 * @param {*} value The value to check.
		 * @param {Object} [object] The object to query keys on.
		 * @returns {boolean} Returns `true` if `value` is a property name, else `false`.
		 */
		function isKey(value, object) {
		  if (typeof value == 'number') {
		    return true;
		  }
		  return !isArray(value) &&
		    (reIsPlainProp.test(value) || !reIsDeepProp.test(value) ||
		      (object != null && value in Object(object)));
		}
		
		module.exports = isKey;


	/***/ },
	/* 47 */
	/***/ function(module, exports, __webpack_require__) {

		var createWrapper = __webpack_require__(48),
		    getPlaceholder = __webpack_require__(78),
		    replaceHolders = __webpack_require__(80),
		    rest = __webpack_require__(20);
		
		/** Used to compose bitmasks for wrapper metadata. */
		var PARTIAL_FLAG = 32;
		
		/**
		 * Creates a function that invokes `func` with `partial` arguments prepended
		 * to those provided to the new function. This method is like `_.bind` except
		 * it does **not** alter the `this` binding.
		 *
		 * The `_.partial.placeholder` value, which defaults to `_` in monolithic
		 * builds, may be used as a placeholder for partially applied arguments.
		 *
		 * **Note:** This method doesn't set the "length" property of partially
		 * applied functions.
		 *
		 * @static
		 * @memberOf _
		 * @category Function
		 * @param {Function} func The function to partially apply arguments to.
		 * @param {...*} [partials] The arguments to be partially applied.
		 * @returns {Function} Returns the new partially applied function.
		 * @example
		 *
		 * var greet = function(greeting, name) {
		 *   return greeting + ' ' + name;
		 * };
		 *
		 * var sayHelloTo = _.partial(greet, 'hello');
		 * sayHelloTo('fred');
		 * // => 'hello fred'
		 *
		 * // Partially applied with placeholders.
		 * var greetFred = _.partial(greet, _, 'fred');
		 * greetFred('hi');
		 * // => 'hi fred'
		 */
		var partial = rest(function(func, partials) {
		  var holders = replaceHolders(partials, getPlaceholder(partial));
		  return createWrapper(func, PARTIAL_FLAG, undefined, partials, holders);
		});
		
		// Assign default placeholders.
		partial.placeholder = {};
		
		module.exports = partial;


	/***/ },
	/* 48 */
	/***/ function(module, exports, __webpack_require__) {

		var baseSetData = __webpack_require__(49),
		    createBaseWrapper = __webpack_require__(56),
		    createCurryWrapper = __webpack_require__(59),
		    createHybridWrapper = __webpack_require__(60),
		    createPartialWrapper = __webpack_require__(81),
		    getData = __webpack_require__(69),
		    mergeData = __webpack_require__(82),
		    setData = __webpack_require__(76),
		    toInteger = __webpack_require__(21);
		
		/** Used as the `TypeError` message for "Functions" methods. */
		var FUNC_ERROR_TEXT = 'Expected a function';
		
		/** Used to compose bitmasks for wrapper metadata. */
		var BIND_FLAG = 1,
		    BIND_KEY_FLAG = 2,
		    CURRY_FLAG = 8,
		    CURRY_RIGHT_FLAG = 16,
		    PARTIAL_FLAG = 32,
		    PARTIAL_RIGHT_FLAG = 64;
		
		/* Built-in method references for those with the same name as other `lodash` methods. */
		var nativeMax = Math.max;
		
		/**
		 * Creates a function that either curries or invokes `func` with optional
		 * `this` binding and partially applied arguments.
		 *
		 * @private
		 * @param {Function|string} func The function or method name to wrap.
		 * @param {number} bitmask The bitmask of wrapper flags.
		 *  The bitmask may be composed of the following flags:
		 *     1 - `_.bind`
		 *     2 - `_.bindKey`
		 *     4 - `_.curry` or `_.curryRight` of a bound function
		 *     8 - `_.curry`
		 *    16 - `_.curryRight`
		 *    32 - `_.partial`
		 *    64 - `_.partialRight`
		 *   128 - `_.rearg`
		 *   256 - `_.ary`
		 * @param {*} [thisArg] The `this` binding of `func`.
		 * @param {Array} [partials] The arguments to be partially applied.
		 * @param {Array} [holders] The `partials` placeholder indexes.
		 * @param {Array} [argPos] The argument positions of the new function.
		 * @param {number} [ary] The arity cap of `func`.
		 * @param {number} [arity] The arity of `func`.
		 * @returns {Function} Returns the new wrapped function.
		 */
		function createWrapper(func, bitmask, thisArg, partials, holders, argPos, ary, arity) {
		  var isBindKey = bitmask & BIND_KEY_FLAG;
		  if (!isBindKey && typeof func != 'function') {
		    throw new TypeError(FUNC_ERROR_TEXT);
		  }
		  var length = partials ? partials.length : 0;
		  if (!length) {
		    bitmask &= ~(PARTIAL_FLAG | PARTIAL_RIGHT_FLAG);
		    partials = holders = undefined;
		  }
		  ary = ary === undefined ? ary : nativeMax(toInteger(ary), 0);
		  arity = arity === undefined ? arity : toInteger(arity);
		  length -= holders ? holders.length : 0;
		
		  if (bitmask & PARTIAL_RIGHT_FLAG) {
		    var partialsRight = partials,
		        holdersRight = holders;
		
		    partials = holders = undefined;
		  }
		  var data = isBindKey ? undefined : getData(func);
		
		  var newData = [
		    func, bitmask, thisArg, partials, holders, partialsRight, holdersRight,
		    argPos, ary, arity
		  ];
		
		  if (data) {
		    mergeData(newData, data);
		  }
		  func = newData[0];
		  bitmask = newData[1];
		  thisArg = newData[2];
		  partials = newData[3];
		  holders = newData[4];
		  arity = newData[9] = newData[9] == null
		    ? (isBindKey ? 0 : func.length)
		    : nativeMax(newData[9] - length, 0);
		
		  if (!arity && bitmask & (CURRY_FLAG | CURRY_RIGHT_FLAG)) {
		    bitmask &= ~(CURRY_FLAG | CURRY_RIGHT_FLAG);
		  }
		  if (!bitmask || bitmask == BIND_FLAG) {
		    var result = createBaseWrapper(func, bitmask, thisArg);
		  } else if (bitmask == CURRY_FLAG || bitmask == CURRY_RIGHT_FLAG) {
		    result = createCurryWrapper(func, bitmask, arity);
		  } else if ((bitmask == PARTIAL_FLAG || bitmask == (BIND_FLAG | PARTIAL_FLAG)) && !holders.length) {
		    result = createPartialWrapper(func, bitmask, thisArg, partials);
		  } else {
		    result = createHybridWrapper.apply(undefined, newData);
		  }
		  var setter = data ? baseSetData : setData;
		  return setter(result, newData);
		}
		
		module.exports = createWrapper;


	/***/ },
	/* 49 */
	/***/ function(module, exports, __webpack_require__) {

		var identity = __webpack_require__(50),
		    metaMap = __webpack_require__(51);
		
		/**
		 * The base implementation of `setData` without support for hot loop detection.
		 *
		 * @private
		 * @param {Function} func The function to associate metadata with.
		 * @param {*} data The metadata.
		 * @returns {Function} Returns `func`.
		 */
		var baseSetData = !metaMap ? identity : function(func, data) {
		  metaMap.set(func, data);
		  return func;
		};
		
		module.exports = baseSetData;


	/***/ },
	/* 50 */
	/***/ function(module, exports) {

		/**
		 * This method returns the first argument given to it.
		 *
		 * @static
		 * @memberOf _
		 * @category Util
		 * @param {*} value Any value.
		 * @returns {*} Returns `value`.
		 * @example
		 *
		 * var object = { 'user': 'fred' };
		 *
		 * _.identity(object) === object;
		 * // => true
		 */
		function identity(value) {
		  return value;
		}
		
		module.exports = identity;


	/***/ },
	/* 51 */
	/***/ function(module, exports, __webpack_require__) {

		var WeakMap = __webpack_require__(52);
		
		/** Used to store function metadata. */
		var metaMap = WeakMap && new WeakMap;
		
		module.exports = metaMap;


	/***/ },
	/* 52 */
	/***/ function(module, exports, __webpack_require__) {

		var getNative = __webpack_require__(53),
		    root = __webpack_require__(26);
		
		/* Built-in method references that are verified to be native. */
		var WeakMap = getNative(root, 'WeakMap');
		
		module.exports = WeakMap;


	/***/ },
	/* 53 */
	/***/ function(module, exports, __webpack_require__) {

		var isNative = __webpack_require__(54);
		
		/**
		 * Gets the native function at `key` of `object`.
		 *
		 * @private
		 * @param {Object} object The object to query.
		 * @param {string} key The key of the method to get.
		 * @returns {*} Returns the function if it's native, else `undefined`.
		 */
		function getNative(object, key) {
		  var value = object[key];
		  return isNative(value) ? value : undefined;
		}
		
		module.exports = getNative;


	/***/ },
	/* 54 */
	/***/ function(module, exports, __webpack_require__) {

		var isFunction = __webpack_require__(16),
		    isHostObject = __webpack_require__(55),
		    isObjectLike = __webpack_require__(34);
		
		/** Used to match `RegExp` [syntax characters](http://ecma-international.org/ecma-262/6.0/#sec-patterns). */
		var reRegExpChar = /[\\^$.*+?()[\]{}|]/g;
		
		/** Used to detect host constructors (Safari > 5). */
		var reIsHostCtor = /^\[object .+?Constructor\]$/;
		
		/** Used for built-in method references. */
		var objectProto = Object.prototype;
		
		/** Used to resolve the decompiled source of functions. */
		var funcToString = Function.prototype.toString;
		
		/** Used to check objects for own properties. */
		var hasOwnProperty = objectProto.hasOwnProperty;
		
		/** Used to detect if a method is native. */
		var reIsNative = RegExp('^' +
		  funcToString.call(hasOwnProperty).replace(reRegExpChar, '\\$&')
		  .replace(/hasOwnProperty|(function).*?(?=\\\()| for .+?(?=\\\])/g, '$1.*?') + '$'
		);
		
		/**
		 * Checks if `value` is a native function.
		 *
		 * @static
		 * @memberOf _
		 * @category Lang
		 * @param {*} value The value to check.
		 * @returns {boolean} Returns `true` if `value` is a native function, else `false`.
		 * @example
		 *
		 * _.isNative(Array.prototype.push);
		 * // => true
		 *
		 * _.isNative(_);
		 * // => false
		 */
		function isNative(value) {
		  if (value == null) {
		    return false;
		  }
		  if (isFunction(value)) {
		    return reIsNative.test(funcToString.call(value));
		  }
		  return isObjectLike(value) &&
		    (isHostObject(value) ? reIsNative : reIsHostCtor).test(value);
		}
		
		module.exports = isNative;


	/***/ },
	/* 55 */
	/***/ function(module, exports) {

		/**
		 * Checks if `value` is a host object in IE < 9.
		 *
		 * @private
		 * @param {*} value The value to check.
		 * @returns {boolean} Returns `true` if `value` is a host object, else `false`.
		 */
		function isHostObject(value) {
		  // Many host objects are `Object` objects that can coerce to strings
		  // despite having improperly defined `toString` methods.
		  var result = false;
		  if (value != null && typeof value.toString != 'function') {
		    try {
		      result = !!(value + '');
		    } catch (e) {}
		  }
		  return result;
		}
		
		module.exports = isHostObject;


	/***/ },
	/* 56 */
	/***/ function(module, exports, __webpack_require__) {

		var createCtorWrapper = __webpack_require__(57),
		    root = __webpack_require__(26);
		
		/** Used to compose bitmasks for wrapper metadata. */
		var BIND_FLAG = 1;
		
		/**
		 * Creates a function that wraps `func` to invoke it with the optional `this`
		 * binding of `thisArg`.
		 *
		 * @private
		 * @param {Function} func The function to wrap.
		 * @param {number} bitmask The bitmask of wrapper flags. See `createWrapper` for more details.
		 * @param {*} [thisArg] The `this` binding of `func`.
		 * @returns {Function} Returns the new wrapped function.
		 */
		function createBaseWrapper(func, bitmask, thisArg) {
		  var isBind = bitmask & BIND_FLAG,
		      Ctor = createCtorWrapper(func);
		
		  function wrapper() {
		    var fn = (this && this !== root && this instanceof wrapper) ? Ctor : func;
		    return fn.apply(isBind ? thisArg : this, arguments);
		  }
		  return wrapper;
		}
		
		module.exports = createBaseWrapper;


	/***/ },
	/* 57 */
	/***/ function(module, exports, __webpack_require__) {

		var baseCreate = __webpack_require__(58),
		    isObject = __webpack_require__(17);
		
		/**
		 * Creates a function that produces an instance of `Ctor` regardless of
		 * whether it was invoked as part of a `new` expression or by `call` or `apply`.
		 *
		 * @private
		 * @param {Function} Ctor The constructor to wrap.
		 * @returns {Function} Returns the new wrapped function.
		 */
		function createCtorWrapper(Ctor) {
		  return function() {
		    // Use a `switch` statement to work with class constructors.
		    // See http://ecma-international.org/ecma-262/6.0/#sec-ecmascript-function-objects-call-thisargument-argumentslist
		    // for more details.
		    var args = arguments;
		    switch (args.length) {
		      case 0: return new Ctor;
		      case 1: return new Ctor(args[0]);
		      case 2: return new Ctor(args[0], args[1]);
		      case 3: return new Ctor(args[0], args[1], args[2]);
		      case 4: return new Ctor(args[0], args[1], args[2], args[3]);
		      case 5: return new Ctor(args[0], args[1], args[2], args[3], args[4]);
		      case 6: return new Ctor(args[0], args[1], args[2], args[3], args[4], args[5]);
		      case 7: return new Ctor(args[0], args[1], args[2], args[3], args[4], args[5], args[6]);
		    }
		    var thisBinding = baseCreate(Ctor.prototype),
		        result = Ctor.apply(thisBinding, args);
		
		    // Mimic the constructor's `return` behavior.
		    // See https://es5.github.io/#x13.2.2 for more details.
		    return isObject(result) ? result : thisBinding;
		  };
		}
		
		module.exports = createCtorWrapper;


	/***/ },
	/* 58 */
	/***/ function(module, exports, __webpack_require__) {

		var isObject = __webpack_require__(17);
		
		/** Built-in value references. */
		var objectCreate = Object.create;
		
		/**
		 * The base implementation of `_.create` without support for assigning
		 * properties to the created object.
		 *
		 * @private
		 * @param {Object} prototype The object to inherit from.
		 * @returns {Object} Returns the new object.
		 */
		function baseCreate(proto) {
		  return isObject(proto) ? objectCreate(proto) : {};
		}
		
		module.exports = baseCreate;


	/***/ },
	/* 59 */
	/***/ function(module, exports, __webpack_require__) {

		var apply = __webpack_require__(5),
		    createCtorWrapper = __webpack_require__(57),
		    createHybridWrapper = __webpack_require__(60),
		    createRecurryWrapper = __webpack_require__(64),
		    getPlaceholder = __webpack_require__(78),
		    replaceHolders = __webpack_require__(80),
		    root = __webpack_require__(26);
		
		/**
		 * Creates a function that wraps `func` to enable currying.
		 *
		 * @private
		 * @param {Function} func The function to wrap.
		 * @param {number} bitmask The bitmask of wrapper flags. See `createWrapper` for more details.
		 * @param {number} arity The arity of `func`.
		 * @returns {Function} Returns the new wrapped function.
		 */
		function createCurryWrapper(func, bitmask, arity) {
		  var Ctor = createCtorWrapper(func);
		
		  function wrapper() {
		    var length = arguments.length,
		        args = Array(length),
		        index = length,
		        placeholder = getPlaceholder(wrapper);
		
		    while (index--) {
		      args[index] = arguments[index];
		    }
		    var holders = (length < 3 && args[0] !== placeholder && args[length - 1] !== placeholder)
		      ? []
		      : replaceHolders(args, placeholder);
		
		    length -= holders.length;
		    if (length < arity) {
		      return createRecurryWrapper(
		        func, bitmask, createHybridWrapper, wrapper.placeholder, undefined,
		        args, holders, undefined, undefined, arity - length);
		    }
		    var fn = (this && this !== root && this instanceof wrapper) ? Ctor : func;
		    return apply(fn, this, args);
		  }
		  return wrapper;
		}
		
		module.exports = createCurryWrapper;


	/***/ },
	/* 60 */
	/***/ function(module, exports, __webpack_require__) {

		var composeArgs = __webpack_require__(61),
		    composeArgsRight = __webpack_require__(62),
		    countHolders = __webpack_require__(63),
		    createCtorWrapper = __webpack_require__(57),
		    createRecurryWrapper = __webpack_require__(64),
		    getPlaceholder = __webpack_require__(78),
		    reorder = __webpack_require__(79),
		    replaceHolders = __webpack_require__(80),
		    root = __webpack_require__(26);
		
		/** Used to compose bitmasks for wrapper metadata. */
		var BIND_FLAG = 1,
		    BIND_KEY_FLAG = 2,
		    CURRY_FLAG = 8,
		    CURRY_RIGHT_FLAG = 16,
		    ARY_FLAG = 128,
		    FLIP_FLAG = 512;
		
		/**
		 * Creates a function that wraps `func` to invoke it with optional `this`
		 * binding of `thisArg`, partial application, and currying.
		 *
		 * @private
		 * @param {Function|string} func The function or method name to wrap.
		 * @param {number} bitmask The bitmask of wrapper flags. See `createWrapper` for more details.
		 * @param {*} [thisArg] The `this` binding of `func`.
		 * @param {Array} [partials] The arguments to prepend to those provided to the new function.
		 * @param {Array} [holders] The `partials` placeholder indexes.
		 * @param {Array} [partialsRight] The arguments to append to those provided to the new function.
		 * @param {Array} [holdersRight] The `partialsRight` placeholder indexes.
		 * @param {Array} [argPos] The argument positions of the new function.
		 * @param {number} [ary] The arity cap of `func`.
		 * @param {number} [arity] The arity of `func`.
		 * @returns {Function} Returns the new wrapped function.
		 */
		function createHybridWrapper(func, bitmask, thisArg, partials, holders, partialsRight, holdersRight, argPos, ary, arity) {
		  var isAry = bitmask & ARY_FLAG,
		      isBind = bitmask & BIND_FLAG,
		      isBindKey = bitmask & BIND_KEY_FLAG,
		      isCurried = bitmask & (CURRY_FLAG | CURRY_RIGHT_FLAG),
		      isFlip = bitmask & FLIP_FLAG,
		      Ctor = isBindKey ? undefined : createCtorWrapper(func);
		
		  function wrapper() {
		    var length = arguments.length,
		        index = length,
		        args = Array(length);
		
		    while (index--) {
		      args[index] = arguments[index];
		    }
		    if (isCurried) {
		      var placeholder = getPlaceholder(wrapper),
		          holdersCount = countHolders(args, placeholder);
		    }
		    if (partials) {
		      args = composeArgs(args, partials, holders, isCurried);
		    }
		    if (partialsRight) {
		      args = composeArgsRight(args, partialsRight, holdersRight, isCurried);
		    }
		    length -= holdersCount;
		    if (isCurried && length < arity) {
		      var newHolders = replaceHolders(args, placeholder);
		      return createRecurryWrapper(
		        func, bitmask, createHybridWrapper, wrapper.placeholder, thisArg,
		        args, newHolders, argPos, ary, arity - length
		      );
		    }
		    var thisBinding = isBind ? thisArg : this,
		        fn = isBindKey ? thisBinding[func] : func;
		
		    length = args.length;
		    if (argPos) {
		      args = reorder(args, argPos);
		    } else if (isFlip && length > 1) {
		      args.reverse();
		    }
		    if (isAry && ary < length) {
		      args.length = ary;
		    }
		    if (this && this !== root && this instanceof wrapper) {
		      fn = Ctor || createCtorWrapper(fn);
		    }
		    return fn.apply(thisBinding, args);
		  }
		  return wrapper;
		}
		
		module.exports = createHybridWrapper;


	/***/ },
	/* 61 */
	/***/ function(module, exports) {

		/* Built-in method references for those with the same name as other `lodash` methods. */
		var nativeMax = Math.max;
		
		/**
		 * Creates an array that is the composition of partially applied arguments,
		 * placeholders, and provided arguments into a single array of arguments.
		 *
		 * @private
		 * @param {Array|Object} args The provided arguments.
		 * @param {Array} partials The arguments to prepend to those provided.
		 * @param {Array} holders The `partials` placeholder indexes.
		 * @params {boolean} [isCurried] Specify composing for a curried function.
		 * @returns {Array} Returns the new array of composed arguments.
		 */
		function composeArgs(args, partials, holders, isCurried) {
		  var argsIndex = -1,
		      argsLength = args.length,
		      holdersLength = holders.length,
		      leftIndex = -1,
		      leftLength = partials.length,
		      rangeLength = nativeMax(argsLength - holdersLength, 0),
		      result = Array(leftLength + rangeLength),
		      isUncurried = !isCurried;
		
		  while (++leftIndex < leftLength) {
		    result[leftIndex] = partials[leftIndex];
		  }
		  while (++argsIndex < holdersLength) {
		    if (isUncurried || argsIndex < argsLength) {
		      result[holders[argsIndex]] = args[argsIndex];
		    }
		  }
		  while (rangeLength--) {
		    result[leftIndex++] = args[argsIndex++];
		  }
		  return result;
		}
		
		module.exports = composeArgs;


	/***/ },
	/* 62 */
	/***/ function(module, exports) {

		/* Built-in method references for those with the same name as other `lodash` methods. */
		var nativeMax = Math.max;
		
		/**
		 * This function is like `composeArgs` except that the arguments composition
		 * is tailored for `_.partialRight`.
		 *
		 * @private
		 * @param {Array|Object} args The provided arguments.
		 * @param {Array} partials The arguments to append to those provided.
		 * @param {Array} holders The `partials` placeholder indexes.
		 * @params {boolean} [isCurried] Specify composing for a curried function.
		 * @returns {Array} Returns the new array of composed arguments.
		 */
		function composeArgsRight(args, partials, holders, isCurried) {
		  var argsIndex = -1,
		      argsLength = args.length,
		      holdersIndex = -1,
		      holdersLength = holders.length,
		      rightIndex = -1,
		      rightLength = partials.length,
		      rangeLength = nativeMax(argsLength - holdersLength, 0),
		      result = Array(rangeLength + rightLength),
		      isUncurried = !isCurried;
		
		  while (++argsIndex < rangeLength) {
		    result[argsIndex] = args[argsIndex];
		  }
		  var offset = argsIndex;
		  while (++rightIndex < rightLength) {
		    result[offset + rightIndex] = partials[rightIndex];
		  }
		  while (++holdersIndex < holdersLength) {
		    if (isUncurried || argsIndex < argsLength) {
		      result[offset + holders[holdersIndex]] = args[argsIndex++];
		    }
		  }
		  return result;
		}
		
		module.exports = composeArgsRight;


	/***/ },
	/* 63 */
	/***/ function(module, exports) {

		/**
		 * Gets the number of `placeholder` occurrences in `array`.
		 *
		 * @private
		 * @param {Array} array The array to inspect.
		 * @param {*} placeholder The placeholder to search for.
		 * @returns {number} Returns the placeholder count.
		 */
		function countHolders(array, placeholder) {
		  var length = array.length,
		      result = 0;
		
		  while (length--) {
		    if (array[length] === placeholder) {
		      result++;
		    }
		  }
		  return result;
		}
		
		module.exports = countHolders;


	/***/ },
	/* 64 */
	/***/ function(module, exports, __webpack_require__) {

		var copyArray = __webpack_require__(65),
		    isLaziable = __webpack_require__(66),
		    setData = __webpack_require__(76);
		
		/** Used to compose bitmasks for wrapper metadata. */
		var BIND_FLAG = 1,
		    BIND_KEY_FLAG = 2,
		    CURRY_BOUND_FLAG = 4,
		    CURRY_FLAG = 8,
		    PARTIAL_FLAG = 32,
		    PARTIAL_RIGHT_FLAG = 64;
		
		/**
		 * Creates a function that wraps `func` to continue currying.
		 *
		 * @private
		 * @param {Function} func The function to wrap.
		 * @param {number} bitmask The bitmask of wrapper flags. See `createWrapper` for more details.
		 * @param {Function} wrapFunc The function to create the `func` wrapper.
		 * @param {*} placeholder The placeholder value.
		 * @param {*} [thisArg] The `this` binding of `func`.
		 * @param {Array} [partials] The arguments to prepend to those provided to the new function.
		 * @param {Array} [holders] The `partials` placeholder indexes.
		 * @param {Array} [argPos] The argument positions of the new function.
		 * @param {number} [ary] The arity cap of `func`.
		 * @param {number} [arity] The arity of `func`.
		 * @returns {Function} Returns the new wrapped function.
		 */
		function createRecurryWrapper(func, bitmask, wrapFunc, placeholder, thisArg, partials, holders, argPos, ary, arity) {
		  var isCurry = bitmask & CURRY_FLAG,
		      newArgPos = argPos ? copyArray(argPos) : undefined,
		      newHolders = isCurry ? holders : undefined,
		      newHoldersRight = isCurry ? undefined : holders,
		      newPartials = isCurry ? partials : undefined,
		      newPartialsRight = isCurry ? undefined : partials;
		
		  bitmask |= (isCurry ? PARTIAL_FLAG : PARTIAL_RIGHT_FLAG);
		  bitmask &= ~(isCurry ? PARTIAL_RIGHT_FLAG : PARTIAL_FLAG);
		
		  if (!(bitmask & CURRY_BOUND_FLAG)) {
		    bitmask &= ~(BIND_FLAG | BIND_KEY_FLAG);
		  }
		  var newData = [
		    func, bitmask, thisArg, newPartials, newHolders, newPartialsRight,
		    newHoldersRight, newArgPos, ary, arity
		  ];
		
		  var result = wrapFunc.apply(undefined, newData);
		  if (isLaziable(func)) {
		    setData(result, newData);
		  }
		  result.placeholder = placeholder;
		  return result;
		}
		
		module.exports = createRecurryWrapper;


	/***/ },
	/* 65 */
	/***/ function(module, exports) {

		/**
		 * Copies the values of `source` to `array`.
		 *
		 * @private
		 * @param {Array} source The array to copy values from.
		 * @param {Array} [array=[]] The array to copy values to.
		 * @returns {Array} Returns `array`.
		 */
		function copyArray(source, array) {
		  var index = -1,
		      length = source.length;
		
		  array || (array = Array(length));
		  while (++index < length) {
		    array[index] = source[index];
		  }
		  return array;
		}
		
		module.exports = copyArray;


	/***/ },
	/* 66 */
	/***/ function(module, exports, __webpack_require__) {

		var LazyWrapper = __webpack_require__(67),
		    getData = __webpack_require__(69),
		    getFuncName = __webpack_require__(71),
		    lodash = __webpack_require__(73);
		
		/**
		 * Checks if `func` has a lazy counterpart.
		 *
		 * @private
		 * @param {Function} func The function to check.
		 * @returns {boolean} Returns `true` if `func` has a lazy counterpart, else `false`.
		 */
		function isLaziable(func) {
		  var funcName = getFuncName(func),
		      other = lodash[funcName];
		
		  if (typeof other != 'function' || !(funcName in LazyWrapper.prototype)) {
		    return false;
		  }
		  if (func === other) {
		    return true;
		  }
		  var data = getData(other);
		  return !!data && func === data[0];
		}
		
		module.exports = isLaziable;


	/***/ },
	/* 67 */
	/***/ function(module, exports, __webpack_require__) {

		var baseCreate = __webpack_require__(58),
		    baseLodash = __webpack_require__(68);
		
		/** Used as references for the maximum length and index of an array. */
		var MAX_ARRAY_LENGTH = 4294967295;
		
		/**
		 * Creates a lazy wrapper object which wraps `value` to enable lazy evaluation.
		 *
		 * @private
		 * @constructor
		 * @param {*} value The value to wrap.
		 */
		function LazyWrapper(value) {
		  this.__wrapped__ = value;
		  this.__actions__ = [];
		  this.__dir__ = 1;
		  this.__filtered__ = false;
		  this.__iteratees__ = [];
		  this.__takeCount__ = MAX_ARRAY_LENGTH;
		  this.__views__ = [];
		}
		
		LazyWrapper.prototype = baseCreate(baseLodash.prototype);
		LazyWrapper.prototype.constructor = LazyWrapper;
		
		module.exports = LazyWrapper;


	/***/ },
	/* 68 */
	/***/ function(module, exports) {

		/**
		 * The function whose prototype all chaining wrappers inherit from.
		 *
		 * @private
		 */
		function baseLodash() {
		  // No operation performed.
		}
		
		module.exports = baseLodash;


	/***/ },
	/* 69 */
	/***/ function(module, exports, __webpack_require__) {

		var metaMap = __webpack_require__(51),
		    noop = __webpack_require__(70);
		
		/**
		 * Gets metadata for `func`.
		 *
		 * @private
		 * @param {Function} func The function to query.
		 * @returns {*} Returns the metadata for `func`.
		 */
		var getData = !metaMap ? noop : function(func) {
		  return metaMap.get(func);
		};
		
		module.exports = getData;


	/***/ },
	/* 70 */
	/***/ function(module, exports) {

		/**
		 * A no-operation function that returns `undefined` regardless of the
		 * arguments it receives.
		 *
		 * @static
		 * @memberOf _
		 * @category Util
		 * @example
		 *
		 * var object = { 'user': 'fred' };
		 *
		 * _.noop(object) === undefined;
		 * // => true
		 */
		function noop() {
		  // No operation performed.
		}
		
		module.exports = noop;


	/***/ },
	/* 71 */
	/***/ function(module, exports, __webpack_require__) {

		var realNames = __webpack_require__(72);
		
		/** Used for built-in method references. */
		var objectProto = Object.prototype;
		
		/** Used to check objects for own properties. */
		var hasOwnProperty = objectProto.hasOwnProperty;
		
		/**
		 * Gets the name of `func`.
		 *
		 * @private
		 * @param {Function} func The function to query.
		 * @returns {string} Returns the function name.
		 */
		function getFuncName(func) {
		  var result = (func.name + ''),
		      array = realNames[result],
		      length = hasOwnProperty.call(realNames, result) ? array.length : 0;
		
		  while (length--) {
		    var data = array[length],
		        otherFunc = data.func;
		    if (otherFunc == null || otherFunc == func) {
		      return data.name;
		    }
		  }
		  return result;
		}
		
		module.exports = getFuncName;


	/***/ },
	/* 72 */
	/***/ function(module, exports) {

		/** Used to lookup unminified function names. */
		var realNames = {};
		
		module.exports = realNames;


	/***/ },
	/* 73 */
	/***/ function(module, exports, __webpack_require__) {

		var LazyWrapper = __webpack_require__(67),
		    LodashWrapper = __webpack_require__(74),
		    baseLodash = __webpack_require__(68),
		    isArray = __webpack_require__(35),
		    isObjectLike = __webpack_require__(34),
		    wrapperClone = __webpack_require__(75);
		
		/** Used for built-in method references. */
		var objectProto = Object.prototype;
		
		/** Used to check objects for own properties. */
		var hasOwnProperty = objectProto.hasOwnProperty;
		
		/**
		 * Creates a `lodash` object which wraps `value` to enable implicit method
		 * chaining. Methods that operate on and return arrays, collections, and
		 * functions can be chained together. Methods that retrieve a single value or
		 * may return a primitive value will automatically end the chain sequence and
		 * return the unwrapped value. Otherwise, the value must be unwrapped with
		 * `_#value`.
		 *
		 * Explicit chaining, which must be unwrapped with `_#value` in all cases,
		 * may be enabled using `_.chain`.
		 *
		 * The execution of chained methods is lazy, that is, it's deferred until
		 * `_#value` is implicitly or explicitly called.
		 *
		 * Lazy evaluation allows several methods to support shortcut fusion. Shortcut
		 * fusion is an optimization to merge iteratee calls; this avoids the creation
		 * of intermediate arrays and can greatly reduce the number of iteratee executions.
		 * Sections of a chain sequence qualify for shortcut fusion if the section is
		 * applied to an array of at least two hundred elements and any iteratees
		 * accept only one argument. The heuristic for whether a section qualifies
		 * for shortcut fusion is subject to change.
		 *
		 * Chaining is supported in custom builds as long as the `_#value` method is
		 * directly or indirectly included in the build.
		 *
		 * In addition to lodash methods, wrappers have `Array` and `String` methods.
		 *
		 * The wrapper `Array` methods are:
		 * `concat`, `join`, `pop`, `push`, `shift`, `sort`, `splice`, and `unshift`
		 *
		 * The wrapper `String` methods are:
		 * `replace` and `split`
		 *
		 * The wrapper methods that support shortcut fusion are:
		 * `at`, `compact`, `drop`, `dropRight`, `dropWhile`, `filter`, `find`,
		 * `findLast`, `head`, `initial`, `last`, `map`, `reject`, `reverse`, `slice`,
		 * `tail`, `take`, `takeRight`, `takeRightWhile`, `takeWhile`, and `toArray`
		 *
		 * The chainable wrapper methods are:
		 * `after`, `ary`, `assign`, `assignIn`, `assignInWith`, `assignWith`, `at`,
		 * `before`, `bind`, `bindAll`, `bindKey`, `castArray`, `chain`, `chunk`,
		 * `commit`, `compact`, `concat`, `conforms`, `constant`, `countBy`, `create`,
		 * `curry`, `debounce`, `defaults`, `defaultsDeep`, `defer`, `delay`,
		 * `difference`, `differenceBy`, `differenceWith`, `drop`, `dropRight`,
		 * `dropRightWhile`, `dropWhile`, `extend`, `extendWith`, `fill`, `filter`,
		 * `flatten`, `flattenDeep`, `flattenDepth`, `flip`, `flow`, `flowRight`,
		 * `fromPairs`, `functions`, `functionsIn`, `groupBy`, `initial`, `intersection`,
		 * `intersectionBy`, `intersectionWith`, `invert`, `invertBy`, `invokeMap`,
		 * `iteratee`, `keyBy`, `keys`, `keysIn`, `map`, `mapKeys`, `mapValues`,
		 * `matches`, `matchesProperty`, `memoize`, `merge`, `mergeWith`, `method`,
		 * `methodOf`, `mixin`, `negate`, `nthArg`, `omit`, `omitBy`, `once`, `orderBy`,
		 * `over`, `overArgs`, `overEvery`, `overSome`, `partial`, `partialRight`,
		 * `partition`, `pick`, `pickBy`, `plant`, `property`, `propertyOf`, `pull`,
		 * `pullAll`, `pullAllBy`, `pullAllWith`, `pullAt`, `push`, `range`,
		 * `rangeRight`, `rearg`, `reject`, `remove`, `rest`, `reverse`, `sampleSize`,
		 * `set`, `setWith`, `shuffle`, `slice`, `sort`, `sortBy`, `splice`, `spread`,
		 * `tail`, `take`, `takeRight`, `takeRightWhile`, `takeWhile`, `tap`, `throttle`,
		 * `thru`, `toArray`, `toPairs`, `toPairsIn`, `toPath`, `toPlainObject`,
		 * `transform`, `unary`, `union`, `unionBy`, `unionWith`, `uniq`, `uniqBy`,
		 * `uniqWith`, `unset`, `unshift`, `unzip`, `unzipWith`, `update`, `values`,
		 * `valuesIn`, `without`, `wrap`, `xor`, `xorBy`, `xorWith`, `zip`, `zipObject`,
		 * `zipObjectDeep`, and `zipWith`
		 *
		 * The wrapper methods that are **not** chainable by default are:
		 * `add`, `attempt`, `camelCase`, `capitalize`, `ceil`, `clamp`, `clone`,
		 * `cloneDeep`, `cloneDeepWith`, `cloneWith`, `deburr`, `each`, `eachRight`,
		 * `endsWith`, `eq`, `escape`, `escapeRegExp`, `every`, `find`, `findIndex`,
		 * `findKey`, `findLast`, `findLastIndex`, `findLastKey`, `first`, `floor`,
		 * `forEach`, `forEachRight`, `forIn`, `forInRight`, `forOwn`, `forOwnRight`,
		 * `get`, `gt`, `gte`, `has`, `hasIn`, `head`, `identity`, `includes`,
		 * `indexOf`, `inRange`, `invoke`, `isArguments`, `isArray`, `isArrayBuffer`,
		 * `isArrayLike`, `isArrayLikeObject`, `isBoolean`, `isBuffer`, `isDate`,
		 * `isElement`, `isEmpty`, `isEqual`, `isEqualWith`, `isError`, `isFinite`,
		 * `isFunction`, `isInteger`, `isLength`, `isMap`, `isMatch`, `isMatchWith`,
		 * `isNaN`, `isNative`, `isNil`, `isNull`, `isNumber`, `isObject`, `isObjectLike`,
		 * `isPlainObject`, `isRegExp`, `isSafeInteger`, `isSet`, `isString`,
		 * `isUndefined`, `isTypedArray`, `isWeakMap`, `isWeakSet`, `join`, `kebabCase`,
		 * `last`, `lastIndexOf`, `lowerCase`, `lowerFirst`, `lt`, `lte`, `max`,
		 * `maxBy`, `mean`, `min`, `minBy`, `noConflict`, `noop`, `now`, `pad`,
		 * `padEnd`, `padStart`, `parseInt`, `pop`, `random`, `reduce`, `reduceRight`,
		 * `repeat`, `result`, `round`, `runInContext`, `sample`, `shift`, `size`,
		 * `snakeCase`, `some`, `sortedIndex`, `sortedIndexBy`, `sortedLastIndex`,
		 * `sortedLastIndexBy`, `startCase`, `startsWith`, `subtract`, `sum`, `sumBy`,
		 * `template`, `times`, `toInteger`, `toJSON`, `toLength`, `toLower`,
		 * `toNumber`, `toSafeInteger`, `toString`, `toUpper`, `trim`, `trimEnd`,
		 * `trimStart`, `truncate`, `unescape`, `uniqueId`, `upperCase`, `upperFirst`,
		 * `value`, and `words`
		 *
		 * @name _
		 * @constructor
		 * @category Seq
		 * @param {*} value The value to wrap in a `lodash` instance.
		 * @returns {Object} Returns the new `lodash` wrapper instance.
		 * @example
		 *
		 * function square(n) {
		 *   return n * n;
		 * }
		 *
		 * var wrapped = _([1, 2, 3]);
		 *
		 * // Returns an unwrapped value.
		 * wrapped.reduce(_.add);
		 * // => 6
		 *
		 * // Returns a wrapped value.
		 * var squares = wrapped.map(square);
		 *
		 * _.isArray(squares);
		 * // => false
		 *
		 * _.isArray(squares.value());
		 * // => true
		 */
		function lodash(value) {
		  if (isObjectLike(value) && !isArray(value) && !(value instanceof LazyWrapper)) {
		    if (value instanceof LodashWrapper) {
		      return value;
		    }
		    if (hasOwnProperty.call(value, '__wrapped__')) {
		      return wrapperClone(value);
		    }
		  }
		  return new LodashWrapper(value);
		}
		
		// Ensure wrappers are instances of `baseLodash`.
		lodash.prototype = baseLodash.prototype;
		lodash.prototype.constructor = lodash;
		
		module.exports = lodash;


	/***/ },
	/* 74 */
	/***/ function(module, exports, __webpack_require__) {

		var baseCreate = __webpack_require__(58),
		    baseLodash = __webpack_require__(68);
		
		/**
		 * The base constructor for creating `lodash` wrapper objects.
		 *
		 * @private
		 * @param {*} value The value to wrap.
		 * @param {boolean} [chainAll] Enable chaining for all wrapper methods.
		 */
		function LodashWrapper(value, chainAll) {
		  this.__wrapped__ = value;
		  this.__actions__ = [];
		  this.__chain__ = !!chainAll;
		  this.__index__ = 0;
		  this.__values__ = undefined;
		}
		
		LodashWrapper.prototype = baseCreate(baseLodash.prototype);
		LodashWrapper.prototype.constructor = LodashWrapper;
		
		module.exports = LodashWrapper;


	/***/ },
	/* 75 */
	/***/ function(module, exports, __webpack_require__) {

		var LazyWrapper = __webpack_require__(67),
		    LodashWrapper = __webpack_require__(74),
		    copyArray = __webpack_require__(65);
		
		/**
		 * Creates a clone of `wrapper`.
		 *
		 * @private
		 * @param {Object} wrapper The wrapper to clone.
		 * @returns {Object} Returns the cloned wrapper.
		 */
		function wrapperClone(wrapper) {
		  if (wrapper instanceof LazyWrapper) {
		    return wrapper.clone();
		  }
		  var result = new LodashWrapper(wrapper.__wrapped__, wrapper.__chain__);
		  result.__actions__ = copyArray(wrapper.__actions__);
		  result.__index__  = wrapper.__index__;
		  result.__values__ = wrapper.__values__;
		  return result;
		}
		
		module.exports = wrapperClone;


	/***/ },
	/* 76 */
	/***/ function(module, exports, __webpack_require__) {

		var baseSetData = __webpack_require__(49),
		    now = __webpack_require__(77);
		
		/** Used to detect hot functions by number of calls within a span of milliseconds. */
		var HOT_COUNT = 150,
		    HOT_SPAN = 16;
		
		/**
		 * Sets metadata for `func`.
		 *
		 * **Note:** If this function becomes hot, i.e. is invoked a lot in a short
		 * period of time, it will trip its breaker and transition to an identity function
		 * to avoid garbage collection pauses in V8. See [V8 issue 2070](https://code.google.com/p/v8/issues/detail?id=2070)
		 * for more details.
		 *
		 * @private
		 * @param {Function} func The function to associate metadata with.
		 * @param {*} data The metadata.
		 * @returns {Function} Returns `func`.
		 */
		var setData = (function() {
		  var count = 0,
		      lastCalled = 0;
		
		  return function(key, value) {
		    var stamp = now(),
		        remaining = HOT_SPAN - (stamp - lastCalled);
		
		    lastCalled = stamp;
		    if (remaining > 0) {
		      if (++count >= HOT_COUNT) {
		        return key;
		      }
		    } else {
		      count = 0;
		    }
		    return baseSetData(key, value);
		  };
		}());
		
		module.exports = setData;


	/***/ },
	/* 77 */
	/***/ function(module, exports) {

		/**
		 * Gets the timestamp of the number of milliseconds that have elapsed since
		 * the Unix epoch (1 January 1970 00:00:00 UTC).
		 *
		 * @static
		 * @memberOf _
		 * @type {Function}
		 * @category Date
		 * @returns {number} Returns the timestamp.
		 * @example
		 *
		 * _.defer(function(stamp) {
		 *   console.log(_.now() - stamp);
		 * }, _.now());
		 * // => logs the number of milliseconds it took for the deferred function to be invoked
		 */
		var now = Date.now;
		
		module.exports = now;


	/***/ },
	/* 78 */
	/***/ function(module, exports) {

		/**
		 * Gets the argument placeholder value for `func`.
		 *
		 * @private
		 * @param {Function} func The function to inspect.
		 * @returns {*} Returns the placeholder value.
		 */
		function getPlaceholder(func) {
		  var object = func;
		  return object.placeholder;
		}
		
		module.exports = getPlaceholder;


	/***/ },
	/* 79 */
	/***/ function(module, exports, __webpack_require__) {

		var copyArray = __webpack_require__(65),
		    isIndex = __webpack_require__(19);
		
		/* Built-in method references for those with the same name as other `lodash` methods. */
		var nativeMin = Math.min;
		
		/**
		 * Reorder `array` according to the specified indexes where the element at
		 * the first index is assigned as the first element, the element at
		 * the second index is assigned as the second element, and so on.
		 *
		 * @private
		 * @param {Array} array The array to reorder.
		 * @param {Array} indexes The arranged array indexes.
		 * @returns {Array} Returns `array`.
		 */
		function reorder(array, indexes) {
		  var arrLength = array.length,
		      length = nativeMin(indexes.length, arrLength),
		      oldArray = copyArray(array);
		
		  while (length--) {
		    var index = indexes[length];
		    array[length] = isIndex(index, arrLength) ? oldArray[index] : undefined;
		  }
		  return array;
		}
		
		module.exports = reorder;


	/***/ },
	/* 80 */
	/***/ function(module, exports) {

		/** Used as the internal argument placeholder. */
		var PLACEHOLDER = '__lodash_placeholder__';
		
		/**
		 * Replaces all `placeholder` elements in `array` with an internal placeholder
		 * and returns an array of their indexes.
		 *
		 * @private
		 * @param {Array} array The array to modify.
		 * @param {*} placeholder The placeholder to replace.
		 * @returns {Array} Returns the new array of placeholder indexes.
		 */
		function replaceHolders(array, placeholder) {
		  var index = -1,
		      length = array.length,
		      resIndex = 0,
		      result = [];
		
		  while (++index < length) {
		    var value = array[index];
		    if (value === placeholder || value === PLACEHOLDER) {
		      array[index] = PLACEHOLDER;
		      result[resIndex++] = index;
		    }
		  }
		  return result;
		}
		
		module.exports = replaceHolders;


	/***/ },
	/* 81 */
	/***/ function(module, exports, __webpack_require__) {

		var apply = __webpack_require__(5),
		    createCtorWrapper = __webpack_require__(57),
		    root = __webpack_require__(26);
		
		/** Used to compose bitmasks for wrapper metadata. */
		var BIND_FLAG = 1;
		
		/**
		 * Creates a function that wraps `func` to invoke it with the optional `this`
		 * binding of `thisArg` and the `partials` prepended to those provided to
		 * the wrapper.
		 *
		 * @private
		 * @param {Function} func The function to wrap.
		 * @param {number} bitmask The bitmask of wrapper flags. See `createWrapper` for more details.
		 * @param {*} thisArg The `this` binding of `func`.
		 * @param {Array} partials The arguments to prepend to those provided to the new function.
		 * @returns {Function} Returns the new wrapped function.
		 */
		function createPartialWrapper(func, bitmask, thisArg, partials) {
		  var isBind = bitmask & BIND_FLAG,
		      Ctor = createCtorWrapper(func);
		
		  function wrapper() {
		    var argsIndex = -1,
		        argsLength = arguments.length,
		        leftIndex = -1,
		        leftLength = partials.length,
		        args = Array(leftLength + argsLength),
		        fn = (this && this !== root && this instanceof wrapper) ? Ctor : func;
		
		    while (++leftIndex < leftLength) {
		      args[leftIndex] = partials[leftIndex];
		    }
		    while (argsLength--) {
		      args[leftIndex++] = arguments[++argsIndex];
		    }
		    return apply(fn, isBind ? thisArg : this, args);
		  }
		  return wrapper;
		}
		
		module.exports = createPartialWrapper;


	/***/ },
	/* 82 */
	/***/ function(module, exports, __webpack_require__) {

		var composeArgs = __webpack_require__(61),
		    composeArgsRight = __webpack_require__(62),
		    copyArray = __webpack_require__(65),
		    replaceHolders = __webpack_require__(80);
		
		/** Used as the internal argument placeholder. */
		var PLACEHOLDER = '__lodash_placeholder__';
		
		/** Used to compose bitmasks for wrapper metadata. */
		var BIND_FLAG = 1,
		    BIND_KEY_FLAG = 2,
		    CURRY_BOUND_FLAG = 4,
		    CURRY_FLAG = 8,
		    ARY_FLAG = 128,
		    REARG_FLAG = 256;
		
		/* Built-in method references for those with the same name as other `lodash` methods. */
		var nativeMin = Math.min;
		
		/**
		 * Merges the function metadata of `source` into `data`.
		 *
		 * Merging metadata reduces the number of wrappers used to invoke a function.
		 * This is possible because methods like `_.bind`, `_.curry`, and `_.partial`
		 * may be applied regardless of execution order. Methods like `_.ary` and `_.rearg`
		 * modify function arguments, making the order in which they are executed important,
		 * preventing the merging of metadata. However, we make an exception for a safe
		 * combined case where curried functions have `_.ary` and or `_.rearg` applied.
		 *
		 * @private
		 * @param {Array} data The destination metadata.
		 * @param {Array} source The source metadata.
		 * @returns {Array} Returns `data`.
		 */
		function mergeData(data, source) {
		  var bitmask = data[1],
		      srcBitmask = source[1],
		      newBitmask = bitmask | srcBitmask,
		      isCommon = newBitmask < (BIND_FLAG | BIND_KEY_FLAG | ARY_FLAG);
		
		  var isCombo =
		    ((srcBitmask == ARY_FLAG) && (bitmask == CURRY_FLAG)) ||
		    ((srcBitmask == ARY_FLAG) && (bitmask == REARG_FLAG) && (data[7].length <= source[8])) ||
		    ((srcBitmask == (ARY_FLAG | REARG_FLAG)) && (source[7].length <= source[8]) && (bitmask == CURRY_FLAG));
		
		  // Exit early if metadata can't be merged.
		  if (!(isCommon || isCombo)) {
		    return data;
		  }
		  // Use source `thisArg` if available.
		  if (srcBitmask & BIND_FLAG) {
		    data[2] = source[2];
		    // Set when currying a bound function.
		    newBitmask |= bitmask & BIND_FLAG ? 0 : CURRY_BOUND_FLAG;
		  }
		  // Compose partial arguments.
		  var value = source[3];
		  if (value) {
		    var partials = data[3];
		    data[3] = partials ? composeArgs(partials, value, source[4]) : copyArray(value);
		    data[4] = partials ? replaceHolders(data[3], PLACEHOLDER) : copyArray(source[4]);
		  }
		  // Compose partial right arguments.
		  value = source[5];
		  if (value) {
		    partials = data[5];
		    data[5] = partials ? composeArgsRight(partials, value, source[6]) : copyArray(value);
		    data[6] = partials ? replaceHolders(data[5], PLACEHOLDER) : copyArray(source[6]);
		  }
		  // Use source `argPos` if available.
		  value = source[7];
		  if (value) {
		    data[7] = copyArray(value);
		  }
		  // Use source `ary` if it's smaller.
		  if (srcBitmask & ARY_FLAG) {
		    data[8] = data[8] == null ? source[8] : nativeMin(data[8], source[8]);
		  }
		  // Use source `arity` if one is not provided.
		  if (data[9] == null) {
		    data[9] = source[9];
		  }
		  // Use source `func` and merge bitmasks.
		  data[0] = source[0];
		  data[1] = newBitmask;
		
		  return data;
		}
		
		module.exports = mergeData;


	/***/ },
	/* 83 */
	/***/ function(module, exports, __webpack_require__) {

		var baseSet = __webpack_require__(84);
		
		/**
		 * Sets the value at `path` of `object`. If a portion of `path` doesn't exist
		 * it's created. Arrays are created for missing index properties while objects
		 * are created for all other missing properties. Use `_.setWith` to customize
		 * `path` creation.
		 *
		 * **Note:** This method mutates `object`.
		 *
		 * @static
		 * @memberOf _
		 * @category Object
		 * @param {Object} object The object to modify.
		 * @param {Array|string} path The path of the property to set.
		 * @param {*} value The value to set.
		 * @returns {Object} Returns `object`.
		 * @example
		 *
		 * var object = { 'a': [{ 'b': { 'c': 3 } }] };
		 *
		 * _.set(object, 'a[0].b.c', 4);
		 * console.log(object.a[0].b.c);
		 * // => 4
		 *
		 * _.set(object, 'x[0].y.z', 5);
		 * console.log(object.x[0].y.z);
		 * // => 5
		 */
		function set(object, path, value) {
		  return object == null ? object : baseSet(object, path, value);
		}
		
		module.exports = set;


	/***/ },
	/* 84 */
	/***/ function(module, exports, __webpack_require__) {

		var assignValue = __webpack_require__(10),
		    baseCastPath = __webpack_require__(41),
		    isIndex = __webpack_require__(19),
		    isKey = __webpack_require__(46),
		    isObject = __webpack_require__(17);
		
		/**
		 * The base implementation of `_.set`.
		 *
		 * @private
		 * @param {Object} object The object to query.
		 * @param {Array|string} path The path of the property to set.
		 * @param {*} value The value to set.
		 * @param {Function} [customizer] The function to customize path creation.
		 * @returns {Object} Returns `object`.
		 */
		function baseSet(object, path, value, customizer) {
		  path = isKey(path, object) ? [path + ''] : baseCastPath(path);
		
		  var index = -1,
		      length = path.length,
		      lastIndex = length - 1,
		      nested = object;
		
		  while (nested != null && ++index < length) {
		    var key = path[index];
		    if (isObject(nested)) {
		      var newValue = value;
		      if (index != lastIndex) {
		        var objValue = nested[key];
		        newValue = customizer ? customizer(objValue, key, nested) : undefined;
		        if (newValue === undefined) {
		          newValue = objValue == null
		            ? (isIndex(path[index + 1]) ? [] : {})
		            : objValue;
		        }
		      }
		      assignValue(nested, key, newValue);
		    }
		    nested = nested[key];
		  }
		  return object;
		}
		
		module.exports = baseSet;


	/***/ },
	/* 85 */
	/***/ function(module, exports, __webpack_require__) {

		var baseMerge = __webpack_require__(86),
		    createAssigner = __webpack_require__(11);
		
		/**
		 * This method is like `_.assign` except that it recursively merges own and
		 * inherited enumerable properties of source objects into the destination
		 * object. Source properties that resolve to `undefined` are skipped if a
		 * destination value exists. Array and plain object properties are merged
		 * recursively.Other objects and value types are overridden by assignment.
		 * Source objects are applied from left to right. Subsequent sources
		 * overwrite property assignments of previous sources.
		 *
		 * **Note:** This method mutates `object`.
		 *
		 * @static
		 * @memberOf _
		 * @category Object
		 * @param {Object} object The destination object.
		 * @param {...Object} [sources] The source objects.
		 * @returns {Object} Returns `object`.
		 * @example
		 *
		 * var users = {
		 *   'data': [{ 'user': 'barney' }, { 'user': 'fred' }]
		 * };
		 *
		 * var ages = {
		 *   'data': [{ 'age': 36 }, { 'age': 40 }]
		 * };
		 *
		 * _.merge(users, ages);
		 * // => { 'data': [{ 'user': 'barney', 'age': 36 }, { 'user': 'fred', 'age': 40 }] }
		 */
		var merge = createAssigner(function(object, source, srcIndex) {
		  baseMerge(object, source, srcIndex);
		});
		
		module.exports = merge;


	/***/ },
	/* 86 */
	/***/ function(module, exports, __webpack_require__) {

		var Stack = __webpack_require__(87),
		    arrayEach = __webpack_require__(112),
		    assignMergeValue = __webpack_require__(113),
		    baseMergeDeep = __webpack_require__(114),
		    isArray = __webpack_require__(35),
		    isObject = __webpack_require__(17),
		    isTypedArray = __webpack_require__(147),
		    keysIn = __webpack_require__(23);
		
		/**
		 * The base implementation of `_.merge` without support for multiple sources.
		 *
		 * @private
		 * @param {Object} object The destination object.
		 * @param {Object} source The source object.
		 * @param {number} srcIndex The index of `source`.
		 * @param {Function} [customizer] The function to customize merged values.
		 * @param {Object} [stack] Tracks traversed source values and their merged counterparts.
		 */
		function baseMerge(object, source, srcIndex, customizer, stack) {
		  if (object === source) {
		    return;
		  }
		  var props = (isArray(source) || isTypedArray(source))
		    ? undefined
		    : keysIn(source);
		
		  arrayEach(props || source, function(srcValue, key) {
		    if (props) {
		      key = srcValue;
		      srcValue = source[key];
		    }
		    if (isObject(srcValue)) {
		      stack || (stack = new Stack);
		      baseMergeDeep(object, source, key, srcIndex, baseMerge, customizer, stack);
		    }
		    else {
		      var newValue = customizer
		        ? customizer(object[key], srcValue, (key + ''), object, source, stack)
		        : undefined;
		
		      if (newValue === undefined) {
		        newValue = srcValue;
		      }
		      assignMergeValue(object, key, newValue);
		    }
		  });
		}
		
		module.exports = baseMerge;


	/***/ },
	/* 87 */
	/***/ function(module, exports, __webpack_require__) {

		var stackClear = __webpack_require__(88),
		    stackDelete = __webpack_require__(89),
		    stackGet = __webpack_require__(92),
		    stackHas = __webpack_require__(94),
		    stackSet = __webpack_require__(96);
		
		/**
		 * Creates a stack cache object to store key-value pairs.
		 *
		 * @private
		 * @constructor
		 * @param {Array} [values] The values to cache.
		 */
		function Stack(values) {
		  var index = -1,
		      length = values ? values.length : 0;
		
		  this.clear();
		  while (++index < length) {
		    var entry = values[index];
		    this.set(entry[0], entry[1]);
		  }
		}
		
		// Add functions to the `Stack` cache.
		Stack.prototype.clear = stackClear;
		Stack.prototype['delete'] = stackDelete;
		Stack.prototype.get = stackGet;
		Stack.prototype.has = stackHas;
		Stack.prototype.set = stackSet;
		
		module.exports = Stack;


	/***/ },
	/* 88 */
	/***/ function(module, exports) {

		/**
		 * Removes all key-value entries from the stack.
		 *
		 * @private
		 * @name clear
		 * @memberOf Stack
		 */
		function stackClear() {
		  this.__data__ = { 'array': [], 'map': null };
		}
		
		module.exports = stackClear;


	/***/ },
	/* 89 */
	/***/ function(module, exports, __webpack_require__) {

		var assocDelete = __webpack_require__(90);
		
		/**
		 * Removes `key` and its value from the stack.
		 *
		 * @private
		 * @name delete
		 * @memberOf Stack
		 * @param {string} key The key of the value to remove.
		 * @returns {boolean} Returns `true` if the entry was removed, else `false`.
		 */
		function stackDelete(key) {
		  var data = this.__data__,
		      array = data.array;
		
		  return array ? assocDelete(array, key) : data.map['delete'](key);
		}
		
		module.exports = stackDelete;


	/***/ },
	/* 90 */
	/***/ function(module, exports, __webpack_require__) {

		var assocIndexOf = __webpack_require__(91);
		
		/** Used for built-in method references. */
		var arrayProto = Array.prototype;
		
		/** Built-in value references. */
		var splice = arrayProto.splice;
		
		/**
		 * Removes `key` and its value from the associative array.
		 *
		 * @private
		 * @param {Array} array The array to query.
		 * @param {string} key The key of the value to remove.
		 * @returns {boolean} Returns `true` if the entry was removed, else `false`.
		 */
		function assocDelete(array, key) {
		  var index = assocIndexOf(array, key);
		  if (index < 0) {
		    return false;
		  }
		  var lastIndex = array.length - 1;
		  if (index == lastIndex) {
		    array.pop();
		  } else {
		    splice.call(array, index, 1);
		  }
		  return true;
		}
		
		module.exports = assocDelete;


	/***/ },
	/* 91 */
	/***/ function(module, exports, __webpack_require__) {

		var eq = __webpack_require__(7);
		
		/**
		 * Gets the index at which the first occurrence of `key` is found in `array`
		 * of key-value pairs.
		 *
		 * @private
		 * @param {Array} array The array to search.
		 * @param {*} key The key to search for.
		 * @returns {number} Returns the index of the matched value, else `-1`.
		 */
		function assocIndexOf(array, key) {
		  var length = array.length;
		  while (length--) {
		    if (eq(array[length][0], key)) {
		      return length;
		    }
		  }
		  return -1;
		}
		
		module.exports = assocIndexOf;


	/***/ },
	/* 92 */
	/***/ function(module, exports, __webpack_require__) {

		var assocGet = __webpack_require__(93);
		
		/**
		 * Gets the stack value for `key`.
		 *
		 * @private
		 * @name get
		 * @memberOf Stack
		 * @param {string} key The key of the value to get.
		 * @returns {*} Returns the entry value.
		 */
		function stackGet(key) {
		  var data = this.__data__,
		      array = data.array;
		
		  return array ? assocGet(array, key) : data.map.get(key);
		}
		
		module.exports = stackGet;


	/***/ },
	/* 93 */
	/***/ function(module, exports, __webpack_require__) {

		var assocIndexOf = __webpack_require__(91);
		
		/**
		 * Gets the associative array value for `key`.
		 *
		 * @private
		 * @param {Array} array The array to query.
		 * @param {string} key The key of the value to get.
		 * @returns {*} Returns the entry value.
		 */
		function assocGet(array, key) {
		  var index = assocIndexOf(array, key);
		  return index < 0 ? undefined : array[index][1];
		}
		
		module.exports = assocGet;


	/***/ },
	/* 94 */
	/***/ function(module, exports, __webpack_require__) {

		var assocHas = __webpack_require__(95);
		
		/**
		 * Checks if a stack value for `key` exists.
		 *
		 * @private
		 * @name has
		 * @memberOf Stack
		 * @param {string} key The key of the entry to check.
		 * @returns {boolean} Returns `true` if an entry for `key` exists, else `false`.
		 */
		function stackHas(key) {
		  var data = this.__data__,
		      array = data.array;
		
		  return array ? assocHas(array, key) : data.map.has(key);
		}
		
		module.exports = stackHas;


	/***/ },
	/* 95 */
	/***/ function(module, exports, __webpack_require__) {

		var assocIndexOf = __webpack_require__(91);
		
		/**
		 * Checks if an associative array value for `key` exists.
		 *
		 * @private
		 * @param {Array} array The array to query.
		 * @param {string} key The key of the entry to check.
		 * @returns {boolean} Returns `true` if an entry for `key` exists, else `false`.
		 */
		function assocHas(array, key) {
		  return assocIndexOf(array, key) > -1;
		}
		
		module.exports = assocHas;


	/***/ },
	/* 96 */
	/***/ function(module, exports, __webpack_require__) {

		var MapCache = __webpack_require__(97),
		    assocSet = __webpack_require__(110);
		
		/** Used as the size to enable large array optimizations. */
		var LARGE_ARRAY_SIZE = 200;
		
		/**
		 * Sets the stack `key` to `value`.
		 *
		 * @private
		 * @name set
		 * @memberOf Stack
		 * @param {string} key The key of the value to set.
		 * @param {*} value The value to set.
		 * @returns {Object} Returns the stack cache object.
		 */
		function stackSet(key, value) {
		  var data = this.__data__,
		      array = data.array;
		
		  if (array) {
		    if (array.length < (LARGE_ARRAY_SIZE - 1)) {
		      assocSet(array, key, value);
		    } else {
		      data.array = null;
		      data.map = new MapCache(array);
		    }
		  }
		  var map = data.map;
		  if (map) {
		    map.set(key, value);
		  }
		  return this;
		}
		
		module.exports = stackSet;


	/***/ },
	/* 97 */
	/***/ function(module, exports, __webpack_require__) {

		var mapClear = __webpack_require__(98),
		    mapDelete = __webpack_require__(102),
		    mapGet = __webpack_require__(106),
		    mapHas = __webpack_require__(108),
		    mapSet = __webpack_require__(109);
		
		/**
		 * Creates a map cache object to store key-value pairs.
		 *
		 * @private
		 * @constructor
		 * @param {Array} [values] The values to cache.
		 */
		function MapCache(values) {
		  var index = -1,
		      length = values ? values.length : 0;
		
		  this.clear();
		  while (++index < length) {
		    var entry = values[index];
		    this.set(entry[0], entry[1]);
		  }
		}
		
		// Add functions to the `MapCache`.
		MapCache.prototype.clear = mapClear;
		MapCache.prototype['delete'] = mapDelete;
		MapCache.prototype.get = mapGet;
		MapCache.prototype.has = mapHas;
		MapCache.prototype.set = mapSet;
		
		module.exports = MapCache;


	/***/ },
	/* 98 */
	/***/ function(module, exports, __webpack_require__) {

		var Hash = __webpack_require__(99),
		    Map = __webpack_require__(101);
		
		/**
		 * Removes all key-value entries from the map.
		 *
		 * @private
		 * @name clear
		 * @memberOf MapCache
		 */
		function mapClear() {
		  this.__data__ = {
		    'hash': new Hash,
		    'map': Map ? new Map : [],
		    'string': new Hash
		  };
		}
		
		module.exports = mapClear;


	/***/ },
	/* 99 */
	/***/ function(module, exports, __webpack_require__) {

		var nativeCreate = __webpack_require__(100);
		
		/** Used for built-in method references. */
		var objectProto = Object.prototype;
		
		/**
		 * Creates an hash object.
		 *
		 * @private
		 * @constructor
		 * @returns {Object} Returns the new hash object.
		 */
		function Hash() {}
		
		// Avoid inheriting from `Object.prototype` when possible.
		Hash.prototype = nativeCreate ? nativeCreate(null) : objectProto;
		
		module.exports = Hash;


	/***/ },
	/* 100 */
	/***/ function(module, exports, __webpack_require__) {

		var getNative = __webpack_require__(53);
		
		/* Built-in method references that are verified to be native. */
		var nativeCreate = getNative(Object, 'create');
		
		module.exports = nativeCreate;


	/***/ },
	/* 101 */
	/***/ function(module, exports, __webpack_require__) {

		var getNative = __webpack_require__(53),
		    root = __webpack_require__(26);
		
		/* Built-in method references that are verified to be native. */
		var Map = getNative(root, 'Map');
		
		module.exports = Map;


	/***/ },
	/* 102 */
	/***/ function(module, exports, __webpack_require__) {

		var Map = __webpack_require__(101),
		    assocDelete = __webpack_require__(90),
		    hashDelete = __webpack_require__(103),
		    isKeyable = __webpack_require__(105);
		
		/**
		 * Removes `key` and its value from the map.
		 *
		 * @private
		 * @name delete
		 * @memberOf MapCache
		 * @param {string} key The key of the value to remove.
		 * @returns {boolean} Returns `true` if the entry was removed, else `false`.
		 */
		function mapDelete(key) {
		  var data = this.__data__;
		  if (isKeyable(key)) {
		    return hashDelete(typeof key == 'string' ? data.string : data.hash, key);
		  }
		  return Map ? data.map['delete'](key) : assocDelete(data.map, key);
		}
		
		module.exports = mapDelete;


	/***/ },
	/* 103 */
	/***/ function(module, exports, __webpack_require__) {

		var hashHas = __webpack_require__(104);
		
		/**
		 * Removes `key` and its value from the hash.
		 *
		 * @private
		 * @param {Object} hash The hash to modify.
		 * @param {string} key The key of the value to remove.
		 * @returns {boolean} Returns `true` if the entry was removed, else `false`.
		 */
		function hashDelete(hash, key) {
		  return hashHas(hash, key) && delete hash[key];
		}
		
		module.exports = hashDelete;


	/***/ },
	/* 104 */
	/***/ function(module, exports, __webpack_require__) {

		var nativeCreate = __webpack_require__(100);
		
		/** Used for built-in method references. */
		var objectProto = Object.prototype;
		
		/** Used to check objects for own properties. */
		var hasOwnProperty = objectProto.hasOwnProperty;
		
		/**
		 * Checks if a hash value for `key` exists.
		 *
		 * @private
		 * @param {Object} hash The hash to query.
		 * @param {string} key The key of the entry to check.
		 * @returns {boolean} Returns `true` if an entry for `key` exists, else `false`.
		 */
		function hashHas(hash, key) {
		  return nativeCreate ? hash[key] !== undefined : hasOwnProperty.call(hash, key);
		}
		
		module.exports = hashHas;


	/***/ },
	/* 105 */
	/***/ function(module, exports) {

		/**
		 * Checks if `value` is suitable for use as unique object key.
		 *
		 * @private
		 * @param {*} value The value to check.
		 * @returns {boolean} Returns `true` if `value` is suitable, else `false`.
		 */
		function isKeyable(value) {
		  var type = typeof value;
		  return type == 'number' || type == 'boolean' ||
		    (type == 'string' && value != '__proto__') || value == null;
		}
		
		module.exports = isKeyable;


	/***/ },
	/* 106 */
	/***/ function(module, exports, __webpack_require__) {

		var Map = __webpack_require__(101),
		    assocGet = __webpack_require__(93),
		    hashGet = __webpack_require__(107),
		    isKeyable = __webpack_require__(105);
		
		/**
		 * Gets the map value for `key`.
		 *
		 * @private
		 * @name get
		 * @memberOf MapCache
		 * @param {string} key The key of the value to get.
		 * @returns {*} Returns the entry value.
		 */
		function mapGet(key) {
		  var data = this.__data__;
		  if (isKeyable(key)) {
		    return hashGet(typeof key == 'string' ? data.string : data.hash, key);
		  }
		  return Map ? data.map.get(key) : assocGet(data.map, key);
		}
		
		module.exports = mapGet;


	/***/ },
	/* 107 */
	/***/ function(module, exports, __webpack_require__) {

		var nativeCreate = __webpack_require__(100);
		
		/** Used to stand-in for `undefined` hash values. */
		var HASH_UNDEFINED = '__lodash_hash_undefined__';
		
		/** Used for built-in method references. */
		var objectProto = Object.prototype;
		
		/** Used to check objects for own properties. */
		var hasOwnProperty = objectProto.hasOwnProperty;
		
		/**
		 * Gets the hash value for `key`.
		 *
		 * @private
		 * @param {Object} hash The hash to query.
		 * @param {string} key The key of the value to get.
		 * @returns {*} Returns the entry value.
		 */
		function hashGet(hash, key) {
		  if (nativeCreate) {
		    var result = hash[key];
		    return result === HASH_UNDEFINED ? undefined : result;
		  }
		  return hasOwnProperty.call(hash, key) ? hash[key] : undefined;
		}
		
		module.exports = hashGet;


	/***/ },
	/* 108 */
	/***/ function(module, exports, __webpack_require__) {

		var Map = __webpack_require__(101),
		    assocHas = __webpack_require__(95),
		    hashHas = __webpack_require__(104),
		    isKeyable = __webpack_require__(105);
		
		/**
		 * Checks if a map value for `key` exists.
		 *
		 * @private
		 * @name has
		 * @memberOf MapCache
		 * @param {string} key The key of the entry to check.
		 * @returns {boolean} Returns `true` if an entry for `key` exists, else `false`.
		 */
		function mapHas(key) {
		  var data = this.__data__;
		  if (isKeyable(key)) {
		    return hashHas(typeof key == 'string' ? data.string : data.hash, key);
		  }
		  return Map ? data.map.has(key) : assocHas(data.map, key);
		}
		
		module.exports = mapHas;


	/***/ },
	/* 109 */
	/***/ function(module, exports, __webpack_require__) {

		var Map = __webpack_require__(101),
		    assocSet = __webpack_require__(110),
		    hashSet = __webpack_require__(111),
		    isKeyable = __webpack_require__(105);
		
		/**
		 * Sets the map `key` to `value`.
		 *
		 * @private
		 * @name set
		 * @memberOf MapCache
		 * @param {string} key The key of the value to set.
		 * @param {*} value The value to set.
		 * @returns {Object} Returns the map cache object.
		 */
		function mapSet(key, value) {
		  var data = this.__data__;
		  if (isKeyable(key)) {
		    hashSet(typeof key == 'string' ? data.string : data.hash, key, value);
		  } else if (Map) {
		    data.map.set(key, value);
		  } else {
		    assocSet(data.map, key, value);
		  }
		  return this;
		}
		
		module.exports = mapSet;


	/***/ },
	/* 110 */
	/***/ function(module, exports, __webpack_require__) {

		var assocIndexOf = __webpack_require__(91);
		
		/**
		 * Sets the associative array `key` to `value`.
		 *
		 * @private
		 * @param {Array} array The array to modify.
		 * @param {string} key The key of the value to set.
		 * @param {*} value The value to set.
		 */
		function assocSet(array, key, value) {
		  var index = assocIndexOf(array, key);
		  if (index < 0) {
		    array.push([key, value]);
		  } else {
		    array[index][1] = value;
		  }
		}
		
		module.exports = assocSet;


	/***/ },
	/* 111 */
	/***/ function(module, exports, __webpack_require__) {

		var nativeCreate = __webpack_require__(100);
		
		/** Used to stand-in for `undefined` hash values. */
		var HASH_UNDEFINED = '__lodash_hash_undefined__';
		
		/**
		 * Sets the hash `key` to `value`.
		 *
		 * @private
		 * @param {Object} hash The hash to modify.
		 * @param {string} key The key of the value to set.
		 * @param {*} value The value to set.
		 */
		function hashSet(hash, key, value) {
		  hash[key] = (nativeCreate && value === undefined) ? HASH_UNDEFINED : value;
		}
		
		module.exports = hashSet;


	/***/ },
	/* 112 */
	/***/ function(module, exports) {

		/**
		 * A specialized version of `_.forEach` for arrays without support for
		 * iteratee shorthands.
		 *
		 * @private
		 * @param {Array} array The array to iterate over.
		 * @param {Function} iteratee The function invoked per iteration.
		 * @returns {Array} Returns `array`.
		 */
		function arrayEach(array, iteratee) {
		  var index = -1,
		      length = array.length;
		
		  while (++index < length) {
		    if (iteratee(array[index], index, array) === false) {
		      break;
		    }
		  }
		  return array;
		}
		
		module.exports = arrayEach;


	/***/ },
	/* 113 */
	/***/ function(module, exports, __webpack_require__) {

		var eq = __webpack_require__(7);
		
		/**
		 * This function is like `assignValue` except that it doesn't assign
		 * `undefined` values.
		 *
		 * @private
		 * @param {Object} object The object to modify.
		 * @param {string} key The key of the property to assign.
		 * @param {*} value The value to assign.
		 */
		function assignMergeValue(object, key, value) {
		  if ((value !== undefined && !eq(object[key], value)) ||
		      (typeof key == 'number' && value === undefined && !(key in object))) {
		    object[key] = value;
		  }
		}
		
		module.exports = assignMergeValue;


	/***/ },
	/* 114 */
	/***/ function(module, exports, __webpack_require__) {

		var assignMergeValue = __webpack_require__(113),
		    baseClone = __webpack_require__(115),
		    copyArray = __webpack_require__(65),
		    isArguments = __webpack_require__(32),
		    isArray = __webpack_require__(35),
		    isArrayLikeObject = __webpack_require__(33),
		    isFunction = __webpack_require__(16),
		    isObject = __webpack_require__(17),
		    isPlainObject = __webpack_require__(146),
		    isTypedArray = __webpack_require__(147),
		    toPlainObject = __webpack_require__(148);
		
		/**
		 * A specialized version of `baseMerge` for arrays and objects which performs
		 * deep merges and tracks traversed objects enabling objects with circular
		 * references to be merged.
		 *
		 * @private
		 * @param {Object} object The destination object.
		 * @param {Object} source The source object.
		 * @param {string} key The key of the value to merge.
		 * @param {number} srcIndex The index of `source`.
		 * @param {Function} mergeFunc The function to merge values.
		 * @param {Function} [customizer] The function to customize assigned values.
		 * @param {Object} [stack] Tracks traversed source values and their merged counterparts.
		 */
		function baseMergeDeep(object, source, key, srcIndex, mergeFunc, customizer, stack) {
		  var objValue = object[key],
		      srcValue = source[key],
		      stacked = stack.get(srcValue);
		
		  if (stacked) {
		    assignMergeValue(object, key, stacked);
		    return;
		  }
		  var newValue = customizer
		    ? customizer(objValue, srcValue, (key + ''), object, source, stack)
		    : undefined;
		
		  var isCommon = newValue === undefined;
		
		  if (isCommon) {
		    newValue = srcValue;
		    if (isArray(srcValue) || isTypedArray(srcValue)) {
		      if (isArray(objValue)) {
		        newValue = objValue;
		      }
		      else if (isArrayLikeObject(objValue)) {
		        newValue = copyArray(objValue);
		      }
		      else {
		        isCommon = false;
		        newValue = baseClone(srcValue, !customizer);
		      }
		    }
		    else if (isPlainObject(srcValue) || isArguments(srcValue)) {
		      if (isArguments(objValue)) {
		        newValue = toPlainObject(objValue);
		      }
		      else if (!isObject(objValue) || (srcIndex && isFunction(objValue))) {
		        isCommon = false;
		        newValue = baseClone(srcValue, !customizer);
		      }
		      else {
		        newValue = objValue;
		      }
		    }
		    else {
		      isCommon = false;
		    }
		  }
		  stack.set(srcValue, newValue);
		
		  if (isCommon) {
		    // Recursively merge objects and arrays (susceptible to call stack limits).
		    mergeFunc(newValue, srcValue, srcIndex, customizer, stack);
		  }
		  stack['delete'](srcValue);
		  assignMergeValue(object, key, newValue);
		}
		
		module.exports = baseMergeDeep;


	/***/ },
	/* 115 */
	/***/ function(module, exports, __webpack_require__) {

		var Stack = __webpack_require__(87),
		    arrayEach = __webpack_require__(112),
		    assignValue = __webpack_require__(10),
		    baseAssign = __webpack_require__(116),
		    baseForOwn = __webpack_require__(121),
		    cloneBuffer = __webpack_require__(124),
		    copyArray = __webpack_require__(65),
		    copySymbols = __webpack_require__(125),
		    getTag = __webpack_require__(127),
		    initCloneArray = __webpack_require__(129),
		    initCloneByTag = __webpack_require__(130),
		    initCloneObject = __webpack_require__(143),
		    isArray = __webpack_require__(35),
		    isBuffer = __webpack_require__(144),
		    isHostObject = __webpack_require__(55),
		    isObject = __webpack_require__(17);
		
		/** `Object#toString` result references. */
		var argsTag = '[object Arguments]',
		    arrayTag = '[object Array]',
		    boolTag = '[object Boolean]',
		    dateTag = '[object Date]',
		    errorTag = '[object Error]',
		    funcTag = '[object Function]',
		    genTag = '[object GeneratorFunction]',
		    mapTag = '[object Map]',
		    numberTag = '[object Number]',
		    objectTag = '[object Object]',
		    regexpTag = '[object RegExp]',
		    setTag = '[object Set]',
		    stringTag = '[object String]',
		    symbolTag = '[object Symbol]',
		    weakMapTag = '[object WeakMap]';
		
		var arrayBufferTag = '[object ArrayBuffer]',
		    float32Tag = '[object Float32Array]',
		    float64Tag = '[object Float64Array]',
		    int8Tag = '[object Int8Array]',
		    int16Tag = '[object Int16Array]',
		    int32Tag = '[object Int32Array]',
		    uint8Tag = '[object Uint8Array]',
		    uint8ClampedTag = '[object Uint8ClampedArray]',
		    uint16Tag = '[object Uint16Array]',
		    uint32Tag = '[object Uint32Array]';
		
		/** Used to identify `toStringTag` values supported by `_.clone`. */
		var cloneableTags = {};
		cloneableTags[argsTag] = cloneableTags[arrayTag] =
		cloneableTags[arrayBufferTag] = cloneableTags[boolTag] =
		cloneableTags[dateTag] = cloneableTags[float32Tag] =
		cloneableTags[float64Tag] = cloneableTags[int8Tag] =
		cloneableTags[int16Tag] = cloneableTags[int32Tag] =
		cloneableTags[mapTag] = cloneableTags[numberTag] =
		cloneableTags[objectTag] = cloneableTags[regexpTag] =
		cloneableTags[setTag] = cloneableTags[stringTag] =
		cloneableTags[symbolTag] = cloneableTags[uint8Tag] =
		cloneableTags[uint8ClampedTag] = cloneableTags[uint16Tag] =
		cloneableTags[uint32Tag] = true;
		cloneableTags[errorTag] = cloneableTags[funcTag] =
		cloneableTags[weakMapTag] = false;
		
		/**
		 * The base implementation of `_.clone` and `_.cloneDeep` which tracks
		 * traversed objects.
		 *
		 * @private
		 * @param {*} value The value to clone.
		 * @param {boolean} [isDeep] Specify a deep clone.
		 * @param {boolean} [isFull] Specify a clone including symbols.
		 * @param {Function} [customizer] The function to customize cloning.
		 * @param {string} [key] The key of `value`.
		 * @param {Object} [object] The parent object of `value`.
		 * @param {Object} [stack] Tracks traversed objects and their clone counterparts.
		 * @returns {*} Returns the cloned value.
		 */
		function baseClone(value, isDeep, isFull, customizer, key, object, stack) {
		  var result;
		  if (customizer) {
		    result = object ? customizer(value, key, object, stack) : customizer(value);
		  }
		  if (result !== undefined) {
		    return result;
		  }
		  if (!isObject(value)) {
		    return value;
		  }
		  var isArr = isArray(value);
		  if (isArr) {
		    result = initCloneArray(value);
		    if (!isDeep) {
		      return copyArray(value, result);
		    }
		  } else {
		    var tag = getTag(value),
		        isFunc = tag == funcTag || tag == genTag;
		
		    if (isBuffer(value)) {
		      return cloneBuffer(value, isDeep);
		    }
		    if (tag == objectTag || tag == argsTag || (isFunc && !object)) {
		      if (isHostObject(value)) {
		        return object ? value : {};
		      }
		      result = initCloneObject(isFunc ? {} : value);
		      if (!isDeep) {
		        result = baseAssign(result, value);
		        return isFull ? copySymbols(value, result) : result;
		      }
		    } else {
		      if (!cloneableTags[tag]) {
		        return object ? value : {};
		      }
		      result = initCloneByTag(value, tag, isDeep);
		    }
		  }
		  // Check for circular references and return its corresponding clone.
		  stack || (stack = new Stack);
		  var stacked = stack.get(value);
		  if (stacked) {
		    return stacked;
		  }
		  stack.set(value, result);
		
		  // Recursively populate clone (susceptible to call stack limits).
		  (isArr ? arrayEach : baseForOwn)(value, function(subValue, key) {
		    assignValue(result, key, baseClone(subValue, isDeep, isFull, customizer, key, value, stack));
		  });
		  return (isFull && !isArr) ? copySymbols(value, result) : result;
		}
		
		module.exports = baseClone;


	/***/ },
	/* 116 */
	/***/ function(module, exports, __webpack_require__) {

		var copyObject = __webpack_require__(117),
		    keys = __webpack_require__(118);
		
		/**
		 * The base implementation of `_.assign` without support for multiple sources
		 * or `customizer` functions.
		 *
		 * @private
		 * @param {Object} object The destination object.
		 * @param {Object} source The source object.
		 * @returns {Object} Returns `object`.
		 */
		function baseAssign(object, source) {
		  return object && copyObject(source, keys(source), object);
		}
		
		module.exports = baseAssign;


	/***/ },
	/* 117 */
	/***/ function(module, exports, __webpack_require__) {

		var copyObjectWith = __webpack_require__(9);
		
		/**
		 * Copies properties of `source` to `object`.
		 *
		 * @private
		 * @param {Object} source The object to copy properties from.
		 * @param {Array} props The property names to copy.
		 * @param {Object} [object={}] The object to copy properties to.
		 * @returns {Object} Returns `object`.
		 */
		function copyObject(source, props, object) {
		  return copyObjectWith(source, props, object);
		}
		
		module.exports = copyObject;


	/***/ },
	/* 118 */
	/***/ function(module, exports, __webpack_require__) {

		var baseHas = __webpack_require__(119),
		    baseKeys = __webpack_require__(120),
		    indexKeys = __webpack_require__(30),
		    isArrayLike = __webpack_require__(13),
		    isIndex = __webpack_require__(19),
		    isPrototype = __webpack_require__(37);
		
		/**
		 * Creates an array of the own enumerable property names of `object`.
		 *
		 * **Note:** Non-object values are coerced to objects. See the
		 * [ES spec](http://ecma-international.org/ecma-262/6.0/#sec-object.keys)
		 * for more details.
		 *
		 * @static
		 * @memberOf _
		 * @category Object
		 * @param {Object} object The object to query.
		 * @returns {Array} Returns the array of property names.
		 * @example
		 *
		 * function Foo() {
		 *   this.a = 1;
		 *   this.b = 2;
		 * }
		 *
		 * Foo.prototype.c = 3;
		 *
		 * _.keys(new Foo);
		 * // => ['a', 'b'] (iteration order is not guaranteed)
		 *
		 * _.keys('hi');
		 * // => ['0', '1']
		 */
		function keys(object) {
		  var isProto = isPrototype(object);
		  if (!(isProto || isArrayLike(object))) {
		    return baseKeys(object);
		  }
		  var indexes = indexKeys(object),
		      skipIndexes = !!indexes,
		      result = indexes || [],
		      length = result.length;
		
		  for (var key in object) {
		    if (baseHas(object, key) &&
		        !(skipIndexes && (key == 'length' || isIndex(key, length))) &&
		        !(isProto && key == 'constructor')) {
		      result.push(key);
		    }
		  }
		  return result;
		}
		
		module.exports = keys;


	/***/ },
	/* 119 */
	/***/ function(module, exports) {

		/** Used for built-in method references. */
		var objectProto = Object.prototype;
		
		/** Used to check objects for own properties. */
		var hasOwnProperty = objectProto.hasOwnProperty;
		
		/** Built-in value references. */
		var getPrototypeOf = Object.getPrototypeOf;
		
		/**
		 * The base implementation of `_.has` without support for deep paths.
		 *
		 * @private
		 * @param {Object} object The object to query.
		 * @param {Array|string} key The key to check.
		 * @returns {boolean} Returns `true` if `key` exists, else `false`.
		 */
		function baseHas(object, key) {
		  // Avoid a bug in IE 10-11 where objects with a [[Prototype]] of `null`,
		  // that are composed entirely of index properties, return `false` for
		  // `hasOwnProperty` checks of them.
		  return hasOwnProperty.call(object, key) ||
		    (typeof object == 'object' && key in object && getPrototypeOf(object) === null);
		}
		
		module.exports = baseHas;


	/***/ },
	/* 120 */
	/***/ function(module, exports) {

		/* Built-in method references for those with the same name as other `lodash` methods. */
		var nativeKeys = Object.keys;
		
		/**
		 * The base implementation of `_.keys` which doesn't skip the constructor
		 * property of prototypes or treat sparse arrays as dense.
		 *
		 * @private
		 * @param {Object} object The object to query.
		 * @returns {Array} Returns the array of property names.
		 */
		function baseKeys(object) {
		  return nativeKeys(Object(object));
		}
		
		module.exports = baseKeys;


	/***/ },
	/* 121 */
	/***/ function(module, exports, __webpack_require__) {

		var baseFor = __webpack_require__(122),
		    keys = __webpack_require__(118);
		
		/**
		 * The base implementation of `_.forOwn` without support for iteratee shorthands.
		 *
		 * @private
		 * @param {Object} object The object to iterate over.
		 * @param {Function} iteratee The function invoked per iteration.
		 * @returns {Object} Returns `object`.
		 */
		function baseForOwn(object, iteratee) {
		  return object && baseFor(object, iteratee, keys);
		}
		
		module.exports = baseForOwn;


	/***/ },
	/* 122 */
	/***/ function(module, exports, __webpack_require__) {

		var createBaseFor = __webpack_require__(123);
		
		/**
		 * The base implementation of `baseForIn` and `baseForOwn` which iterates
		 * over `object` properties returned by `keysFunc` invoking `iteratee` for
		 * each property. Iteratee functions may exit iteration early by explicitly
		 * returning `false`.
		 *
		 * @private
		 * @param {Object} object The object to iterate over.
		 * @param {Function} iteratee The function invoked per iteration.
		 * @param {Function} keysFunc The function to get the keys of `object`.
		 * @returns {Object} Returns `object`.
		 */
		var baseFor = createBaseFor();
		
		module.exports = baseFor;


	/***/ },
	/* 123 */
	/***/ function(module, exports) {

		/**
		 * Creates a base function for methods like `_.forIn`.
		 *
		 * @private
		 * @param {boolean} [fromRight] Specify iterating from right to left.
		 * @returns {Function} Returns the new base function.
		 */
		function createBaseFor(fromRight) {
		  return function(object, iteratee, keysFunc) {
		    var index = -1,
		        iterable = Object(object),
		        props = keysFunc(object),
		        length = props.length;
		
		    while (length--) {
		      var key = props[fromRight ? length : ++index];
		      if (iteratee(iterable[key], key, iterable) === false) {
		        break;
		      }
		    }
		    return object;
		  };
		}
		
		module.exports = createBaseFor;


	/***/ },
	/* 124 */
	/***/ function(module, exports) {

		/**
		 * Creates a clone of  `buffer`.
		 *
		 * @private
		 * @param {Buffer} buffer The buffer to clone.
		 * @param {boolean} [isDeep] Specify a deep clone.
		 * @returns {Buffer} Returns the cloned buffer.
		 */
		function cloneBuffer(buffer, isDeep) {
		  if (isDeep) {
		    return buffer.slice();
		  }
		  var result = new buffer.constructor(buffer.length);
		  buffer.copy(result);
		  return result;
		}
		
		module.exports = cloneBuffer;


	/***/ },
	/* 125 */
	/***/ function(module, exports, __webpack_require__) {

		var copyObject = __webpack_require__(117),
		    getSymbols = __webpack_require__(126);
		
		/**
		 * Copies own symbol properties of `source` to `object`.
		 *
		 * @private
		 * @param {Object} source The object to copy symbols from.
		 * @param {Object} [object={}] The object to copy symbols to.
		 * @returns {Object} Returns `object`.
		 */
		function copySymbols(source, object) {
		  return copyObject(source, getSymbols(source), object);
		}
		
		module.exports = copySymbols;


	/***/ },
	/* 126 */
	/***/ function(module, exports) {

		/** Built-in value references. */
		var getOwnPropertySymbols = Object.getOwnPropertySymbols;
		
		/**
		 * Creates an array of the own symbol properties of `object`.
		 *
		 * @private
		 * @param {Object} object The object to query.
		 * @returns {Array} Returns the array of symbols.
		 */
		var getSymbols = getOwnPropertySymbols || function() {
		  return [];
		};
		
		module.exports = getSymbols;


	/***/ },
	/* 127 */
	/***/ function(module, exports, __webpack_require__) {

		var Map = __webpack_require__(101),
		    Set = __webpack_require__(128),
		    WeakMap = __webpack_require__(52);
		
		/** `Object#toString` result references. */
		var mapTag = '[object Map]',
		    objectTag = '[object Object]',
		    setTag = '[object Set]',
		    weakMapTag = '[object WeakMap]';
		
		/** Used for built-in method references. */
		var objectProto = Object.prototype;
		
		/** Used to resolve the decompiled source of functions. */
		var funcToString = Function.prototype.toString;
		
		/**
		 * Used to resolve the [`toStringTag`](http://ecma-international.org/ecma-262/6.0/#sec-object.prototype.tostring)
		 * of values.
		 */
		var objectToString = objectProto.toString;
		
		/** Used to detect maps, sets, and weakmaps. */
		var mapCtorString = Map ? funcToString.call(Map) : '',
		    setCtorString = Set ? funcToString.call(Set) : '',
		    weakMapCtorString = WeakMap ? funcToString.call(WeakMap) : '';
		
		/**
		 * Gets the `toStringTag` of `value`.
		 *
		 * @private
		 * @param {*} value The value to query.
		 * @returns {string} Returns the `toStringTag`.
		 */
		function getTag(value) {
		  return objectToString.call(value);
		}
		
		// Fallback for IE 11 providing `toStringTag` values for maps, sets, and weakmaps.
		if ((Map && getTag(new Map) != mapTag) ||
		    (Set && getTag(new Set) != setTag) ||
		    (WeakMap && getTag(new WeakMap) != weakMapTag)) {
		  getTag = function(value) {
		    var result = objectToString.call(value),
		        Ctor = result == objectTag ? value.constructor : null,
		        ctorString = typeof Ctor == 'function' ? funcToString.call(Ctor) : '';
		
		    if (ctorString) {
		      switch (ctorString) {
		        case mapCtorString: return mapTag;
		        case setCtorString: return setTag;
		        case weakMapCtorString: return weakMapTag;
		      }
		    }
		    return result;
		  };
		}
		
		module.exports = getTag;


	/***/ },
	/* 128 */
	/***/ function(module, exports, __webpack_require__) {

		var getNative = __webpack_require__(53),
		    root = __webpack_require__(26);
		
		/* Built-in method references that are verified to be native. */
		var Set = getNative(root, 'Set');
		
		module.exports = Set;


	/***/ },
	/* 129 */
	/***/ function(module, exports) {

		/** Used for built-in method references. */
		var objectProto = Object.prototype;
		
		/** Used to check objects for own properties. */
		var hasOwnProperty = objectProto.hasOwnProperty;
		
		/**
		 * Initializes an array clone.
		 *
		 * @private
		 * @param {Array} array The array to clone.
		 * @returns {Array} Returns the initialized clone.
		 */
		function initCloneArray(array) {
		  var length = array.length,
		      result = array.constructor(length);
		
		  // Add properties assigned by `RegExp#exec`.
		  if (length && typeof array[0] == 'string' && hasOwnProperty.call(array, 'index')) {
		    result.index = array.index;
		    result.input = array.input;
		  }
		  return result;
		}
		
		module.exports = initCloneArray;


	/***/ },
	/* 130 */
	/***/ function(module, exports, __webpack_require__) {

		var cloneArrayBuffer = __webpack_require__(131),
		    cloneMap = __webpack_require__(133),
		    cloneRegExp = __webpack_require__(137),
		    cloneSet = __webpack_require__(138),
		    cloneSymbol = __webpack_require__(141),
		    cloneTypedArray = __webpack_require__(142);
		
		/** `Object#toString` result references. */
		var boolTag = '[object Boolean]',
		    dateTag = '[object Date]',
		    mapTag = '[object Map]',
		    numberTag = '[object Number]',
		    regexpTag = '[object RegExp]',
		    setTag = '[object Set]',
		    stringTag = '[object String]',
		    symbolTag = '[object Symbol]';
		
		var arrayBufferTag = '[object ArrayBuffer]',
		    float32Tag = '[object Float32Array]',
		    float64Tag = '[object Float64Array]',
		    int8Tag = '[object Int8Array]',
		    int16Tag = '[object Int16Array]',
		    int32Tag = '[object Int32Array]',
		    uint8Tag = '[object Uint8Array]',
		    uint8ClampedTag = '[object Uint8ClampedArray]',
		    uint16Tag = '[object Uint16Array]',
		    uint32Tag = '[object Uint32Array]';
		
		/**
		 * Initializes an object clone based on its `toStringTag`.
		 *
		 * **Note:** This function only supports cloning values with tags of
		 * `Boolean`, `Date`, `Error`, `Number`, `RegExp`, or `String`.
		 *
		 * @private
		 * @param {Object} object The object to clone.
		 * @param {string} tag The `toStringTag` of the object to clone.
		 * @param {boolean} [isDeep] Specify a deep clone.
		 * @returns {Object} Returns the initialized clone.
		 */
		function initCloneByTag(object, tag, isDeep) {
		  var Ctor = object.constructor;
		  switch (tag) {
		    case arrayBufferTag:
		      return cloneArrayBuffer(object);
		
		    case boolTag:
		    case dateTag:
		      return new Ctor(+object);
		
		    case float32Tag: case float64Tag:
		    case int8Tag: case int16Tag: case int32Tag:
		    case uint8Tag: case uint8ClampedTag: case uint16Tag: case uint32Tag:
		      return cloneTypedArray(object, isDeep);
		
		    case mapTag:
		      return cloneMap(object);
		
		    case numberTag:
		    case stringTag:
		      return new Ctor(object);
		
		    case regexpTag:
		      return cloneRegExp(object);
		
		    case setTag:
		      return cloneSet(object);
		
		    case symbolTag:
		      return cloneSymbol(object);
		  }
		}
		
		module.exports = initCloneByTag;


	/***/ },
	/* 131 */
	/***/ function(module, exports, __webpack_require__) {

		var Uint8Array = __webpack_require__(132);
		
		/**
		 * Creates a clone of `arrayBuffer`.
		 *
		 * @private
		 * @param {ArrayBuffer} arrayBuffer The array buffer to clone.
		 * @returns {ArrayBuffer} Returns the cloned array buffer.
		 */
		function cloneArrayBuffer(arrayBuffer) {
		  var result = new arrayBuffer.constructor(arrayBuffer.byteLength);
		  new Uint8Array(result).set(new Uint8Array(arrayBuffer));
		  return result;
		}
		
		module.exports = cloneArrayBuffer;


	/***/ },
	/* 132 */
	/***/ function(module, exports, __webpack_require__) {

		var root = __webpack_require__(26);
		
		/** Built-in value references. */
		var Uint8Array = root.Uint8Array;
		
		module.exports = Uint8Array;


	/***/ },
	/* 133 */
	/***/ function(module, exports, __webpack_require__) {

		var addMapEntry = __webpack_require__(134),
		    arrayReduce = __webpack_require__(135),
		    mapToArray = __webpack_require__(136);
		
		/**
		 * Creates a clone of `map`.
		 *
		 * @private
		 * @param {Object} map The map to clone.
		 * @returns {Object} Returns the cloned map.
		 */
		function cloneMap(map) {
		  return arrayReduce(mapToArray(map), addMapEntry, new map.constructor);
		}
		
		module.exports = cloneMap;


	/***/ },
	/* 134 */
	/***/ function(module, exports) {

		/**
		 * Adds the key-value `pair` to `map`.
		 *
		 * @private
		 * @param {Object} map The map to modify.
		 * @param {Array} pair The key-value pair to add.
		 * @returns {Object} Returns `map`.
		 */
		function addMapEntry(map, pair) {
		  // Don't return `Map#set` because it doesn't return the map instance in IE 11.
		  map.set(pair[0], pair[1]);
		  return map;
		}
		
		module.exports = addMapEntry;


	/***/ },
	/* 135 */
	/***/ function(module, exports) {

		/**
		 * A specialized version of `_.reduce` for arrays without support for
		 * iteratee shorthands.
		 *
		 * @private
		 * @param {Array} array The array to iterate over.
		 * @param {Function} iteratee The function invoked per iteration.
		 * @param {*} [accumulator] The initial value.
		 * @param {boolean} [initAccum] Specify using the first element of `array` as the initial value.
		 * @returns {*} Returns the accumulated value.
		 */
		function arrayReduce(array, iteratee, accumulator, initAccum) {
		  var index = -1,
		      length = array.length;
		
		  if (initAccum && length) {
		    accumulator = array[++index];
		  }
		  while (++index < length) {
		    accumulator = iteratee(accumulator, array[index], index, array);
		  }
		  return accumulator;
		}
		
		module.exports = arrayReduce;


	/***/ },
	/* 136 */
	/***/ function(module, exports) {

		/**
		 * Converts `map` to an array.
		 *
		 * @private
		 * @param {Object} map The map to convert.
		 * @returns {Array} Returns the converted array.
		 */
		function mapToArray(map) {
		  var index = -1,
		      result = Array(map.size);
		
		  map.forEach(function(value, key) {
		    result[++index] = [key, value];
		  });
		  return result;
		}
		
		module.exports = mapToArray;


	/***/ },
	/* 137 */
	/***/ function(module, exports) {

		/** Used to match `RegExp` flags from their coerced string values. */
		var reFlags = /\w*$/;
		
		/**
		 * Creates a clone of `regexp`.
		 *
		 * @private
		 * @param {Object} regexp The regexp to clone.
		 * @returns {Object} Returns the cloned regexp.
		 */
		function cloneRegExp(regexp) {
		  var result = new regexp.constructor(regexp.source, reFlags.exec(regexp));
		  result.lastIndex = regexp.lastIndex;
		  return result;
		}
		
		module.exports = cloneRegExp;


	/***/ },
	/* 138 */
	/***/ function(module, exports, __webpack_require__) {

		var addSetEntry = __webpack_require__(139),
		    arrayReduce = __webpack_require__(135),
		    setToArray = __webpack_require__(140);
		
		/**
		 * Creates a clone of `set`.
		 *
		 * @private
		 * @param {Object} set The set to clone.
		 * @returns {Object} Returns the cloned set.
		 */
		function cloneSet(set) {
		  return arrayReduce(setToArray(set), addSetEntry, new set.constructor);
		}
		
		module.exports = cloneSet;


	/***/ },
	/* 139 */
	/***/ function(module, exports) {

		/**
		 * Adds `value` to `set`.
		 *
		 * @private
		 * @param {Object} set The set to modify.
		 * @param {*} value The value to add.
		 * @returns {Object} Returns `set`.
		 */
		function addSetEntry(set, value) {
		  set.add(value);
		  return set;
		}
		
		module.exports = addSetEntry;


	/***/ },
	/* 140 */
	/***/ function(module, exports) {

		/**
		 * Converts `set` to an array.
		 *
		 * @private
		 * @param {Object} set The set to convert.
		 * @returns {Array} Returns the converted array.
		 */
		function setToArray(set) {
		  var index = -1,
		      result = Array(set.size);
		
		  set.forEach(function(value) {
		    result[++index] = value;
		  });
		  return result;
		}
		
		module.exports = setToArray;


	/***/ },
	/* 141 */
	/***/ function(module, exports, __webpack_require__) {

		var Symbol = __webpack_require__(44);
		
		/** Used to convert symbols to primitives and strings. */
		var symbolProto = Symbol ? Symbol.prototype : undefined,
		    symbolValueOf = symbolProto ? symbolProto.valueOf : undefined;
		
		/**
		 * Creates a clone of the `symbol` object.
		 *
		 * @private
		 * @param {Object} symbol The symbol object to clone.
		 * @returns {Object} Returns the cloned symbol object.
		 */
		function cloneSymbol(symbol) {
		  return symbolValueOf ? Object(symbolValueOf.call(symbol)) : {};
		}
		
		module.exports = cloneSymbol;


	/***/ },
	/* 142 */
	/***/ function(module, exports, __webpack_require__) {

		var cloneArrayBuffer = __webpack_require__(131);
		
		/**
		 * Creates a clone of `typedArray`.
		 *
		 * @private
		 * @param {Object} typedArray The typed array to clone.
		 * @param {boolean} [isDeep] Specify a deep clone.
		 * @returns {Object} Returns the cloned typed array.
		 */
		function cloneTypedArray(typedArray, isDeep) {
		  var buffer = isDeep ? cloneArrayBuffer(typedArray.buffer) : typedArray.buffer;
		  return new typedArray.constructor(buffer, typedArray.byteOffset, typedArray.length);
		}
		
		module.exports = cloneTypedArray;


	/***/ },
	/* 143 */
	/***/ function(module, exports, __webpack_require__) {

		var baseCreate = __webpack_require__(58),
		    isPrototype = __webpack_require__(37);
		
		/** Built-in value references. */
		var getPrototypeOf = Object.getPrototypeOf;
		
		/**
		 * Initializes an object clone.
		 *
		 * @private
		 * @param {Object} object The object to clone.
		 * @returns {Object} Returns the initialized clone.
		 */
		function initCloneObject(object) {
		  return (typeof object.constructor == 'function' && !isPrototype(object))
		    ? baseCreate(getPrototypeOf(object))
		    : {};
		}
		
		module.exports = initCloneObject;


	/***/ },
	/* 144 */
	/***/ function(module, exports, __webpack_require__) {

		/* WEBPACK VAR INJECTION */(function(module) {var constant = __webpack_require__(145),
		    root = __webpack_require__(26);
		
		/** Used to determine if values are of the language type `Object`. */
		var objectTypes = {
		  'function': true,
		  'object': true
		};
		
		/** Detect free variable `exports`. */
		var freeExports = (objectTypes[typeof exports] && exports && !exports.nodeType)
		  ? exports
		  : undefined;
		
		/** Detect free variable `module`. */
		var freeModule = (objectTypes[typeof module] && module && !module.nodeType)
		  ? module
		  : undefined;
		
		/** Detect the popular CommonJS extension `module.exports`. */
		var moduleExports = (freeModule && freeModule.exports === freeExports)
		  ? freeExports
		  : undefined;
		
		/** Built-in value references. */
		var Buffer = moduleExports ? root.Buffer : undefined;
		
		/**
		 * Checks if `value` is a buffer.
		 *
		 * @static
		 * @memberOf _
		 * @category Lang
		 * @param {*} value The value to check.
		 * @returns {boolean} Returns `true` if `value` is a buffer, else `false`.
		 * @example
		 *
		 * _.isBuffer(new Buffer(2));
		 * // => true
		 *
		 * _.isBuffer(new Uint8Array(2));
		 * // => false
		 */
		var isBuffer = !Buffer ? constant(false) : function(value) {
		  return value instanceof Buffer;
		};
		
		module.exports = isBuffer;
		
		/* WEBPACK VAR INJECTION */}.call(exports, __webpack_require__(27)(module)))

	/***/ },
	/* 145 */
	/***/ function(module, exports) {

		/**
		 * Creates a function that returns `value`.
		 *
		 * @static
		 * @memberOf _
		 * @category Util
		 * @param {*} value The value to return from the new function.
		 * @returns {Function} Returns the new function.
		 * @example
		 *
		 * var object = { 'user': 'fred' };
		 * var getter = _.constant(object);
		 *
		 * getter() === object;
		 * // => true
		 */
		function constant(value) {
		  return function() {
		    return value;
		  };
		}
		
		module.exports = constant;


	/***/ },
	/* 146 */
	/***/ function(module, exports, __webpack_require__) {

		var isHostObject = __webpack_require__(55),
		    isObjectLike = __webpack_require__(34);
		
		/** `Object#toString` result references. */
		var objectTag = '[object Object]';
		
		/** Used for built-in method references. */
		var objectProto = Object.prototype;
		
		/** Used to resolve the decompiled source of functions. */
		var funcToString = Function.prototype.toString;
		
		/** Used to infer the `Object` constructor. */
		var objectCtorString = funcToString.call(Object);
		
		/**
		 * Used to resolve the [`toStringTag`](http://ecma-international.org/ecma-262/6.0/#sec-object.prototype.tostring)
		 * of values.
		 */
		var objectToString = objectProto.toString;
		
		/** Built-in value references. */
		var getPrototypeOf = Object.getPrototypeOf;
		
		/**
		 * Checks if `value` is a plain object, that is, an object created by the
		 * `Object` constructor or one with a `[[Prototype]]` of `null`.
		 *
		 * @static
		 * @memberOf _
		 * @category Lang
		 * @param {*} value The value to check.
		 * @returns {boolean} Returns `true` if `value` is a plain object, else `false`.
		 * @example
		 *
		 * function Foo() {
		 *   this.a = 1;
		 * }
		 *
		 * _.isPlainObject(new Foo);
		 * // => false
		 *
		 * _.isPlainObject([1, 2, 3]);
		 * // => false
		 *
		 * _.isPlainObject({ 'x': 0, 'y': 0 });
		 * // => true
		 *
		 * _.isPlainObject(Object.create(null));
		 * // => true
		 */
		function isPlainObject(value) {
		  if (!isObjectLike(value) ||
		      objectToString.call(value) != objectTag || isHostObject(value)) {
		    return false;
		  }
		  var proto = getPrototypeOf(value);
		  if (proto === null) {
		    return true;
		  }
		  var Ctor = proto.constructor;
		  return (typeof Ctor == 'function' &&
		    Ctor instanceof Ctor && funcToString.call(Ctor) == objectCtorString);
		}
		
		module.exports = isPlainObject;


	/***/ },
	/* 147 */
	/***/ function(module, exports, __webpack_require__) {

		var isLength = __webpack_require__(18),
		    isObjectLike = __webpack_require__(34);
		
		/** `Object#toString` result references. */
		var argsTag = '[object Arguments]',
		    arrayTag = '[object Array]',
		    boolTag = '[object Boolean]',
		    dateTag = '[object Date]',
		    errorTag = '[object Error]',
		    funcTag = '[object Function]',
		    mapTag = '[object Map]',
		    numberTag = '[object Number]',
		    objectTag = '[object Object]',
		    regexpTag = '[object RegExp]',
		    setTag = '[object Set]',
		    stringTag = '[object String]',
		    weakMapTag = '[object WeakMap]';
		
		var arrayBufferTag = '[object ArrayBuffer]',
		    float32Tag = '[object Float32Array]',
		    float64Tag = '[object Float64Array]',
		    int8Tag = '[object Int8Array]',
		    int16Tag = '[object Int16Array]',
		    int32Tag = '[object Int32Array]',
		    uint8Tag = '[object Uint8Array]',
		    uint8ClampedTag = '[object Uint8ClampedArray]',
		    uint16Tag = '[object Uint16Array]',
		    uint32Tag = '[object Uint32Array]';
		
		/** Used to identify `toStringTag` values of typed arrays. */
		var typedArrayTags = {};
		typedArrayTags[float32Tag] = typedArrayTags[float64Tag] =
		typedArrayTags[int8Tag] = typedArrayTags[int16Tag] =
		typedArrayTags[int32Tag] = typedArrayTags[uint8Tag] =
		typedArrayTags[uint8ClampedTag] = typedArrayTags[uint16Tag] =
		typedArrayTags[uint32Tag] = true;
		typedArrayTags[argsTag] = typedArrayTags[arrayTag] =
		typedArrayTags[arrayBufferTag] = typedArrayTags[boolTag] =
		typedArrayTags[dateTag] = typedArrayTags[errorTag] =
		typedArrayTags[funcTag] = typedArrayTags[mapTag] =
		typedArrayTags[numberTag] = typedArrayTags[objectTag] =
		typedArrayTags[regexpTag] = typedArrayTags[setTag] =
		typedArrayTags[stringTag] = typedArrayTags[weakMapTag] = false;
		
		/** Used for built-in method references. */
		var objectProto = Object.prototype;
		
		/**
		 * Used to resolve the [`toStringTag`](http://ecma-international.org/ecma-262/6.0/#sec-object.prototype.tostring)
		 * of values.
		 */
		var objectToString = objectProto.toString;
		
		/**
		 * Checks if `value` is classified as a typed array.
		 *
		 * @static
		 * @memberOf _
		 * @category Lang
		 * @param {*} value The value to check.
		 * @returns {boolean} Returns `true` if `value` is correctly classified, else `false`.
		 * @example
		 *
		 * _.isTypedArray(new Uint8Array);
		 * // => true
		 *
		 * _.isTypedArray([]);
		 * // => false
		 */
		function isTypedArray(value) {
		  return isObjectLike(value) &&
		    isLength(value.length) && !!typedArrayTags[objectToString.call(value)];
		}
		
		module.exports = isTypedArray;


	/***/ },
	/* 148 */
	/***/ function(module, exports, __webpack_require__) {

		var copyObject = __webpack_require__(117),
		    keysIn = __webpack_require__(23);
		
		/**
		 * Converts `value` to a plain object flattening inherited enumerable
		 * properties of `value` to own properties of the plain object.
		 *
		 * @static
		 * @memberOf _
		 * @category Lang
		 * @param {*} value The value to convert.
		 * @returns {Object} Returns the converted plain object.
		 * @example
		 *
		 * function Foo() {
		 *   this.b = 2;
		 * }
		 *
		 * Foo.prototype.c = 3;
		 *
		 * _.assign({ 'a': 1 }, new Foo);
		 * // => { 'a': 1, 'b': 2 }
		 *
		 * _.assign({ 'a': 1 }, _.toPlainObject(new Foo));
		 * // => { 'a': 1, 'b': 2, 'c': 3 }
		 */
		function toPlainObject(value) {
		  return copyObject(value, keysIn(value));
		}
		
		module.exports = toPlainObject;


	/***/ },
	/* 149 */
	/***/ function(module, exports, __webpack_require__) {

		/* WEBPACK VAR INJECTION */(function(process) {"use strict";
		
		Object.defineProperty(exports, "__esModule", {
		  value: true
		});
		/* global console */
		/* eslint-disable no-console */
		
		// TODO: Use "warning" npm module like React is switching to.
		exports.default = {
		  warn: function warn(message) {
		    if (process.env.NODE_ENV !== "production") {
		      if (console && console.warn) {
		        console.warn(message);
		      }
		    }
		  }
		};
		/* WEBPACK VAR INJECTION */}.call(exports, __webpack_require__(150)))

	/***/ },
	/* 150 */
	/***/ function(module, exports) {

		// shim for using process in browser
		
		var process = module.exports = {};
		var queue = [];
		var draining = false;
		var currentQueue;
		var queueIndex = -1;
		
		function cleanUpNextTick() {
		    draining = false;
		    if (currentQueue.length) {
		        queue = currentQueue.concat(queue);
		    } else {
		        queueIndex = -1;
		    }
		    if (queue.length) {
		        drainQueue();
		    }
		}
		
		function drainQueue() {
		    if (draining) {
		        return;
		    }
		    var timeout = setTimeout(cleanUpNextTick);
		    draining = true;
		
		    var len = queue.length;
		    while(len) {
		        currentQueue = queue;
		        queue = [];
		        while (++queueIndex < len) {
		            if (currentQueue) {
		                currentQueue[queueIndex].run();
		            }
		        }
		        queueIndex = -1;
		        len = queue.length;
		    }
		    currentQueue = null;
		    draining = false;
		    clearTimeout(timeout);
		}
		
		process.nextTick = function (fun) {
		    var args = new Array(arguments.length - 1);
		    if (arguments.length > 1) {
		        for (var i = 1; i < arguments.length; i++) {
		            args[i - 1] = arguments[i];
		        }
		    }
		    queue.push(new Item(fun, args));
		    if (queue.length === 1 && !draining) {
		        setTimeout(drainQueue, 0);
		    }
		};
		
		// v8 likes predictible objects
		function Item(fun, array) {
		    this.fun = fun;
		    this.array = array;
		}
		Item.prototype.run = function () {
		    this.fun.apply(null, this.array);
		};
		process.title = 'browser';
		process.browser = true;
		process.env = {};
		process.argv = [];
		process.version = ''; // empty string to avoid regexp issues
		process.versions = {};
		
		function noop() {}
		
		process.on = noop;
		process.addListener = noop;
		process.once = noop;
		process.off = noop;
		process.removeListener = noop;
		process.removeAllListeners = noop;
		process.emit = noop;
		
		process.binding = function (name) {
		    throw new Error('process.binding is not supported');
		};
		
		process.cwd = function () { return '/' };
		process.chdir = function (dir) {
		    throw new Error('process.chdir is not supported');
		};
		process.umask = function() { return 0; };


	/***/ },
	/* 151 */
	/***/ function(module, exports, __webpack_require__) {

		"use strict";
		
		Object.defineProperty(exports, "__esModule", {
		  value: true
		});
		
		var _reduceCssCalc = __webpack_require__(152);
		
		var _reduceCssCalc2 = _interopRequireDefault(_reduceCssCalc);
		
		function _interopRequireDefault(obj) { return obj && obj.__esModule ? obj : { default: obj }; }
		
		/**
		 * Given an object with CSS/SVG transform definitions, return the string value
		 * for use with the `transform` CSS property or SVG attribute. Note that we
		 * can't always guarantee the order will match the author's intended order, so
		 * authors should only use the object notation if they know that their transform
		 * is commutative or that there is only one.
		 * @param {Object} obj An object of transform definitions.
		 * @returns {String} The generated transform string.
		 */
		var toTransformString = function toTransformString(obj) {
		  for (var _len = arguments.length, more = Array(_len > 1 ? _len - 1 : 0), _key = 1; _key < _len; _key++) {
		    more[_key - 1] = arguments[_key];
		  }
		
		  if (more.length > 0) {
		    return more.reduce(function (memo, currentObj) {
		      return [memo, toTransformString(currentObj)].join(" ");
		    }, toTransformString(obj));
		  } else {
		    if (!obj || typeof obj === "string") {
		      return obj;
		    }
		    var transforms = [];
		    for (var key in obj) {
		      if (obj.hasOwnProperty(key)) {
		        var value = obj[key];
		        transforms.push(key + "(" + value + ")");
		      }
		    }
		    return transforms.join(" ");
		  }
		};
		
		exports.default = {
		
		  toTransformString: toTransformString,
		
		  calc: function calc(expr, precision) {
		    return (0, _reduceCssCalc2.default)("calc(" + expr + ")", precision);
		  },
		
		
		  /**
		   * Given the name of a color scale, getColorScale will return an array
		   * of 5 hex string values in that color scale. If no 'name' parameter
		   * is given, it will return the Victory default grayscale.
		   * @param {String} name The name of the color scale to return (optional).
		   * @returns {Array} An array of 5 hex string values composing a color scale.
		   */
		  getColorScale: function getColorScale(name) {
		    var scales = {
		      greyscale: ["#7d7d7d", "#5e5e5e", "#969696", "#bdbdbd", "#000000"],
		      qualitative: ["#334D5C", "#45B29D", "#EFC94C", "#E27A3F", "#DF5A49", "#4F7DA1", "#55DBC1", "#EFDA97", "#E2A37F", "#DF948A"],
		      heatmap: ["#428517", "#77D200", "#D6D305", "#EC8E19", "#C92B05"],
		      warm: ["#940031", "#C43343", "#DC5429", "#FF821D", "#FFAF55"],
		      cool: ["#2746B9", "#0B69D4", "#2794DB", "#31BB76", "#60E83B"],
		      red: ["#611310", "#7D1D1D", "#B02928", "#B02928", "#D86B67"],
		      blue: ["#002C61", "#004B8F", "#006BC9", "#3795E5", "#65B4F4"],
		      green: ["#354722", "#466631", "#649146", "#8AB25C", "#A9C97E"]
		    };
		    return name ? scales[name] : scales.greyscale;
		  }
		};

	/***/ },
	/* 152 */
	/***/ function(module, exports, __webpack_require__) {

		/**
		 * Module dependencies
		 */
		var balanced = __webpack_require__(153)
		var reduceFunctionCall = __webpack_require__(154)
		
		/**
		 * Constantes
		 */
		var MAX_STACK = 100 // should be enough for a single calc()...
		var NESTED_CALC_RE = /(\+|\-|\*|\\|[^a-z]|)(\s*)(\()/g
		
		/**
		 * Global variables
		 */
		var stack
		
		/**
		 * Expose reduceCSSCalc plugin
		 *
		 * @type {Function}
		 */
		module.exports = reduceCSSCalc
		
		/**
		 * Reduce CSS calc() in a string, whenever it's possible
		 *
		 * @param {String} value css input
		 */
		function reduceCSSCalc(value, decimalPrecision) {
		  stack = 0
		  decimalPrecision = Math.pow(10, decimalPrecision === undefined ? 5 : decimalPrecision)
		
		  /**
		   * Evaluates an expression
		   *
		   * @param {String} expression
		   * @returns {String}
		   */
		  function evaluateExpression (expression, functionIdentifier, call) {
		    if (stack++ > MAX_STACK) {
		      stack = 0
		      throw new Error("Call stack overflow for " + call)
		    }
		
		    if (expression === "") {
		      throw new Error(functionIdentifier + "(): '" + call + "' must contain a non-whitespace string")
		    }
		
		    expression = evaluateNestedExpression(expression, call)
		
		    var units = getUnitsInExpression(expression)
		
		    // If multiple units let the expression be (i.e. browser calc())
		    if (units.length > 1) {
		      return functionIdentifier + "(" + expression + ")"
		    }
		
		    var unit = units[0] || ""
		
		    if (unit === "%") {
		      // Convert percentages to numbers, to handle expressions like: 50% * 50% (will become: 25%):
		      expression = expression.replace(/\b[0-9\.]+%/g, function(percent) {
		        return parseFloat(percent.slice(0, -1)) * 0.01
		      })
		    }
		
		    // Remove units in expression:
		    var toEvaluate = expression.replace(new RegExp(unit, "gi"), "")
		    var result
		
		    try {
		      result = eval(toEvaluate)
		    }
		    catch (e) {
		      return functionIdentifier + "(" + expression + ")"
		    }
		
		    // Transform back to a percentage result:
		    if (unit === "%") {
		      result *= 100
		    }
		
		    // adjust rounding shit
		    // (0.1 * 0.2 === 0.020000000000000004)
		    result = Math.round(result * decimalPrecision) / decimalPrecision
		
		    // We don't need units for zero values...
		    if (result !== 0) {
		      result += unit
		    }
		
		    return result
		  }
		
		  /**
		   * Evaluates nested expressions
		   *
		   * @param {String} expression
		   * @returns {String}
		   */
		  function evaluateNestedExpression(expression, call) {
		    var evaluatedPart = ""
		    var nonEvaluatedPart = expression
		    var matches
		    while ((matches = NESTED_CALC_RE.exec(nonEvaluatedPart))) {
		      if (matches[0].index > 0) {
		        evaluatedPart += nonEvaluatedPart.substring(0, matches[0].index)
		      }
		
		      var balancedExpr = balanced("(", ")", nonEvaluatedPart.substring([0].index))
		      if (balancedExpr.body === "") {
		        throw new Error("'" + expression + "' must contain a non-whitespace string")
		      }
		
		      var evaluated = evaluateExpression(balancedExpr.body, "", call)
		
		      evaluatedPart += balancedExpr.pre + evaluated
		      nonEvaluatedPart = balancedExpr.post
		    }
		
		    return evaluatedPart + nonEvaluatedPart
		  }
		
		  return reduceFunctionCall(value, /((?:\-[a-z]+\-)?calc)\(/, evaluateExpression)
		}
		
		/**
		 * Checks what units are used in an expression
		 *
		 * @param {String} expression
		 * @returns {Array}
		 */
		
		function getUnitsInExpression(expression) {
		  var uniqueUnits = []
		  var uniqueLowerCaseUnits = []
		  var unitRegEx = /[\.0-9]([%a-z]+)/gi
		  var matches = unitRegEx.exec(expression)
		
		  while (matches) {
		    if (!matches || !matches[1]) {
		      continue
		    }
		
		    if (uniqueLowerCaseUnits.indexOf(matches[1].toLowerCase()) === -1) {
		      uniqueUnits.push(matches[1])
		      uniqueLowerCaseUnits.push(matches[1].toLowerCase())
		    }
		
		    matches = unitRegEx.exec(expression)
		  }
		
		  return uniqueUnits
		}


	/***/ },
	/* 153 */
	/***/ function(module, exports) {

		module.exports = function(a, b, str) {
		  var bal = 0;
		  var m = {};
		
		  for (var i = 0; i < str.length; i++) {
		    if (a == str.substr(i, a.length)) {
		      if (!('start' in m)) m.start = i;
		      bal++;
		    }
		    else if (b == str.substr(i, b.length) && 'start' in m) {
		      bal--;
		      if (!bal) {
		        m.end = i;
		        m.pre = str.substr(0, m.start);
		        m.body = (m.end - m.start > 1)
		          ? str.substring(m.start + a.length, m.end)
		          : '';
		        m.post = str.slice(m.end + b.length);
		        return m;
		      }
		    }
		  }
		};
		


	/***/ },
	/* 154 */
	/***/ function(module, exports, __webpack_require__) {

		/*
		 * Module dependencies
		 */
		var balanced = __webpack_require__(155)
		
		/**
		 * Expose `reduceFunctionCall`
		 *
		 * @type {Function}
		 */
		module.exports = reduceFunctionCall
		
		/**
		 * Walkthrough all expressions, evaluate them and insert them into the declaration
		 *
		 * @param {Array} expressions
		 * @param {Object} declaration
		 */
		
		function reduceFunctionCall(string, functionRE, callback) {
		  var call = string
		  return getFunctionCalls(string, functionRE).reduce(function(string, obj) {
		    return string.replace(obj.functionIdentifier + "(" + obj.matches.body + ")", evalFunctionCall(obj.matches.body, obj.functionIdentifier, callback, call, functionRE))
		  }, string)
		}
		
		/**
		 * Parses expressions in a value
		 *
		 * @param {String} value
		 * @returns {Array}
		 * @api private
		 */
		
		function getFunctionCalls(call, functionRE) {
		  var expressions = []
		
		  var fnRE = typeof functionRE === "string" ? new RegExp("\\b(" + functionRE + ")\\(") : functionRE
		  do {
		    var searchMatch = fnRE.exec(call)
		    if (!searchMatch) {
		      return expressions
		    }
		    if (searchMatch[1] === undefined) {
		      throw new Error("Missing the first couple of parenthesis to get the function identifier in " + functionRE)
		    }
		    var fn = searchMatch[1]
		    var startIndex = searchMatch.index
		    var matches = balanced("(", ")", call.substring(startIndex))
		
		    if (!matches) {
		      throw new SyntaxError(fn + "(): missing closing ')' in the value '" + call + "'")
		    }
		
		    expressions.push({matches: matches, functionIdentifier: fn})
		    call = matches.post
		  }
		  while (fnRE.test(call))
		
		  return expressions
		}
		
		/**
		 * Evaluates an expression
		 *
		 * @param {String} expression
		 * @returns {String}
		 * @api private
		 */
		
		function evalFunctionCall (string, functionIdentifier, callback, call, functionRE) {
		  // allow recursivity
		  return callback(reduceFunctionCall(string, functionRE, callback), functionIdentifier, call)
		}


	/***/ },
	/* 155 */
	/***/ function(module, exports) {

		module.exports = function(a, b, str) {
		  var bal = 0;
		  var m = {};
		
		  for (var i = 0; i < str.length; i++) {
		    if (a == str.substr(i, a.length)) {
		      if (!('start' in m)) m.start = i;
		      bal++;
		    }
		    else if (b == str.substr(i, b.length) && 'start' in m) {
		      bal--;
		      if (!bal) {
		        m.end = i;
		        m.pre = str.substr(0, m.start);
		        m.body = (m.end - m.start > 1)
		          ? str.substring(m.start + a.length, m.end)
		          : '';
		        m.post = str.slice(m.end + b.length);
		        return m;
		      }
		    }
		  }
		};
		


	/***/ },
	/* 156 */
	/***/ function(module, exports, __webpack_require__) {

		/* WEBPACK VAR INJECTION */(function(process) {"use strict";
		
		Object.defineProperty(exports, "__esModule", {
		  value: true
		});
		
		var _isFunction = __webpack_require__(16);
		
		var _isFunction2 = _interopRequireDefault(_isFunction);
		
		var _react = __webpack_require__(157);
		
		function _interopRequireDefault(obj) { return obj && obj.__esModule ? obj : { default: obj }; }
		
		/**
		 * Return a new validator based on `validator` but with the option to chain
		 * `isRequired` onto the validation. This is nearly identical to how React
		 * does it internally, but they don't expose their helper for us to use.
		 * @param {Function} validator Validation function.
		 * @returns {Function} Validator with `isRequired` option.
		 */
		/* global console */
		var makeChainable = function makeChainable(validator) {
		  /* eslint-disable max-params */
		  var _chainable = function _chainable(isRequired, props, propName, componentName) {
		    var value = props[propName];
		    if (typeof value === "undefined" || value === null) {
		      if (isRequired) {
		        return new Error("Required `" + propName + "` was not specified in `" + componentName + "`.");
		      }
		      return null;
		    }
		    return validator(props, propName, componentName);
		  };
		  var chainable = _chainable.bind(null, false);
		  chainable.isRequired = _chainable.bind(null, true);
		  return chainable;
		};
		
		var nullConstructor = function nullConstructor() {
		  return null;
		};
		var undefinedConstructor = function undefinedConstructor() {
		  return undefined;
		};
		
		/**
		 * Get the constructor of `value`. If `value` is null or undefined, return the
		 * special singletons `nullConstructor` or `undefinedConstructor`, respectively.
		 * @param {*} value Instance to return the constructor of.
		 * @returns {Function} Constructor of `value`.
		 */
		var getConstructor = function getConstructor(value) {
		  if (typeof value === "undefined") {
		    return undefinedConstructor;
		  } else if (value === null) {
		    return nullConstructor;
		  } else {
		    return value.constructor;
		  }
		};
		
		/**
		 * Get the name of the constructor used to create `value`, using
		 * `Object.protoype.toString`. If the value is null or undefined, return
		 * "null" or "undefined", respectively.
		 * @param {*} value Instance to return the constructor name of.
		 * @returns {String} Name of the constructor.
		 */
		var getConstructorName = function getConstructorName(value) {
		  if (typeof value === "undefined") {
		    return "undefined";
		  } else if (value === null) {
		    return "null";
		  }
		  return Object.prototype.toString.call(value).slice(8, -1);
		};
		
		exports.default = {
		  /**
		   * Return a new validator based on `propType` but which logs a `console.error`
		   * with `explanation` if used.
		   * @param {Function} propType The old, deprecated propType.
		   * @param {String} explanation The message to provide the user of the deprecated propType.
		   * @returns {Function} Validator which logs usage of this propType
		   */
		
		  deprecated: function deprecated(propType, explanation) {
		    return function (props, propName, componentName) {
		      if (process.env.NODE_ENV !== "production") {
		        /* eslint-disable no-console */
		        if (typeof console !== "undefined" && console.error) {
		          if (props[propName] !== null) {
		            console.error(false, "\"" + propName + "\" property of \"" + componentName + "\" has been deprecated " + explanation);
		          }
		        }
		        /* eslint-enable no-console */
		      }
		      return propType(props, propName, componentName);
		    };
		  },
		
		
		  /**
		   * Return a new validator which returns true
		   * if and only if all validators passed as arguments return true.
		   * Like React.propTypes.oneOfType, except "all" instead of "any"
		   * @param {Array} validators Validation functions.
		   * @returns {Function} Combined validator function
		   */
		  allOfType: function allOfType(validators) {
		    return makeChainable(function (props, propName, componentName) {
		      var error = validators.reduce(function (result, validator) {
		        return result || validator(props, propName, componentName);
		      }, undefined);
		      if (error) {
		        return error;
		      }
		    });
		  },
		
		
		  /**
		   * Check that the value is a non-negative number.
		   */
		  nonNegative: makeChainable(function (props, propName, componentName) {
		    var error = _react.PropTypes.number(props, propName, componentName);
		    if (error) {
		      return error;
		    }
		    var value = props[propName];
		    if (value < 0) {
		      return new Error("`" + propName + "` in `" + componentName + "` must be non-negative.");
		    }
		  }),
		
		  /**
		   * Check that the value is an integer.
		   */
		  integer: makeChainable(function (props, propName, componentName) {
		    var error = _react.PropTypes.number(props, propName, componentName);
		    if (error) {
		      return error;
		    }
		    var value = props[propName];
		    if (value % 1 !== 0) {
		      return new Error("`" + propName + "` in `" + componentName + "` must be an integer.");
		    }
		  }),
		
		  /**
		   * Check that the value is an Array of two unique values.
		   */
		  domain: makeChainable(function (props, propName, componentName) {
		    var error = _react.PropTypes.array(props, propName, componentName);
		    if (error) {
		      return error;
		    }
		    var value = props[propName];
		    if (value.length !== 2 || value[1] === value[0]) {
		      return new Error("`" + propName + "` in `" + componentName + "` must be an array of two unique numeric values.");
		    }
		  }),
		
		  /**
		   * Check that the value looks like a d3 `scale` function.
		   */
		  scale: makeChainable(function (props, propName, componentName) {
		    var supportedScaleStrings = ["linear", "time", "log", "sqrt"];
		    var validScale = function validScale(scl) {
		      if ((0, _isFunction2.default)(scl)) {
		        return (0, _isFunction2.default)(scl.copy) && (0, _isFunction2.default)(scl.domain) && (0, _isFunction2.default)(scl.range);
		      } else if (typeof scl === "string") {
		        return supportedScaleStrings.indexOf(scl) !== -1;
		      }
		      return false;
		    };
		
		    var value = props[propName];
		    if (!validScale(value)) {
		      return new Error("`" + propName + "` in `" + componentName + "` must be a d3 scale.");
		    }
		  }),
		
		  /**
		   * Check that an array contains items of the same type.
		   */
		  homogeneousArray: makeChainable(function (props, propName, componentName) {
		    var error = _react.PropTypes.array(props, propName, componentName);
		    if (error) {
		      return error;
		    }
		    var value = props[propName];
		    if (value.length > 1) {
		      var _constructor = getConstructor(value[0]);
		      for (var i = 1; i < value.length; i++) {
		        var otherConstructor = getConstructor(value[i]);
		        if (_constructor !== otherConstructor) {
		          var constructorName = getConstructorName(value[0]);
		          var otherConstructorName = getConstructorName(value[i]);
		          return new Error("Expected `" + propName + "` in `" + componentName + "` to be a " + ("homogeneous array, but found types `" + constructorName + "` and ") + ("`" + otherConstructorName + "`."));
		        }
		      }
		    }
		  }),
		
		  /**
		   * Check that array prop length matches props.data.length
		   */
		  matchDataLength: makeChainable(function (props, propName) {
		    if (props[propName] && Array.isArray(props[propName]) && props[propName].length !== props.data.length) {
		      return new Error("Length of data and " + propName + " arrays must match.");
		    }
		  })
		};
		/* WEBPACK VAR INJECTION */}.call(exports, __webpack_require__(150)))

	/***/ },
	/* 157 */
	/***/ function(module, exports) {

		module.exports = __WEBPACK_EXTERNAL_MODULE_157__;

	/***/ },
	/* 158 */
	/***/ function(module, exports, __webpack_require__) {

		"use strict";
		
		Object.defineProperty(exports, "__esModule", {
		  value: true
		});
		
		var _createClass = function () { function defineProperties(target, props) { for (var i = 0; i < props.length; i++) { var descriptor = props[i]; descriptor.enumerable = descriptor.enumerable || false; descriptor.configurable = true; if ("value" in descriptor) descriptor.writable = true; Object.defineProperty(target, descriptor.key, descriptor); } } return function (Constructor, protoProps, staticProps) { if (protoProps) defineProperties(Constructor.prototype, protoProps); if (staticProps) defineProperties(Constructor, staticProps); return Constructor; }; }();
		
		var _react = __webpack_require__(157);
		
		var _react2 = _interopRequireDefault(_react);
		
		var _d3Ease = __webpack_require__(159);
		
		var _d3Ease2 = _interopRequireDefault(_d3Ease);
		
		var _d3Interpolate = __webpack_require__(160);
		
		var _d3Interpolate2 = _interopRequireDefault(_d3Interpolate);
		
		var _d3Timer = __webpack_require__(162);
		
		var _util = __webpack_require__(163);
		
		function _interopRequireDefault(obj) { return obj && obj.__esModule ? obj : { default: obj }; }
		
		function _toConsumableArray(arr) { if (Array.isArray(arr)) { for (var i = 0, arr2 = Array(arr.length); i < arr.length; i++) { arr2[i] = arr[i]; } return arr2; } else { return Array.from(arr); } }
		
		function _classCallCheck(instance, Constructor) { if (!(instance instanceof Constructor)) { throw new TypeError("Cannot call a class as a function"); } }
		
		function _possibleConstructorReturn(self, call) { if (!self) { throw new ReferenceError("this hasn't been initialised - super() hasn't been called"); } return call && (typeof call === "object" || typeof call === "function") ? call : self; }
		
		function _inherits(subClass, superClass) { if (typeof superClass !== "function" && superClass !== null) { throw new TypeError("Super expression must either be null or a function, not " + typeof superClass); } subClass.prototype = Object.create(superClass && superClass.prototype, { constructor: { value: subClass, enumerable: false, writable: true, configurable: true } }); if (superClass) Object.setPrototypeOf ? Object.setPrototypeOf(subClass, superClass) : subClass.__proto__ = superClass; }
		
		(0, _util.addVictoryInterpolator)();
		
		var VictoryAnimation = function (_React$Component) {
		  _inherits(VictoryAnimation, _React$Component);
		
		  function VictoryAnimation(props) {
		    _classCallCheck(this, VictoryAnimation);
		
		    /* defaults */
		
		    var _this = _possibleConstructorReturn(this, Object.getPrototypeOf(VictoryAnimation).call(this, props));
		
		    _this.state = Array.isArray(_this.props.data) ? _this.props.data[0] : _this.props.data;
		    _this.interpolator = null;
		    _this.queue = Array.isArray(_this.props.data) ? _this.props.data.slice(1) : [];
		    /* build easing function */
		    _this.ease = _d3Ease2.default[_this.props.easing];
		    /*
		      unlike React.createClass({}), there is no autobinding of this in ES6 classes
		      so we bind functionToBeRunEachFrame to current instance of victory animation class
		    */
		    _this.functionToBeRunEachFrame = _this.functionToBeRunEachFrame.bind(_this);
		    return _this;
		  }
		
		  _createClass(VictoryAnimation, [{
		    key: "componentDidMount",
		    value: function componentDidMount() {
		      // Length check prevents us from triggering `onEnd` in `traverseQueue`.
		      if (this.queue.length) {
		        this.traverseQueue();
		      }
		    }
		    /* lifecycle */
		
		  }, {
		    key: "componentWillReceiveProps",
		    value: function componentWillReceiveProps(nextProps) {
		      /* cancel existing loop if it exists */
		      if (this.timer) {
		        this.timer.stop();
		      }
		      /* If an object was supplied */
		      if (!Array.isArray(nextProps.data)) {
		        // Replace the tween queue. Could set `this.queue = [nextProps.data]`,
		        // but let's reuse the same array.
		        this.queue.length = 0;
		        this.queue.push(nextProps.data);
		        /* If an array was supplied */
		      } else {
		          var _queue;
		
		          /* Extend the tween queue */
		          (_queue = this.queue).push.apply(_queue, _toConsumableArray(nextProps.data));
		        }
		      /* Start traversing the tween queue */
		      this.traverseQueue();
		    }
		  }, {
		    key: "componentWillUnmount",
		    value: function componentWillUnmount() {
		      if (this.timer) {
		        this.timer.stop();
		      }
		    }
		    /* Traverse the tween queue */
		
		  }, {
		    key: "traverseQueue",
		    value: function traverseQueue() {
		      if (this.queue.length) {
		        /* Get the next index */
		        var data = this.queue[0];
		        /* compare cached version to next props */
		        this.interpolator = _d3Interpolate2.default.value(this.state, data);
		        /* reset step to zero */
		        this.timer = (0, _d3Timer.timer)(this.functionToBeRunEachFrame, this.props.delay);
		      } else if (this.props.onEnd) {
		        this.props.onEnd();
		      }
		    }
		    /* every frame we... */
		
		  }, {
		    key: "functionToBeRunEachFrame",
		    value: function functionToBeRunEachFrame(elapsed) {
		      /*
		        step can generate imprecise values, sometimes greater than 1
		        if this happens set the state to 1 and return, cancelling the timer
		      */
		      var step = elapsed / this.props.duration;
		
		      if (step >= 1) {
		        this.setState(this.interpolator(1));
		        this.timer.stop();
		        this.queue.shift();
		        this.traverseQueue(); // Will take care of calling `onEnd`.
		        return;
		      }
		      /*
		        if we're not at the end of the timer, set the state by passing
		        current step value that's transformed by the ease function to the
		        interpolator, which is cached for performance whenever props are received
		      */
		      this.setState(this.interpolator(this.ease(step)));
		    }
		  }, {
		    key: "render",
		    value: function render() {
		      return this.props.children(this.state);
		    }
		  }]);
		
		  return VictoryAnimation;
		}(_react2.default.Component);
		
		VictoryAnimation.propTypes = {
		  /**
		   * The child of should be a function that takes an object of tweened values
		   * and returns a component to render.
		   */
		  children: _react2.default.PropTypes.func,
		  /**
		   * The number of milliseconds the animation should take to complete.
		   */
		  duration: _react2.default.PropTypes.number,
		  /**
		   * The easing prop specifies an easing function name to use for tweening.
		   */
		  easing: _react2.default.PropTypes.oneOf(["back", "backIn", "backOut", "backInOut", "bounce", "bounceIn", "bounceOut", "bounceInOut", "circle", "circleIn", "circleOut", "circleInOut", "linear", "linearIn", "linearOut", "linearInOut", "cubic", "cubicIn", "cubicOut", "cubicInOut", "elastic", "elasticIn", "elasticOut", "elasticInOut", "exp", "expIn", "expOut", "expInOut", "poly", "polyIn", "polyOut", "polyInOut", "quad", "quadIn", "quadOut", "quadInOut", "sin", "sinIn", "sinOut", "sinInOut"]),
		  /**
		   * The delay prop specifies a delay in milliseconds before the animation
		   * begins. If multiple values are in the animation queue, it is the delay
		   * between each animation.
		   */
		  delay: _react2.default.PropTypes.number,
		  /**
		   * The onEnd prop specifies a function to run when the animation ends. If
		   * multiple animations are in the queue, it is called after the last
		   * animation.
		   */
		  onEnd: _react2.default.PropTypes.func,
		  /**
		   * The data prop specifies the latest set of values to tween to. When this
		   * prop changes, VictoryAnimation will begin animating from the current
		   * value to the new value.
		   */
		  data: _react2.default.PropTypes.oneOfType([_react2.default.PropTypes.object, _react2.default.PropTypes.array])
		};
		VictoryAnimation.defaultProps = {
		  /* length of animation */
		  duration: 1000,
		  /* easing modifies step each frame */
		  easing: "quadInOut",
		  /* delay between transitions */
		  delay: 0,
		  /* we got nothin' */
		  data: {}
		};
		exports.default = VictoryAnimation;

	/***/ },
	/* 159 */
	/***/ function(module, exports, __webpack_require__) {

		(function (global, factory) {
		   true ? factory(exports) :
		  typeof define === 'function' && define.amd ? define('d3-ease', ['exports'], factory) :
		  factory((global.d3_ease = {}));
		}(this, function (exports) { 'use strict';
		
		  var slice = Array.prototype.slice;
		
		  function curry1(type, a) {
		    return function(t) {
		      return type(t, a);
		    };
		  }
		
		  function curry2(type, a, b) {
		    return function(t) {
		      return type(t, a, b);
		    };
		  }
		
		  function curryN(type, args) {
		    args = slice.call(args);
		    args[0] = null;
		    return function(t) {
		      args[0] = t;
		      return type.apply(null, args);
		    };
		  }
		
		  function bind(type, a, b) {
		    switch (arguments.length) {
		      case 1: return type;
		      case 2: return curry1(type, a);
		      case 3: return curry2(type, a, b);
		      default: return curryN(type, arguments);
		    }
		  };
		
		  function linearIn(t) {
		    return +t;
		  };
		
		  function quadIn(t) {
		    return t * t;
		  };
		
		  function quadOut(t) {
		    return t * (2 - t);
		  };
		
		  function quadInOut(t) {
		    return ((t *= 2) <= 1 ? t * t : --t * (2 - t) + 1) / 2;
		  };
		
		  function cubicIn(t) {
		    return t * t * t;
		  };
		
		  function cubicOut(t) {
		    return --t * t * t + 1;
		  };
		
		  function cubicInOut(t) {
		    return ((t *= 2) <= 1 ? t * t * t : (t -= 2) * t * t + 2) / 2;
		  };
		
		  function polyIn(t, e) {
		    if (e == null) e = 3;
		    return Math.pow(t, e);
		  };
		
		  function polyOut(t, e) {
		    if (e == null) e = 3;
		    return 1 - Math.pow(1 - t, e);
		  };
		
		  function polyInOut(t, e) {
		    if (e == null) e = 3;
		    return ((t *= 2) <= 1 ? Math.pow(t, e) : 2 - Math.pow(2 - t, e)) / 2;
		  };
		
		  var pi = Math.PI;
		  var halfPi = pi / 2;
		  function sinIn(t) {
		    return 1 - Math.cos(t * halfPi);
		  };
		
		  function sinOut(t) {
		    return Math.sin(t * halfPi);
		  };
		
		  function sinInOut(t) {
		    return (1 - Math.cos(pi * t)) / 2;
		  };
		
		  function expIn(t) {
		    return Math.pow(2, 10 * t - 10);
		  };
		
		  function expOut(t) {
		    return 1 - Math.pow(2, -10 * t);
		  };
		
		  function expInOut(t) {
		    return ((t *= 2) <= 1 ? Math.pow(2, 10 * t - 10) : 2 - Math.pow(2, 10 - 10 * t)) / 2;
		  };
		
		  function circleIn(t) {
		    return 1 - Math.sqrt(1 - t * t);
		  };
		
		  function circleOut(t) {
		    return Math.sqrt(1 - --t * t);
		  };
		
		  function circleInOut(t) {
		    return ((t *= 2) <= 1 ? 1 - Math.sqrt(1 - t * t) : Math.sqrt(1 - (t -= 2) * t) + 1) / 2;
		  };
		
		  var b1 = 4 / 11;
		  var b2 = 6 / 11;
		  var b3 = 8 / 11;
		  var b4 = 3 / 4;
		  var b5 = 9 / 11;
		  var b6 = 10 / 11;
		  var b7 = 15 / 16;
		  var b8 = 21 / 22;
		  var b9 = 63 / 64;
		  var b0 = 1 / b1 / b1;
		  function bounceIn(t) {
		    return 1 - bounceOut(1 - t);
		  };
		
		  function bounceOut(t) {
		    return t < b1 ? b0 * t * t : t < b3 ? b0 * (t -= b2) * t + b4 : t < b6 ? b0 * (t -= b5) * t + b7 : b0 * (t -= b8) * t + b9;
		  };
		
		  function bounceInOut(t) {
		    return ((t *= 2) <= 1 ? 1 - bounceOut(1 - t) : bounceOut(t - 1) + 1) / 2;
		  };
		
		  function backIn(t, s) {
		    s = s == null ? 1.70158 : +s;
		    return t * t * ((s + 1) * t - s);
		  };
		
		  function backOut(t, s) {
		    s = s == null ? 1.70158 : +s;
		    return --t * t * ((s + 1) * t + s) + 1;
		  };
		
		  function backInOut(t, s) {
		    s = s == null ? 1.70158 : +s;
		    return ((t *= 2) < 1 ? t * t * ((s + 1) * t - s) : (t -= 2) * t * ((s + 1) * t + s) + 2) / 2;
		  };
		
		  var tau = 2 * Math.PI;
		
		  function elasticIn(t, a, p) {
		    a = a == null ? 1 : Math.max(1, a);
		    p = (p == null ? 0.3 : p) / tau;
		    return a * Math.pow(2, 10 * --t) * Math.sin((p * Math.asin(1 / a) - t) / p);
		  };
		
		  function elasticOut(t, a, p) {
		    a = a == null ? 1 : Math.max(1, a);
		    p = (p == null ? 0.3 : p) / tau;
		    return 1 - a * Math.pow(2, -10 * t) * Math.sin((+t + p * Math.asin(1 / a)) / p);
		  };
		
		  function elasticInOut(t, a, p) {
		    a = a == null ? 1 : Math.max(1, a);
		    p = (p == null ? 0.3 : p) / tau;
		    var s = p * Math.asin(1 / a);
		    return ((t = t * 2 - 1) < 0
		        ? a * Math.pow(2, 10 * t) * Math.sin((s - t) / p)
		        : 2 - a * Math.pow(2, -10 * t) * Math.sin((s + t) / p)) / 2;
		  };
		
		  var version = "0.3.1";
		
		  exports.version = version;
		  exports.bind = bind;
		  exports.linear = linearIn;
		  exports.linearIn = linearIn;
		  exports.linearOut = linearIn;
		  exports.linearInOut = linearIn;
		  exports.quad = quadIn;
		  exports.quadIn = quadIn;
		  exports.quadOut = quadOut;
		  exports.quadInOut = quadInOut;
		  exports.cubic = cubicIn;
		  exports.cubicIn = cubicIn;
		  exports.cubicOut = cubicOut;
		  exports.cubicInOut = cubicInOut;
		  exports.poly = polyIn;
		  exports.polyIn = polyIn;
		  exports.polyOut = polyOut;
		  exports.polyInOut = polyInOut;
		  exports.sin = sinIn;
		  exports.sinIn = sinIn;
		  exports.sinOut = sinOut;
		  exports.sinInOut = sinInOut;
		  exports.exp = expIn;
		  exports.expIn = expIn;
		  exports.expOut = expOut;
		  exports.expInOut = expInOut;
		  exports.circle = circleIn;
		  exports.circleIn = circleIn;
		  exports.circleOut = circleOut;
		  exports.circleInOut = circleInOut;
		  exports.bounce = bounceIn;
		  exports.bounceIn = bounceIn;
		  exports.bounceOut = bounceOut;
		  exports.bounceInOut = bounceInOut;
		  exports.back = backIn;
		  exports.backIn = backIn;
		  exports.backOut = backOut;
		  exports.backInOut = backInOut;
		  exports.elastic = elasticIn;
		  exports.elasticIn = elasticIn;
		  exports.elasticOut = elasticOut;
		  exports.elasticInOut = elasticInOut;
		
		}));

	/***/ },
	/* 160 */
	/***/ function(module, exports, __webpack_require__) {

		(function (global, factory) {
		   true ? factory(exports, __webpack_require__(161)) :
		  typeof define === 'function' && define.amd ? define('d3-interpolate', ['exports', 'd3-color'], factory) :
		  factory((global.d3_interpolate = {}),global.d3_color);
		}(this, function (exports,d3Color) { 'use strict';
		
		  function deltaHue(h1, h0) {
		    var delta = h1 - h0;
		    return delta > 180 || delta < -180
		        ? delta - 360 * Math.round(delta / 360)
		        : delta;
		  };
		
		  function cubehelixGamma(gamma) {
		    return function(a, b) {
		      a = d3Color.cubehelix(a);
		      b = d3Color.cubehelix(b);
		      var ah = isNaN(a.h) ? b.h : a.h,
		          as = isNaN(a.s) ? b.s : a.s,
		          al = a.l,
		          bh = isNaN(b.h) ? 0 : deltaHue(b.h, ah),
		          bs = isNaN(b.s) ? 0 : b.s - as,
		          bl = b.l - al;
		      return function(t) {
		        a.h = ah + bh * t;
		        a.s = as + bs * t;
		        a.l = al + bl * Math.pow(t, gamma);
		        return a + "";
		      };
		    };
		  };
		
		  function cubehelixGammaLong(gamma) {
		    return function(a, b) {
		      a = d3Color.cubehelix(a);
		      b = d3Color.cubehelix(b);
		      var ah = isNaN(a.h) ? b.h : a.h,
		          as = isNaN(a.s) ? b.s : a.s,
		          al = a.l,
		          bh = isNaN(b.h) ? 0 : b.h - ah,
		          bs = isNaN(b.s) ? 0 : b.s - as,
		          bl = b.l - al;
		      return function(t) {
		        a.h = ah + bh * t;
		        a.s = as + bs * t;
		        a.l = al + bl * Math.pow(t, gamma);
		        return a + "";
		      };
		    };
		  };
		
		  function rgb(a, b) {
		    a = d3Color.rgb(a);
		    b = d3Color.rgb(b);
		    var ar = a.r,
		        ag = a.g,
		        ab = a.b,
		        br = b.r - ar,
		        bg = b.g - ag,
		        bb = b.b - ab;
		    return function(t) {
		      a.r = ar + br * t;
		      a.g = ag + bg * t;
		      a.b = ab + bb * t;
		      return a + "";
		    };
		  };
		
		  function number(a, b) {
		    return a = +a, b -= a, function(t) {
		      return a + b * t;
		    };
		  };
		
		  function object(a, b) {
		    var i = {},
		        c = {},
		        k;
		
		    for (k in a) {
		      if (k in b) {
		        i[k] = value(a[k], b[k]);
		      } else {
		        c[k] = a[k];
		      }
		    }
		
		    for (k in b) {
		      if (!(k in a)) {
		        c[k] = b[k];
		      }
		    }
		
		    return function(t) {
		      for (k in i) c[k] = i[k](t);
		      return c;
		    };
		  };
		
		  var reA = /[-+]?(?:\d+\.?\d*|\.?\d+)(?:[eE][-+]?\d+)?/g;
		  var reB = new RegExp(reA.source, "g");
		  function zero(b) {
		    return function() {
		      return b;
		    };
		  }
		
		  function one(b) {
		    return function(t) {
		      return b(t) + "";
		    };
		  }
		
		  function string(a, b) {
		    var bi = reA.lastIndex = reB.lastIndex = 0, // scan index for next number in b
		        am, // current match in a
		        bm, // current match in b
		        bs, // string preceding current number in b, if any
		        i = -1, // index in s
		        s = [], // string constants and placeholders
		        q = []; // number interpolators
		
		    // Coerce inputs to strings.
		    a = a + "", b = b + "";
		
		    // Interpolate pairs of numbers in a & b.
		    while ((am = reA.exec(a))
		        && (bm = reB.exec(b))) {
		      if ((bs = bm.index) > bi) { // a string precedes the next number in b
		        bs = b.slice(bi, bs);
		        if (s[i]) s[i] += bs; // coalesce with previous string
		        else s[++i] = bs;
		      }
		      if ((am = am[0]) === (bm = bm[0])) { // numbers in a & b match
		        if (s[i]) s[i] += bm; // coalesce with previous string
		        else s[++i] = bm;
		      } else { // interpolate non-matching numbers
		        s[++i] = null;
		        q.push({i: i, x: number(am, bm)});
		      }
		      bi = reB.lastIndex;
		    }
		
		    // Add remains of b.
		    if (bi < b.length) {
		      bs = b.slice(bi);
		      if (s[i]) s[i] += bs; // coalesce with previous string
		      else s[++i] = bs;
		    }
		
		    // Special optimization for only a single match.
		    // Otherwise, interpolate each of the numbers and rejoin the string.
		    return s.length < 2 ? (q[0]
		        ? one(q[0].x)
		        : zero(b))
		        : (b = q.length, function(t) {
		            for (var i = 0, o; i < b; ++i) s[(o = q[i]).i] = o.x(t);
		            return s.join("");
		          });
		  };
		
		  var values = [
		    function(a, b) {
		      var t = typeof b, c;
		      return (t === "string" ? ((c = d3Color.color(b)) ? (b = c, rgb) : string)
		          : b instanceof d3Color.color ? rgb
		          : Array.isArray(b) ? array
		          : t === "object" && isNaN(b) ? object
		          : number)(a, b);
		    }
		  ];
		
		  function value(a, b) {
		    var i = values.length, f;
		    while (--i >= 0 && !(f = values[i](a, b)));
		    return f;
		  };
		
		  // TODO sparse arrays?
		  function array(a, b) {
		    var x = [],
		        c = [],
		        na = a.length,
		        nb = b.length,
		        n0 = Math.min(a.length, b.length),
		        i;
		
		    for (i = 0; i < n0; ++i) x.push(value(a[i], b[i]));
		    for (; i < na; ++i) c[i] = a[i];
		    for (; i < nb; ++i) c[i] = b[i];
		
		    return function(t) {
		      for (i = 0; i < n0; ++i) c[i] = x[i](t);
		      return c;
		    };
		  };
		
		  function round(a, b) {
		    return a = +a, b -= a, function(t) {
		      return Math.round(a + b * t);
		    };
		  };
		
		  var rad2deg = 180 / Math.PI;
		  var identity = {a: 1, b: 0, c: 0, d: 1, e: 0, f: 0};
		  var g;
		  // Compute x-scale and normalize the first row.
		  // Compute shear and make second row orthogonal to first.
		  // Compute y-scale and normalize the second row.
		  // Finally, compute the rotation.
		  function Transform(string) {
		    if (!g) g = document.createElementNS("http://www.w3.org/2000/svg", "g");
		    if (string) g.setAttribute("transform", string), t = g.transform.baseVal.consolidate();
		
		    var t,
		        m = t ? t.matrix : identity,
		        r0 = [m.a, m.b],
		        r1 = [m.c, m.d],
		        kx = normalize(r0),
		        kz = dot(r0, r1),
		        ky = normalize(combine(r1, r0, -kz)) || 0;
		
		    if (r0[0] * r1[1] < r1[0] * r0[1]) {
		      r0[0] *= -1;
		      r0[1] *= -1;
		      kx *= -1;
		      kz *= -1;
		    }
		
		    this.rotate = (kx ? Math.atan2(r0[1], r0[0]) : Math.atan2(-r1[0], r1[1])) * rad2deg;
		    this.translate = [m.e, m.f];
		    this.scale = [kx, ky];
		    this.skew = ky ? Math.atan2(kz, ky) * rad2deg : 0;
		  }
		
		  function dot(a, b) {
		    return a[0] * b[0] + a[1] * b[1];
		  }
		
		  function normalize(a) {
		    var k = Math.sqrt(dot(a, a));
		    if (k) a[0] /= k, a[1] /= k;
		    return k;
		  }
		
		  function combine(a, b, k) {
		    a[0] += k * b[0];
		    a[1] += k * b[1];
		    return a;
		  }
		
		  function pop(s) {
		    return s.length ? s.pop() + "," : "";
		  }
		
		  function translate(ta, tb, s, q) {
		    if (ta[0] !== tb[0] || ta[1] !== tb[1]) {
		      var i = s.push("translate(", null, ",", null, ")");
		      q.push({i: i - 4, x: number(ta[0], tb[0])}, {i: i - 2, x: number(ta[1], tb[1])});
		    } else if (tb[0] || tb[1]) {
		      s.push("translate(" + tb + ")");
		    }
		  }
		
		  function rotate(ra, rb, s, q) {
		    if (ra !== rb) {
		      if (ra - rb > 180) rb += 360; else if (rb - ra > 180) ra += 360; // shortest path
		      q.push({i: s.push(pop(s) + "rotate(", null, ")") - 2, x: number(ra, rb)});
		    } else if (rb) {
		      s.push(pop(s) + "rotate(" + rb + ")");
		    }
		  }
		
		  function skew(wa, wb, s, q) {
		    if (wa !== wb) {
		      q.push({i: s.push(pop(s) + "skewX(", null, ")") - 2, x: number(wa, wb)});
		    } else if (wb) {
		      s.push(pop(s) + "skewX(" + wb + ")");
		    }
		  }
		
		  function scale(ka, kb, s, q) {
		    if (ka[0] !== kb[0] || ka[1] !== kb[1]) {
		      var i = s.push(pop(s) + "scale(", null, ",", null, ")");
		      q.push({i: i - 4, x: number(ka[0], kb[0])}, {i: i - 2, x: number(ka[1], kb[1])});
		    } else if (kb[0] !== 1 || kb[1] !== 1) {
		      s.push(pop(s) + "scale(" + kb + ")");
		    }
		  }
		
		  function transform(a, b) {
		    var s = [], // string constants and placeholders
		        q = []; // number interpolators
		    a = new Transform(a), b = new Transform(b);
		    translate(a.translate, b.translate, s, q);
		    rotate(a.rotate, b.rotate, s, q);
		    skew(a.skew, b.skew, s, q);
		    scale(a.scale, b.scale, s, q);
		    a = b = null; // gc
		    return function(t) {
		      var i = -1, n = q.length, o;
		      while (++i < n) s[(o = q[i]).i] = o.x(t);
		      return s.join("");
		    };
		  };
		
		  var rho = Math.SQRT2;
		  var rho2 = 2;
		  var rho4 = 4;
		  var epsilon2 = 1e-12;
		  function cosh(x) {
		    return ((x = Math.exp(x)) + 1 / x) / 2;
		  }
		
		  function sinh(x) {
		    return ((x = Math.exp(x)) - 1 / x) / 2;
		  }
		
		  function tanh(x) {
		    return ((x = Math.exp(2 * x)) - 1) / (x + 1);
		  }
		
		  // p0 = [ux0, uy0, w0]
		  // p1 = [ux1, uy1, w1]
		  function zoom(p0, p1) {
		    var ux0 = p0[0], uy0 = p0[1], w0 = p0[2],
		        ux1 = p1[0], uy1 = p1[1], w1 = p1[2],
		        dx = ux1 - ux0,
		        dy = uy1 - uy0,
		        d2 = dx * dx + dy * dy,
		        i,
		        S;
		
		    // Special case for u0 ≅ u1.
		    if (d2 < epsilon2) {
		      S = Math.log(w1 / w0) / rho;
		      i = function(t) {
		        return [
		          ux0 + t * dx,
		          uy0 + t * dy,
		          w0 * Math.exp(rho * t * S)
		        ];
		      }
		    }
		
		    // General case.
		    else {
		      var d1 = Math.sqrt(d2),
		          b0 = (w1 * w1 - w0 * w0 + rho4 * d2) / (2 * w0 * rho2 * d1),
		          b1 = (w1 * w1 - w0 * w0 - rho4 * d2) / (2 * w1 * rho2 * d1),
		          r0 = Math.log(Math.sqrt(b0 * b0 + 1) - b0),
		          r1 = Math.log(Math.sqrt(b1 * b1 + 1) - b1);
		      S = (r1 - r0) / rho;
		      i = function(t) {
		        var s = t * S,
		            coshr0 = cosh(r0),
		            u = w0 / (rho2 * d1) * (coshr0 * tanh(rho * s + r0) - sinh(r0));
		        return [
		          ux0 + u * dx,
		          uy0 + u * dy,
		          w0 * coshr0 / cosh(rho * s + r0)
		        ];
		      }
		    }
		
		    i.duration = S * 1000;
		
		    return i;
		  };
		
		  function hsl(a, b) {
		    a = d3Color.hsl(a);
		    b = d3Color.hsl(b);
		    var ah = isNaN(a.h) ? b.h : a.h,
		        as = isNaN(a.s) ? b.s : a.s,
		        al = a.l,
		        bh = isNaN(b.h) ? 0 : deltaHue(b.h, ah),
		        bs = isNaN(b.s) ? 0 : b.s - as,
		        bl = b.l - al;
		    return function(t) {
		      a.h = ah + bh * t;
		      a.s = as + bs * t;
		      a.l = al + bl * t;
		      return a + "";
		    };
		  };
		
		  function hslLong(a, b) {
		    a = d3Color.hsl(a);
		    b = d3Color.hsl(b);
		    var ah = isNaN(a.h) ? b.h : a.h,
		        as = isNaN(a.s) ? b.s : a.s,
		        al = a.l,
		        bh = isNaN(b.h) ? 0 : b.h - ah,
		        bs = isNaN(b.s) ? 0 : b.s - as,
		        bl = b.l - al;
		    return function(t) {
		      a.h = ah + bh * t;
		      a.s = as + bs * t;
		      a.l = al + bl * t;
		      return a + "";
		    };
		  };
		
		  function lab(a, b) {
		    a = d3Color.lab(a);
		    b = d3Color.lab(b);
		    var al = a.l,
		        aa = a.a,
		        ab = a.b,
		        bl = b.l - al,
		        ba = b.a - aa,
		        bb = b.b - ab;
		    return function(t) {
		      a.l = al + bl * t;
		      a.a = aa + ba * t;
		      a.b = ab + bb * t;
		      return a + "";
		    };
		  };
		
		  function hcl(a, b) {
		    a = d3Color.hcl(a);
		    b = d3Color.hcl(b);
		    var ah = isNaN(a.h) ? b.h : a.h,
		        ac = isNaN(a.c) ? b.c : a.c,
		        al = a.l,
		        bh = isNaN(b.h) ? 0 : deltaHue(b.h, ah),
		        bc = isNaN(b.c) ? 0 : b.c - ac,
		        bl = b.l - al;
		    return function(t) {
		      a.h = ah + bh * t;
		      a.c = ac + bc * t;
		      a.l = al + bl * t;
		      return a + "";
		    };
		  };
		
		  function hclLong(a, b) {
		    a = d3Color.hcl(a);
		    b = d3Color.hcl(b);
		    var ah = isNaN(a.h) ? b.h : a.h,
		        ac = isNaN(a.c) ? b.c : a.c,
		        al = a.l,
		        bh = isNaN(b.h) ? 0 : b.h - ah,
		        bc = isNaN(b.c) ? 0 : b.c - ac,
		        bl = b.l - al;
		    return function(t) {
		      a.h = ah + bh * t;
		      a.c = ac + bc * t;
		      a.l = al + bl * t;
		      return a + "";
		    };
		  };
		
		  var cubehelix = cubehelixGamma(1);
		  var cubehelixLong = cubehelixGammaLong(1);
		
		  var version = "0.2.0";
		
		  exports.version = version;
		  exports.cubehelix = cubehelix;
		  exports.cubehelixLong = cubehelixLong;
		  exports.cubehelixGamma = cubehelixGamma;
		  exports.cubehelixGammaLong = cubehelixGammaLong;
		  exports.array = array;
		  exports.number = number;
		  exports.object = object;
		  exports.round = round;
		  exports.string = string;
		  exports.transform = transform;
		  exports.values = values;
		  exports.value = value;
		  exports.zoom = zoom;
		  exports.rgb = rgb;
		  exports.hsl = hsl;
		  exports.hslLong = hslLong;
		  exports.lab = lab;
		  exports.hcl = hcl;
		  exports.hclLong = hclLong;
		
		}));

	/***/ },
	/* 161 */
	/***/ function(module, exports, __webpack_require__) {

		(function (global, factory) {
		   true ? factory(exports) :
		  typeof define === 'function' && define.amd ? define(['exports'], factory) :
		  (factory((global.d3_color = {})));
		}(this, function (exports) { 'use strict';
		
		  function Color() {}
		
		  var darker = 0.7;
		  var brighter = 1 / darker;
		
		  var reHex3 = /^#([0-9a-f]{3})$/;
		  var reHex6 = /^#([0-9a-f]{6})$/;
		  var reRgbInteger = /^rgb\(\s*([-+]?\d+)\s*,\s*([-+]?\d+)\s*,\s*([-+]?\d+)\s*\)$/;
		  var reRgbPercent = /^rgb\(\s*([-+]?\d+(?:\.\d+)?)%\s*,\s*([-+]?\d+(?:\.\d+)?)%\s*,\s*([-+]?\d+(?:\.\d+)?)%\s*\)$/;
		  var reHslPercent = /^hsl\(\s*([-+]?\d+(?:\.\d+)?)\s*,\s*([-+]?\d+(?:\.\d+)?)%\s*,\s*([-+]?\d+(?:\.\d+)?)%\s*\)$/;
		  var named = {
		    aliceblue: 0xf0f8ff,
		    antiquewhite: 0xfaebd7,
		    aqua: 0x00ffff,
		    aquamarine: 0x7fffd4,
		    azure: 0xf0ffff,
		    beige: 0xf5f5dc,
		    bisque: 0xffe4c4,
		    black: 0x000000,
		    blanchedalmond: 0xffebcd,
		    blue: 0x0000ff,
		    blueviolet: 0x8a2be2,
		    brown: 0xa52a2a,
		    burlywood: 0xdeb887,
		    cadetblue: 0x5f9ea0,
		    chartreuse: 0x7fff00,
		    chocolate: 0xd2691e,
		    coral: 0xff7f50,
		    cornflowerblue: 0x6495ed,
		    cornsilk: 0xfff8dc,
		    crimson: 0xdc143c,
		    cyan: 0x00ffff,
		    darkblue: 0x00008b,
		    darkcyan: 0x008b8b,
		    darkgoldenrod: 0xb8860b,
		    darkgray: 0xa9a9a9,
		    darkgreen: 0x006400,
		    darkgrey: 0xa9a9a9,
		    darkkhaki: 0xbdb76b,
		    darkmagenta: 0x8b008b,
		    darkolivegreen: 0x556b2f,
		    darkorange: 0xff8c00,
		    darkorchid: 0x9932cc,
		    darkred: 0x8b0000,
		    darksalmon: 0xe9967a,
		    darkseagreen: 0x8fbc8f,
		    darkslateblue: 0x483d8b,
		    darkslategray: 0x2f4f4f,
		    darkslategrey: 0x2f4f4f,
		    darkturquoise: 0x00ced1,
		    darkviolet: 0x9400d3,
		    deeppink: 0xff1493,
		    deepskyblue: 0x00bfff,
		    dimgray: 0x696969,
		    dimgrey: 0x696969,
		    dodgerblue: 0x1e90ff,
		    firebrick: 0xb22222,
		    floralwhite: 0xfffaf0,
		    forestgreen: 0x228b22,
		    fuchsia: 0xff00ff,
		    gainsboro: 0xdcdcdc,
		    ghostwhite: 0xf8f8ff,
		    gold: 0xffd700,
		    goldenrod: 0xdaa520,
		    gray: 0x808080,
		    green: 0x008000,
		    greenyellow: 0xadff2f,
		    grey: 0x808080,
		    honeydew: 0xf0fff0,
		    hotpink: 0xff69b4,
		    indianred: 0xcd5c5c,
		    indigo: 0x4b0082,
		    ivory: 0xfffff0,
		    khaki: 0xf0e68c,
		    lavender: 0xe6e6fa,
		    lavenderblush: 0xfff0f5,
		    lawngreen: 0x7cfc00,
		    lemonchiffon: 0xfffacd,
		    lightblue: 0xadd8e6,
		    lightcoral: 0xf08080,
		    lightcyan: 0xe0ffff,
		    lightgoldenrodyellow: 0xfafad2,
		    lightgray: 0xd3d3d3,
		    lightgreen: 0x90ee90,
		    lightgrey: 0xd3d3d3,
		    lightpink: 0xffb6c1,
		    lightsalmon: 0xffa07a,
		    lightseagreen: 0x20b2aa,
		    lightskyblue: 0x87cefa,
		    lightslategray: 0x778899,
		    lightslategrey: 0x778899,
		    lightsteelblue: 0xb0c4de,
		    lightyellow: 0xffffe0,
		    lime: 0x00ff00,
		    limegreen: 0x32cd32,
		    linen: 0xfaf0e6,
		    magenta: 0xff00ff,
		    maroon: 0x800000,
		    mediumaquamarine: 0x66cdaa,
		    mediumblue: 0x0000cd,
		    mediumorchid: 0xba55d3,
		    mediumpurple: 0x9370db,
		    mediumseagreen: 0x3cb371,
		    mediumslateblue: 0x7b68ee,
		    mediumspringgreen: 0x00fa9a,
		    mediumturquoise: 0x48d1cc,
		    mediumvioletred: 0xc71585,
		    midnightblue: 0x191970,
		    mintcream: 0xf5fffa,
		    mistyrose: 0xffe4e1,
		    moccasin: 0xffe4b5,
		    navajowhite: 0xffdead,
		    navy: 0x000080,
		    oldlace: 0xfdf5e6,
		    olive: 0x808000,
		    olivedrab: 0x6b8e23,
		    orange: 0xffa500,
		    orangered: 0xff4500,
		    orchid: 0xda70d6,
		    palegoldenrod: 0xeee8aa,
		    palegreen: 0x98fb98,
		    paleturquoise: 0xafeeee,
		    palevioletred: 0xdb7093,
		    papayawhip: 0xffefd5,
		    peachpuff: 0xffdab9,
		    peru: 0xcd853f,
		    pink: 0xffc0cb,
		    plum: 0xdda0dd,
		    powderblue: 0xb0e0e6,
		    purple: 0x800080,
		    rebeccapurple: 0x663399,
		    red: 0xff0000,
		    rosybrown: 0xbc8f8f,
		    royalblue: 0x4169e1,
		    saddlebrown: 0x8b4513,
		    salmon: 0xfa8072,
		    sandybrown: 0xf4a460,
		    seagreen: 0x2e8b57,
		    seashell: 0xfff5ee,
		    sienna: 0xa0522d,
		    silver: 0xc0c0c0,
		    skyblue: 0x87ceeb,
		    slateblue: 0x6a5acd,
		    slategray: 0x708090,
		    slategrey: 0x708090,
		    snow: 0xfffafa,
		    springgreen: 0x00ff7f,
		    steelblue: 0x4682b4,
		    tan: 0xd2b48c,
		    teal: 0x008080,
		    thistle: 0xd8bfd8,
		    tomato: 0xff6347,
		    turquoise: 0x40e0d0,
		    violet: 0xee82ee,
		    wheat: 0xf5deb3,
		    white: 0xffffff,
		    whitesmoke: 0xf5f5f5,
		    yellow: 0xffff00,
		    yellowgreen: 0x9acd32
		  };
		
		  color.prototype = Color.prototype = {
		    displayable: function() {
		      return this.rgb().displayable();
		    },
		    toString: function() {
		      return this.rgb() + "";
		    }
		  };
		
		  function color(format) {
		    var m;
		    format = (format + "").trim().toLowerCase();
		    return (m = reHex3.exec(format)) ? (m = parseInt(m[1], 16), new Rgb((m >> 8 & 0xf) | (m >> 4 & 0x0f0), (m >> 4 & 0xf) | (m & 0xf0), ((m & 0xf) << 4) | (m & 0xf))) // #f00
		        : (m = reHex6.exec(format)) ? rgbn(parseInt(m[1], 16)) // #ff0000
		        : (m = reRgbInteger.exec(format)) ? new Rgb(m[1], m[2], m[3]) // rgb(255,0,0)
		        : (m = reRgbPercent.exec(format)) ? new Rgb(m[1] * 255 / 100, m[2] * 255 / 100, m[3] * 255 / 100) // rgb(100%,0%,0%)
		        : (m = reHslPercent.exec(format)) ? new Hsl(m[1], m[2] / 100, m[3] / 100) // hsl(120,50%,50%)
		        : named.hasOwnProperty(format) ? rgbn(named[format])
		        : null;
		  }
		
		  function rgbn(n) {
		    return new Rgb(n >> 16 & 0xff, n >> 8 & 0xff, n & 0xff);
		  }
		
		  function rgb(r, g, b) {
		    if (arguments.length === 1) {
		      if (!(r instanceof Color)) r = color(r);
		      if (r) {
		        r = r.rgb();
		        b = r.b;
		        g = r.g;
		        r = r.r;
		      } else {
		        r = g = b = NaN;
		      }
		    }
		    return new Rgb(r, g, b);
		  }
		
		  function Rgb(r, g, b) {
		    this.r = +r;
		    this.g = +g;
		    this.b = +b;
		  }
		
		  var _rgb = rgb.prototype = Rgb.prototype = new Color;
		
		  _rgb.brighter = function(k) {
		    k = k == null ? brighter : Math.pow(brighter, k);
		    return new Rgb(this.r * k, this.g * k, this.b * k);
		  };
		
		  _rgb.darker = function(k) {
		    k = k == null ? darker : Math.pow(darker, k);
		    return new Rgb(this.r * k, this.g * k, this.b * k);
		  };
		
		  _rgb.rgb = function() {
		    return this;
		  };
		
		  _rgb.displayable = function() {
		    return (0 <= this.r && this.r <= 255)
		        && (0 <= this.g && this.g <= 255)
		        && (0 <= this.b && this.b <= 255);
		  };
		
		  _rgb.toString = function() {
		    var r = Math.round(this.r),
		        g = Math.round(this.g),
		        b = Math.round(this.b);
		    return "#"
		        + (isNaN(r) || r <= 0 ? "00" : r < 16 ? "0" + r.toString(16) : r >= 255 ? "ff" : r.toString(16))
		        + (isNaN(g) || g <= 0 ? "00" : g < 16 ? "0" + g.toString(16) : g >= 255 ? "ff" : g.toString(16))
		        + (isNaN(b) || b <= 0 ? "00" : b < 16 ? "0" + b.toString(16) : b >= 255 ? "ff" : b.toString(16));
		  };
		
		  function hsl(h, s, l) {
		    if (arguments.length === 1) {
		      if (h instanceof Hsl) {
		        l = h.l;
		        s = h.s;
		        h = h.h;
		      } else {
		        if (!(h instanceof Color)) h = color(h);
		        if (h) {
		          if (h instanceof Hsl) return h;
		          h = h.rgb();
		          var r = h.r / 255,
		              g = h.g / 255,
		              b = h.b / 255,
		              min = Math.min(r, g, b),
		              max = Math.max(r, g, b),
		              range = max - min;
		          l = (max + min) / 2;
		          if (range) {
		            s = l < 0.5 ? range / (max + min) : range / (2 - max - min);
		            if (r === max) h = (g - b) / range + (g < b) * 6;
		            else if (g === max) h = (b - r) / range + 2;
		            else h = (r - g) / range + 4;
		            h *= 60;
		          } else {
		            h = NaN;
		            s = l > 0 && l < 1 ? 0 : h;
		          }
		        } else {
		          h = s = l = NaN;
		        }
		      }
		    }
		    return new Hsl(h, s, l);
		  }
		
		  function Hsl(h, s, l) {
		    this.h = +h;
		    this.s = +s;
		    this.l = +l;
		  }
		
		  var _hsl = hsl.prototype = Hsl.prototype = new Color;
		
		  _hsl.brighter = function(k) {
		    k = k == null ? brighter : Math.pow(brighter, k);
		    return new Hsl(this.h, this.s, this.l * k);
		  };
		
		  _hsl.darker = function(k) {
		    k = k == null ? darker : Math.pow(darker, k);
		    return new Hsl(this.h, this.s, this.l * k);
		  };
		
		  _hsl.rgb = function() {
		    var h = this.h % 360 + (this.h < 0) * 360,
		        s = isNaN(h) || isNaN(this.s) ? 0 : this.s,
		        l = this.l,
		        m2 = l + (l < 0.5 ? l : 1 - l) * s,
		        m1 = 2 * l - m2;
		    return new Rgb(
		      hsl2rgb(h >= 240 ? h - 240 : h + 120, m1, m2),
		      hsl2rgb(h, m1, m2),
		      hsl2rgb(h < 120 ? h + 240 : h - 120, m1, m2)
		    );
		  };
		
		  _hsl.displayable = function() {
		    return (0 <= this.s && this.s <= 1 || isNaN(this.s))
		        && (0 <= this.l && this.l <= 1);
		  };
		
		  /* From FvD 13.37, CSS Color Module Level 3 */
		  function hsl2rgb(h, m1, m2) {
		    return (h < 60 ? m1 + (m2 - m1) * h / 60
		        : h < 180 ? m2
		        : h < 240 ? m1 + (m2 - m1) * (240 - h) / 60
		        : m1) * 255;
		  }
		
		  var deg2rad = Math.PI / 180;
		  var rad2deg = 180 / Math.PI;
		
		  var Kn = 18;
		  var Xn = 0.950470;
		  var Yn = 1;
		  var Zn = 1.088830;
		  var t0 = 4 / 29;
		  var t1 = 6 / 29;
		  var t2 = 3 * t1 * t1;
		  var t3 = t1 * t1 * t1;
		  function lab(l, a, b) {
		    if (arguments.length === 1) {
		      if (l instanceof Lab) {
		        b = l.b;
		        a = l.a;
		        l = l.l;
		      } else if (l instanceof Hcl) {
		        var h = l.h * deg2rad;
		        b = Math.sin(h) * l.c;
		        a = Math.cos(h) * l.c;
		        l = l.l;
		      } else {
		        if (!(l instanceof Rgb)) l = rgb(l);
		        b = rgb2xyz(l.r);
		        a = rgb2xyz(l.g);
		        l = rgb2xyz(l.b);
		        var x = xyz2lab((0.4124564 * b + 0.3575761 * a + 0.1804375 * l) / Xn),
		            y = xyz2lab((0.2126729 * b + 0.7151522 * a + 0.0721750 * l) / Yn),
		            z = xyz2lab((0.0193339 * b + 0.1191920 * a + 0.9503041 * l) / Zn);
		        b = 200 * (y - z);
		        a = 500 * (x - y);
		        l = 116 * y - 16;
		      }
		    }
		    return new Lab(l, a, b);
		  }
		
		  function Lab(l, a, b) {
		    this.l = +l;
		    this.a = +a;
		    this.b = +b;
		  }
		
		  var _lab = lab.prototype = Lab.prototype = new Color;
		
		  _lab.brighter = function(k) {
		    return new Lab(this.l + Kn * (k == null ? 1 : k), this.a, this.b);
		  };
		
		  _lab.darker = function(k) {
		    return new Lab(this.l - Kn * (k == null ? 1 : k), this.a, this.b);
		  };
		
		  _lab.rgb = function() {
		    var y = (this.l + 16) / 116,
		        x = isNaN(this.a) ? y : y + this.a / 500,
		        z = isNaN(this.b) ? y : y - this.b / 200;
		    y = Yn * lab2xyz(y);
		    x = Xn * lab2xyz(x);
		    z = Zn * lab2xyz(z);
		    return new Rgb(
		      xyz2rgb( 3.2404542 * x - 1.5371385 * y - 0.4985314 * z), // D65 -> sRGB
		      xyz2rgb(-0.9692660 * x + 1.8760108 * y + 0.0415560 * z),
		      xyz2rgb( 0.0556434 * x - 0.2040259 * y + 1.0572252 * z)
		    );
		  };
		
		  function xyz2lab(t) {
		    return t > t3 ? Math.pow(t, 1 / 3) : t / t2 + t0;
		  }
		
		  function lab2xyz(t) {
		    return t > t1 ? t * t * t : t2 * (t - t0);
		  }
		
		  function xyz2rgb(x) {
		    return 255 * (x <= 0.0031308 ? 12.92 * x : 1.055 * Math.pow(x, 1 / 2.4) - 0.055);
		  }
		
		  function rgb2xyz(x) {
		    return (x /= 255) <= 0.04045 ? x / 12.92 : Math.pow((x + 0.055) / 1.055, 2.4);
		  }
		
		  function hcl(h, c, l) {
		    if (arguments.length === 1) {
		      if (h instanceof Hcl) {
		        l = h.l;
		        c = h.c;
		        h = h.h;
		      } else {
		        if (!(h instanceof Lab)) h = lab(h);
		        l = h.l;
		        c = Math.sqrt(h.a * h.a + h.b * h.b);
		        h = Math.atan2(h.b, h.a) * rad2deg;
		        if (h < 0) h += 360;
		      }
		    }
		    return new Hcl(h, c, l);
		  }
		
		  function Hcl(h, c, l) {
		    this.h = +h;
		    this.c = +c;
		    this.l = +l;
		  }
		
		  var _hcl = hcl.prototype = Hcl.prototype = new Color;
		
		  _hcl.brighter = function(k) {
		    return new Hcl(this.h, this.c, this.l + Kn * (k == null ? 1 : k));
		  };
		
		  _hcl.darker = function(k) {
		    return new Hcl(this.h, this.c, this.l - Kn * (k == null ? 1 : k));
		  };
		
		  _hcl.rgb = function() {
		    return lab(this).rgb();
		  };
		
		  var A = -0.14861;
		  var B = +1.78277;
		  var C = -0.29227;
		  var D = -0.90649;
		  var E = +1.97294;
		  var ED = E * D;
		  var EB = E * B;
		  var BC_DA = B * C - D * A;
		  function cubehelix(h, s, l) {
		    if (arguments.length === 1) {
		      if (h instanceof Cubehelix) {
		        l = h.l;
		        s = h.s;
		        h = h.h;
		      } else {
		        if (!(h instanceof Rgb)) h = rgb(h);
		        var r = h.r / 255, g = h.g / 255, b = h.b / 255;
		        l = (BC_DA * b + ED * r - EB * g) / (BC_DA + ED - EB);
		        var bl = b - l, k = (E * (g - l) - C * bl) / D;
		        s = Math.sqrt(k * k + bl * bl) / (E * l * (1 - l)); // NaN if l=0 or l=1
		        h = s ? Math.atan2(k, bl) * rad2deg - 120 : NaN;
		        if (h < 0) h += 360;
		      }
		    }
		    return new Cubehelix(h, s, l);
		  }
		
		  function Cubehelix(h, s, l) {
		    this.h = +h;
		    this.s = +s;
		    this.l = +l;
		  }
		
		  var _cubehelix = cubehelix.prototype = Cubehelix.prototype = new Color;
		
		  _cubehelix.brighter = function(k) {
		    k = k == null ? brighter : Math.pow(brighter, k);
		    return new Cubehelix(this.h, this.s, this.l * k);
		  };
		
		  _cubehelix.darker = function(k) {
		    k = k == null ? darker : Math.pow(darker, k);
		    return new Cubehelix(this.h, this.s, this.l * k);
		  };
		
		  _cubehelix.rgb = function() {
		    var h = isNaN(this.h) ? 0 : (this.h + 120) * deg2rad,
		        l = +this.l,
		        a = isNaN(this.s) ? 0 : this.s * l * (1 - l),
		        cosh = Math.cos(h),
		        sinh = Math.sin(h);
		    return new Rgb(
		      255 * (l + a * (A * cosh + B * sinh)),
		      255 * (l + a * (C * cosh + D * sinh)),
		      255 * (l + a * (E * cosh))
		    );
		  };
		
		  var version = "0.3.4";
		
		  exports.version = version;
		  exports.color = color;
		  exports.rgb = rgb;
		  exports.hsl = hsl;
		  exports.lab = lab;
		  exports.hcl = hcl;
		  exports.cubehelix = cubehelix;
		
		}));

	/***/ },
	/* 162 */
	/***/ function(module, exports, __webpack_require__) {

		(function (global, factory) {
		   true ? factory(exports) :
		  typeof define === 'function' && define.amd ? define('d3-timer', ['exports'], factory) :
		  factory((global.d3_timer = {}));
		}(this, function (exports) { 'use strict';
		
		  var frame = 0;
		  var timeout = 0;
		  var taskHead;
		  var taskTail;
		  var taskId = 0;
		  var taskById = {};
		  var setFrame = typeof window !== "undefined"
		      && (window.requestAnimationFrame
		        || window.msRequestAnimationFrame
		        || window.mozRequestAnimationFrame
		        || window.webkitRequestAnimationFrame
		        || window.oRequestAnimationFrame)
		        || function(callback) { return setTimeout(callback, 17); };
		
		  function Timer(callback, delay, time) {
		    this.id = ++taskId;
		    this.restart(callback, delay, time);
		  }
		
		  Timer.prototype = timer.prototype = {
		    restart: function(callback, delay, time) {
		      if (typeof callback !== "function") throw new TypeError("callback is not a function");
		      time = (time == null ? Date.now() : +time) + (delay == null ? 0 : +delay);
		      var i = this.id, t = taskById[i];
		      if (t) {
		        t.callback = callback, t.time = time;
		      } else {
		        t = {next: null, callback: callback, time: time};
		        if (taskTail) taskTail.next = t; else taskHead = t;
		        taskById[i] = taskTail = t;
		      }
		      sleep();
		    },
		    stop: function() {
		      var i = this.id, t = taskById[i];
		      if (t) {
		        t.callback = null, t.time = Infinity;
		        delete taskById[i];
		        sleep();
		      }
		    }
		  };
		
		  function timer(callback, delay, time) {
		    return new Timer(callback, delay, time);
		  };
		
		  function timerFlush(time) {
		    time = time == null ? Date.now() : +time;
		    ++frame; // Pretend we’ve set an alarm, if we haven’t already.
		    try {
		      var t = taskHead, c;
		      while (t) {
		        if (time >= t.time) c = t.callback, c(time - t.time, time);
		        t = t.next;
		      }
		    } finally {
		      --frame;
		    }
		  };
		
		  function wake() {
		    frame = timeout = 0;
		    try {
		      timerFlush();
		    } finally {
		      var t0, t1 = taskHead, time = Infinity;
		      while (t1) {
		        if (t1.callback) {
		          if (time > t1.time) time = t1.time;
		          t1 = (t0 = t1).next;
		        } else {
		          t1 = t0 ? t0.next = t1.next : taskHead = t1.next;
		        }
		      }
		      taskTail = t0;
		      sleep(time);
		    }
		  }
		
		  function sleep(time) {
		    if (frame) return; // Soonest alarm already set, or will be.
		    if (timeout) timeout = clearTimeout(timeout);
		    var delay = time - Date.now();
		    if (delay > 24) { if (time < Infinity) timeout = setTimeout(wake, delay); }
		    else frame = 1, setFrame(wake);
		  }
		
		  var version = "0.0.6";
		
		  exports.version = version;
		  exports.timer = timer;
		  exports.timerFlush = timerFlush;
		
		}));

	/***/ },
	/* 163 */
	/***/ function(module, exports, __webpack_require__) {

		"use strict";
		
		Object.defineProperty(exports, "__esModule", {
		  value: true
		});
		exports.addVictoryInterpolator = exports.victoryInterpolator = exports.interpolateArray = exports.interpolateFunction = exports.interpolateImmediate = exports.isInterpolatable = undefined;
		
		var _typeof = typeof Symbol === "function" && typeof Symbol.iterator === "symbol" ? function (obj) { return typeof obj; } : function (obj) { return obj && typeof Symbol === "function" && obj.constructor === Symbol ? "symbol" : typeof obj; };
		
		var _d3Interpolate = __webpack_require__(160);
		
		var _d3Interpolate2 = _interopRequireDefault(_d3Interpolate);
		
		var _isPlainObject = __webpack_require__(146);
		
		var _isPlainObject2 = _interopRequireDefault(_isPlainObject);
		
		function _interopRequireDefault(obj) { return obj && obj.__esModule ? obj : { default: obj }; }
		
		var isInterpolatable = exports.isInterpolatable = function isInterpolatable(obj) {
		  // d3 turns null into 0 and undefined into NaN, which we don't want.
		  if (obj !== null) {
		    switch (typeof obj === "undefined" ? "undefined" : _typeof(obj)) {
		      case "undefined":
		        return false;
		      case "number":
		        // The standard `isNaN` is fine in this case since we already know the
		        // type is number.
		        return !isNaN(obj) && obj !== Number.POSITIVE_INFINITY && obj !== Number.NEGATIVE_INFINITY;
		      case "string":
		        // d3 might not *actually* be able to interpolate the string, but it
		        // won't cause any issues to let it try.
		        return true;
		      case "boolean":
		        // d3 turns Booleans into integers, which we don't want. Sure, we could
		        // interpolate from 0 -> 1, but we'd be sending a non-Boolean to
		        // something expecting a Boolean.
		        return false;
		      case "object":
		        // Don't try to interpolate class instances (except Date or Array).
		        return obj instanceof Date || Array.isArray(obj) || (0, _isPlainObject2.default)(obj);
		      case "function":
		        // Careful! There may be extra properties on function objects that the
		        // component expects to access - for instance, it may be a `d3.scale()`
		        // function, which has its own methods attached. We don't know if the
		        // component is only going to call the function (in which case it's
		        // safely interpolatable) or if it's going to access special properties
		        // (in which case our function generated from `interpolateFunction` will
		        // most likely cause an error. We could check for enumerable properties
		        // on the function object here to see if it's a "plain" function, but
		        // let's just require that components prevent such function props from
		        // being animated in the first place.
		        return true;
		    }
		  }
		  return false;
		};
		
		/**
		 * Interpolate immediately to the end value at the given step `when`.
		 * Some nicer default behavior might be to jump at the halfway point or return
		 * `a` if `t` is 0 (instead of always returning `b`). But d3's default
		 * interpolator does not do these things:
		 *
		 *   d3.interpolate('aaa', 'bbb')(0) === 'bbb'
		 *
		 * ...and things might get wonky if we don't replicate that behavior.
		 *
		 * @param {any} a - Start value.
		 * @param {any} b - End value.
		 * @param {Number} when - Step value (0 to 1) at which to jump to `b`.
		 * @returns {Function} An interpolation function.
		 */
		var interpolateImmediate = exports.interpolateImmediate = function interpolateImmediate(a, b) {
		  var when = arguments.length <= 2 || arguments[2] === undefined ? 0 : arguments[2];
		
		  return function (t) {
		    return t < when ? a : b;
		  };
		};
		
		/**
		 * Interpolate to or from a function. The interpolated value will be a function
		 * that calls `a` (if it's a function) and `b` (if it's a function) and calls
		 * `d3.interpolate` on the resulting values. Note that our function won't
		 * necessarily be called (that's up to the component this eventually gets
		 * passed to) - but if it does get called, it will return an appropriately
		 * interpolated value.
		 *
		 * @param {any} a - Start value.
		 * @param {any} b - End value.
		 * @returns {Function} An interpolation function.
		 */
		var interpolateFunction = exports.interpolateFunction = function interpolateFunction(a, b) {
		  return function (t) {
		    if (t >= 1) {
		      return b;
		    }
		    return function () {
		      /* eslint-disable no-invalid-this */
		      var aval = typeof a === "function" ? a.apply(this, arguments) : a;
		      var bval = typeof b === "function" ? b.apply(this, arguments) : b;
		      return _d3Interpolate2.default.value(aval, bval)(t);
		    };
		  };
		};
		
		/**
		 * This function is adapted from https://github.com/d3-interpolate/master/src/array.js
		 * This function may be removed pending the merge of https://github.com/d3/d3-interpolate/pull/19
		 * This function differs from d3-interpolate in that it wont return an array longer
		 * than the end array.
		 *
		 * @param {any} a - Start value.
		 * @param {any} b - End value.
		 * @returns {Function} An interpolation function.
		 */
		var interpolateArray = exports.interpolateArray = function interpolateArray(a, b) {
		  var x = [];
		  var c = [];
		  var na = a ? a.length : 0;
		  var nb = b ? b.length : 0;
		  var n0 = Math.min(na, nb);
		  var i = void 0;
		
		  for (i = 0; i < n0; ++i) {
		    x.push(_d3Interpolate2.default.value(a[i], b[i]));
		  }
		  for (i = 0; i < nb; ++i) {
		    c[i] = b[i];
		  }
		
		  return function (t) {
		    for (i = 0; i < n0; ++i) {
		      c[i] = x[i](t);
		    }
		    return c;
		  };
		};
		
		/**
		 * By default, the list of interpolators used by `d3.interpolate` has a few
		 * downsides:
		 *
		 * - `null` values get turned into 0.
		 * - `undefined`, `function`, and some other value types get turned into NaN.
		 * - Boolean types get turned into numbers, which probably will be meaningless
		 *   to whatever is consuming them.
		 * - It tries to interpolate between identical start and end values, doing
		 *   unnecessary calculations that sometimes result in floating point rounding
		 *   errors.
		 *
		 * If only the default interpolators are used, `VictoryAnimation` will happily
		 * pass down NaN (and other bad) values as props to the wrapped component.
		 * The component will then either use the incorrect values or complain that it
		 * was passed props of the incorrect type. This custom interpolator is added
		 * using the `d3.interpolators` API, and prevents such cases from happening
		 * for most values.
		 *
		 * @param {any} a - Start value.
		 * @param {any} b - End value.
		 * @returns {Function|undefined} An interpolation function, if necessary.
		 */
		var victoryInterpolator = exports.victoryInterpolator = function victoryInterpolator(a, b) {
		  // If the values are strictly equal, or either value is not interpolatable,
		  // just use either the start value `a` or end value `b` at every step, as
		  // there is no reasonable in-between value.
		  if (a === b || !isInterpolatable(a) || !isInterpolatable(b)) {
		    return interpolateImmediate(a, b);
		  }
		  if (typeof a === "function" || typeof b === "function") {
		    return interpolateFunction(a, b);
		  }
		  if (Array.isArray(a) && Array.isArray(b)) {
		    return interpolateArray(a, b);
		  }
		};
		
		var interpolatorAdded = false;
		
		var addVictoryInterpolator = exports.addVictoryInterpolator = function addVictoryInterpolator() {
		  if (!interpolatorAdded) {
		    _d3Interpolate2.default.values.push(victoryInterpolator);
		    interpolatorAdded = true;
		  }
		};

	/***/ },
	/* 164 */
	/***/ function(module, exports, __webpack_require__) {

		"use strict";
		
		Object.defineProperty(exports, "__esModule", {
		  value: true
		});
		
		var _extends = Object.assign || function (target) { for (var i = 1; i < arguments.length; i++) { var source = arguments[i]; for (var key in source) { if (Object.prototype.hasOwnProperty.call(source, key)) { target[key] = source[key]; } } } return target; };
		
		var _createClass = function () { function defineProperties(target, props) { for (var i = 0; i < props.length; i++) { var descriptor = props[i]; descriptor.enumerable = descriptor.enumerable || false; descriptor.configurable = true; if ("value" in descriptor) descriptor.writable = true; Object.defineProperty(target, descriptor.key, descriptor); } } return function (Constructor, protoProps, staticProps) { if (protoProps) defineProperties(Constructor.prototype, protoProps); if (staticProps) defineProperties(Constructor, staticProps); return Constructor; }; }();
		
		var _react = __webpack_require__(157);
		
		var _react2 = _interopRequireDefault(_react);
		
		var _index = __webpack_require__(165);
		
		var _merge = __webpack_require__(85);
		
		var _merge2 = _interopRequireDefault(_merge);
		
		function _interopRequireDefault(obj) { return obj && obj.__esModule ? obj : { default: obj }; }
		
		function _classCallCheck(instance, Constructor) { if (!(instance instanceof Constructor)) { throw new TypeError("Cannot call a class as a function"); } }
		
		function _possibleConstructorReturn(self, call) { if (!self) { throw new ReferenceError("this hasn't been initialised - super() hasn't been called"); } return call && (typeof call === "object" || typeof call === "function") ? call : self; }
		
		function _inherits(subClass, superClass) { if (typeof superClass !== "function" && superClass !== null) { throw new TypeError("Super expression must either be null or a function, not " + typeof superClass); } subClass.prototype = Object.create(superClass && superClass.prototype, { constructor: { value: subClass, enumerable: false, writable: true, configurable: true } }); if (superClass) Object.setPrototypeOf ? Object.setPrototypeOf(subClass, superClass) : subClass.__proto__ = superClass; }
		
		var defaultStyles = {
		  stroke: "transparent",
		  fill: "#756f6a",
		  fontSize: 16,
		  fontFamily: "Helvetica",
		  backgroundColor: "#ccc"
		};
		
		var VictoryLabel = function (_React$Component) {
		  _inherits(VictoryLabel, _React$Component);
		
		  function VictoryLabel() {
		    _classCallCheck(this, VictoryLabel);
		
		    return _possibleConstructorReturn(this, Object.getPrototypeOf(VictoryLabel).apply(this, arguments));
		  }
		
		  _createClass(VictoryLabel, [{
		    key: "getStyles",
		    value: function getStyles(props) {
		      var style = props.style ? (0, _merge2.default)({}, defaultStyles, props.style) : defaultStyles;
		      var datum = props.datum || props.data;
		      return _index.Helpers.evaluateStyle(style, datum);
		    }
		  }, {
		    key: "getHeight",
		    value: function getHeight(props, type) {
		      var datum = props.datum || props.data;
		      var height = _index.Helpers.evaluateProp(props[type], datum);
		      return typeof height === "number" ? height + "em" : height;
		    }
		  }, {
		    key: "getContent",
		    value: function getContent(props) {
		      var text = props.text || props.children;
		      if (text) {
		        var datum = props.datum || props.data;
		        var child = _index.Helpers.evaluateProp(text, datum);
		        return ("" + child).split("\n");
		      }
		      return [""];
		    }
		  }, {
		    key: "getDy",
		    value: function getDy(props, content, lineHeight) {
		      var datum = props.datum || props.data;
		      var dy = props.dy ? _index.Helpers.evaluateProp(props.dy, datum) : 0;
		      var length = content.length;
		      var capHeight = this.getHeight(props, "capHeight");
		      var verticalAnchor = props.verticalAnchor ? _index.Helpers.evaluateProp(props.verticalAnchor, datum) : "middle";
		      switch (verticalAnchor) {
		        case "end":
		          return _index.Style.calc(dy + " +  " + capHeight + " / 2 + (0.5 - " + length + ") * " + lineHeight);
		        case "middle":
		          return _index.Style.calc(dy + " + " + capHeight + " / 2 + (0.5 - " + length + " / 2) * " + lineHeight);
		        default:
		          return _index.Style.calc(dy + " + " + capHeight + " / 2 + " + lineHeight + " / 2");
		      }
		    }
		  }, {
		    key: "getTransform",
		    value: function getTransform(props) {
		      var transform = props.transform;
		      var datum = props.datum;
		      var x = props.x;
		      var y = props.y;
		      var angle = props.angle;
		
		      var transformPart = transform && _index.Helpers.evaluateProp(transform, datum);
		      var rotatePart = angle && { rotate: [angle, x, y] };
		      return (transformPart || angle) && _index.Style.toTransformString(transformPart, rotatePart);
		    }
		  }, {
		    key: "render",
		    value: function render() {
		      var _this2 = this;
		
		      var datum = this.props.datum || this.props.data;
		      var lineHeight = this.getHeight(this.props, "lineHeight");
		      var transform = this.getTransform(this.props);
		
		      var textAnchor = this.props.textAnchor ? _index.Helpers.evaluateProp(this.props.textAnchor, datum) : "start";
		      var content = this.getContent(this.props);
		      var style = this.getStyles(this.props);
		      var dx = this.props.dx ? _index.Helpers.evaluateProp(this.props.dx, datum) : 0;
		      var dy = this.getDy(this.props, content, lineHeight);
		      return _react2.default.createElement(
		        "text",
		        _extends({
		          x: this.props.x,
		          y: this.props.y,
		          dy: dy,
		          dx: dx,
		          textAnchor: textAnchor,
		          transform: transform,
		          style: style
		        }, this.props.events),
		        content.map(function (line, i) {
		          return _react2.default.createElement(
		            "tspan",
		            { key: i, x: _this2.props.x, dy: i ? lineHeight : undefined },
		            line
		          );
		        })
		      );
		    }
		  }]);
		
		  return VictoryLabel;
		}(_react2.default.Component);
		
		VictoryLabel.propTypes = {
		  /**
		   * Specifies the angle to rotate the text by.
		   */
		  angle: _react.PropTypes.oneOfType([_react.PropTypes.string, _react.PropTypes.number]),
		  /**
		   * The capHeight prop defines a text metric for the font being used: the
		   * expected height of capital letters. This is necessary because of SVG,
		   * which (a) positions the *bottom* of the text at `y`, and (b) has no
		   * notion of line height. The value should ideally use the same units as
		   * `lineHeight` and `dy`, preferably ems. If given a unitless number, it
		   * is assumed to be ems.
		   */
		  capHeight: _react.PropTypes.oneOfType([_react.PropTypes.string, _index.PropTypes.nonNegative, _react.PropTypes.func]),
		  /**
		   * Victory components can pass a datum prop to their label component. This can
		   * be used to calculate functional styles, and determine child text
		   */
		  datum: _react.PropTypes.object,
		  /**
		   * Labels that apply to an entire data series will recieve the entire series
		   * as `data` instead of an individual datum prop.
		   */
		  data: _react.PropTypes.array,
		  /**
		   * The events prop attaches arbitrary event handlers to the label component.
		   * Event handlers are currently only called with their corresponding events.
		   * @examples {(evt) => alert(`x: ${evt.clientX}, y: ${evt.clientY}`)}
		   */
		  events: _react.PropTypes.object,
		  /**
		   * all Victory components will pass a text prop to their label component.
		   * This defines the content of the label when child nodes are absent. It
		   * will be ignored if children are provided.
		   */
		  text: _react.PropTypes.oneOfType([_react.PropTypes.string, _react.PropTypes.number, _react.PropTypes.func]),
		  /**
		   * The children of this component define the content of the label. This
		   * makes using the component similar to normal HTML spans or labels.
		   * strings, numbers, and functions of data / value are supported.
		   */
		  children: _react.PropTypes.oneOfType([// TODO: Expand child support in future release
		  _react.PropTypes.string, _react.PropTypes.number, _react.PropTypes.func]),
		  /**
		   * The lineHeight prop defines how much space a single line of text should
		   * take up. Note that SVG has no notion of line-height, so the positioning
		   * may differ slightly from what you would expect with CSS, but the result
		   * is similar: a roughly equal amount of extra space is distributed above
		   * and below the line of text. The value should ideally use the same units
		   * as `capHeight` and `dy`, preferably ems. If given a unitless number, it
		   * is assumed to be ems.
		   */
		  lineHeight: _react.PropTypes.oneOfType([_react.PropTypes.string, _index.PropTypes.nonNegative, _react.PropTypes.func]),
		  /**
		   * The style prop applies CSS properties to the rendered `<text>` element.
		   */
		  style: _react.PropTypes.object,
		  /**
		   * The textAnchor prop defines how the text is horizontally positioned
		   * relative to the given `x` and `y` coordinates.
		   */
		  textAnchor: _react.PropTypes.oneOfType([_react.PropTypes.oneOf(["start", "middle", "end", "inherit"]), _react.PropTypes.func]),
		  /**
		   * The verticalAnchor prop defines how the text is vertically positioned
		   * relative to the given `x` and `y` coordinates.
		   */
		  verticalAnchor: _react.PropTypes.oneOfType([_react.PropTypes.oneOf(["start", "middle", "end"]), _react.PropTypes.func]),
		  /**
		   * The transform prop applies a transform to the rendered `<text>` element.
		   * In addition to being a string, it can be an object containing transform
		   * definitions for easier authoring.
		   */
		  transform: _react.PropTypes.oneOfType([_react.PropTypes.string, _react.PropTypes.object, _react.PropTypes.func]),
		  /**
		   * The x prop defines the x coordinate to use as a basis for horizontal
		   * positioning.
		   */
		  x: _react.PropTypes.number,
		  /**
		   * The y prop defines the y coordinate to use as a basis for vertical
		   * positioning.
		   */
		  y: _react.PropTypes.number,
		  /**
		   * The dx prop defines a horizontal shift from the `x` coordinate.
		   */
		  dx: _react.PropTypes.oneOfType([_react.PropTypes.number, _react.PropTypes.string, _react.PropTypes.func]),
		  /**
		   * The dy prop defines a vertical shift from the `y` coordinate. Since this
		   * component already accounts for `capHeight`, `lineHeight`, and
		   * `verticalAnchor`, this will usually not be necessary.
		   */
		  dy: _react.PropTypes.oneOfType([_react.PropTypes.number, _react.PropTypes.string, _react.PropTypes.func])
		};
		VictoryLabel.defaultProps = {
		  capHeight: "0.71em", // Magic number from d3.
		  lineHeight: 1
		};
		exports.default = VictoryLabel;

	/***/ },
	/* 165 */
	/***/ function(module, exports, __webpack_require__) {

		"use strict";
		
		Object.defineProperty(exports, "__esModule", {
		  value: true
		});
		exports.PropTypes = exports.Transitions = exports.Style = exports.Log = exports.Helpers = exports.Collection = undefined;
		
		var _collection = __webpack_require__(2);
		
		var _collection2 = _interopRequireDefault(_collection);
		
		var _helpers = __webpack_require__(3);
		
		var _helpers2 = _interopRequireDefault(_helpers);
		
		var _log = __webpack_require__(149);
		
		var _log2 = _interopRequireDefault(_log);
		
		var _style = __webpack_require__(151);
		
		var _style2 = _interopRequireDefault(_style);
		
		var _propTypes = __webpack_require__(156);
		
		var _propTypes2 = _interopRequireDefault(_propTypes);
		
		var _transitions = __webpack_require__(166);
		
		var Transitions = _interopRequireWildcard(_transitions);
		
		function _interopRequireWildcard(obj) { if (obj && obj.__esModule) { return obj; } else { var newObj = {}; if (obj != null) { for (var key in obj) { if (Object.prototype.hasOwnProperty.call(obj, key)) newObj[key] = obj[key]; } } newObj.default = obj; return newObj; } }
		
		function _interopRequireDefault(obj) { return obj && obj.__esModule ? obj : { default: obj }; }
		
		exports.Collection = _collection2.default;
		exports.Helpers = _helpers2.default;
		exports.Log = _log2.default;
		exports.Style = _style2.default;
		exports.Transitions = Transitions;
		exports.PropTypes = _propTypes2.default;

	/***/ },
	/* 166 */
	/***/ function(module, exports, __webpack_require__) {

		"use strict";
		
		Object.defineProperty(exports, "__esModule", {
		  value: true
		});
		exports.getInitialTransitionState = getInitialTransitionState;
		exports.getTransitionPropsFactory = getTransitionPropsFactory;
		
		var _assign = __webpack_require__(167);
		
		var _assign2 = _interopRequireDefault(_assign);
		
		var _defaults = __webpack_require__(4);
		
		var _defaults2 = _interopRequireDefault(_defaults);
		
		var _identity = __webpack_require__(50);
		
		var _identity2 = _interopRequireDefault(_identity);
		
		function _interopRequireDefault(obj) { return obj && obj.__esModule ? obj : { default: obj }; }
		
		function getDatumKey(datum, idx) {
		  return (datum.key || idx).toString();
		} /* eslint-disable func-style */
		
		
		function getKeyedData(data) {
		  return data.reduce(function (keyedData, datum, idx) {
		    var key = getDatumKey(datum, idx);
		    keyedData[key] = datum;
		    return keyedData;
		  }, {});
		}
		
		function getKeyedDataDifference(a, b) {
		  var hasDifference = false;
		  var difference = Object.keys(a).reduce(function (_difference, key) {
		    if (!(key in b)) {
		      hasDifference = true;
		      _difference[key] = true;
		    }
		    return _difference;
		  }, {});
		  return hasDifference && difference;
		}
		
		/**
		 * Calculate which data-points exist in oldData and not nextData -
		 * these are the `entering` data-points.  Also calculate which
		 * data-points exist in nextData and not oldData - thses are the
		 * `entering` data-points.
		 *
		 * @param  {Array} oldData   this.props.data Array
		 * @param  {Array} nextData  this.props.data Array
		 *
		 * @return {Object}          Object with `entering` and `exiting` properties.
		 *                           entering[datum.key] will be true if the data is
		 *                           entering, and similarly for `exiting`.
		 */
		function getNodeTransitions(oldData, nextData) {
		  var oldDataKeyed = oldData && getKeyedData(oldData);
		  var nextDataKeyed = nextData && getKeyedData(nextData);
		
		  return {
		    entering: oldDataKeyed && getKeyedDataDifference(nextDataKeyed, oldDataKeyed),
		    exiting: nextDataKeyed && getKeyedDataDifference(oldDataKeyed, nextDataKeyed)
		  };
		}
		
		function getChildData(child) {
		  if (child.type && child.type.getData) {
		    return child.type.getData(child.props);
		  }
		  return child.props && child.props.data || false;
		}
		
		/**
		 * If a parent component has animation enabled, calculate the transitions
		 * for any data of any child component that supports data transitions
		 * Data transitions are defined as any two datasets where data nodes exist
		 * in the first set and not the second, in the second and not the first,
		 * or both.
		 *
		 * @param  {Children}  oldChildren   this.props.children from old props
		 * @param  {Children}  nextChildren  this.props.children from next props
		 *
		 * @return {Object}                  Object with the following properties:
		 *                                    - nodesWillExit
		 *                                    - nodesWillEnter
		 *                                    - childrenTransitions
		 *                                    - nodesShouldEnter
		 */
		function getInitialTransitionState(oldChildren, nextChildren) {
		  var nodesWillExit = false;
		  var nodesWillEnter = false;
		
		  var getTransition = function getTransition(oldChild, newChild) {
		    if (!newChild || oldChild.type !== newChild.type) {
		      return {};
		    }
		
		    var _ref = getNodeTransitions(getChildData(oldChild), getChildData(newChild)) || {};
		
		    var entering = _ref.entering;
		    var exiting = _ref.exiting;
		
		
		    nodesWillExit = nodesWillExit || !!exiting;
		    nodesWillEnter = nodesWillEnter || !!entering;
		
		    return { entering: entering || false, exiting: exiting || false };
		  };
		
		  var getTransitionsFromChildren = function getTransitionsFromChildren(old, next) {
		    return old.map(function (child, idx) {
		      if (child.props.children) {
		        return getTransitionsFromChildren(old[idx].props.children, next[idx].props.children);
		      } else {
		        return getTransition(child, next[idx]);
		      }
		    });
		  };
		
		  var childrenTransitions = getTransitionsFromChildren(oldChildren, nextChildren);
		  return {
		    nodesWillExit: nodesWillExit,
		    nodesWillEnter: nodesWillEnter,
		    childrenTransitions: childrenTransitions,
		    // TODO: This may need to be refactored for the following situation.
		    //       The component receives new props, and the data provided
		    //       is a perfect match for the previous data and domain except
		    //       for new nodes. In this case, we wouldn't want a delay before
		    //       the new nodes appear.
		    nodesShouldEnter: false
		  };
		}
		
		function getInitialChildProps(animate, data) {
		  var after = animate.onEnter && animate.onEnter.after ? animate.onEnter.after : _identity2.default;
		  return {
		    data: data.map(function (datum) {
		      return (0, _assign2.default)({}, datum, after(datum));
		    })
		  };
		}
		
		function getChildPropsOnExit(animate, data, exitingNodes, cb) {
		  // eslint-disable-line max-params
		  // Whether or not _this_ child has exiting nodes, we want the exit-
		  // transition for all children to have the same duration, delay, etc.
		  var onExit = animate && animate.onExit;
		  animate = (0, _assign2.default)({}, animate, onExit);
		
		  if (exitingNodes) {
		    (function () {
		      // After the exit transition occurs, trigger the animations for
		      // nodes that are neither exiting or entering.
		      animate.onEnd = cb;
		      var before = animate.onExit && animate.onExit.before ? animate.onExit.before : _identity2.default;
		      // If nodes need to exit, transform them with the provided onExit.before function.
		      data = data.map(function (datum, idx) {
		        var key = (datum.key || idx).toString();
		        return exitingNodes[key] ? (0, _assign2.default)({}, datum, before(datum)) : datum;
		      });
		    })();
		  }
		  return { animate: animate, data: data };
		}
		
		function getChildPropsBeforeEnter(animate, data, enteringNodes, cb) {
		  // eslint-disable-line max-params,max-len
		  if (enteringNodes) {
		    (function () {
		      // Perform a normal animation here, except - when it finishes - trigger
		      // the transition for entering nodes.
		      animate = (0, _assign2.default)({}, animate, { onEnd: cb });
		      var before = animate.onEnter && animate.onEnter.before ? animate.onEnter.before : _identity2.default;
		      // We want the entering nodes to be included in the transition target
		      // domain.  However, we may not want these nodes to be displayed initially,
		      // so perform the `onEnter.before` transformation on each node.
		      data = data.map(function (datum, idx) {
		        var key = (datum.key || idx).toString();
		        return enteringNodes[key] ? (0, _assign2.default)({}, datum, before(datum)) : datum;
		      });
		    })();
		  }
		
		  return { animate: animate, data: data };
		}
		
		function getChildPropsOnEnter(animate, data, enteringNodes) {
		  // Whether or not _this_ child has entering nodes, we want the entering-
		  // transition for all children to have the same duration, delay, etc.
		  var onEnter = animate && animate.onEnter;
		  animate = (0, _assign2.default)({}, animate, onEnter);
		
		  if (enteringNodes) {
		    (function () {
		      // Old nodes have been transitioned to their new values, and the
		      // domain should encompass the nodes that will now enter. So perform
		      // the `onEnter.after` transformation on each node.
		      var after = animate.onEnter && animate.onEnter.after ? animate.onEnter.after : _identity2.default;
		      data = data.map(function (datum, idx) {
		        var key = getDatumKey(datum, idx);
		        return enteringNodes[key] ? (0, _assign2.default)({}, datum, after(datum)) : datum;
		      });
		    })();
		  }
		  return { animate: animate, data: data };
		}
		
		/**
		 * getTransitionPropsFactory - putting the Java in JavaScript.  This will return a
		 * function that returns prop transformations for a child, given that child's props
		 * and its index in the parent's children array.
		 *
		 * In particular, this will include an `animate` object that is set appropriately
		 * so that each child will be synchoronized for each stage of a transition
		 * animation.  It will also include a transformed `data` object, where each datum
		 * is transformed by `animate.onExit` and `animate.onEnter` `before` and `after`
		 * functions.
		 *
		 * @param  {Object}  props       `this.props` for the parent component.
		 * @param  {Object} state        `this.state` for the parent component.
		 * @param  {Function} setState    Function that, when called, will `this.setState` on
		 *                                 the parent component with the provided object.
		 *
		 * @return {Function}              Child-prop transformation function.
		 */
		function getTransitionPropsFactory(props, state, setState) {
		  var nodesWillExit = state && state.nodesWillExit;
		  var nodesWillEnter = state && state.nodesWillEnter;
		  var nodesShouldEnter = state && state.nodesShouldEnter;
		  var childrenTransitions = state && state.childrenTransitions || [];
		  var transitionDurations = {
		    enter: props.animate && props.animate.onEnter && props.animate.onEnter.duration,
		    exit: props.animate && props.animate.onExit && props.animate.onExit.duration,
		    move: props.animate && props.animate.duration
		  };
		
		  var onExit = function onExit(nodes, data, animate) {
		    return getChildPropsOnExit(animate, data, nodes, function () {
		      setState({ nodesWillExit: false });
		    });
		  };
		
		  var onEnter = function onEnter(nodes, data, animate) {
		    return nodesShouldEnter ? getChildPropsOnEnter(animate, data, nodes) : getChildPropsBeforeEnter(animate, data, nodes, function () {
		      setState({ nodesShouldEnter: true });
		    });
		  };
		
		  var getChildTransitionDuration = function getChildTransitionDuration(child, type) {
		    var animate = child.props.animate;
		    var defaultTransitions = child.type && child.type.defaultTransitions;
		    return animate[type] && animate[type].duration || defaultTransitions[type] && defaultTransitions[type].duration;
		  };
		
		  return function getTransitionProps(child, index) {
		    // eslint-disable-line max-statements
		    var data = getChildData(child) || [];
		    var animate = (0, _defaults2.default)({}, props.animate, child.props.animate);
		
		    animate.onExit = (0, _defaults2.default)({}, animate.onExit, child.type.defaultTransitions && child.type.defaultTransitions.onExit);
		    animate.onEnter = (0, _defaults2.default)({}, animate.onEnter, child.type.defaultTransitions && child.type.defaultTransitions.onEnter);
		
		    var childTransitions = childrenTransitions[index] || childrenTransitions[0];
		    if (nodesWillExit) {
		      var exitingNodes = childTransitions && childTransitions.exiting;
		      var exit = transitionDurations.exit || getChildTransitionDuration(child, "onExit");
		      // if nodesWillExit, but this child has no exiting nodes, set a delay instead of a duration
		      var animation = exitingNodes ? { duration: exit } : { delay: exit };
		      return onExit(exitingNodes, data, (0, _assign2.default)({}, animate, animation));
		    } else if (nodesWillEnter) {
		      var enteringNodes = childTransitions && childTransitions.entering;
		      var enter = transitionDurations.enter || getChildTransitionDuration(child, "onEnter");
		      var move = transitionDurations.move || child.props.animate && child.props.animate.duration;
		      var _animation = { duration: nodesShouldEnter && enteringNodes ? enter : move };
		      return onEnter(enteringNodes, data, (0, _assign2.default)({}, animate, _animation));
		    } else if (!state && animate && animate.onExit) {
		      // This is the initial render, and nodes may enter when props change. Because
		      // animation interpolation is determined by old- and next- props, data may need
		      // to be augmented with certain properties.
		      //
		      // For example, it may be desired that exiting nodes go from `opacity: 1` to
		      // `opacity: 0`. Without setting this on a per-datum basis, the interpolation
		      // might go from `opacity: undefined` to `opacity: 0`, which would result in
		      // interpolated `opacity: NaN` values.
		      //
		      return getInitialChildProps(animate, data);
		    }
		    return { animate: animate, data: data };
		  };
		}

	/***/ },
	/* 167 */
	/***/ function(module, exports, __webpack_require__) {

		var assignValue = __webpack_require__(10),
		    copyObject = __webpack_require__(117),
		    createAssigner = __webpack_require__(11),
		    isArrayLike = __webpack_require__(13),
		    isPrototype = __webpack_require__(37),
		    keys = __webpack_require__(118);
		
		/** Used for built-in method references. */
		var objectProto = Object.prototype;
		
		/** Used to check objects for own properties. */
		var hasOwnProperty = objectProto.hasOwnProperty;
		
		/** Built-in value references. */
		var propertyIsEnumerable = objectProto.propertyIsEnumerable;
		
		/** Detect if properties shadowing those on `Object.prototype` are non-enumerable. */
		var nonEnumShadows = !propertyIsEnumerable.call({ 'valueOf': 1 }, 'valueOf');
		
		/**
		 * Assigns own enumerable properties of source objects to the destination
		 * object. Source objects are applied from left to right. Subsequent sources
		 * overwrite property assignments of previous sources.
		 *
		 * **Note:** This method mutates `object` and is loosely based on
		 * [`Object.assign`](https://mdn.io/Object/assign).
		 *
		 * @static
		 * @memberOf _
		 * @category Object
		 * @param {Object} object The destination object.
		 * @param {...Object} [sources] The source objects.
		 * @returns {Object} Returns `object`.
		 * @example
		 *
		 * function Foo() {
		 *   this.c = 3;
		 * }
		 *
		 * function Bar() {
		 *   this.e = 5;
		 * }
		 *
		 * Foo.prototype.d = 4;
		 * Bar.prototype.f = 6;
		 *
		 * _.assign({ 'a': 1 }, new Foo, new Bar);
		 * // => { 'a': 1, 'c': 3, 'e': 5 }
		 */
		var assign = createAssigner(function(object, source) {
		  if (nonEnumShadows || isPrototype(source) || isArrayLike(source)) {
		    copyObject(source, keys(source), object);
		    return;
		  }
		  for (var key in source) {
		    if (hasOwnProperty.call(source, key)) {
		      assignValue(object, key, source[key]);
		    }
		  }
		});
		
		module.exports = assign;


	/***/ },
	/* 168 */
	/***/ function(module, exports, __webpack_require__) {

		"use strict";
		
		Object.defineProperty(exports, "__esModule", {
		  value: true
		});
		
		var _extends = Object.assign || function (target) { for (var i = 1; i < arguments.length; i++) { var source = arguments[i]; for (var key in source) { if (Object.prototype.hasOwnProperty.call(source, key)) { target[key] = source[key]; } } } return target; };
		
		var _createClass = function () { function defineProperties(target, props) { for (var i = 0; i < props.length; i++) { var descriptor = props[i]; descriptor.enumerable = descriptor.enumerable || false; descriptor.configurable = true; if ("value" in descriptor) descriptor.writable = true; Object.defineProperty(target, descriptor.key, descriptor); } } return function (Constructor, protoProps, staticProps) { if (protoProps) defineProperties(Constructor.prototype, protoProps); if (staticProps) defineProperties(Constructor, staticProps); return Constructor; }; }();
		
		var _react = __webpack_require__(157);
		
		var _react2 = _interopRequireDefault(_react);
		
		var _victoryAnimation = __webpack_require__(158);
		
		var _victoryAnimation2 = _interopRequireDefault(_victoryAnimation);
		
		var _index = __webpack_require__(165);
		
		var _defaults = __webpack_require__(4);
		
		var _defaults2 = _interopRequireDefault(_defaults);
		
		var _pick = __webpack_require__(169);
		
		var _pick2 = _interopRequireDefault(_pick);
		
		function _interopRequireDefault(obj) { return obj && obj.__esModule ? obj : { default: obj }; }
		
		function _classCallCheck(instance, Constructor) { if (!(instance instanceof Constructor)) { throw new TypeError("Cannot call a class as a function"); } }
		
		function _possibleConstructorReturn(self, call) { if (!self) { throw new ReferenceError("this hasn't been initialised - super() hasn't been called"); } return call && (typeof call === "object" || typeof call === "function") ? call : self; }
		
		function _inherits(subClass, superClass) { if (typeof superClass !== "function" && superClass !== null) { throw new TypeError("Super expression must either be null or a function, not " + typeof superClass); } subClass.prototype = Object.create(superClass && superClass.prototype, { constructor: { value: subClass, enumerable: false, writable: true, configurable: true } }); if (superClass) Object.setPrototypeOf ? Object.setPrototypeOf(subClass, superClass) : subClass.__proto__ = superClass; }
		
		var VictoryTransition = function (_React$Component) {
		  _inherits(VictoryTransition, _React$Component);
		
		  function VictoryTransition() {
		    _classCallCheck(this, VictoryTransition);
		
		    return _possibleConstructorReturn(this, Object.getPrototypeOf(VictoryTransition).apply(this, arguments));
		  }
		
		  _createClass(VictoryTransition, [{
		    key: "componentWillReceiveProps",
		    value: function componentWillReceiveProps(nextProps) {
		      this.setState(this.getTransitionState(this.props, nextProps));
		    }
		  }, {
		    key: "getTransitionState",
		    value: function getTransitionState(props, nextProps) {
		      var animate = props.animate;
		
		      if (!animate) {
		        return {};
		      } else if (animate.parentState) {
		        var oldProps = animate.parentState.nodesWillExit ? props : null;
		        return { oldProps: oldProps };
		      } else {
		        var _Transitions$getIniti = _index.Transitions.getInitialTransitionState([props.children], [nextProps.children]);
		
		        var nodesWillExit = _Transitions$getIniti.nodesWillExit;
		        var nodesWillEnter = _Transitions$getIniti.nodesWillEnter;
		        var childrenTransitions = _Transitions$getIniti.childrenTransitions;
		        var nodesShouldEnter = _Transitions$getIniti.nodesShouldEnter;
		
		        return {
		          nodesWillExit: nodesWillExit,
		          nodesWillEnter: nodesWillEnter,
		          childrenTransitions: childrenTransitions,
		          nodesShouldEnter: nodesShouldEnter,
		          oldProps: nodesWillExit ? props : null
		        };
		      }
		    }
		  }, {
		    key: "getChildDomain",
		    value: function getChildDomain(child) {
		      var getDomain = child.type && child.type.getDomain;
		      if (!getDomain) {
		        return undefined;
		      }
		      return child.type && child.type.role === "axis" ? getDomain(child.props) : {
		        x: getDomain(child.props, "x"),
		        y: getDomain(child.props, "y")
		      };
		    }
		  }, {
		    key: "render",
		    value: function render() {
		      var _this2 = this;
		
		      var props = this.state && this.state.nodesWillExit ? this.state.oldProps : this.props;
		      var getTransitionProps = this.props.animate && this.props.animate.getTransitions ? this.props.animate.getTransitions : _index.Transitions.getTransitionPropsFactory(props, this.state, function (newState) {
		        return _this2.setState(newState);
		      });
		      var child = _react2.default.Children.toArray(props.children)[0];
		      var transitionProps = getTransitionProps(child);
		      var combinedProps = (0, _defaults2.default)({ domain: this.getChildDomain(child) }, transitionProps, child.props);
		      var propsToAnimate = props.animationWhitelist ? (0, _pick2.default)(combinedProps, props.animationWhitelist) : combinedProps;
		      return _react2.default.createElement(
		        _victoryAnimation2.default,
		        _extends({}, combinedProps.animate, { data: propsToAnimate }),
		        function (newProps) {
		          var component = _react2.default.cloneElement(child, (0, _defaults2.default)({ animate: null }, newProps, combinedProps));
		          return component;
		        }
		      );
		    }
		  }]);
		
		  return VictoryTransition;
		}(_react2.default.Component);
		
		VictoryTransition.propTypes = {
		  /**
		   * The animate prop specifies an animation config for the transition.
		   * This prop should be given as an object.
		   */
		  animate: _react2.default.PropTypes.object,
		  /**
		   * VictoryTransition animates a single child component
		   */
		  children: _react2.default.PropTypes.node,
		  /**
		   * This prop specifies which of the child's props are safe to interpolate.
		   * This props should be given as an array.
		   */
		  animationWhitelist: _react2.default.PropTypes.array
		};
		exports.default = VictoryTransition;

	/***/ },
	/* 169 */
	/***/ function(module, exports, __webpack_require__) {

		var baseFlatten = __webpack_require__(170),
		    basePick = __webpack_require__(172),
		    rest = __webpack_require__(20);
		
		/**
		 * Creates an object composed of the picked `object` properties.
		 *
		 * @static
		 * @memberOf _
		 * @category Object
		 * @param {Object} object The source object.
		 * @param {...(string|string[])} [props] The property names to pick, specified
		 *  individually or in arrays.
		 * @returns {Object} Returns the new object.
		 * @example
		 *
		 * var object = { 'a': 1, 'b': '2', 'c': 3 };
		 *
		 * _.pick(object, ['a', 'c']);
		 * // => { 'a': 1, 'c': 3 }
		 */
		var pick = rest(function(object, props) {
		  return object == null ? {} : basePick(object, baseFlatten(props, 1));
		});
		
		module.exports = pick;


	/***/ },
	/* 170 */
	/***/ function(module, exports, __webpack_require__) {

		var arrayPush = __webpack_require__(171),
		    isArguments = __webpack_require__(32),
		    isArray = __webpack_require__(35),
		    isArrayLikeObject = __webpack_require__(33);
		
		/**
		 * The base implementation of `_.flatten` with support for restricting flattening.
		 *
		 * @private
		 * @param {Array} array The array to flatten.
		 * @param {number} depth The maximum recursion depth.
		 * @param {boolean} [isStrict] Restrict flattening to arrays-like objects.
		 * @param {Array} [result=[]] The initial result value.
		 * @returns {Array} Returns the new flattened array.
		 */
		function baseFlatten(array, depth, isStrict, result) {
		  result || (result = []);
		
		  var index = -1,
		      length = array.length;
		
		  while (++index < length) {
		    var value = array[index];
		    if (depth > 0 && isArrayLikeObject(value) &&
		        (isStrict || isArray(value) || isArguments(value))) {
		      if (depth > 1) {
		        // Recursively flatten arrays (susceptible to call stack limits).
		        baseFlatten(value, depth - 1, isStrict, result);
		      } else {
		        arrayPush(result, value);
		      }
		    } else if (!isStrict) {
		      result[result.length] = value;
		    }
		  }
		  return result;
		}
		
		module.exports = baseFlatten;


	/***/ },
	/* 171 */
	/***/ function(module, exports) {

		/**
		 * Appends the elements of `values` to `array`.
		 *
		 * @private
		 * @param {Array} array The array to modify.
		 * @param {Array} values The values to append.
		 * @returns {Array} Returns `array`.
		 */
		function arrayPush(array, values) {
		  var index = -1,
		      length = values.length,
		      offset = array.length;
		
		  while (++index < length) {
		    array[offset + index] = values[index];
		  }
		  return array;
		}
		
		module.exports = arrayPush;


	/***/ },
	/* 172 */
	/***/ function(module, exports, __webpack_require__) {

		var arrayReduce = __webpack_require__(135);
		
		/**
		 * The base implementation of `_.pick` without support for individual
		 * property names.
		 *
		 * @private
		 * @param {Object} object The source object.
		 * @param {string[]} props The property names to pick.
		 * @returns {Object} Returns the new object.
		 */
		function basePick(object, props) {
		  object = Object(object);
		  return arrayReduce(props, function(result, key) {
		    if (key in object) {
		      result[key] = object[key];
		    }
		    return result;
		  }, {});
		}
		
		module.exports = basePick;


	/***/ },
	/* 173 */
	/***/ function(module, exports, __webpack_require__) {

		"use strict";
		
		Object.defineProperty(exports, "__esModule", {
		  value: true
		});
		exports.VictoryStack = exports.VictoryGroup = exports.VictoryScatter = exports.VictoryBar = exports.VictoryArea = exports.VictoryAxis = exports.VictoryLine = exports.VictoryChart = undefined;
		
		var _victoryChart = __webpack_require__(174);
		
		var _victoryChart2 = _interopRequireDefault(_victoryChart);
		
		var _victoryLine = __webpack_require__(369);
		
		var _victoryLine2 = _interopRequireDefault(_victoryLine);
		
		var _victoryAxis = __webpack_require__(208);
		
		var _victoryAxis2 = _interopRequireDefault(_victoryAxis);
		
		var _victoryArea = __webpack_require__(374);
		
		var _victoryArea2 = _interopRequireDefault(_victoryArea);
		
		var _victoryBar = __webpack_require__(377);
		
		var _victoryBar2 = _interopRequireDefault(_victoryBar);
		
		var _victoryScatter = __webpack_require__(383);
		
		var _victoryScatter2 = _interopRequireDefault(_victoryScatter);
		
		var _victoryGroup = __webpack_require__(389);
		
		var _victoryGroup2 = _interopRequireDefault(_victoryGroup);
		
		var _victoryStack = __webpack_require__(390);
		
		var _victoryStack2 = _interopRequireDefault(_victoryStack);
		
		function _interopRequireDefault(obj) { return obj && obj.__esModule ? obj : { default: obj }; }
		
		exports.VictoryChart = _victoryChart2.default;
		exports.VictoryLine = _victoryLine2.default;
		exports.VictoryAxis = _victoryAxis2.default;
		exports.VictoryArea = _victoryArea2.default;
		exports.VictoryBar = _victoryBar2.default;
		exports.VictoryScatter = _victoryScatter2.default;
		exports.VictoryGroup = _victoryGroup2.default;
		exports.VictoryStack = _victoryStack2.default;

	/***/ },
	/* 174 */
	/***/ function(module, exports, __webpack_require__) {

		"use strict";
		
		Object.defineProperty(exports, "__esModule", {
		  value: true
		});
		
		var _extends = Object.assign || function (target) { for (var i = 1; i < arguments.length; i++) { var source = arguments[i]; for (var key in source) { if (Object.prototype.hasOwnProperty.call(source, key)) { target[key] = source[key]; } } } return target; };
		
		var _createClass = function () { function defineProperties(target, props) { for (var i = 0; i < props.length; i++) { var descriptor = props[i]; descriptor.enumerable = descriptor.enumerable || false; descriptor.configurable = true; if ("value" in descriptor) descriptor.writable = true; Object.defineProperty(target, descriptor.key, descriptor); } } return function (Constructor, protoProps, staticProps) { if (protoProps) defineProperties(Constructor.prototype, protoProps); if (staticProps) defineProperties(Constructor, staticProps); return Constructor; }; }();
		
		var _defaults = __webpack_require__(175);
		
		var _defaults2 = _interopRequireDefault(_defaults);
		
		var _react = __webpack_require__(157);
		
		var _react2 = _interopRequireDefault(_react);
		
		var _victoryCore = __webpack_require__(1);
		
		var _victoryAxis = __webpack_require__(208);
		
		var _victoryAxis2 = _interopRequireDefault(_victoryAxis);
		
		var _helperMethods = __webpack_require__(280);
		
		var _helperMethods2 = _interopRequireDefault(_helperMethods);
		
		var _axis = __webpack_require__(269);
		
		var _axis2 = _interopRequireDefault(_axis);
		
		var _scale = __webpack_require__(257);
		
		var _scale2 = _interopRequireDefault(_scale);
		
		var _wrapper = __webpack_require__(338);
		
		var _wrapper2 = _interopRequireDefault(_wrapper);
		
		function _interopRequireDefault(obj) { return obj && obj.__esModule ? obj : { default: obj }; }
		
		function _classCallCheck(instance, Constructor) { if (!(instance instanceof Constructor)) { throw new TypeError("Cannot call a class as a function"); } }
		
		function _possibleConstructorReturn(self, call) { if (!self) { throw new ReferenceError("this hasn't been initialised - super() hasn't been called"); } return call && (typeof call === "object" || typeof call === "function") ? call : self; }
		
		function _inherits(subClass, superClass) { if (typeof superClass !== "function" && superClass !== null) { throw new TypeError("Super expression must either be null or a function, not " + typeof superClass); } subClass.prototype = Object.create(superClass && superClass.prototype, { constructor: { value: subClass, enumerable: false, writable: true, configurable: true } }); if (superClass) Object.setPrototypeOf ? Object.setPrototypeOf(subClass, superClass) : subClass.__proto__ = superClass; }
		
		var defaultAxes = {
		  independent: _react2.default.createElement(_victoryAxis2.default, null),
		  dependent: _react2.default.createElement(_victoryAxis2.default, { dependentAxis: true })
		};
		
		var VictoryChart = function (_React$Component) {
		  _inherits(VictoryChart, _React$Component);
		
		  function VictoryChart() {
		    _classCallCheck(this, VictoryChart);
		
		    return _possibleConstructorReturn(this, Object.getPrototypeOf(VictoryChart).apply(this, arguments));
		  }
		
		  _createClass(VictoryChart, [{
		    key: "componentWillReceiveProps",
		    value: function componentWillReceiveProps(nextProps) {
		      var setAnimationState = _wrapper2.default.setAnimationState.bind(this);
		      setAnimationState(nextProps);
		    }
		  }, {
		    key: "getStyles",
		    value: function getStyles(props) {
		      var styleProps = props.style && props.style.parent;
		      return {
		        parent: (0, _defaults2.default)({
		          height: "auto",
		          width: "100%"
		        }, styleProps) };
		    }
		  }, {
		    key: "getAxisProps",
		    value: function getAxisProps(child, props, calculatedProps) {
		      var domain = calculatedProps.domain;
		      var scale = calculatedProps.scale;
		
		      var axis = child.type.getAxis(child.props);
		      var axisOffset = _helperMethods2.default.getAxisOffset(props, calculatedProps);
		      var tickValues = _helperMethods2.default.getTicks(calculatedProps, axis, child);
		      var tickFormat = child.props.tickFormat || _helperMethods2.default.getTickFormat(child, axis, calculatedProps);
		      var offsetY = axis === "y" ? undefined : axisOffset.y;
		      var offsetX = axis === "x" ? undefined : axisOffset.x;
		      return {
		        domain: domain[axis],
		        scale: scale[axis],
		        tickValues: tickValues,
		        tickFormat: tickFormat,
		        offsetY: offsetY,
		        offsetX: offsetX,
		        crossAxis: true
		      };
		    }
		  }, {
		    key: "getChildProps",
		    value: function getChildProps(child, props, calculatedProps) {
		      var type = child.type && child.type.role;
		      if (type === "axis") {
		        return this.getAxisProps(child, props, calculatedProps);
		      }
		      return {
		        domain: calculatedProps.domain,
		        scale: calculatedProps.scale,
		        categories: calculatedProps.categories
		      };
		    }
		  }, {
		    key: "getCalculatedProps",
		    value: function getCalculatedProps(props, childComponents) {
		      var horizontal = childComponents.some(function (component) {
		        return component.props.horizontal;
		      });
		      var axisComponents = {
		        x: _axis2.default.getAxisComponent(childComponents, "x"),
		        y: _axis2.default.getAxisComponent(childComponents, "y")
		      };
		      var domain = {
		        x: _helperMethods2.default.getDomain(props, childComponents, "x"),
		        y: _helperMethods2.default.getDomain(props, childComponents, "y")
		      };
		      var range = {
		        x: _victoryCore.Helpers.getRange(props, "x"),
		        y: _victoryCore.Helpers.getRange(props, "y")
		      };
		      var baseScale = {
		        x: _scale2.default.getScaleFromProps(props, "x") || axisComponents.x && axisComponents.x.type.getScale(axisComponents.x.props) || _scale2.default.getDefaultScale(),
		        y: _scale2.default.getScaleFromProps(props, "y") || axisComponents.y && axisComponents.y.type.getScale(axisComponents.y.props) || _scale2.default.getDefaultScale()
		      };
		      var scale = {
		        x: baseScale.x.domain(domain.x).range(range.x),
		        y: baseScale.y.domain(domain.y).range(range.y)
		      };
		      // TODO: check
		      var categories = {
		        x: _wrapper2.default.getCategories(childComponents, props, "x"),
		        y: _wrapper2.default.getCategories(childComponents, props, "y")
		      };
		      var stringMap = {
		        x: _helperMethods2.default.createStringMap(childComponents, "x"),
		        y: _helperMethods2.default.createStringMap(childComponents, "y")
		      };
		      return { axisComponents: axisComponents, categories: categories, domain: domain, horizontal: horizontal, scale: scale, stringMap: stringMap };
		    }
		  }, {
		    key: "getNewChildren",
		    value: function getNewChildren(props, childComponents, baseStyle) {
		      var _this2 = this;
		
		      var calculatedProps = this.getCalculatedProps(props, childComponents);
		      var getAnimationProps = _wrapper2.default.getAnimationProps.bind(this);
		      return childComponents.map(function (child, index) {
		        var style = (0, _defaults2.default)({}, child.props.style, { parent: baseStyle.parent });
		        var childProps = _this2.getChildProps(child, props, calculatedProps);
		        var newProps = (0, _defaults2.default)({
		          animate: getAnimationProps(props, child, index),
		          height: props.height,
		          width: props.width,
		          padding: _victoryCore.Helpers.getPadding(props),
		          ref: index,
		          key: index,
		          standalone: false,
		          style: style
		        }, childProps);
		        return _react2.default.cloneElement(child, newProps);
		      });
		    }
		  }, {
		    key: "render",
		    value: function render() {
		      var props = this.state && this.state.nodesWillExit ? this.state.oldProps : this.props;
		      var style = this.getStyles(props);
		      var childComponents = _helperMethods2.default.getChildComponents(props, defaultAxes);
		      var group = _react2.default.createElement(
		        "g",
		        { style: style.parent },
		        this.getNewChildren(props, childComponents, style)
		      );
		      return this.props.standalone ? _react2.default.createElement(
		        "svg",
		        _extends({
		          style: style.parent,
		          viewBox: "0 0 " + props.width + " " + props.height
		        }, props.events),
		        group
		      ) : group;
		    }
		  }]);
		
		  return VictoryChart;
		}(_react2.default.Component);
		
		VictoryChart.propTypes = {
		  /**
		   * The animate prop specifies props for VictoryAnimation to use. If this prop is
		   * given, all children defined in chart will pass the options specified in this prop to
		   * VictoryTransition and VictoryAnimation. Child animation props will be added for any
		   * values not provided via the animation prop for VictoryChart. The animate prop should
		   * also be used to specify enter and exit transition configurations with the `onExit`
		   * and `onEnter` namespaces respectively. VictoryChart will coodrinate transitions between all
		   * of its child components so that animation stays in sync
		   * @examples {duration: 500, onEnd: () => {}, onEnter: {duration: 500, before: () => ({y: 0})})}
		   */
		  animate: _react.PropTypes.object,
		  /**
		   * VictoryChart is a wrapper component that controls the layout and animation behaviors of its
		   * children. VictoryChart works with VictoryArea, VictoryAxis, VictoryBar, VictoryLine, and
		   * VictoryScatter. Wrapper components like VictoryGroup and VictoryStack may also be
		   * wrapped with VictoryChart. If not children are provided, VictoryChart will render a
		   * set of empty axes.
		   */
		  children: _react2.default.PropTypes.oneOfType([_react2.default.PropTypes.arrayOf(_react2.default.PropTypes.node), _react2.default.PropTypes.node]),
		  /**
		   * The domain prop describes the range of values your chart will include. This prop can be
		   * given as a array of the minimum and maximum expected values for your chart,
		   * or as an object that specifies separate arrays for x and y.
		   * If this prop is not provided, a domain will be calculated from data, or other
		   * available information.
		   * @examples: [-1, 1], {x: [0, 100], y: [0, 1]}
		   */
		  domain: _react.PropTypes.oneOfType([_victoryCore.PropTypes.domain, _react.PropTypes.shape({
		    x: _victoryCore.PropTypes.domain,
		    y: _victoryCore.PropTypes.domain
		  })]),
		  /**
		   * The domainPadding prop specifies a number of pixels of padding to add to the
		   * beginning and end of a domain. This prop is useful for explicitly spacing ticks farther
		   * from the origin to prevent crowding. This prop should be given as an object with
		   * numbers specified for x and y.
		   */
		  domainPadding: _react.PropTypes.oneOfType([_react.PropTypes.shape({
		    x: _victoryCore.PropTypes.nonNegative,
		    y: _victoryCore.PropTypes.nonNegative
		  }), _victoryCore.PropTypes.nonNegative]),
		  /**
		   * The events prop attaches arbitrary event handlers to the top level chart svg.
		   * To attach events to individual pieces of data, use the events prop in child componenets.
		   * Event handlers on VictoryCharts are called with their corresponding events.
		   * @examples {(evt) => alert(`x: ${evt.clientX}, y: ${evt.clientY}`)}
		   */
		  events: _react.PropTypes.object,
		  /**
		   * The height props specifies the height the svg viewBox of the chart container.
		   * This value should be given as a number of pixels
		   */
		  height: _victoryCore.PropTypes.nonNegative,
		  /**
		   * The padding props specifies the amount of padding in number of pixels between
		   * the edge of the chart and any rendered child components. This prop can be given
		   * as a number or as an object with padding specified for top, bottom, left
		   * and right.
		   */
		  padding: _react.PropTypes.oneOfType([_react.PropTypes.number, _react.PropTypes.shape({
		    top: _react.PropTypes.number,
		    bottom: _react.PropTypes.number,
		    left: _react.PropTypes.number,
		    right: _react.PropTypes.number
		  })]),
		  /**
		   * The scale prop determines which scales your chart should use. This prop can be
		   * given as a string or a function, or as an object that specifies separate scales for x and y.
		   * Supported string scales are "linear", "time", "log" and "sqrt"
		   * @examples d3.time.scale(), {x: "linear", y: "log" }
		   */
		  scale: _react.PropTypes.oneOfType([_victoryCore.PropTypes.scale, _react.PropTypes.shape({
		    x: _victoryCore.PropTypes.scale,
		    y: _victoryCore.PropTypes.scale
		  })]),
		  /**
		   * The standalone prop determines whether the component will render a standalone svg
		   * or a <g> tag that will be included in an external svg. Set standalone to false to
		   * compose VictoryChart with other components within an enclosing <svg> tag. Victory
		   * Component are responsive by default. If you need to create a fixed-size chart, set
		   * standalone to false, and wrap VictoryChart in a custom <svg>
		   */
		  standalone: _react.PropTypes.bool,
		  /**
		   * The style prop specifies styles for your chart. Any valid inline style properties
		   * will be applied. Height, width, and padding should be specified via the height,
		   * width, and padding props, as they are used to calculate the alignment of
		   * components within chart.
		   * @examples {border: "1px solid #ccc", margin: "2%", maxWidth: "40%"}
		   */
		  style: _react.PropTypes.object,
		  /**
		   * The width props specifies the width of the svg viewBox of the chart container
		   * This value should be given as a number of pixels
		   */
		  width: _victoryCore.PropTypes.nonNegative
		};
		VictoryChart.defaultProps = {
		  events: {},
		  height: 300,
		  width: 450,
		  padding: 50,
		  standalone: true
		};
		exports.default = VictoryChart;

	/***/ },
	/* 175 */
	/***/ function(module, exports, __webpack_require__) {

		var apply = __webpack_require__(176),
		    assignInDefaults = __webpack_require__(177),
		    assignInWith = __webpack_require__(179),
		    rest = __webpack_require__(191);
		
		/**
		 * Assigns own and inherited enumerable properties of source objects to the
		 * destination object for all destination properties that resolve to `undefined`.
		 * Source objects are applied from left to right. Once a property is set,
		 * additional values of the same property are ignored.
		 *
		 * **Note:** This method mutates `object`.
		 *
		 * @static
		 * @memberOf _
		 * @category Object
		 * @param {Object} object The destination object.
		 * @param {...Object} [sources] The source objects.
		 * @returns {Object} Returns `object`.
		 * @example
		 *
		 * _.defaults({ 'user': 'barney' }, { 'age': 36 }, { 'user': 'fred' });
		 * // => { 'user': 'barney', 'age': 36 }
		 */
		var defaults = rest(function(args) {
		  args.push(undefined, assignInDefaults);
		  return apply(assignInWith, undefined, args);
		});
		
		module.exports = defaults;


	/***/ },
	/* 176 */
	/***/ function(module, exports) {

		/**
		 * A faster alternative to `Function#apply`, this function invokes `func`
		 * with the `this` binding of `thisArg` and the arguments of `args`.
		 *
		 * @private
		 * @param {Function} func The function to invoke.
		 * @param {*} thisArg The `this` binding of `func`.
		 * @param {...*} args The arguments to invoke `func` with.
		 * @returns {*} Returns the result of `func`.
		 */
		function apply(func, thisArg, args) {
		  var length = args.length;
		  switch (length) {
		    case 0: return func.call(thisArg);
		    case 1: return func.call(thisArg, args[0]);
		    case 2: return func.call(thisArg, args[0], args[1]);
		    case 3: return func.call(thisArg, args[0], args[1], args[2]);
		  }
		  return func.apply(thisArg, args);
		}
		
		module.exports = apply;


	/***/ },
	/* 177 */
	/***/ function(module, exports, __webpack_require__) {

		var eq = __webpack_require__(178);
		
		/** Used for built-in method references. */
		var objectProto = Object.prototype;
		
		/** Used to check objects for own properties. */
		var hasOwnProperty = objectProto.hasOwnProperty;
		
		/**
		 * Used by `_.defaults` to customize its `_.assignIn` use.
		 *
		 * @private
		 * @param {*} objValue The destination value.
		 * @param {*} srcValue The source value.
		 * @param {string} key The key of the property to assign.
		 * @param {Object} object The parent object of `objValue`.
		 * @returns {*} Returns the value to assign.
		 */
		function assignInDefaults(objValue, srcValue, key, object) {
		  if (objValue === undefined ||
		      (eq(objValue, objectProto[key]) && !hasOwnProperty.call(object, key))) {
		    return srcValue;
		  }
		  return objValue;
		}
		
		module.exports = assignInDefaults;


	/***/ },
	/* 178 */
	/***/ function(module, exports) {

		/**
		 * Performs a [`SameValueZero`](http://ecma-international.org/ecma-262/6.0/#sec-samevaluezero)
		 * comparison between two values to determine if they are equivalent.
		 *
		 * @static
		 * @memberOf _
		 * @category Lang
		 * @param {*} value The value to compare.
		 * @param {*} other The other value to compare.
		 * @returns {boolean} Returns `true` if the values are equivalent, else `false`.
		 * @example
		 *
		 * var object = { 'user': 'fred' };
		 * var other = { 'user': 'fred' };
		 *
		 * _.eq(object, object);
		 * // => true
		 *
		 * _.eq(object, other);
		 * // => false
		 *
		 * _.eq('a', 'a');
		 * // => true
		 *
		 * _.eq('a', Object('a'));
		 * // => false
		 *
		 * _.eq(NaN, NaN);
		 * // => true
		 */
		function eq(value, other) {
		  return value === other || (value !== value && other !== other);
		}
		
		module.exports = eq;


	/***/ },
	/* 179 */
	/***/ function(module, exports, __webpack_require__) {

		var copyObjectWith = __webpack_require__(180),
		    createAssigner = __webpack_require__(182),
		    keysIn = __webpack_require__(194);
		
		/**
		 * This method is like `_.assignIn` except that it accepts `customizer` which
		 * is invoked to produce the assigned values. If `customizer` returns `undefined`
		 * assignment is handled by the method instead. The `customizer` is invoked
		 * with five arguments: (objValue, srcValue, key, object, source).
		 *
		 * **Note:** This method mutates `object`.
		 *
		 * @static
		 * @memberOf _
		 * @alias extendWith
		 * @category Object
		 * @param {Object} object The destination object.
		 * @param {...Object} sources The source objects.
		 * @param {Function} [customizer] The function to customize assigned values.
		 * @returns {Object} Returns `object`.
		 * @example
		 *
		 * function customizer(objValue, srcValue) {
		 *   return _.isUndefined(objValue) ? srcValue : objValue;
		 * }
		 *
		 * var defaults = _.partialRight(_.assignInWith, customizer);
		 *
		 * defaults({ 'a': 1 }, { 'b': 2 }, { 'a': 3 });
		 * // => { 'a': 1, 'b': 2 }
		 */
		var assignInWith = createAssigner(function(object, source, srcIndex, customizer) {
		  copyObjectWith(source, keysIn(source), object, customizer);
		});
		
		module.exports = assignInWith;


	/***/ },
	/* 180 */
	/***/ function(module, exports, __webpack_require__) {

		var assignValue = __webpack_require__(181);
		
		/**
		 * This function is like `copyObject` except that it accepts a function to
		 * customize copied values.
		 *
		 * @private
		 * @param {Object} source The object to copy properties from.
		 * @param {Array} props The property names to copy.
		 * @param {Object} [object={}] The object to copy properties to.
		 * @param {Function} [customizer] The function to customize copied values.
		 * @returns {Object} Returns `object`.
		 */
		function copyObjectWith(source, props, object, customizer) {
		  object || (object = {});
		
		  var index = -1,
		      length = props.length;
		
		  while (++index < length) {
		    var key = props[index];
		
		    var newValue = customizer
		      ? customizer(object[key], source[key], key, object, source)
		      : source[key];
		
		    assignValue(object, key, newValue);
		  }
		  return object;
		}
		
		module.exports = copyObjectWith;


	/***/ },
	/* 181 */
	/***/ function(module, exports, __webpack_require__) {

		var eq = __webpack_require__(178);
		
		/** Used for built-in method references. */
		var objectProto = Object.prototype;
		
		/** Used to check objects for own properties. */
		var hasOwnProperty = objectProto.hasOwnProperty;
		
		/**
		 * Assigns `value` to `key` of `object` if the existing value is not equivalent
		 * using [`SameValueZero`](http://ecma-international.org/ecma-262/6.0/#sec-samevaluezero)
		 * for equality comparisons.
		 *
		 * @private
		 * @param {Object} object The object to modify.
		 * @param {string} key The key of the property to assign.
		 * @param {*} value The value to assign.
		 */
		function assignValue(object, key, value) {
		  var objValue = object[key];
		  if (!(hasOwnProperty.call(object, key) && eq(objValue, value)) ||
		      (value === undefined && !(key in object))) {
		    object[key] = value;
		  }
		}
		
		module.exports = assignValue;


	/***/ },
	/* 182 */
	/***/ function(module, exports, __webpack_require__) {

		var isIterateeCall = __webpack_require__(183),
		    rest = __webpack_require__(191);
		
		/**
		 * Creates a function like `_.assign`.
		 *
		 * @private
		 * @param {Function} assigner The function to assign values.
		 * @returns {Function} Returns the new assigner function.
		 */
		function createAssigner(assigner) {
		  return rest(function(object, sources) {
		    var index = -1,
		        length = sources.length,
		        customizer = length > 1 ? sources[length - 1] : undefined,
		        guard = length > 2 ? sources[2] : undefined;
		
		    customizer = typeof customizer == 'function'
		      ? (length--, customizer)
		      : undefined;
		
		    if (guard && isIterateeCall(sources[0], sources[1], guard)) {
		      customizer = length < 3 ? undefined : customizer;
		      length = 1;
		    }
		    object = Object(object);
		    while (++index < length) {
		      var source = sources[index];
		      if (source) {
		        assigner(object, source, index, customizer);
		      }
		    }
		    return object;
		  });
		}
		
		module.exports = createAssigner;


	/***/ },
	/* 183 */
	/***/ function(module, exports, __webpack_require__) {

		var eq = __webpack_require__(178),
		    isArrayLike = __webpack_require__(184),
		    isIndex = __webpack_require__(190),
		    isObject = __webpack_require__(188);
		
		/**
		 * Checks if the given arguments are from an iteratee call.
		 *
		 * @private
		 * @param {*} value The potential iteratee value argument.
		 * @param {*} index The potential iteratee index or key argument.
		 * @param {*} object The potential iteratee object argument.
		 * @returns {boolean} Returns `true` if the arguments are from an iteratee call, else `false`.
		 */
		function isIterateeCall(value, index, object) {
		  if (!isObject(object)) {
		    return false;
		  }
		  var type = typeof index;
		  if (type == 'number'
		      ? (isArrayLike(object) && isIndex(index, object.length))
		      : (type == 'string' && index in object)) {
		    return eq(object[index], value);
		  }
		  return false;
		}
		
		module.exports = isIterateeCall;


	/***/ },
	/* 184 */
	/***/ function(module, exports, __webpack_require__) {

		var getLength = __webpack_require__(185),
		    isFunction = __webpack_require__(187),
		    isLength = __webpack_require__(189);
		
		/**
		 * Checks if `value` is array-like. A value is considered array-like if it's
		 * not a function and has a `value.length` that's an integer greater than or
		 * equal to `0` and less than or equal to `Number.MAX_SAFE_INTEGER`.
		 *
		 * @static
		 * @memberOf _
		 * @category Lang
		 * @param {*} value The value to check.
		 * @returns {boolean} Returns `true` if `value` is array-like, else `false`.
		 * @example
		 *
		 * _.isArrayLike([1, 2, 3]);
		 * // => true
		 *
		 * _.isArrayLike(document.body.children);
		 * // => true
		 *
		 * _.isArrayLike('abc');
		 * // => true
		 *
		 * _.isArrayLike(_.noop);
		 * // => false
		 */
		function isArrayLike(value) {
		  return value != null && isLength(getLength(value)) && !isFunction(value);
		}
		
		module.exports = isArrayLike;


	/***/ },
	/* 185 */
	/***/ function(module, exports, __webpack_require__) {

		var baseProperty = __webpack_require__(186);
		
		/**
		 * Gets the "length" property value of `object`.
		 *
		 * **Note:** This function is used to avoid a [JIT bug](https://bugs.webkit.org/show_bug.cgi?id=142792)
		 * that affects Safari on at least iOS 8.1-8.3 ARM64.
		 *
		 * @private
		 * @param {Object} object The object to query.
		 * @returns {*} Returns the "length" value.
		 */
		var getLength = baseProperty('length');
		
		module.exports = getLength;


	/***/ },
	/* 186 */
	/***/ function(module, exports) {

		/**
		 * The base implementation of `_.property` without support for deep paths.
		 *
		 * @private
		 * @param {string} key The key of the property to get.
		 * @returns {Function} Returns the new function.
		 */
		function baseProperty(key) {
		  return function(object) {
		    return object == null ? undefined : object[key];
		  };
		}
		
		module.exports = baseProperty;


	/***/ },
	/* 187 */
	/***/ function(module, exports, __webpack_require__) {

		var isObject = __webpack_require__(188);
		
		/** `Object#toString` result references. */
		var funcTag = '[object Function]',
		    genTag = '[object GeneratorFunction]';
		
		/** Used for built-in method references. */
		var objectProto = Object.prototype;
		
		/**
		 * Used to resolve the [`toStringTag`](http://ecma-international.org/ecma-262/6.0/#sec-object.prototype.tostring)
		 * of values.
		 */
		var objectToString = objectProto.toString;
		
		/**
		 * Checks if `value` is classified as a `Function` object.
		 *
		 * @static
		 * @memberOf _
		 * @category Lang
		 * @param {*} value The value to check.
		 * @returns {boolean} Returns `true` if `value` is correctly classified, else `false`.
		 * @example
		 *
		 * _.isFunction(_);
		 * // => true
		 *
		 * _.isFunction(/abc/);
		 * // => false
		 */
		function isFunction(value) {
		  // The use of `Object#toString` avoids issues with the `typeof` operator
		  // in Safari 8 which returns 'object' for typed array and weak map constructors,
		  // and PhantomJS 1.9 which returns 'function' for `NodeList` instances.
		  var tag = isObject(value) ? objectToString.call(value) : '';
		  return tag == funcTag || tag == genTag;
		}
		
		module.exports = isFunction;


	/***/ },
	/* 188 */
	/***/ function(module, exports) {

		/**
		 * Checks if `value` is the [language type](https://es5.github.io/#x8) of `Object`.
		 * (e.g. arrays, functions, objects, regexes, `new Number(0)`, and `new String('')`)
		 *
		 * @static
		 * @memberOf _
		 * @category Lang
		 * @param {*} value The value to check.
		 * @returns {boolean} Returns `true` if `value` is an object, else `false`.
		 * @example
		 *
		 * _.isObject({});
		 * // => true
		 *
		 * _.isObject([1, 2, 3]);
		 * // => true
		 *
		 * _.isObject(_.noop);
		 * // => true
		 *
		 * _.isObject(null);
		 * // => false
		 */
		function isObject(value) {
		  var type = typeof value;
		  return !!value && (type == 'object' || type == 'function');
		}
		
		module.exports = isObject;


	/***/ },
	/* 189 */
	/***/ function(module, exports) {

		/** Used as references for various `Number` constants. */
		var MAX_SAFE_INTEGER = 9007199254740991;
		
		/**
		 * Checks if `value` is a valid array-like length.
		 *
		 * **Note:** This function is loosely based on [`ToLength`](http://ecma-international.org/ecma-262/6.0/#sec-tolength).
		 *
		 * @static
		 * @memberOf _
		 * @category Lang
		 * @param {*} value The value to check.
		 * @returns {boolean} Returns `true` if `value` is a valid length, else `false`.
		 * @example
		 *
		 * _.isLength(3);
		 * // => true
		 *
		 * _.isLength(Number.MIN_VALUE);
		 * // => false
		 *
		 * _.isLength(Infinity);
		 * // => false
		 *
		 * _.isLength('3');
		 * // => false
		 */
		function isLength(value) {
		  return typeof value == 'number' &&
		    value > -1 && value % 1 == 0 && value <= MAX_SAFE_INTEGER;
		}
		
		module.exports = isLength;


	/***/ },
	/* 190 */
	/***/ function(module, exports) {

		/** Used as references for various `Number` constants. */
		var MAX_SAFE_INTEGER = 9007199254740991;
		
		/** Used to detect unsigned integer values. */
		var reIsUint = /^(?:0|[1-9]\d*)$/;
		
		/**
		 * Checks if `value` is a valid array-like index.
		 *
		 * @private
		 * @param {*} value The value to check.
		 * @param {number} [length=MAX_SAFE_INTEGER] The upper bounds of a valid index.
		 * @returns {boolean} Returns `true` if `value` is a valid index, else `false`.
		 */
		function isIndex(value, length) {
		  value = (typeof value == 'number' || reIsUint.test(value)) ? +value : -1;
		  length = length == null ? MAX_SAFE_INTEGER : length;
		  return value > -1 && value % 1 == 0 && value < length;
		}
		
		module.exports = isIndex;


	/***/ },
	/* 191 */
	/***/ function(module, exports, __webpack_require__) {

		var apply = __webpack_require__(176),
		    toInteger = __webpack_require__(192);
		
		/** Used as the `TypeError` message for "Functions" methods. */
		var FUNC_ERROR_TEXT = 'Expected a function';
		
		/* Built-in method references for those with the same name as other `lodash` methods. */
		var nativeMax = Math.max;
		
		/**
		 * Creates a function that invokes `func` with the `this` binding of the
		 * created function and arguments from `start` and beyond provided as an array.
		 *
		 * **Note:** This method is based on the [rest parameter](https://mdn.io/rest_parameters).
		 *
		 * @static
		 * @memberOf _
		 * @category Function
		 * @param {Function} func The function to apply a rest parameter to.
		 * @param {number} [start=func.length-1] The start position of the rest parameter.
		 * @returns {Function} Returns the new function.
		 * @example
		 *
		 * var say = _.rest(function(what, names) {
		 *   return what + ' ' + _.initial(names).join(', ') +
		 *     (_.size(names) > 1 ? ', & ' : '') + _.last(names);
		 * });
		 *
		 * say('hello', 'fred', 'barney', 'pebbles');
		 * // => 'hello fred, barney, & pebbles'
		 */
		function rest(func, start) {
		  if (typeof func != 'function') {
		    throw new TypeError(FUNC_ERROR_TEXT);
		  }
		  start = nativeMax(start === undefined ? (func.length - 1) : toInteger(start), 0);
		  return function() {
		    var args = arguments,
		        index = -1,
		        length = nativeMax(args.length - start, 0),
		        array = Array(length);
		
		    while (++index < length) {
		      array[index] = args[start + index];
		    }
		    switch (start) {
		      case 0: return func.call(this, array);
		      case 1: return func.call(this, args[0], array);
		      case 2: return func.call(this, args[0], args[1], array);
		    }
		    var otherArgs = Array(start + 1);
		    index = -1;
		    while (++index < start) {
		      otherArgs[index] = args[index];
		    }
		    otherArgs[start] = array;
		    return apply(func, this, otherArgs);
		  };
		}
		
		module.exports = rest;


	/***/ },
	/* 192 */
	/***/ function(module, exports, __webpack_require__) {

		var toNumber = __webpack_require__(193);
		
		/** Used as references for various `Number` constants. */
		var INFINITY = 1 / 0,
		    MAX_INTEGER = 1.7976931348623157e+308;
		
		/**
		 * Converts `value` to an integer.
		 *
		 * **Note:** This function is loosely based on [`ToInteger`](http://www.ecma-international.org/ecma-262/6.0/#sec-tointeger).
		 *
		 * @static
		 * @memberOf _
		 * @category Lang
		 * @param {*} value The value to convert.
		 * @returns {number} Returns the converted integer.
		 * @example
		 *
		 * _.toInteger(3);
		 * // => 3
		 *
		 * _.toInteger(Number.MIN_VALUE);
		 * // => 0
		 *
		 * _.toInteger(Infinity);
		 * // => 1.7976931348623157e+308
		 *
		 * _.toInteger('3');
		 * // => 3
		 */
		function toInteger(value) {
		  if (!value) {
		    return value === 0 ? value : 0;
		  }
		  value = toNumber(value);
		  if (value === INFINITY || value === -INFINITY) {
		    var sign = (value < 0 ? -1 : 1);
		    return sign * MAX_INTEGER;
		  }
		  var remainder = value % 1;
		  return value === value ? (remainder ? value - remainder : value) : 0;
		}
		
		module.exports = toInteger;


	/***/ },
	/* 193 */
	/***/ function(module, exports, __webpack_require__) {

		var isFunction = __webpack_require__(187),
		    isObject = __webpack_require__(188);
		
		/** Used as references for various `Number` constants. */
		var NAN = 0 / 0;
		
		/** Used to match leading and trailing whitespace. */
		var reTrim = /^\s+|\s+$/g;
		
		/** Used to detect bad signed hexadecimal string values. */
		var reIsBadHex = /^[-+]0x[0-9a-f]+$/i;
		
		/** Used to detect binary string values. */
		var reIsBinary = /^0b[01]+$/i;
		
		/** Used to detect octal string values. */
		var reIsOctal = /^0o[0-7]+$/i;
		
		/** Built-in method references without a dependency on `root`. */
		var freeParseInt = parseInt;
		
		/**
		 * Converts `value` to a number.
		 *
		 * @static
		 * @memberOf _
		 * @category Lang
		 * @param {*} value The value to process.
		 * @returns {number} Returns the number.
		 * @example
		 *
		 * _.toNumber(3);
		 * // => 3
		 *
		 * _.toNumber(Number.MIN_VALUE);
		 * // => 5e-324
		 *
		 * _.toNumber(Infinity);
		 * // => Infinity
		 *
		 * _.toNumber('3');
		 * // => 3
		 */
		function toNumber(value) {
		  if (isObject(value)) {
		    var other = isFunction(value.valueOf) ? value.valueOf() : value;
		    value = isObject(other) ? (other + '') : other;
		  }
		  if (typeof value != 'string') {
		    return value === 0 ? value : +value;
		  }
		  value = value.replace(reTrim, '');
		  var isBinary = reIsBinary.test(value);
		  return (isBinary || reIsOctal.test(value))
		    ? freeParseInt(value.slice(2), isBinary ? 2 : 8)
		    : (reIsBadHex.test(value) ? NAN : +value);
		}
		
		module.exports = toNumber;


	/***/ },
	/* 194 */
	/***/ function(module, exports, __webpack_require__) {

		var baseKeysIn = __webpack_require__(195),
		    indexKeys = __webpack_require__(200),
		    isIndex = __webpack_require__(190),
		    isPrototype = __webpack_require__(207);
		
		/** Used for built-in method references. */
		var objectProto = Object.prototype;
		
		/** Used to check objects for own properties. */
		var hasOwnProperty = objectProto.hasOwnProperty;
		
		/**
		 * Creates an array of the own and inherited enumerable property names of `object`.
		 *
		 * **Note:** Non-object values are coerced to objects.
		 *
		 * @static
		 * @memberOf _
		 * @category Object
		 * @param {Object} object The object to query.
		 * @returns {Array} Returns the array of property names.
		 * @example
		 *
		 * function Foo() {
		 *   this.a = 1;
		 *   this.b = 2;
		 * }
		 *
		 * Foo.prototype.c = 3;
		 *
		 * _.keysIn(new Foo);
		 * // => ['a', 'b', 'c'] (iteration order is not guaranteed)
		 */
		function keysIn(object) {
		  var index = -1,
		      isProto = isPrototype(object),
		      props = baseKeysIn(object),
		      propsLength = props.length,
		      indexes = indexKeys(object),
		      skipIndexes = !!indexes,
		      result = indexes || [],
		      length = result.length;
		
		  while (++index < propsLength) {
		    var key = props[index];
		    if (!(skipIndexes && (key == 'length' || isIndex(key, length))) &&
		        !(key == 'constructor' && (isProto || !hasOwnProperty.call(object, key)))) {
		      result.push(key);
		    }
		  }
		  return result;
		}
		
		module.exports = keysIn;


	/***/ },
	/* 195 */
	/***/ function(module, exports, __webpack_require__) {

		var Reflect = __webpack_require__(196),
		    iteratorToArray = __webpack_require__(199);
		
		/** Used for built-in method references. */
		var objectProto = Object.prototype;
		
		/** Built-in value references. */
		var enumerate = Reflect ? Reflect.enumerate : undefined,
		    propertyIsEnumerable = objectProto.propertyIsEnumerable;
		
		/**
		 * The base implementation of `_.keysIn` which doesn't skip the constructor
		 * property of prototypes or treat sparse arrays as dense.
		 *
		 * @private
		 * @param {Object} object The object to query.
		 * @returns {Array} Returns the array of property names.
		 */
		function baseKeysIn(object) {
		  object = object == null ? object : Object(object);
		
		  var result = [];
		  for (var key in object) {
		    result.push(key);
		  }
		  return result;
		}
		
		// Fallback for IE < 9 with es6-shim.
		if (enumerate && !propertyIsEnumerable.call({ 'valueOf': 1 }, 'valueOf')) {
		  baseKeysIn = function(object) {
		    return iteratorToArray(enumerate(object));
		  };
		}
		
		module.exports = baseKeysIn;


	/***/ },
	/* 196 */
	/***/ function(module, exports, __webpack_require__) {

		var root = __webpack_require__(197);
		
		/** Built-in value references. */
		var Reflect = root.Reflect;
		
		module.exports = Reflect;


	/***/ },
	/* 197 */
	/***/ function(module, exports, __webpack_require__) {

		/* WEBPACK VAR INJECTION */(function(module, global) {var checkGlobal = __webpack_require__(198);
		
		/** Used to determine if values are of the language type `Object`. */
		var objectTypes = {
		  'function': true,
		  'object': true
		};
		
		/** Detect free variable `exports`. */
		var freeExports = (objectTypes[typeof exports] && exports && !exports.nodeType)
		  ? exports
		  : undefined;
		
		/** Detect free variable `module`. */
		var freeModule = (objectTypes[typeof module] && module && !module.nodeType)
		  ? module
		  : undefined;
		
		/** Detect free variable `global` from Node.js. */
		var freeGlobal = checkGlobal(freeExports && freeModule && typeof global == 'object' && global);
		
		/** Detect free variable `self`. */
		var freeSelf = checkGlobal(objectTypes[typeof self] && self);
		
		/** Detect free variable `window`. */
		var freeWindow = checkGlobal(objectTypes[typeof window] && window);
		
		/** Detect `this` as the global object. */
		var thisGlobal = checkGlobal(objectTypes[typeof this] && this);
		
		/**
		 * Used as a reference to the global object.
		 *
		 * The `this` value is used if it's the global object to avoid Greasemonkey's
		 * restricted `window` object, otherwise the `window` object is used.
		 */
		var root = freeGlobal ||
		  ((freeWindow !== (thisGlobal && thisGlobal.window)) && freeWindow) ||
		    freeSelf || thisGlobal || Function('return this')();
		
		module.exports = root;
		
		/* WEBPACK VAR INJECTION */}.call(exports, __webpack_require__(27)(module), (function() { return this; }())))

	/***/ },
	/* 198 */
	/***/ function(module, exports) {

		/**
		 * Checks if `value` is a global object.
		 *
		 * @private
		 * @param {*} value The value to check.
		 * @returns {null|Object} Returns `value` if it's a global object, else `null`.
		 */
		function checkGlobal(value) {
		  return (value && value.Object === Object) ? value : null;
		}
		
		module.exports = checkGlobal;


	/***/ },
	/* 199 */
	/***/ function(module, exports) {

		/**
		 * Converts `iterator` to an array.
		 *
		 * @private
		 * @param {Object} iterator The iterator to convert.
		 * @returns {Array} Returns the converted array.
		 */
		function iteratorToArray(iterator) {
		  var data,
		      result = [];
		
		  while (!(data = iterator.next()).done) {
		    result.push(data.value);
		  }
		  return result;
		}
		
		module.exports = iteratorToArray;


	/***/ },
	/* 200 */
	/***/ function(module, exports, __webpack_require__) {

		var baseTimes = __webpack_require__(201),
		    isArguments = __webpack_require__(202),
		    isArray = __webpack_require__(205),
		    isLength = __webpack_require__(189),
		    isString = __webpack_require__(206);
		
		/**
		 * Creates an array of index keys for `object` values of arrays,
		 * `arguments` objects, and strings, otherwise `null` is returned.
		 *
		 * @private
		 * @param {Object} object The object to query.
		 * @returns {Array|null} Returns index keys, else `null`.
		 */
		function indexKeys(object) {
		  var length = object ? object.length : undefined;
		  if (isLength(length) &&
		      (isArray(object) || isString(object) || isArguments(object))) {
		    return baseTimes(length, String);
		  }
		  return null;
		}
		
		module.exports = indexKeys;


	/***/ },
	/* 201 */
	/***/ function(module, exports) {

		/**
		 * The base implementation of `_.times` without support for iteratee shorthands
		 * or max array length checks.
		 *
		 * @private
		 * @param {number} n The number of times to invoke `iteratee`.
		 * @param {Function} iteratee The function invoked per iteration.
		 * @returns {Array} Returns the array of results.
		 */
		function baseTimes(n, iteratee) {
		  var index = -1,
		      result = Array(n);
		
		  while (++index < n) {
		    result[index] = iteratee(index);
		  }
		  return result;
		}
		
		module.exports = baseTimes;


	/***/ },
	/* 202 */
	/***/ function(module, exports, __webpack_require__) {

		var isArrayLikeObject = __webpack_require__(203);
		
		/** `Object#toString` result references. */
		var argsTag = '[object Arguments]';
		
		/** Used for built-in method references. */
		var objectProto = Object.prototype;
		
		/** Used to check objects for own properties. */
		var hasOwnProperty = objectProto.hasOwnProperty;
		
		/**
		 * Used to resolve the [`toStringTag`](http://ecma-international.org/ecma-262/6.0/#sec-object.prototype.tostring)
		 * of values.
		 */
		var objectToString = objectProto.toString;
		
		/** Built-in value references. */
		var propertyIsEnumerable = objectProto.propertyIsEnumerable;
		
		/**
		 * Checks if `value` is likely an `arguments` object.
		 *
		 * @static
		 * @memberOf _
		 * @category Lang
		 * @param {*} value The value to check.
		 * @returns {boolean} Returns `true` if `value` is correctly classified, else `false`.
		 * @example
		 *
		 * _.isArguments(function() { return arguments; }());
		 * // => true
		 *
		 * _.isArguments([1, 2, 3]);
		 * // => false
		 */
		function isArguments(value) {
		  // Safari 8.1 incorrectly makes `arguments.callee` enumerable in strict mode.
		  return isArrayLikeObject(value) && hasOwnProperty.call(value, 'callee') &&
		    (!propertyIsEnumerable.call(value, 'callee') || objectToString.call(value) == argsTag);
		}
		
		module.exports = isArguments;


	/***/ },
	/* 203 */
	/***/ function(module, exports, __webpack_require__) {

		var isArrayLike = __webpack_require__(184),
		    isObjectLike = __webpack_require__(204);
		
		/**
		 * This method is like `_.isArrayLike` except that it also checks if `value`
		 * is an object.
		 *
		 * @static
		 * @memberOf _
		 * @category Lang
		 * @param {*} value The value to check.
		 * @returns {boolean} Returns `true` if `value` is an array-like object, else `false`.
		 * @example
		 *
		 * _.isArrayLikeObject([1, 2, 3]);
		 * // => true
		 *
		 * _.isArrayLikeObject(document.body.children);
		 * // => true
		 *
		 * _.isArrayLikeObject('abc');
		 * // => false
		 *
		 * _.isArrayLikeObject(_.noop);
		 * // => false
		 */
		function isArrayLikeObject(value) {
		  return isObjectLike(value) && isArrayLike(value);
		}
		
		module.exports = isArrayLikeObject;


	/***/ },
	/* 204 */
	/***/ function(module, exports) {

		/**
		 * Checks if `value` is object-like. A value is object-like if it's not `null`
		 * and has a `typeof` result of "object".
		 *
		 * @static
		 * @memberOf _
		 * @category Lang
		 * @param {*} value The value to check.
		 * @returns {boolean} Returns `true` if `value` is object-like, else `false`.
		 * @example
		 *
		 * _.isObjectLike({});
		 * // => true
		 *
		 * _.isObjectLike([1, 2, 3]);
		 * // => true
		 *
		 * _.isObjectLike(_.noop);
		 * // => false
		 *
		 * _.isObjectLike(null);
		 * // => false
		 */
		function isObjectLike(value) {
		  return !!value && typeof value == 'object';
		}
		
		module.exports = isObjectLike;


	/***/ },
	/* 205 */
	/***/ function(module, exports) {

		/**
		 * Checks if `value` is classified as an `Array` object.
		 *
		 * @static
		 * @memberOf _
		 * @type {Function}
		 * @category Lang
		 * @param {*} value The value to check.
		 * @returns {boolean} Returns `true` if `value` is correctly classified, else `false`.
		 * @example
		 *
		 * _.isArray([1, 2, 3]);
		 * // => true
		 *
		 * _.isArray(document.body.children);
		 * // => false
		 *
		 * _.isArray('abc');
		 * // => false
		 *
		 * _.isArray(_.noop);
		 * // => false
		 */
		var isArray = Array.isArray;
		
		module.exports = isArray;


	/***/ },
	/* 206 */
	/***/ function(module, exports, __webpack_require__) {

		var isArray = __webpack_require__(205),
		    isObjectLike = __webpack_require__(204);
		
		/** `Object#toString` result references. */
		var stringTag = '[object String]';
		
		/** Used for built-in method references. */
		var objectProto = Object.prototype;
		
		/**
		 * Used to resolve the [`toStringTag`](http://ecma-international.org/ecma-262/6.0/#sec-object.prototype.tostring)
		 * of values.
		 */
		var objectToString = objectProto.toString;
		
		/**
		 * Checks if `value` is classified as a `String` primitive or object.
		 *
		 * @static
		 * @memberOf _
		 * @category Lang
		 * @param {*} value The value to check.
		 * @returns {boolean} Returns `true` if `value` is correctly classified, else `false`.
		 * @example
		 *
		 * _.isString('abc');
		 * // => true
		 *
		 * _.isString(1);
		 * // => false
		 */
		function isString(value) {
		  return typeof value == 'string' ||
		    (!isArray(value) && isObjectLike(value) && objectToString.call(value) == stringTag);
		}
		
		module.exports = isString;


	/***/ },
	/* 207 */
	/***/ function(module, exports) {

		/** Used for built-in method references. */
		var objectProto = Object.prototype;
		
		/**
		 * Checks if `value` is likely a prototype object.
		 *
		 * @private
		 * @param {*} value The value to check.
		 * @returns {boolean} Returns `true` if `value` is a prototype, else `false`.
		 */
		function isPrototype(value) {
		  var Ctor = value && value.constructor,
		      proto = (typeof Ctor == 'function' && Ctor.prototype) || objectProto;
		
		  return value === proto;
		}
		
		module.exports = isPrototype;


	/***/ },
	/* 208 */
	/***/ function(module, exports, __webpack_require__) {

		"use strict";
		
		Object.defineProperty(exports, "__esModule", {
		  value: true
		});
		
		var _extends = Object.assign || function (target) { for (var i = 1; i < arguments.length; i++) { var source = arguments[i]; for (var key in source) { if (Object.prototype.hasOwnProperty.call(source, key)) { target[key] = source[key]; } } } return target; };
		
		var _createClass = function () { function defineProperties(target, props) { for (var i = 0; i < props.length; i++) { var descriptor = props[i]; descriptor.enumerable = descriptor.enumerable || false; descriptor.configurable = true; if ("value" in descriptor) descriptor.writable = true; Object.defineProperty(target, descriptor.key, descriptor); } } return function (Constructor, protoProps, staticProps) { if (protoProps) defineProperties(Constructor.prototype, protoProps); if (staticProps) defineProperties(Constructor, staticProps); return Constructor; }; }();
		
		var _defaults = __webpack_require__(175);
		
		var _defaults2 = _interopRequireDefault(_defaults);
		
		var _react = __webpack_require__(157);
		
		var _react2 = _interopRequireDefault(_react);
		
		var _victoryCore = __webpack_require__(1);
		
		var _axisLine = __webpack_require__(209);
		
		var _axisLine2 = _interopRequireDefault(_axisLine);
		
		var _axisLabel = __webpack_require__(210);
		
		var _axisLabel2 = _interopRequireDefault(_axisLabel);
		
		var _grid = __webpack_require__(211);
		
		var _grid2 = _interopRequireDefault(_grid);
		
		var _tick = __webpack_require__(212);
		
		var _tick2 = _interopRequireDefault(_tick);
		
		var _tickLabel = __webpack_require__(213);
		
		var _tickLabel2 = _interopRequireDefault(_tickLabel);
		
		var _helperMethods = __webpack_require__(214);
		
		var _helperMethods2 = _interopRequireDefault(_helperMethods);
		
		var _axis = __webpack_require__(269);
		
		var _axis2 = _interopRequireDefault(_axis);
		
		function _interopRequireDefault(obj) { return obj && obj.__esModule ? obj : { default: obj }; }
		
		function _classCallCheck(instance, Constructor) { if (!(instance instanceof Constructor)) { throw new TypeError("Cannot call a class as a function"); } }
		
		function _possibleConstructorReturn(self, call) { if (!self) { throw new ReferenceError("this hasn't been initialised - super() hasn't been called"); } return call && (typeof call === "object" || typeof call === "function") ? call : self; }
		
		function _inherits(subClass, superClass) { if (typeof superClass !== "function" && superClass !== null) { throw new TypeError("Super expression must either be null or a function, not " + typeof superClass); } subClass.prototype = Object.create(superClass && superClass.prototype, { constructor: { value: subClass, enumerable: false, writable: true, configurable: true } }); if (superClass) Object.setPrototypeOf ? Object.setPrototypeOf(subClass, superClass) : subClass.__proto__ = superClass; }
		
		var defaultStyles = {
		  axis: {
		    stroke: "#756f6a",
		    fill: "none",
		    strokeWidth: 2,
		    strokeLinecap: "round"
		  },
		  axisLabel: {
		    stroke: "transparent",
		    fill: "#756f6a",
		    fontSize: 16,
		    fontFamily: "Helvetica"
		  },
		  grid: {
		    stroke: "none",
		    fill: "none",
		    strokeLinecap: "round"
		  },
		  ticks: {
		    stroke: "#756f6a",
		    fill: "none",
		    padding: 5,
		    strokeWidth: 2,
		    strokeLinecap: "round",
		    size: 4
		  },
		  tickLabels: {
		    stroke: "transparent",
		    fill: "#756f6a",
		    fontFamily: "Helvetica",
		    fontSize: 10,
		    padding: 5
		  }
		};
		
		var orientationSign = {
		  top: -1,
		  left: -1,
		  right: 1,
		  bottom: 1
		};
		
		var getStyles = function getStyles(props) {
		  var style = props.style || {};
		  var parentStyleProps = { height: "auto", width: "100%" };
		  return {
		    parent: (0, _defaults2.default)(parentStyleProps, style.parent, defaultStyles.parent),
		    axis: (0, _defaults2.default)({}, style.axis, defaultStyles.axis),
		    axisLabel: (0, _defaults2.default)({}, style.axisLabel, defaultStyles.axisLabel),
		    grid: (0, _defaults2.default)({}, style.grid, defaultStyles.grid),
		    ticks: (0, _defaults2.default)({}, style.ticks, defaultStyles.ticks),
		    tickLabels: (0, _defaults2.default)({}, style.tickLabels, defaultStyles.tickLabels)
		  };
		};
		
		var VictoryAxis = function (_React$Component) {
		  _inherits(VictoryAxis, _React$Component);
		
		  function VictoryAxis() {
		    _classCallCheck(this, VictoryAxis);
		
		    return _possibleConstructorReturn(this, Object.getPrototypeOf(VictoryAxis).apply(this, arguments));
		  }
		
		  _createClass(VictoryAxis, [{
		    key: "componentWillMount",
		    value: function componentWillMount() {
		      this.state = {
		        axisState: {},
		        axisLabelState: {},
		        gridState: {},
		        ticksState: {},
		        tickLabelsState: {}
		      };
		    }
		  }, {
		    key: "getTickProps",
		    value: function getTickProps(props) {
		      var stringTicks = _axis2.default.stringTicks(props);
		      var scale = _helperMethods2.default.getScale(props);
		      var ticks = _helperMethods2.default.getTicks(props, scale);
		      return { scale: scale, ticks: ticks, stringTicks: stringTicks };
		    }
		  }, {
		    key: "getLayoutProps",
		    value: function getLayoutProps(props) {
		      var style = getStyles(props);
		      var padding = _victoryCore.Helpers.getPadding(props);
		      var orientation = props.orientation || (props.dependentAxis ? "left" : "bottom");
		      var isVertical = _axis2.default.isVertical(props);
		      var labelPadding = _helperMethods2.default.getLabelPadding(props, style);
		      var offset = _helperMethods2.default.getOffset(props, style);
		      return { style: style, padding: padding, orientation: orientation, isVertical: isVertical, labelPadding: labelPadding, offset: offset };
		    }
		  }, {
		    key: "renderLine",
		    value: function renderLine(props, layoutProps) {
		      var style = layoutProps.style;
		      var padding = layoutProps.padding;
		      var isVertical = layoutProps.isVertical;
		
		      var getBoundEvents = _victoryCore.Helpers.getEvents.bind(this);
		      return _react2.default.createElement(_axisLine2.default, _extends({ key: "line",
		        events: getBoundEvents(this.props.events.axis, "axis"),
		        style: style.axis,
		        x1: isVertical ? null : padding.left,
		        x2: isVertical ? null : props.width - padding.right,
		        y1: isVertical ? padding.top : null,
		        y2: isVertical ? props.height - padding.bottom : null
		      }, this.state.axisState[0]));
		    }
		  }, {
		    key: "renderTicks",
		    value: function renderTicks(props, layoutProps, tickProps) {
		      var _this2 = this;
		
		      var style = layoutProps.style;
		      var orientation = layoutProps.orientation;
		      var scale = tickProps.scale;
		      var ticks = tickProps.ticks;
		      var stringTicks = tickProps.stringTicks;
		
		      var tickFormat = _helperMethods2.default.getTickFormat(props, tickProps);
		      return ticks.map(function (tick, index) {
		        var isVertical = orientation === "left" || orientation === "right";
		        var tickPosition = _helperMethods2.default.getTickPosition(style.ticks, orientation, isVertical);
		        var getBoundEvents = _victoryCore.Helpers.getEvents.bind(_this2);
		        var tickComponent = _react2.default.createElement(_tick2.default, _extends({ key: "tick-" + index,
		          index: index,
		          events: getBoundEvents(_this2.props.events.ticks, "ticks"),
		          position: tickPosition,
		          tick: stringTicks ? props.tickValues[tick - 1] : tick,
		          style: style.ticks
		        }, _this2.state.ticksState[index]));
		        var label = tickFormat.call(_this2, tick, index);
		        var labelComponent = void 0;
		        if (label) {
		          labelComponent = _react2.default.createElement(_tickLabel2.default, _extends({ key: "tick-label-" + index,
		            index: index,
		            events: getBoundEvents(_this2.props.events.tickLabels, "tickLabels"),
		            position: tickPosition,
		            label: label,
		            tick: stringTicks ? props.tickValues[tick - 1] : tick,
		            orientation: orientation,
		            isVertical: isVertical,
		            style: style.tickLabels
		          }, _this2.state.tickLabelsState[index]));
		        }
		        var groupPosition = scale(tick);
		        var transform = isVertical ? "translate(0, " + groupPosition + ")" : "translate(" + groupPosition + ", 0)";
		        return _react2.default.createElement(
		          "g",
		          { key: "tick-group-" + index, transform: transform },
		          tickComponent,
		          labelComponent
		        );
		      });
		    }
		  }, {
		    key: "renderGrid",
		    value: function renderGrid(props, layoutProps, tickProps) {
		      var _this3 = this;
		
		      var scale = tickProps.scale;
		      var ticks = tickProps.ticks;
		      var stringTicks = tickProps.stringTicks;
		      var style = layoutProps.style;
		      var padding = layoutProps.padding;
		      var isVertical = layoutProps.isVertical;
		      var offset = layoutProps.offset;
		      var orientation = layoutProps.orientation;
		
		      var xPadding = orientation === "right" ? padding.right : padding.left;
		      var yPadding = orientation === "top" ? padding.top : padding.bottom;
		      var sign = -orientationSign[orientation];
		      var xOffset = props.crossAxis ? offset.x - xPadding : 0;
		      var yOffset = props.crossAxis ? offset.y - yPadding : 0;
		      var x2 = isVertical ? sign * (props.width - (padding.left + padding.right)) : 0;
		      var y2 = isVertical ? 0 : sign * (props.height - (padding.top + padding.bottom));
		      return ticks.map(function (tick, index) {
		        // determine the position and translation of each gridline
		        var position = scale(tick);
		        var getBoundEvents = _victoryCore.Helpers.getEvents.bind(_this3);
		        return _react2.default.createElement(_grid2.default, _extends({ key: "grid-" + index,
		          index: index,
		          events: getBoundEvents(_this3.props.events.grid, "grid"),
		          tick: stringTicks ? props.tickValues[tick - 1] : tick,
		          x2: x2,
		          y2: y2,
		          xTransform: isVertical ? -xOffset : position,
		          yTransform: isVertical ? position : yOffset,
		          style: style.grid
		        }, _this3.state.gridState[index]));
		      });
		    }
		  }, {
		    key: "renderLabel",
		    value: function renderLabel(props, layoutProps) {
		      if (!props.label) {
		        return undefined;
		      }
		      var style = layoutProps.style;
		      var orientation = layoutProps.orientation;
		      var padding = layoutProps.padding;
		      var labelPadding = layoutProps.labelPadding;
		      var isVertical = layoutProps.isVertical;
		
		      var sign = orientationSign[orientation];
		      var hPadding = padding.left + padding.right;
		      var vPadding = padding.top + padding.bottom;
		      var x = isVertical ? -((props.height - vPadding) / 2) - padding.top : (props.width - hPadding) / 2 + padding.left;
		      var y = sign * labelPadding;
		      var verticalAnchor = sign < 0 ? "end" : "start";
		      var transform = isVertical ? "rotate(-90)" : "";
		      var getBoundEvents = _victoryCore.Helpers.getEvents.bind(this);
		      return _react2.default.createElement(_axisLabel2.default, _extends({
		        events: getBoundEvents(this.props.events.axisLabel, "axisLabels"),
		        verticalAnchor: verticalAnchor,
		        transform: transform,
		        position: { x: x, y: y },
		        label: this.props.label,
		        style: style.axisLabel
		      }, this.state.axisLabelState[0]));
		    }
		  }, {
		    key: "render",
		    value: function render() {
		      if (this.props.animate) {
		        // Do less work by having `VictoryAnimation` tween only values that
		        // make sense to tween. In the future, allow customization of animated
		        // prop whitelist/blacklist?
		        var whitelist = ["style", "domain", "range", "tickCount", "tickValues", "offsetX", "offsetY", "padding", "width", "height"];
		        return _react2.default.createElement(
		          _victoryCore.VictoryTransition,
		          { animate: this.props.animate, animationWhitelist: whitelist },
		          _react2.default.createElement(VictoryAxis, this.props)
		        );
		      }
		      var layoutProps = this.getLayoutProps(this.props);
		      var tickProps = this.getTickProps(this.props);
		      var style = layoutProps.style;
		
		      var transform = _helperMethods2.default.getTransform(this.props, layoutProps);
		      var group = _react2.default.createElement(
		        "g",
		        { style: style.parent, transform: transform },
		        this.renderGrid(this.props, layoutProps, tickProps),
		        this.renderLine(this.props, layoutProps),
		        this.renderTicks(this.props, layoutProps, tickProps),
		        this.renderLabel(this.props, layoutProps)
		      );
		      return this.props.standalone ? _react2.default.createElement(
		        "svg",
		        _extends({
		          style: style.parent,
		          viewBox: "0 0 " + this.props.width + " " + this.props.height
		        }, this.props.events.parent),
		        group
		      ) : group;
		    }
		  }]);
		
		  return VictoryAxis;
		}(_react2.default.Component);
		
		VictoryAxis.role = "axis";
		VictoryAxis.defaultTransitions = {
		  onExit: {
		    duration: 500
		  },
		  onEnter: {
		    duration: 500
		  }
		};
		VictoryAxis.propTypes = {
		  /**
		   * The animate prop specifies props for victory-animation to use. It this prop is
		   * not given, the axis will not tween between changing data / style props.
		   * Large datasets might animate slowly due to the inherent limits of svg rendering.
		   * @examples {duration: 500, onEnd: () => alert("done!")}
		   */
		  animate: _react.PropTypes.object,
		  /**
		   * This prop specifies whether a given axis is intended to cross another axis.
		   */
		  crossAxis: _react.PropTypes.bool,
		  /**
		   * The dependentAxis prop specifies whether the axis corresponds to the
		   * dependent variable (usually y). This prop is useful when composing axis
		   * with other components to form a chart.
		   */
		  dependentAxis: _react.PropTypes.bool,
		  /**
		   * The domain prop describes the range of values your axis will include. This prop should be
		   * given as a array of the minimum and maximum expected values for your axis.
		   * If this value is not given it will be calculated based on the scale or tickValues.
		   * @examples [-1, 1]
		   */
		  domain: _victoryCore.PropTypes.domain,
		  /**
		   * The events prop attaches arbitrary event handlers to data and label elements
		   * Event handlers are called with their corresponding events, corresponding component props,
		   * and their index in the data array, and event name. The return value of event handlers
		   * will be stored by unique index on the state object of VictoryAxis
		   * i.e. `this.state.axisState[axisIndex] = {style: {fill: "red"}...}`, and will be
		   * applied by index to the appropriate child component. Event props on the
		   * parent namespace are just spread directly on to the top level svg of VictoryAxis
		   * if one exists. If VictoryAxis is set up to render g elements i.e. when it is
		   * rendered within chart, or when `standalone={false}` parent events will not be applied.
		   *
		   * @examples {axis: {
		   *  onClick: () => return {style: {stroke: "green"}}
		   *}}
		   */
		  events: _react.PropTypes.shape({
		    parent: _react.PropTypes.object,
		    axis: _react.PropTypes.object,
		    axisLabel: _react.PropTypes.object,
		    grid: _react.PropTypes.object,
		    ticks: _react.PropTypes.object,
		    tickLabels: _react.PropTypes.object
		  }),
		  /**
		   * The height props specifies the height the svg viewBox of the chart container.
		   * This value should be given as a number of pixels
		   */
		  height: _victoryCore.PropTypes.nonNegative,
		  /**
		   * The label prop defines the label that will appear along the axis. This
		   * prop should be given as a value or an entire, HTML-complete label
		   * component. If a label component is given, it will be cloned. The new
		   * element's properties x, y, textAnchor, verticalAnchor, and transform
		   * will have defaults provided by the axis; styles filled out with
		   * defaults provided by the axis, and overrides from the label component.
		   * If a value is given, a new VictoryLabel will be created with props and
		   * styles from the axis.
		   */
		  label: _react.PropTypes.any,
		  /**
		   * This value describes how far from the "edge" of its permitted area each axis
		   * will be set back in the x-direction.  If this prop is not given,
		   * the offset is calculated based on font size, axis orientation, and label padding.
		   */
		  offsetX: _react.PropTypes.number,
		  /**
		   * This value describes how far from the "edge" of its permitted area each axis
		   * will be set back in the y-direction.  If this prop is not given,
		   * the offset is calculated based on font size, axis orientation, and label padding.
		   */
		  offsetY: _react.PropTypes.number,
		  /**
		   * The orientation prop specifies the position and orientation of your axis.
		   */
		  orientation: _react.PropTypes.oneOf(["top", "bottom", "left", "right"]),
		  /**
		   * The padding props specifies the amount of padding in number of pixels between
		   * the edge of the chart and any rendered child components. This prop can be given
		   * as a number or as an object with padding specified for top, bottom, left
		   * and right.
		   */
		  padding: _react.PropTypes.oneOfType([_react.PropTypes.number, _react.PropTypes.shape({
		    top: _react.PropTypes.number,
		    bottom: _react.PropTypes.number,
		    left: _react.PropTypes.number,
		    right: _react.PropTypes.number
		  })]),
		  /**
		   * The scale prop determines which scales your axis should use. This prop can be
		   * given as a `d3-scale@0.3.0` function or as a string corresponding to a supported d3-string
		   * function.
		   * @examples d3Scale.time(), "linear", "time", "log", "sqrt"
		   */
		  scale: _victoryCore.PropTypes.scale,
		  /**
		   * The standalone prop determines whether the component will render a standalone svg
		   * or a <g> tag that will be included in an external svg. Set standalone to false to
		   * compose VictoryAxis with other components within an enclosing <svg> tag.
		   */
		  standalone: _react.PropTypes.bool,
		  /**
		   * The style prop specifies styles for your VictoryAxis. Any valid inline style properties
		   * will be applied. Height, width, and padding should be specified via the height,
		   * width, and padding props, as they are used to calculate the alignment of
		   * components within chart.
		   * @examples {axis: {stroke: "#756f6a"}, grid: {stroke: "grey"}, ticks: {stroke: "grey"},
		   * tickLabels: {fontSize: 10, padding: 5}, axisLabel: {fontSize: 16, padding: 20}}
		   */
		  style: _react.PropTypes.shape({
		    parent: _react.PropTypes.object,
		    axis: _react.PropTypes.object,
		    axisLabel: _react.PropTypes.object,
		    grid: _react.PropTypes.object,
		    ticks: _react.PropTypes.object,
		    tickLabels: _react.PropTypes.object
		  }),
		  /**
		   * The tickCount prop specifies how many ticks should be drawn on the axis if
		   * tickValues are not explicitly provided.
		   */
		  tickCount: _victoryCore.PropTypes.nonNegative,
		  /**
		   * The tickFormat prop specifies how tick values should be expressed visually.
		   * tickFormat can be given as a function to be applied to every tickValue, or as
		   * an array of display values for each tickValue.
		   * @examples d3.time.format("%Y"), (x) => x.toPrecision(2), ["first", "second", "third"]
		   */
		  tickFormat: _react.PropTypes.oneOfType([_react.PropTypes.func, _victoryCore.PropTypes.homogeneousArray]),
		  /**
		   * The tickValues prop explicitly specifies which tick values to draw on the axis.
		   * @examples ["apples", "bananas", "oranges"], [2, 4, 6, 8]
		   */
		  tickValues: _victoryCore.PropTypes.homogeneousArray,
		  /**
		   * The width props specifies the width of the svg viewBox of the chart container
		   * This value should be given as a number of pixels
		   */
		  width: _victoryCore.PropTypes.nonNegative
		};
		VictoryAxis.defaultProps = {
		  events: {},
		  height: 300,
		  padding: 50,
		  scale: "linear",
		  standalone: true,
		  tickCount: 5,
		  width: 450
		};
		VictoryAxis.getDomain = _helperMethods2.default.getDomain.bind(_helperMethods2.default);
		VictoryAxis.getAxis = _helperMethods2.default.getAxis.bind(_helperMethods2.default);
		VictoryAxis.getScale = _helperMethods2.default.getScale.bind(_helperMethods2.default);
		VictoryAxis.getStyles = getStyles;
		exports.default = VictoryAxis;

	/***/ },
	/* 209 */
	/***/ function(module, exports, __webpack_require__) {

		"use strict";
		
		Object.defineProperty(exports, "__esModule", {
		  value: true
		});
		
		var _extends = Object.assign || function (target) { for (var i = 1; i < arguments.length; i++) { var source = arguments[i]; for (var key in source) { if (Object.prototype.hasOwnProperty.call(source, key)) { target[key] = source[key]; } } } return target; };
		
		var _createClass = function () { function defineProperties(target, props) { for (var i = 0; i < props.length; i++) { var descriptor = props[i]; descriptor.enumerable = descriptor.enumerable || false; descriptor.configurable = true; if ("value" in descriptor) descriptor.writable = true; Object.defineProperty(target, descriptor.key, descriptor); } } return function (Constructor, protoProps, staticProps) { if (protoProps) defineProperties(Constructor.prototype, protoProps); if (staticProps) defineProperties(Constructor, staticProps); return Constructor; }; }();
		
		var _react = __webpack_require__(157);
		
		var _react2 = _interopRequireDefault(_react);
		
		var _victoryCore = __webpack_require__(1);
		
		function _interopRequireDefault(obj) { return obj && obj.__esModule ? obj : { default: obj }; }
		
		function _classCallCheck(instance, Constructor) { if (!(instance instanceof Constructor)) { throw new TypeError("Cannot call a class as a function"); } }
		
		function _possibleConstructorReturn(self, call) { if (!self) { throw new ReferenceError("this hasn't been initialised - super() hasn't been called"); } return call && (typeof call === "object" || typeof call === "function") ? call : self; }
		
		function _inherits(subClass, superClass) { if (typeof superClass !== "function" && superClass !== null) { throw new TypeError("Super expression must either be null or a function, not " + typeof superClass); } subClass.prototype = Object.create(superClass && superClass.prototype, { constructor: { value: subClass, enumerable: false, writable: true, configurable: true } }); if (superClass) Object.setPrototypeOf ? Object.setPrototypeOf(subClass, superClass) : subClass.__proto__ = superClass; }
		
		var AxisLine = function (_React$Component) {
		  _inherits(AxisLine, _React$Component);
		
		  function AxisLine() {
		    _classCallCheck(this, AxisLine);
		
		    return _possibleConstructorReturn(this, Object.getPrototypeOf(AxisLine).apply(this, arguments));
		  }
		
		  _createClass(AxisLine, [{
		    key: "render",
		    value: function render() {
		      var events = _victoryCore.Helpers.getPartialEvents(this.props.events, 0, this.props);
		      return _react2.default.createElement("line", _extends({}, this.props, events));
		    }
		  }]);
		
		  return AxisLine;
		}(_react2.default.Component);
		
		AxisLine.propTypes = {
		  x1: _react.PropTypes.number,
		  x2: _react.PropTypes.number,
		  y1: _react.PropTypes.number,
		  y2: _react.PropTypes.number,
		  style: _react.PropTypes.object,
		  events: _react.PropTypes.object
		};
		exports.default = AxisLine;

	/***/ },
	/* 210 */
	/***/ function(module, exports, __webpack_require__) {

		"use strict";
		
		Object.defineProperty(exports, "__esModule", {
		  value: true
		});
		
		var _createClass = function () { function defineProperties(target, props) { for (var i = 0; i < props.length; i++) { var descriptor = props[i]; descriptor.enumerable = descriptor.enumerable || false; descriptor.configurable = true; if ("value" in descriptor) descriptor.writable = true; Object.defineProperty(target, descriptor.key, descriptor); } } return function (Constructor, protoProps, staticProps) { if (protoProps) defineProperties(Constructor.prototype, protoProps); if (staticProps) defineProperties(Constructor, staticProps); return Constructor; }; }();
		
		var _defaults = __webpack_require__(175);
		
		var _defaults2 = _interopRequireDefault(_defaults);
		
		var _react = __webpack_require__(157);
		
		var _react2 = _interopRequireDefault(_react);
		
		var _victoryCore = __webpack_require__(1);
		
		function _interopRequireDefault(obj) { return obj && obj.__esModule ? obj : { default: obj }; }
		
		function _classCallCheck(instance, Constructor) { if (!(instance instanceof Constructor)) { throw new TypeError("Cannot call a class as a function"); } }
		
		function _possibleConstructorReturn(self, call) { if (!self) { throw new ReferenceError("this hasn't been initialised - super() hasn't been called"); } return call && (typeof call === "object" || typeof call === "function") ? call : self; }
		
		function _inherits(subClass, superClass) { if (typeof superClass !== "function" && superClass !== null) { throw new TypeError("Super expression must either be null or a function, not " + typeof superClass); } subClass.prototype = Object.create(superClass && superClass.prototype, { constructor: { value: subClass, enumerable: false, writable: true, configurable: true } }); if (superClass) Object.setPrototypeOf ? Object.setPrototypeOf(subClass, superClass) : subClass.__proto__ = superClass; }
		
		var AxisLabel = function (_React$Component) {
		  _inherits(AxisLabel, _React$Component);
		
		  function AxisLabel() {
		    _classCallCheck(this, AxisLabel);
		
		    return _possibleConstructorReturn(this, Object.getPrototypeOf(AxisLabel).apply(this, arguments));
		  }
		
		  _createClass(AxisLabel, [{
		    key: "renderLabelComponent",
		    value: function renderLabelComponent(props) {
		      var component = props.label;
		      var style = (0, _defaults2.default)({}, component.props.style, props.style);
		      var baseEvents = component && component.props.events ? (0, _defaults2.default)({}, component.props.events, props.events) : props.events;
		      var events = _victoryCore.Helpers.getPartialEvents(baseEvents, 0, props);
		      var newProps = {
		        x: component.props.x || props.position.x,
		        y: component.props.y || props.position.y,
		        text: component.props.text,
		        textAnchor: component.props.textAnchor || "middle",
		        verticalAnchor: component.props.verticalAnchor || props.verticalAnchor,
		        transform: component.props.transform || props.transform,
		        style: style,
		        events: events
		      };
		      return _react2.default.cloneElement(component, newProps);
		    }
		  }, {
		    key: "renderVictoryLabel",
		    value: function renderVictoryLabel(props) {
		      var events = _victoryCore.Helpers.getPartialEvents(this.props.events, 0, this.props);
		      var text = typeof props.label === "string" ? props.label : null;
		      return _react2.default.createElement(_victoryCore.VictoryLabel, {
		        x: props.position.x,
		        y: props.position.y,
		        textAnchor: "middle",
		        verticalAnchor: props.verticalAnchor,
		        transform: props.transform,
		        style: props.style,
		        text: text,
		        events: events
		      });
		    }
		  }, {
		    key: "renderLabel",
		    value: function renderLabel(props) {
		      return props.label && props.label.props ? this.renderLabelComponent(props) : this.renderVictoryLabel(props);
		    }
		  }, {
		    key: "render",
		    value: function render() {
		      return _react2.default.createElement(
		        "g",
		        null,
		        this.renderLabel(this.props)
		      );
		    }
		  }]);
		
		  return AxisLabel;
		}(_react2.default.Component);
		
		AxisLabel.propTypes = {
		  events: _react.PropTypes.object,
		  label: _react.PropTypes.any,
		  position: _react.PropTypes.object,
		  verticalAnchor: _react.PropTypes.string,
		  transform: _react.PropTypes.string,
		  style: _react.PropTypes.object
		};
		exports.default = AxisLabel;

	/***/ },
	/* 211 */
	/***/ function(module, exports, __webpack_require__) {

		"use strict";
		
		Object.defineProperty(exports, "__esModule", {
		  value: true
		});
		
		var _extends = Object.assign || function (target) { for (var i = 1; i < arguments.length; i++) { var source = arguments[i]; for (var key in source) { if (Object.prototype.hasOwnProperty.call(source, key)) { target[key] = source[key]; } } } return target; };
		
		var _createClass = function () { function defineProperties(target, props) { for (var i = 0; i < props.length; i++) { var descriptor = props[i]; descriptor.enumerable = descriptor.enumerable || false; descriptor.configurable = true; if ("value" in descriptor) descriptor.writable = true; Object.defineProperty(target, descriptor.key, descriptor); } } return function (Constructor, protoProps, staticProps) { if (protoProps) defineProperties(Constructor.prototype, protoProps); if (staticProps) defineProperties(Constructor, staticProps); return Constructor; }; }();
		
		var _react = __webpack_require__(157);
		
		var _react2 = _interopRequireDefault(_react);
		
		var _victoryCore = __webpack_require__(1);
		
		function _interopRequireDefault(obj) { return obj && obj.__esModule ? obj : { default: obj }; }
		
		function _classCallCheck(instance, Constructor) { if (!(instance instanceof Constructor)) { throw new TypeError("Cannot call a class as a function"); } }
		
		function _possibleConstructorReturn(self, call) { if (!self) { throw new ReferenceError("this hasn't been initialised - super() hasn't been called"); } return call && (typeof call === "object" || typeof call === "function") ? call : self; }
		
		function _inherits(subClass, superClass) { if (typeof superClass !== "function" && superClass !== null) { throw new TypeError("Super expression must either be null or a function, not " + typeof superClass); } subClass.prototype = Object.create(superClass && superClass.prototype, { constructor: { value: subClass, enumerable: false, writable: true, configurable: true } }); if (superClass) Object.setPrototypeOf ? Object.setPrototypeOf(subClass, superClass) : subClass.__proto__ = superClass; }
		
		var GridLine = function (_React$Component) {
		  _inherits(GridLine, _React$Component);
		
		  function GridLine() {
		    _classCallCheck(this, GridLine);
		
		    return _possibleConstructorReturn(this, Object.getPrototypeOf(GridLine).apply(this, arguments));
		  }
		
		  _createClass(GridLine, [{
		    key: "render",
		    value: function render() {
		      var props = this.props;
		
		      var events = _victoryCore.Helpers.getPartialEvents(props.events, props.index, props);
		      return _react2.default.createElement(
		        "g",
		        { transform: "translate(" + props.xTransform + ", " + props.yTransform + ")" },
		        _react2.default.createElement("line", _extends({}, events, {
		          x2: props.x2,
		          y2: props.y2,
		          style: _victoryCore.Helpers.evaluateStyle(props.style, props.tick)
		        }))
		      );
		    }
		  }]);
		
		  return GridLine;
		}(_react2.default.Component);
		
		GridLine.role = "grid";
		GridLine.propTypes = {
		  index: _react.PropTypes.number,
		  tick: _react.PropTypes.any,
		  x2: _react.PropTypes.number,
		  y2: _react.PropTypes.number,
		  xTransform: _react.PropTypes.number,
		  yTransform: _react.PropTypes.number,
		  style: _react.PropTypes.object,
		  events: _react.PropTypes.object
		};
		exports.default = GridLine;

	/***/ },
	/* 212 */
	/***/ function(module, exports, __webpack_require__) {

		"use strict";
		
		Object.defineProperty(exports, "__esModule", {
		  value: true
		});
		
		var _extends = Object.assign || function (target) { for (var i = 1; i < arguments.length; i++) { var source = arguments[i]; for (var key in source) { if (Object.prototype.hasOwnProperty.call(source, key)) { target[key] = source[key]; } } } return target; };
		
		var _createClass = function () { function defineProperties(target, props) { for (var i = 0; i < props.length; i++) { var descriptor = props[i]; descriptor.enumerable = descriptor.enumerable || false; descriptor.configurable = true; if ("value" in descriptor) descriptor.writable = true; Object.defineProperty(target, descriptor.key, descriptor); } } return function (Constructor, protoProps, staticProps) { if (protoProps) defineProperties(Constructor.prototype, protoProps); if (staticProps) defineProperties(Constructor, staticProps); return Constructor; }; }();
		
		var _react = __webpack_require__(157);
		
		var _react2 = _interopRequireDefault(_react);
		
		var _victoryCore = __webpack_require__(1);
		
		function _interopRequireDefault(obj) { return obj && obj.__esModule ? obj : { default: obj }; }
		
		function _classCallCheck(instance, Constructor) { if (!(instance instanceof Constructor)) { throw new TypeError("Cannot call a class as a function"); } }
		
		function _possibleConstructorReturn(self, call) { if (!self) { throw new ReferenceError("this hasn't been initialised - super() hasn't been called"); } return call && (typeof call === "object" || typeof call === "function") ? call : self; }
		
		function _inherits(subClass, superClass) { if (typeof superClass !== "function" && superClass !== null) { throw new TypeError("Super expression must either be null or a function, not " + typeof superClass); } subClass.prototype = Object.create(superClass && superClass.prototype, { constructor: { value: subClass, enumerable: false, writable: true, configurable: true } }); if (superClass) Object.setPrototypeOf ? Object.setPrototypeOf(subClass, superClass) : subClass.__proto__ = superClass; }
		
		var Tick = function (_React$Component) {
		  _inherits(Tick, _React$Component);
		
		  function Tick() {
		    _classCallCheck(this, Tick);
		
		    return _possibleConstructorReturn(this, Object.getPrototypeOf(Tick).apply(this, arguments));
		  }
		
		  _createClass(Tick, [{
		    key: "render",
		    value: function render() {
		      var style = _victoryCore.Helpers.evaluateStyle(this.props.style, this.props.tick);
		      var events = _victoryCore.Helpers.getPartialEvents(this.props.events, this.props.index, this.props);
		      return _react2.default.createElement("line", _extends({}, events, {
		        x2: this.props.position.x2,
		        y2: this.props.position.y2,
		        style: style
		      }));
		    }
		  }]);
		
		  return Tick;
		}(_react2.default.Component);
		
		Tick.role = "tick";
		Tick.propTypes = {
		  index: _react.PropTypes.number,
		  position: _react.PropTypes.object,
		  tick: _react.PropTypes.any,
		  style: _react.PropTypes.object,
		  events: _react.PropTypes.object
		};
		exports.default = Tick;

	/***/ },
	/* 213 */
	/***/ function(module, exports, __webpack_require__) {

		"use strict";
		
		Object.defineProperty(exports, "__esModule", {
		  value: true
		});
		
		var _createClass = function () { function defineProperties(target, props) { for (var i = 0; i < props.length; i++) { var descriptor = props[i]; descriptor.enumerable = descriptor.enumerable || false; descriptor.configurable = true; if ("value" in descriptor) descriptor.writable = true; Object.defineProperty(target, descriptor.key, descriptor); } } return function (Constructor, protoProps, staticProps) { if (protoProps) defineProperties(Constructor.prototype, protoProps); if (staticProps) defineProperties(Constructor, staticProps); return Constructor; }; }();
		
		var _defaults = __webpack_require__(175);
		
		var _defaults2 = _interopRequireDefault(_defaults);
		
		var _react = __webpack_require__(157);
		
		var _react2 = _interopRequireDefault(_react);
		
		var _victoryCore = __webpack_require__(1);
		
		function _interopRequireDefault(obj) { return obj && obj.__esModule ? obj : { default: obj }; }
		
		function _classCallCheck(instance, Constructor) { if (!(instance instanceof Constructor)) { throw new TypeError("Cannot call a class as a function"); } }
		
		function _possibleConstructorReturn(self, call) { if (!self) { throw new ReferenceError("this hasn't been initialised - super() hasn't been called"); } return call && (typeof call === "object" || typeof call === "function") ? call : self; }
		
		function _inherits(subClass, superClass) { if (typeof superClass !== "function" && superClass !== null) { throw new TypeError("Super expression must either be null or a function, not " + typeof superClass); } subClass.prototype = Object.create(superClass && superClass.prototype, { constructor: { value: subClass, enumerable: false, writable: true, configurable: true } }); if (superClass) Object.setPrototypeOf ? Object.setPrototypeOf(subClass, superClass) : subClass.__proto__ = superClass; }
		
		var TickLabel = function (_React$Component) {
		  _inherits(TickLabel, _React$Component);
		
		  function TickLabel() {
		    _classCallCheck(this, TickLabel);
		
		    return _possibleConstructorReturn(this, Object.getPrototypeOf(TickLabel).apply(this, arguments));
		  }
		
		  _createClass(TickLabel, [{
		    key: "getAnchors",
		    value: function getAnchors(props) {
		      var anchorOrientation = { top: "end", left: "end", right: "start", bottom: "start" };
		      var anchor = anchorOrientation[props.orientation];
		      return {
		        textAnchor: props.isVertical ? anchor : "middle",
		        verticalAnchor: props.isVertical ? "middle" : anchor
		      };
		    }
		  }, {
		    key: "render",
		    value: function render() {
		      var props = this.props;
		
		      if (!props.label) {
		        return undefined;
		      }
		      var componentProps = props.label.props || {};
		      var style = componentProps.style || props.style;
		      var anchors = this.getAnchors(props);
		      var baseEvents = componentProps.events ? (0, _defaults2.default)({}, componentProps.events, props.events) : props.events;
		      var events = _victoryCore.Helpers.getPartialEvents(baseEvents, props.index, props);
		      var newProps = {
		        x: props.position.x,
		        y: props.position.y,
		        textAnchor: componentProps.textAnchor || anchors.textAnchor,
		        verticalAnchor: componentProps.verticalAnchor || anchors.verticalAnchor,
		        style: _victoryCore.Helpers.evaluateStyle(style, props.tick),
		        events: events
		      };
		      return props.label.props ? _react2.default.cloneElement(props.label, newProps) : _react2.default.createElement(_victoryCore.VictoryLabel, newProps, props.label);
		    }
		  }]);
		
		  return TickLabel;
		}(_react2.default.Component);
		
		TickLabel.propTypes = {
		  index: _react.PropTypes.number,
		  position: _react.PropTypes.object,
		  tick: _react.PropTypes.any,
		  orientation: _react.PropTypes.oneOf(["top", "bottom", "left", "right"]),
		  isVertical: _react.PropTypes.bool,
		  style: _react.PropTypes.object,
		  events: _react.PropTypes.object,
		  label: _react.PropTypes.any
		};
		exports.default = TickLabel;

	/***/ },
	/* 214 */
	/***/ function(module, exports, __webpack_require__) {

		"use strict";
		
		Object.defineProperty(exports, "__esModule", {
		  value: true
		});
		
		var _isFunction = __webpack_require__(187);
		
		var _isFunction2 = _interopRequireDefault(_isFunction);
		
		var _includes = __webpack_require__(215);
		
		var _includes2 = _interopRequireDefault(_includes);
		
		var _without = __webpack_require__(224);
		
		var _without2 = _interopRequireDefault(_without);
		
		var _range = __webpack_require__(254);
		
		var _range2 = _interopRequireDefault(_range);
		
		var _scale = __webpack_require__(257);
		
		var _scale2 = _interopRequireDefault(_scale);
		
		var _axis = __webpack_require__(269);
		
		var _axis2 = _interopRequireDefault(_axis);
		
		var _domain = __webpack_require__(270);
		
		var _domain2 = _interopRequireDefault(_domain);
		
		var _victoryCore = __webpack_require__(1);
		
		function _interopRequireDefault(obj) { return obj && obj.__esModule ? obj : { default: obj }; }
		
		exports.default = {
		  // exposed for use by VictoryChart
		
		  getDomain: function getDomain(props, axis) {
		    if (axis && axis !== this.getAxis(props)) {
		      return undefined;
		    }
		    if (props.domain) {
		      return props.domain;
		    } else if (props.tickValues) {
		      return _domain2.default.getDomainFromTickValues(props);
		    }
		    return undefined;
		  },
		
		
		  // exposed for use by VictoryChart
		  getAxis: function getAxis(props, flipped) {
		    if (props.orientation) {
		      var vertical = { top: "x", bottom: "x", left: "y", right: "y" };
		      return vertical[props.orientation];
		    }
		    var axisType = props.dependentAxis ? "dependent" : "independent";
		    var flippedAxis = { dependent: "x", independent: "y" };
		    var normalAxis = { independent: "x", dependent: "y" };
		    return flipped ? flippedAxis[axisType] : normalAxis[axisType];
		  },
		
		
		  // exposed for use by VictoryChart
		  getScale: function getScale(props) {
		    var axis = this.getAxis(props);
		    var scale = _scale2.default.getBaseScale(props, axis);
		    var domain = this.getDomain(props) || scale.domain();
		    scale.range(_victoryCore.Helpers.getRange(props, axis));
		    scale.domain(domain);
		    return scale;
		  },
		  getTicks: function getTicks(props, scale) {
		    if (props.tickValues) {
		      if (_axis2.default.stringTicks(props)) {
		        return (0, _range2.default)(1, props.tickValues.length + 1);
		      }
		      return props.tickValues;
		    } else if (scale.ticks && (0, _isFunction2.default)(scale.ticks)) {
		      var ticks = scale.ticks(props.tickCount);
		      if (props.crossAxis) {
		        return (0, _includes2.default)(ticks, 0) ? (0, _without2.default)(ticks, 0) : ticks;
		      }
		      return ticks;
		    }
		    return scale.domain();
		  },
		  getTickFormat: function getTickFormat(props, tickProps) {
		    var scale = tickProps.scale;
		    var ticks = tickProps.ticks;
		
		    if (props.tickFormat && (0, _isFunction2.default)(props.tickFormat)) {
		      return props.tickFormat;
		    } else if (props.tickFormat && Array.isArray(props.tickFormat)) {
		      return function (x, index) {
		        return props.tickFormat[index];
		      };
		    } else if (_axis2.default.stringTicks(props)) {
		      return function (x, index) {
		        return props.tickValues[index];
		      };
		    } else if (scale.tickFormat && (0, _isFunction2.default)(scale.tickFormat)) {
		      return scale.tickFormat(ticks.length);
		    } else {
		      return function (x) {
		        return x;
		      };
		    }
		  },
		  getLabelPadding: function getLabelPadding(props, style) {
		    var labelStyle = style.axisLabel;
		    if (typeof labelStyle.padding !== "undefined" && labelStyle.padding !== null) {
		      return labelStyle.padding;
		    }
		    var isVertical = _axis2.default.isVertical(props);
		    // TODO: magic numbers
		    return props.label ? labelStyle.fontSize * (isVertical ? 2.3 : 1.6) : 0;
		  },
		  getOffset: function getOffset(props, style) {
		    var padding = _victoryCore.Helpers.getPadding(props);
		    var isVertical = _axis2.default.isVertical(props);
		    var orientation = props.orientation || (props.dependentAxis ? "left" : "bottom");
		    var labelPadding = this.getLabelPadding(props, style);
		    var xPadding = orientation === "right" ? padding.right : padding.left;
		    var yPadding = orientation === "top" ? padding.top : padding.bottom;
		    var fontSize = style.axisLabel.fontSize;
		    var offsetX = props.offsetX || xPadding;
		    var offsetY = props.offsetY || yPadding;
		    var totalPadding = fontSize + 2 * style.ticks.size + labelPadding;
		    var minimumPadding = 1.2 * fontSize; // TODO: magic numbers
		    var x = isVertical ? totalPadding : minimumPadding;
		    var y = isVertical ? minimumPadding : totalPadding;
		    return {
		      x: offsetX || x,
		      y: offsetY || y
		    };
		  },
		  getTransform: function getTransform(props, layoutProps) {
		    var offset = layoutProps.offset;
		    var orientation = layoutProps.orientation;
		
		    var translate = {
		      top: [0, offset.y],
		      bottom: [0, props.height - offset.y],
		      left: [offset.x, 0],
		      right: [props.width - offset.x, 0]
		    }[orientation];
		    return "translate(" + translate[0] + ", " + translate[1] + ")";
		  },
		  getTickPosition: function getTickPosition(style, orientation, isVertical) {
		    var orientationSign = { top: -1, left: -1, right: 1, bottom: 1 };
		    var tickSpacing = style.size + style.padding;
		    var sign = orientationSign[orientation];
		    return {
		      x: isVertical ? sign * tickSpacing : 0,
		      x2: isVertical ? sign * style.size : 0,
		      y: isVertical ? 0 : sign * tickSpacing,
		      y2: isVertical ? 0 : sign * style.size
		    };
		  }
		};

	/***/ },
	/* 215 */
	/***/ function(module, exports, __webpack_require__) {

		var baseIndexOf = __webpack_require__(216),
		    isArrayLike = __webpack_require__(184),
		    isString = __webpack_require__(206),
		    toInteger = __webpack_require__(192),
		    values = __webpack_require__(218);
		
		/* Built-in method references for those with the same name as other `lodash` methods. */
		var nativeMax = Math.max;
		
		/**
		 * Checks if `value` is in `collection`. If `collection` is a string it's checked
		 * for a substring of `value`, otherwise [`SameValueZero`](http://ecma-international.org/ecma-262/6.0/#sec-samevaluezero)
		 * is used for equality comparisons. If `fromIndex` is negative, it's used as
		 * the offset from the end of `collection`.
		 *
		 * @static
		 * @memberOf _
		 * @category Collection
		 * @param {Array|Object|string} collection The collection to search.
		 * @param {*} value The value to search for.
		 * @param {number} [fromIndex=0] The index to search from.
		 * @param- {Object} [guard] Enables use as an iteratee for functions like `_.reduce`.
		 * @returns {boolean} Returns `true` if `value` is found, else `false`.
		 * @example
		 *
		 * _.includes([1, 2, 3], 1);
		 * // => true
		 *
		 * _.includes([1, 2, 3], 1, 2);
		 * // => false
		 *
		 * _.includes({ 'user': 'fred', 'age': 40 }, 'fred');
		 * // => true
		 *
		 * _.includes('pebbles', 'eb');
		 * // => true
		 */
		function includes(collection, value, fromIndex, guard) {
		  collection = isArrayLike(collection) ? collection : values(collection);
		  fromIndex = (fromIndex && !guard) ? toInteger(fromIndex) : 0;
		
		  var length = collection.length;
		  if (fromIndex < 0) {
		    fromIndex = nativeMax(length + fromIndex, 0);
		  }
		  return isString(collection)
		    ? (fromIndex <= length && collection.indexOf(value, fromIndex) > -1)
		    : (!!length && baseIndexOf(collection, value, fromIndex) > -1);
		}
		
		module.exports = includes;


	/***/ },
	/* 216 */
	/***/ function(module, exports, __webpack_require__) {

		var indexOfNaN = __webpack_require__(217);
		
		/**
		 * The base implementation of `_.indexOf` without `fromIndex` bounds checks.
		 *
		 * @private
		 * @param {Array} array The array to search.
		 * @param {*} value The value to search for.
		 * @param {number} fromIndex The index to search from.
		 * @returns {number} Returns the index of the matched value, else `-1`.
		 */
		function baseIndexOf(array, value, fromIndex) {
		  if (value !== value) {
		    return indexOfNaN(array, fromIndex);
		  }
		  var index = fromIndex - 1,
		      length = array.length;
		
		  while (++index < length) {
		    if (array[index] === value) {
		      return index;
		    }
		  }
		  return -1;
		}
		
		module.exports = baseIndexOf;


	/***/ },
	/* 217 */
	/***/ function(module, exports) {

		/**
		 * Gets the index at which the first occurrence of `NaN` is found in `array`.
		 *
		 * @private
		 * @param {Array} array The array to search.
		 * @param {number} fromIndex The index to search from.
		 * @param {boolean} [fromRight] Specify iterating from right to left.
		 * @returns {number} Returns the index of the matched `NaN`, else `-1`.
		 */
		function indexOfNaN(array, fromIndex, fromRight) {
		  var length = array.length,
		      index = fromIndex + (fromRight ? 0 : -1);
		
		  while ((fromRight ? index-- : ++index < length)) {
		    var other = array[index];
		    if (other !== other) {
		      return index;
		    }
		  }
		  return -1;
		}
		
		module.exports = indexOfNaN;


	/***/ },
	/* 218 */
	/***/ function(module, exports, __webpack_require__) {

		var baseValues = __webpack_require__(219),
		    keys = __webpack_require__(221);
		
		/**
		 * Creates an array of the own enumerable property values of `object`.
		 *
		 * **Note:** Non-object values are coerced to objects.
		 *
		 * @static
		 * @memberOf _
		 * @category Object
		 * @param {Object} object The object to query.
		 * @returns {Array} Returns the array of property values.
		 * @example
		 *
		 * function Foo() {
		 *   this.a = 1;
		 *   this.b = 2;
		 * }
		 *
		 * Foo.prototype.c = 3;
		 *
		 * _.values(new Foo);
		 * // => [1, 2] (iteration order is not guaranteed)
		 *
		 * _.values('hi');
		 * // => ['h', 'i']
		 */
		function values(object) {
		  return object ? baseValues(object, keys(object)) : [];
		}
		
		module.exports = values;


	/***/ },
	/* 219 */
	/***/ function(module, exports, __webpack_require__) {

		var arrayMap = __webpack_require__(220);
		
		/**
		 * The base implementation of `_.values` and `_.valuesIn` which creates an
		 * array of `object` property values corresponding to the property names
		 * of `props`.
		 *
		 * @private
		 * @param {Object} object The object to query.
		 * @param {Array} props The property names to get values for.
		 * @returns {Object} Returns the array of property values.
		 */
		function baseValues(object, props) {
		  return arrayMap(props, function(key) {
		    return object[key];
		  });
		}
		
		module.exports = baseValues;


	/***/ },
	/* 220 */
	/***/ function(module, exports) {

		/**
		 * A specialized version of `_.map` for arrays without support for iteratee
		 * shorthands.
		 *
		 * @private
		 * @param {Array} array The array to iterate over.
		 * @param {Function} iteratee The function invoked per iteration.
		 * @returns {Array} Returns the new mapped array.
		 */
		function arrayMap(array, iteratee) {
		  var index = -1,
		      length = array.length,
		      result = Array(length);
		
		  while (++index < length) {
		    result[index] = iteratee(array[index], index, array);
		  }
		  return result;
		}
		
		module.exports = arrayMap;


	/***/ },
	/* 221 */
	/***/ function(module, exports, __webpack_require__) {

		var baseHas = __webpack_require__(222),
		    baseKeys = __webpack_require__(223),
		    indexKeys = __webpack_require__(200),
		    isArrayLike = __webpack_require__(184),
		    isIndex = __webpack_require__(190),
		    isPrototype = __webpack_require__(207);
		
		/**
		 * Creates an array of the own enumerable property names of `object`.
		 *
		 * **Note:** Non-object values are coerced to objects. See the
		 * [ES spec](http://ecma-international.org/ecma-262/6.0/#sec-object.keys)
		 * for more details.
		 *
		 * @static
		 * @memberOf _
		 * @category Object
		 * @param {Object} object The object to query.
		 * @returns {Array} Returns the array of property names.
		 * @example
		 *
		 * function Foo() {
		 *   this.a = 1;
		 *   this.b = 2;
		 * }
		 *
		 * Foo.prototype.c = 3;
		 *
		 * _.keys(new Foo);
		 * // => ['a', 'b'] (iteration order is not guaranteed)
		 *
		 * _.keys('hi');
		 * // => ['0', '1']
		 */
		function keys(object) {
		  var isProto = isPrototype(object);
		  if (!(isProto || isArrayLike(object))) {
		    return baseKeys(object);
		  }
		  var indexes = indexKeys(object),
		      skipIndexes = !!indexes,
		      result = indexes || [],
		      length = result.length;
		
		  for (var key in object) {
		    if (baseHas(object, key) &&
		        !(skipIndexes && (key == 'length' || isIndex(key, length))) &&
		        !(isProto && key == 'constructor')) {
		      result.push(key);
		    }
		  }
		  return result;
		}
		
		module.exports = keys;


	/***/ },
	/* 222 */
	/***/ function(module, exports) {

		/** Used for built-in method references. */
		var objectProto = Object.prototype;
		
		/** Used to check objects for own properties. */
		var hasOwnProperty = objectProto.hasOwnProperty;
		
		/** Built-in value references. */
		var getPrototypeOf = Object.getPrototypeOf;
		
		/**
		 * The base implementation of `_.has` without support for deep paths.
		 *
		 * @private
		 * @param {Object} object The object to query.
		 * @param {Array|string} key The key to check.
		 * @returns {boolean} Returns `true` if `key` exists, else `false`.
		 */
		function baseHas(object, key) {
		  // Avoid a bug in IE 10-11 where objects with a [[Prototype]] of `null`,
		  // that are composed entirely of index properties, return `false` for
		  // `hasOwnProperty` checks of them.
		  return hasOwnProperty.call(object, key) ||
		    (typeof object == 'object' && key in object && getPrototypeOf(object) === null);
		}
		
		module.exports = baseHas;


	/***/ },
	/* 223 */
	/***/ function(module, exports) {

		/* Built-in method references for those with the same name as other `lodash` methods. */
		var nativeKeys = Object.keys;
		
		/**
		 * The base implementation of `_.keys` which doesn't skip the constructor
		 * property of prototypes or treat sparse arrays as dense.
		 *
		 * @private
		 * @param {Object} object The object to query.
		 * @returns {Array} Returns the array of property names.
		 */
		function baseKeys(object) {
		  return nativeKeys(Object(object));
		}
		
		module.exports = baseKeys;


	/***/ },
	/* 224 */
	/***/ function(module, exports, __webpack_require__) {

		var baseDifference = __webpack_require__(225),
		    isArrayLikeObject = __webpack_require__(203),
		    rest = __webpack_require__(191);
		
		/**
		 * Creates an array excluding all given values using
		 * [`SameValueZero`](http://ecma-international.org/ecma-262/6.0/#sec-samevaluezero)
		 * for equality comparisons.
		 *
		 * @static
		 * @memberOf _
		 * @category Array
		 * @param {Array} array The array to filter.
		 * @param {...*} [values] The values to exclude.
		 * @returns {Array} Returns the new array of filtered values.
		 * @example
		 *
		 * _.without([1, 2, 1, 3], 1, 2);
		 * // => [3]
		 */
		var without = rest(function(array, values) {
		  return isArrayLikeObject(array)
		    ? baseDifference(array, values)
		    : [];
		});
		
		module.exports = without;


	/***/ },
	/* 225 */
	/***/ function(module, exports, __webpack_require__) {

		var SetCache = __webpack_require__(226),
		    arrayIncludes = __webpack_require__(250),
		    arrayIncludesWith = __webpack_require__(251),
		    arrayMap = __webpack_require__(220),
		    baseUnary = __webpack_require__(252),
		    cacheHas = __webpack_require__(253);
		
		/** Used as the size to enable large array optimizations. */
		var LARGE_ARRAY_SIZE = 200;
		
		/**
		 * The base implementation of methods like `_.difference` without support for
		 * excluding multiple arrays or iteratee shorthands.
		 *
		 * @private
		 * @param {Array} array The array to inspect.
		 * @param {Array} values The values to exclude.
		 * @param {Function} [iteratee] The iteratee invoked per element.
		 * @param {Function} [comparator] The comparator invoked per element.
		 * @returns {Array} Returns the new array of filtered values.
		 */
		function baseDifference(array, values, iteratee, comparator) {
		  var index = -1,
		      includes = arrayIncludes,
		      isCommon = true,
		      length = array.length,
		      result = [],
		      valuesLength = values.length;
		
		  if (!length) {
		    return result;
		  }
		  if (iteratee) {
		    values = arrayMap(values, baseUnary(iteratee));
		  }
		  if (comparator) {
		    includes = arrayIncludesWith;
		    isCommon = false;
		  }
		  else if (values.length >= LARGE_ARRAY_SIZE) {
		    includes = cacheHas;
		    isCommon = false;
		    values = new SetCache(values);
		  }
		  outer:
		  while (++index < length) {
		    var value = array[index],
		        computed = iteratee ? iteratee(value) : value;
		
		    if (isCommon && computed === computed) {
		      var valuesIndex = valuesLength;
		      while (valuesIndex--) {
		        if (values[valuesIndex] === computed) {
		          continue outer;
		        }
		      }
		      result.push(value);
		    }
		    else if (!includes(values, computed, comparator)) {
		      result.push(value);
		    }
		  }
		  return result;
		}
		
		module.exports = baseDifference;


	/***/ },
	/* 226 */
	/***/ function(module, exports, __webpack_require__) {

		var MapCache = __webpack_require__(227),
		    cachePush = __webpack_require__(249);
		
		/**
		 *
		 * Creates a set cache object to store unique values.
		 *
		 * @private
		 * @constructor
		 * @param {Array} [values] The values to cache.
		 */
		function SetCache(values) {
		  var index = -1,
		      length = values ? values.length : 0;
		
		  this.__data__ = new MapCache;
		  while (++index < length) {
		    this.push(values[index]);
		  }
		}
		
		// Add functions to the `SetCache`.
		SetCache.prototype.push = cachePush;
		
		module.exports = SetCache;


	/***/ },
	/* 227 */
	/***/ function(module, exports, __webpack_require__) {

		var mapClear = __webpack_require__(228),
		    mapDelete = __webpack_require__(235),
		    mapGet = __webpack_require__(241),
		    mapHas = __webpack_require__(244),
		    mapSet = __webpack_require__(246);
		
		/**
		 * Creates a map cache object to store key-value pairs.
		 *
		 * @private
		 * @constructor
		 * @param {Array} [values] The values to cache.
		 */
		function MapCache(values) {
		  var index = -1,
		      length = values ? values.length : 0;
		
		  this.clear();
		  while (++index < length) {
		    var entry = values[index];
		    this.set(entry[0], entry[1]);
		  }
		}
		
		// Add functions to the `MapCache`.
		MapCache.prototype.clear = mapClear;
		MapCache.prototype['delete'] = mapDelete;
		MapCache.prototype.get = mapGet;
		MapCache.prototype.has = mapHas;
		MapCache.prototype.set = mapSet;
		
		module.exports = MapCache;


	/***/ },
	/* 228 */
	/***/ function(module, exports, __webpack_require__) {

		var Hash = __webpack_require__(229),
		    Map = __webpack_require__(234);
		
		/**
		 * Removes all key-value entries from the map.
		 *
		 * @private
		 * @name clear
		 * @memberOf MapCache
		 */
		function mapClear() {
		  this.__data__ = {
		    'hash': new Hash,
		    'map': Map ? new Map : [],
		    'string': new Hash
		  };
		}
		
		module.exports = mapClear;


	/***/ },
	/* 229 */
	/***/ function(module, exports, __webpack_require__) {

		var nativeCreate = __webpack_require__(230);
		
		/** Used for built-in method references. */
		var objectProto = Object.prototype;
		
		/**
		 * Creates an hash object.
		 *
		 * @private
		 * @constructor
		 * @returns {Object} Returns the new hash object.
		 */
		function Hash() {}
		
		// Avoid inheriting from `Object.prototype` when possible.
		Hash.prototype = nativeCreate ? nativeCreate(null) : objectProto;
		
		module.exports = Hash;


	/***/ },
	/* 230 */
	/***/ function(module, exports, __webpack_require__) {

		var getNative = __webpack_require__(231);
		
		/* Built-in method references that are verified to be native. */
		var nativeCreate = getNative(Object, 'create');
		
		module.exports = nativeCreate;


	/***/ },
	/* 231 */
	/***/ function(module, exports, __webpack_require__) {

		var isNative = __webpack_require__(232);
		
		/**
		 * Gets the native function at `key` of `object`.
		 *
		 * @private
		 * @param {Object} object The object to query.
		 * @param {string} key The key of the method to get.
		 * @returns {*} Returns the function if it's native, else `undefined`.
		 */
		function getNative(object, key) {
		  var value = object[key];
		  return isNative(value) ? value : undefined;
		}
		
		module.exports = getNative;


	/***/ },
	/* 232 */
	/***/ function(module, exports, __webpack_require__) {

		var isFunction = __webpack_require__(187),
		    isHostObject = __webpack_require__(233),
		    isObjectLike = __webpack_require__(204);
		
		/** Used to match `RegExp` [syntax characters](http://ecma-international.org/ecma-262/6.0/#sec-patterns). */
		var reRegExpChar = /[\\^$.*+?()[\]{}|]/g;
		
		/** Used to detect host constructors (Safari > 5). */
		var reIsHostCtor = /^\[object .+?Constructor\]$/;
		
		/** Used for built-in method references. */
		var objectProto = Object.prototype;
		
		/** Used to resolve the decompiled source of functions. */
		var funcToString = Function.prototype.toString;
		
		/** Used to check objects for own properties. */
		var hasOwnProperty = objectProto.hasOwnProperty;
		
		/** Used to detect if a method is native. */
		var reIsNative = RegExp('^' +
		  funcToString.call(hasOwnProperty).replace(reRegExpChar, '\\$&')
		  .replace(/hasOwnProperty|(function).*?(?=\\\()| for .+?(?=\\\])/g, '$1.*?') + '$'
		);
		
		/**
		 * Checks if `value` is a native function.
		 *
		 * @static
		 * @memberOf _
		 * @category Lang
		 * @param {*} value The value to check.
		 * @returns {boolean} Returns `true` if `value` is a native function, else `false`.
		 * @example
		 *
		 * _.isNative(Array.prototype.push);
		 * // => true
		 *
		 * _.isNative(_);
		 * // => false
		 */
		function isNative(value) {
		  if (value == null) {
		    return false;
		  }
		  if (isFunction(value)) {
		    return reIsNative.test(funcToString.call(value));
		  }
		  return isObjectLike(value) &&
		    (isHostObject(value) ? reIsNative : reIsHostCtor).test(value);
		}
		
		module.exports = isNative;


	/***/ },
	/* 233 */
	/***/ function(module, exports) {

		/**
		 * Checks if `value` is a host object in IE < 9.
		 *
		 * @private
		 * @param {*} value The value to check.
		 * @returns {boolean} Returns `true` if `value` is a host object, else `false`.
		 */
		function isHostObject(value) {
		  // Many host objects are `Object` objects that can coerce to strings
		  // despite having improperly defined `toString` methods.
		  var result = false;
		  if (value != null && typeof value.toString != 'function') {
		    try {
		      result = !!(value + '');
		    } catch (e) {}
		  }
		  return result;
		}
		
		module.exports = isHostObject;


	/***/ },
	/* 234 */
	/***/ function(module, exports, __webpack_require__) {

		var getNative = __webpack_require__(231),
		    root = __webpack_require__(197);
		
		/* Built-in method references that are verified to be native. */
		var Map = getNative(root, 'Map');
		
		module.exports = Map;


	/***/ },
	/* 235 */
	/***/ function(module, exports, __webpack_require__) {

		var Map = __webpack_require__(234),
		    assocDelete = __webpack_require__(236),
		    hashDelete = __webpack_require__(238),
		    isKeyable = __webpack_require__(240);
		
		/**
		 * Removes `key` and its value from the map.
		 *
		 * @private
		 * @name delete
		 * @memberOf MapCache
		 * @param {string} key The key of the value to remove.
		 * @returns {boolean} Returns `true` if the entry was removed, else `false`.
		 */
		function mapDelete(key) {
		  var data = this.__data__;
		  if (isKeyable(key)) {
		    return hashDelete(typeof key == 'string' ? data.string : data.hash, key);
		  }
		  return Map ? data.map['delete'](key) : assocDelete(data.map, key);
		}
		
		module.exports = mapDelete;


	/***/ },
	/* 236 */
	/***/ function(module, exports, __webpack_require__) {

		var assocIndexOf = __webpack_require__(237);
		
		/** Used for built-in method references. */
		var arrayProto = Array.prototype;
		
		/** Built-in value references. */
		var splice = arrayProto.splice;
		
		/**
		 * Removes `key` and its value from the associative array.
		 *
		 * @private
		 * @param {Array} array The array to query.
		 * @param {string} key The key of the value to remove.
		 * @returns {boolean} Returns `true` if the entry was removed, else `false`.
		 */
		function assocDelete(array, key) {
		  var index = assocIndexOf(array, key);
		  if (index < 0) {
		    return false;
		  }
		  var lastIndex = array.length - 1;
		  if (index == lastIndex) {
		    array.pop();
		  } else {
		    splice.call(array, index, 1);
		  }
		  return true;
		}
		
		module.exports = assocDelete;


	/***/ },
	/* 237 */
	/***/ function(module, exports, __webpack_require__) {

		var eq = __webpack_require__(178);
		
		/**
		 * Gets the index at which the first occurrence of `key` is found in `array`
		 * of key-value pairs.
		 *
		 * @private
		 * @param {Array} array The array to search.
		 * @param {*} key The key to search for.
		 * @returns {number} Returns the index of the matched value, else `-1`.
		 */
		function assocIndexOf(array, key) {
		  var length = array.length;
		  while (length--) {
		    if (eq(array[length][0], key)) {
		      return length;
		    }
		  }
		  return -1;
		}
		
		module.exports = assocIndexOf;


	/***/ },
	/* 238 */
	/***/ function(module, exports, __webpack_require__) {

		var hashHas = __webpack_require__(239);
		
		/**
		 * Removes `key` and its value from the hash.
		 *
		 * @private
		 * @param {Object} hash The hash to modify.
		 * @param {string} key The key of the value to remove.
		 * @returns {boolean} Returns `true` if the entry was removed, else `false`.
		 */
		function hashDelete(hash, key) {
		  return hashHas(hash, key) && delete hash[key];
		}
		
		module.exports = hashDelete;


	/***/ },
	/* 239 */
	/***/ function(module, exports, __webpack_require__) {

		var nativeCreate = __webpack_require__(230);
		
		/** Used for built-in method references. */
		var objectProto = Object.prototype;
		
		/** Used to check objects for own properties. */
		var hasOwnProperty = objectProto.hasOwnProperty;
		
		/**
		 * Checks if a hash value for `key` exists.
		 *
		 * @private
		 * @param {Object} hash The hash to query.
		 * @param {string} key The key of the entry to check.
		 * @returns {boolean} Returns `true` if an entry for `key` exists, else `false`.
		 */
		function hashHas(hash, key) {
		  return nativeCreate ? hash[key] !== undefined : hasOwnProperty.call(hash, key);
		}
		
		module.exports = hashHas;


	/***/ },
	/* 240 */
	/***/ function(module, exports) {

		/**
		 * Checks if `value` is suitable for use as unique object key.
		 *
		 * @private
		 * @param {*} value The value to check.
		 * @returns {boolean} Returns `true` if `value` is suitable, else `false`.
		 */
		function isKeyable(value) {
		  var type = typeof value;
		  return type == 'number' || type == 'boolean' ||
		    (type == 'string' && value != '__proto__') || value == null;
		}
		
		module.exports = isKeyable;


	/***/ },
	/* 241 */
	/***/ function(module, exports, __webpack_require__) {

		var Map = __webpack_require__(234),
		    assocGet = __webpack_require__(242),
		    hashGet = __webpack_require__(243),
		    isKeyable = __webpack_require__(240);
		
		/**
		 * Gets the map value for `key`.
		 *
		 * @private
		 * @name get
		 * @memberOf MapCache
		 * @param {string} key The key of the value to get.
		 * @returns {*} Returns the entry value.
		 */
		function mapGet(key) {
		  var data = this.__data__;
		  if (isKeyable(key)) {
		    return hashGet(typeof key == 'string' ? data.string : data.hash, key);
		  }
		  return Map ? data.map.get(key) : assocGet(data.map, key);
		}
		
		module.exports = mapGet;


	/***/ },
	/* 242 */
	/***/ function(module, exports, __webpack_require__) {

		var assocIndexOf = __webpack_require__(237);
		
		/**
		 * Gets the associative array value for `key`.
		 *
		 * @private
		 * @param {Array} array The array to query.
		 * @param {string} key The key of the value to get.
		 * @returns {*} Returns the entry value.
		 */
		function assocGet(array, key) {
		  var index = assocIndexOf(array, key);
		  return index < 0 ? undefined : array[index][1];
		}
		
		module.exports = assocGet;


	/***/ },
	/* 243 */
	/***/ function(module, exports, __webpack_require__) {

		var nativeCreate = __webpack_require__(230);
		
		/** Used to stand-in for `undefined` hash values. */
		var HASH_UNDEFINED = '__lodash_hash_undefined__';
		
		/** Used for built-in method references. */
		var objectProto = Object.prototype;
		
		/** Used to check objects for own properties. */
		var hasOwnProperty = objectProto.hasOwnProperty;
		
		/**
		 * Gets the hash value for `key`.
		 *
		 * @private
		 * @param {Object} hash The hash to query.
		 * @param {string} key The key of the value to get.
		 * @returns {*} Returns the entry value.
		 */
		function hashGet(hash, key) {
		  if (nativeCreate) {
		    var result = hash[key];
		    return result === HASH_UNDEFINED ? undefined : result;
		  }
		  return hasOwnProperty.call(hash, key) ? hash[key] : undefined;
		}
		
		module.exports = hashGet;


	/***/ },
	/* 244 */
	/***/ function(module, exports, __webpack_require__) {

		var Map = __webpack_require__(234),
		    assocHas = __webpack_require__(245),
		    hashHas = __webpack_require__(239),
		    isKeyable = __webpack_require__(240);
		
		/**
		 * Checks if a map value for `key` exists.
		 *
		 * @private
		 * @name has
		 * @memberOf MapCache
		 * @param {string} key The key of the entry to check.
		 * @returns {boolean} Returns `true` if an entry for `key` exists, else `false`.
		 */
		function mapHas(key) {
		  var data = this.__data__;
		  if (isKeyable(key)) {
		    return hashHas(typeof key == 'string' ? data.string : data.hash, key);
		  }
		  return Map ? data.map.has(key) : assocHas(data.map, key);
		}
		
		module.exports = mapHas;


	/***/ },
	/* 245 */
	/***/ function(module, exports, __webpack_require__) {

		var assocIndexOf = __webpack_require__(237);
		
		/**
		 * Checks if an associative array value for `key` exists.
		 *
		 * @private
		 * @param {Array} array The array to query.
		 * @param {string} key The key of the entry to check.
		 * @returns {boolean} Returns `true` if an entry for `key` exists, else `false`.
		 */
		function assocHas(array, key) {
		  return assocIndexOf(array, key) > -1;
		}
		
		module.exports = assocHas;


	/***/ },
	/* 246 */
	/***/ function(module, exports, __webpack_require__) {

		var Map = __webpack_require__(234),
		    assocSet = __webpack_require__(247),
		    hashSet = __webpack_require__(248),
		    isKeyable = __webpack_require__(240);
		
		/**
		 * Sets the map `key` to `value`.
		 *
		 * @private
		 * @name set
		 * @memberOf MapCache
		 * @param {string} key The key of the value to set.
		 * @param {*} value The value to set.
		 * @returns {Object} Returns the map cache object.
		 */
		function mapSet(key, value) {
		  var data = this.__data__;
		  if (isKeyable(key)) {
		    hashSet(typeof key == 'string' ? data.string : data.hash, key, value);
		  } else if (Map) {
		    data.map.set(key, value);
		  } else {
		    assocSet(data.map, key, value);
		  }
		  return this;
		}
		
		module.exports = mapSet;


	/***/ },
	/* 247 */
	/***/ function(module, exports, __webpack_require__) {

		var assocIndexOf = __webpack_require__(237);
		
		/**
		 * Sets the associative array `key` to `value`.
		 *
		 * @private
		 * @param {Array} array The array to modify.
		 * @param {string} key The key of the value to set.
		 * @param {*} value The value to set.
		 */
		function assocSet(array, key, value) {
		  var index = assocIndexOf(array, key);
		  if (index < 0) {
		    array.push([key, value]);
		  } else {
		    array[index][1] = value;
		  }
		}
		
		module.exports = assocSet;


	/***/ },
	/* 248 */
	/***/ function(module, exports, __webpack_require__) {

		var nativeCreate = __webpack_require__(230);
		
		/** Used to stand-in for `undefined` hash values. */
		var HASH_UNDEFINED = '__lodash_hash_undefined__';
		
		/**
		 * Sets the hash `key` to `value`.
		 *
		 * @private
		 * @param {Object} hash The hash to modify.
		 * @param {string} key The key of the value to set.
		 * @param {*} value The value to set.
		 */
		function hashSet(hash, key, value) {
		  hash[key] = (nativeCreate && value === undefined) ? HASH_UNDEFINED : value;
		}
		
		module.exports = hashSet;


	/***/ },
	/* 249 */
	/***/ function(module, exports, __webpack_require__) {

		var isKeyable = __webpack_require__(240);
		
		/** Used to stand-in for `undefined` hash values. */
		var HASH_UNDEFINED = '__lodash_hash_undefined__';
		
		/**
		 * Adds `value` to the set cache.
		 *
		 * @private
		 * @name push
		 * @memberOf SetCache
		 * @param {*} value The value to cache.
		 */
		function cachePush(value) {
		  var map = this.__data__;
		  if (isKeyable(value)) {
		    var data = map.__data__,
		        hash = typeof value == 'string' ? data.string : data.hash;
		
		    hash[value] = HASH_UNDEFINED;
		  }
		  else {
		    map.set(value, HASH_UNDEFINED);
		  }
		}
		
		module.exports = cachePush;


	/***/ },
	/* 250 */
	/***/ function(module, exports, __webpack_require__) {

		var baseIndexOf = __webpack_require__(216);
		
		/**
		 * A specialized version of `_.includes` for arrays without support for
		 * specifying an index to search from.
		 *
		 * @private
		 * @param {Array} array The array to search.
		 * @param {*} target The value to search for.
		 * @returns {boolean} Returns `true` if `target` is found, else `false`.
		 */
		function arrayIncludes(array, value) {
		  return !!array.length && baseIndexOf(array, value, 0) > -1;
		}
		
		module.exports = arrayIncludes;


	/***/ },
	/* 251 */
	/***/ function(module, exports) {

		/**
		 * This function is like `arrayIncludes` except that it accepts a comparator.
		 *
		 * @private
		 * @param {Array} array The array to search.
		 * @param {*} target The value to search for.
		 * @param {Function} comparator The comparator invoked per element.
		 * @returns {boolean} Returns `true` if `target` is found, else `false`.
		 */
		function arrayIncludesWith(array, value, comparator) {
		  var index = -1,
		      length = array.length;
		
		  while (++index < length) {
		    if (comparator(value, array[index])) {
		      return true;
		    }
		  }
		  return false;
		}
		
		module.exports = arrayIncludesWith;


	/***/ },
	/* 252 */
	/***/ function(module, exports) {

		/**
		 * The base implementation of `_.unary` without support for storing wrapper metadata.
		 *
		 * @private
		 * @param {Function} func The function to cap arguments for.
		 * @returns {Function} Returns the new function.
		 */
		function baseUnary(func) {
		  return function(value) {
		    return func(value);
		  };
		}
		
		module.exports = baseUnary;


	/***/ },
	/* 253 */
	/***/ function(module, exports, __webpack_require__) {

		var isKeyable = __webpack_require__(240);
		
		/** Used to stand-in for `undefined` hash values. */
		var HASH_UNDEFINED = '__lodash_hash_undefined__';
		
		/**
		 * Checks if `value` is in `cache`.
		 *
		 * @private
		 * @param {Object} cache The set cache to search.
		 * @param {*} value The value to search for.
		 * @returns {number} Returns `true` if `value` is found, else `false`.
		 */
		function cacheHas(cache, value) {
		  var map = cache.__data__;
		  if (isKeyable(value)) {
		    var data = map.__data__,
		        hash = typeof value == 'string' ? data.string : data.hash;
		
		    return hash[value] === HASH_UNDEFINED;
		  }
		  return map.has(value);
		}
		
		module.exports = cacheHas;


	/***/ },
	/* 254 */
	/***/ function(module, exports, __webpack_require__) {

		var createRange = __webpack_require__(255);
		
		/**
		 * Creates an array of numbers (positive and/or negative) progressing from
		 * `start` up to, but not including, `end`. A step of `-1` is used if a negative
		 * `start` is specified without an `end` or `step`. If `end` is not specified
		 * it's set to `start` with `start` then set to `0`.
		 *
		 * **Note:** JavaScript follows the IEEE-754 standard for resolving
		 * floating-point values which can produce unexpected results.
		 *
		 * @static
		 * @memberOf _
		 * @category Util
		 * @param {number} [start=0] The start of the range.
		 * @param {number} end The end of the range.
		 * @param {number} [step=1] The value to increment or decrement by.
		 * @returns {Array} Returns the new array of numbers.
		 * @example
		 *
		 * _.range(4);
		 * // => [0, 1, 2, 3]
		 *
		 * _.range(-4);
		 * // => [0, -1, -2, -3]
		 *
		 * _.range(1, 5);
		 * // => [1, 2, 3, 4]
		 *
		 * _.range(0, 20, 5);
		 * // => [0, 5, 10, 15]
		 *
		 * _.range(0, -4, -1);
		 * // => [0, -1, -2, -3]
		 *
		 * _.range(1, 4, 0);
		 * // => [1, 1, 1]
		 *
		 * _.range(0);
		 * // => []
		 */
		var range = createRange();
		
		module.exports = range;


	/***/ },
	/* 255 */
	/***/ function(module, exports, __webpack_require__) {

		var baseRange = __webpack_require__(256),
		    isIterateeCall = __webpack_require__(183),
		    toNumber = __webpack_require__(193);
		
		/**
		 * Creates a `_.range` or `_.rangeRight` function.
		 *
		 * @private
		 * @param {boolean} [fromRight] Specify iterating from right to left.
		 * @returns {Function} Returns the new range function.
		 */
		function createRange(fromRight) {
		  return function(start, end, step) {
		    if (step && typeof step != 'number' && isIterateeCall(start, end, step)) {
		      end = step = undefined;
		    }
		    // Ensure the sign of `-0` is preserved.
		    start = toNumber(start);
		    start = start === start ? start : 0;
		    if (end === undefined) {
		      end = start;
		      start = 0;
		    } else {
		      end = toNumber(end) || 0;
		    }
		    step = step === undefined ? (start < end ? 1 : -1) : (toNumber(step) || 0);
		    return baseRange(start, end, step, fromRight);
		  };
		}
		
		module.exports = createRange;


	/***/ },
	/* 256 */
	/***/ function(module, exports) {

		/* Built-in method references for those with the same name as other `lodash` methods. */
		var nativeCeil = Math.ceil,
		    nativeMax = Math.max;
		
		/**
		 * The base implementation of `_.range` and `_.rangeRight` which doesn't
		 * coerce arguments to numbers.
		 *
		 * @private
		 * @param {number} start The start of the range.
		 * @param {number} end The end of the range.
		 * @param {number} step The value to increment or decrement by.
		 * @param {boolean} [fromRight] Specify iterating from right to left.
		 * @returns {Array} Returns the new array of numbers.
		 */
		function baseRange(start, end, step, fromRight) {
		  var index = -1,
		      length = nativeMax(nativeCeil((end - start) / (step || 1)), 0),
		      result = Array(length);
		
		  while (length--) {
		    result[fromRight ? length : ++index] = start;
		    start += step;
		  }
		  return result;
		}
		
		module.exports = baseRange;


	/***/ },
	/* 257 */
	/***/ function(module, exports, __webpack_require__) {

		"use strict";
		
		Object.defineProperty(exports, "__esModule", {
		  value: true
		});
		
		var _flatten = __webpack_require__(258);
		
		var _flatten2 = _interopRequireDefault(_flatten);
		
		var _includes = __webpack_require__(215);
		
		var _includes2 = _interopRequireDefault(_includes);
		
		var _isFunction = __webpack_require__(187);
		
		var _isFunction2 = _interopRequireDefault(_isFunction);
		
		var _victoryCore = __webpack_require__(1);
		
		var _d3Scale = __webpack_require__(261);
		
		var _d3Scale2 = _interopRequireDefault(_d3Scale);
		
		function _interopRequireDefault(obj) { return obj && obj.__esModule ? obj : { default: obj }; }
		
		var supportedScaleStrings = ["linear", "time", "log", "sqrt"];
		
		exports.default = {
		  getDefaultScale: function getDefaultScale() {
		    return _d3Scale2.default.scaleLinear();
		  },
		  toNewName: function toNewName(scale) {
		    // d3 scale changed the naming scheme for scale from "linear" -> "scaleLinear" etc.
		    var capitalize = function capitalize(s) {
		      return s && s[0].toUpperCase() + s.slice(1);
		    };
		    return "scale" + capitalize(scale);
		  },
		  validScale: function validScale(scale) {
		    if (typeof scale === "function") {
		      return (0, _isFunction2.default)(scale.copy) && (0, _isFunction2.default)(scale.domain) && (0, _isFunction2.default)(scale.range);
		    } else if (typeof scale === "string") {
		      return (0, _includes2.default)(supportedScaleStrings, scale);
		    }
		    return false;
		  },
		  isScaleDefined: function isScaleDefined(props, axis) {
		    if (!props.scale) {
		      return false;
		    } else if (props.scale.x || props.scale.y) {
		      return props.scale[axis] ? true : false;
		    }
		    return true;
		  },
		  getScaleFromProps: function getScaleFromProps(props, axis) {
		    if (!this.isScaleDefined(props, axis)) {
		      return undefined;
		    }
		    var scale = props.scale[axis] || props.scale;
		    if (this.validScale(scale)) {
		      return (0, _isFunction2.default)(scale) ? scale : _d3Scale2.default[this.toNewName(scale)]();
		    }
		  },
		  getScaleTypeFromData: function getScaleTypeFromData(props, axis) {
		    if (!props.data) {
		      return "linear";
		    }
		    var accessor = _victoryCore.Helpers.createAccessor(props[axis]);
		    var allData = (0, _flatten2.default)(props.data);
		    var axisData = allData.map(accessor);
		    return _victoryCore.Collection.containsDates(axisData) ? "time" : "linear";
		  },
		  getBaseScale: function getBaseScale(props, axis) {
		    var scale = this.getScaleFromProps(props, axis);
		    if (scale) {
		      return scale;
		    }
		    var dataScale = this.getScaleTypeFromData(props, axis);
		    return _d3Scale2.default[this.toNewName(dataScale)]();
		  },
		  getScaleType: function getScaleType(props, axis) {
		    var scale = this.getScaleFromProps(props, axis);
		    // if the scale was not given in props, it will be set to linear or time depending on data
		    if (!scale) {
		      return this.getScaleTypeFromData(props, axis);
		    } else if (typeof scale === "string") {
		      return (0, _includes2.default)(supportedScaleStrings, scale) ? scale : "invalid";
		    } else if (!this.validScale(scale)) {
		      return "invalid";
		    }
		    var duckTypes = [{ name: "log", method: "base" }, { name: "ordinal", method: "unknown" }, { name: "pow-sqrt", method: "exponent" }, { name: "quantile", method: "quantiles" }, { name: "quantize-threshold", method: "invertExtent" }];
		    var scaleType = duckTypes.filter(function (type) {
		      return scale[type.method] !== undefined;
		    })[0];
		    if (scaleType) {
		      return scaleType.name;
		    }
		    return this.getScaleTypeFromData(props, axis);
		  }
		};

	/***/ },
	/* 258 */
	/***/ function(module, exports, __webpack_require__) {

		var baseFlatten = __webpack_require__(259);
		
		/**
		 * Flattens `array` a single level deep.
		 *
		 * @static
		 * @memberOf _
		 * @category Array
		 * @param {Array} array The array to flatten.
		 * @returns {Array} Returns the new flattened array.
		 * @example
		 *
		 * _.flatten([1, [2, [3, [4]], 5]]);
		 * // => [1, 2, [3, [4]], 5]
		 */
		function flatten(array) {
		  var length = array ? array.length : 0;
		  return length ? baseFlatten(array, 1) : [];
		}
		
		module.exports = flatten;


	/***/ },
	/* 259 */
	/***/ function(module, exports, __webpack_require__) {

		var arrayPush = __webpack_require__(260),
		    isArguments = __webpack_require__(202),
		    isArray = __webpack_require__(205),
		    isArrayLikeObject = __webpack_require__(203);
		
		/**
		 * The base implementation of `_.flatten` with support for restricting flattening.
		 *
		 * @private
		 * @param {Array} array The array to flatten.
		 * @param {number} depth The maximum recursion depth.
		 * @param {boolean} [isStrict] Restrict flattening to arrays-like objects.
		 * @param {Array} [result=[]] The initial result value.
		 * @returns {Array} Returns the new flattened array.
		 */
		function baseFlatten(array, depth, isStrict, result) {
		  result || (result = []);
		
		  var index = -1,
		      length = array.length;
		
		  while (++index < length) {
		    var value = array[index];
		    if (depth > 0 && isArrayLikeObject(value) &&
		        (isStrict || isArray(value) || isArguments(value))) {
		      if (depth > 1) {
		        // Recursively flatten arrays (susceptible to call stack limits).
		        baseFlatten(value, depth - 1, isStrict, result);
		      } else {
		        arrayPush(result, value);
		      }
		    } else if (!isStrict) {
		      result[result.length] = value;
		    }
		  }
		  return result;
		}
		
		module.exports = baseFlatten;


	/***/ },
	/* 260 */
	/***/ function(module, exports) {

		/**
		 * Appends the elements of `values` to `array`.
		 *
		 * @private
		 * @param {Array} array The array to modify.
		 * @param {Array} values The values to append.
		 * @returns {Array} Returns `array`.
		 */
		function arrayPush(array, values) {
		  var index = -1,
		      length = values.length,
		      offset = array.length;
		
		  while (++index < length) {
		    array[offset + index] = values[index];
		  }
		  return array;
		}
		
		module.exports = arrayPush;


	/***/ },
	/* 261 */
	/***/ function(module, exports, __webpack_require__) {

		(function (global, factory) {
		   true ? factory(exports, __webpack_require__(262), __webpack_require__(263), __webpack_require__(264), __webpack_require__(266), __webpack_require__(267), __webpack_require__(268), __webpack_require__(265)) :
		  typeof define === 'function' && define.amd ? define(['exports', 'd3-array', 'd3-collection', 'd3-interpolate', 'd3-format', 'd3-time', 'd3-time-format', 'd3-color'], factory) :
		  (factory((global.d3_scale = global.d3_scale || {}),global.d3_array,global.d3_collection,global.d3_interpolate,global.d3_format,global.d3_time,global.d3_time_format,global.d3_color));
		}(this, function (exports,d3Array,d3Collection,d3Interpolate,d3Format,d3Time,d3TimeFormat,d3Color) { 'use strict';
		
		  var array = Array.prototype;
		
		  var map$1 = array.map;
		  var slice = array.slice;
		
		  var implicit = {name: "implicit"};
		
		  function ordinal() {
		    var index = d3Collection.map(),
		        domain = [],
		        range = [],
		        unknown = implicit;
		
		    function scale(d) {
		      var key = d + "", i = index.get(key);
		      if (!i) {
		        if (unknown !== implicit) return unknown;
		        index.set(key, i = domain.push(d));
		      }
		      return range[(i - 1) % range.length];
		    }
		
		    scale.domain = function(_) {
		      if (!arguments.length) return domain.slice();
		      domain = [], index = d3Collection.map();
		      var i = -1, n = _.length, d, key;
		      while (++i < n) if (!index.has(key = (d = _[i]) + "")) index.set(key, domain.push(d));
		      return scale;
		    };
		
		    scale.range = function(_) {
		      return arguments.length ? (range = slice.call(_), scale) : range.slice();
		    };
		
		    scale.unknown = function(_) {
		      return arguments.length ? (unknown = _, scale) : unknown;
		    };
		
		    scale.copy = function() {
		      return ordinal()
		          .domain(domain)
		          .range(range)
		          .unknown(unknown);
		    };
		
		    return scale;
		  }
		
		  function band() {
		    var scale = ordinal().unknown(undefined),
		        domain = scale.domain,
		        ordinalRange = scale.range,
		        range = [0, 1],
		        step,
		        bandwidth,
		        round = false,
		        paddingInner = 0,
		        paddingOuter = 0,
		        align = 0.5;
		
		    delete scale.unknown;
		
		    function rescale() {
		      var n = domain().length,
		          reverse = range[1] < range[0],
		          start = range[reverse - 0],
		          stop = range[1 - reverse];
		      step = (stop - start) / Math.max(1, n - paddingInner + paddingOuter * 2);
		      if (round) step = Math.floor(step);
		      start += (stop - start - step * (n - paddingInner)) * align;
		      bandwidth = step * (1 - paddingInner);
		      if (round) start = Math.round(start), bandwidth = Math.round(bandwidth);
		      var values = d3Array.range(n).map(function(i) { return start + step * i; });
		      return ordinalRange(reverse ? values.reverse() : values);
		    }
		
		    scale.domain = function(_) {
		      return arguments.length ? (domain(_), rescale()) : domain();
		    };
		
		    scale.range = function(_) {
		      return arguments.length ? (range = [+_[0], +_[1]], rescale()) : range.slice();
		    };
		
		    scale.rangeRound = function(_) {
		      return range = [+_[0], +_[1]], round = true, rescale();
		    };
		
		    scale.bandwidth = function() {
		      return bandwidth;
		    };
		
		    scale.step = function() {
		      return step;
		    };
		
		    scale.round = function(_) {
		      return arguments.length ? (round = !!_, rescale()) : round;
		    };
		
		    scale.padding = function(_) {
		      return arguments.length ? (paddingInner = paddingOuter = Math.max(0, Math.min(1, _)), rescale()) : paddingInner;
		    };
		
		    scale.paddingInner = function(_) {
		      return arguments.length ? (paddingInner = Math.max(0, Math.min(1, _)), rescale()) : paddingInner;
		    };
		
		    scale.paddingOuter = function(_) {
		      return arguments.length ? (paddingOuter = Math.max(0, Math.min(1, _)), rescale()) : paddingOuter;
		    };
		
		    scale.align = function(_) {
		      return arguments.length ? (align = Math.max(0, Math.min(1, _)), rescale()) : align;
		    };
		
		    scale.copy = function() {
		      return band()
		          .domain(domain())
		          .range(range)
		          .round(round)
		          .paddingInner(paddingInner)
		          .paddingOuter(paddingOuter)
		          .align(align);
		    };
		
		    return rescale();
		  }
		
		  function pointish(scale) {
		    var copy = scale.copy;
		
		    scale.padding = scale.paddingOuter;
		    delete scale.paddingInner;
		    delete scale.paddingOuter;
		
		    scale.copy = function() {
		      return pointish(copy());
		    };
		
		    return scale;
		  }
		
		  function point() {
		    return pointish(band().paddingInner(1));
		  }
		
		  function constant(x) {
		    return function() {
		      return x;
		    };
		  }
		
		  function number(x) {
		    return +x;
		  }
		
		  var unit = [0, 1];
		
		  function deinterpolate(a, b) {
		    return (b -= (a = +a))
		        ? function(x) { return (x - a) / b; }
		        : constant(b);
		  }
		
		  function deinterpolateClamp(deinterpolate) {
		    return function(a, b) {
		      var d = deinterpolate(a = +a, b = +b);
		      return function(x) { return x <= a ? 0 : x >= b ? 1 : d(x); };
		    };
		  }
		
		  function reinterpolateClamp(reinterpolate) {
		    return function(a, b) {
		      var r = reinterpolate(a = +a, b = +b);
		      return function(t) { return t <= 0 ? a : t >= 1 ? b : r(t); };
		    };
		  }
		
		  function bimap(domain, range, deinterpolate, reinterpolate) {
		    var d0 = domain[0], d1 = domain[1], r0 = range[0], r1 = range[1];
		    if (d1 < d0) d0 = deinterpolate(d1, d0), r0 = reinterpolate(r1, r0);
		    else d0 = deinterpolate(d0, d1), r0 = reinterpolate(r0, r1);
		    return function(x) { return r0(d0(x)); };
		  }
		
		  function polymap(domain, range, deinterpolate, reinterpolate) {
		    var j = Math.min(domain.length, range.length) - 1,
		        d = new Array(j),
		        r = new Array(j),
		        i = -1;
		
		    // Reverse descending domains.
		    if (domain[j] < domain[0]) {
		      domain = domain.slice().reverse();
		      range = range.slice().reverse();
		    }
		
		    while (++i < j) {
		      d[i] = deinterpolate(domain[i], domain[i + 1]);
		      r[i] = reinterpolate(range[i], range[i + 1]);
		    }
		
		    return function(x) {
		      var i = d3Array.bisect(domain, x, 1, j) - 1;
		      return r[i](d[i](x));
		    };
		  }
		
		  function copy(source, target) {
		    return target
		        .domain(source.domain())
		        .range(source.range())
		        .interpolate(source.interpolate())
		        .clamp(source.clamp());
		  }
		
		  // deinterpolate(a, b)(x) takes a domain value x in [a,b] and returns the corresponding parameter t in [0,1].
		  // reinterpolate(a, b)(t) takes a parameter t in [0,1] and returns the corresponding domain value x in [a,b].
		  function continuous(deinterpolate$$, reinterpolate) {
		    var domain = unit,
		        range = unit,
		        interpolate = d3Interpolate.interpolate,
		        clamp = false,
		        output,
		        input;
		
		    function rescale() {
		      var map = Math.min(domain.length, range.length) > 2 ? polymap : bimap;
		      output = map(domain, range, clamp ? deinterpolateClamp(deinterpolate$$) : deinterpolate$$, interpolate);
		      input = map(range, domain, deinterpolate, clamp ? reinterpolateClamp(reinterpolate) : reinterpolate);
		      return scale;
		    }
		
		    function scale(x) {
		      return output(+x);
		    }
		
		    scale.invert = function(y) {
		      return input(+y);
		    };
		
		    scale.domain = function(_) {
		      return arguments.length ? (domain = map$1.call(_, number), rescale()) : domain.slice();
		    };
		
		    scale.range = function(_) {
		      return arguments.length ? (range = slice.call(_), rescale()) : range.slice();
		    };
		
		    scale.rangeRound = function(_) {
		      return range = slice.call(_), interpolate = d3Interpolate.interpolateRound, rescale();
		    };
		
		    scale.clamp = function(_) {
		      return arguments.length ? (clamp = !!_, rescale()) : clamp;
		    };
		
		    scale.interpolate = function(_) {
		      return arguments.length ? (interpolate = _, rescale()) : interpolate;
		    };
		
		    return rescale();
		  }
		
		  function tickFormat(domain, count, specifier) {
		    var start = domain[0],
		        stop = domain[domain.length - 1],
		        step = d3Array.tickStep(start, stop, count == null ? 10 : count),
		        precision;
		    specifier = d3Format.formatSpecifier(specifier == null ? ",f" : specifier);
		    switch (specifier.type) {
		      case "s": {
		        var value = Math.max(Math.abs(start), Math.abs(stop));
		        if (specifier.precision == null && !isNaN(precision = d3Format.precisionPrefix(step, value))) specifier.precision = precision;
		        return d3Format.formatPrefix(specifier, value);
		      }
		      case "":
		      case "e":
		      case "g":
		      case "p":
		      case "r": {
		        if (specifier.precision == null && !isNaN(precision = d3Format.precisionRound(step, Math.max(Math.abs(start), Math.abs(stop))))) specifier.precision = precision - (specifier.type === "e");
		        break;
		      }
		      case "f":
		      case "%": {
		        if (specifier.precision == null && !isNaN(precision = d3Format.precisionFixed(step))) specifier.precision = precision - (specifier.type === "%") * 2;
		        break;
		      }
		    }
		    return d3Format.format(specifier);
		  }
		
		  function linearish(scale) {
		    var domain = scale.domain;
		
		    scale.ticks = function(count) {
		      var d = domain();
		      return d3Array.ticks(d[0], d[d.length - 1], count == null ? 10 : count);
		    };
		
		    scale.tickFormat = function(count, specifier) {
		      return tickFormat(domain(), count, specifier);
		    };
		
		    scale.nice = function(count) {
		      var d = domain(),
		          i = d.length - 1,
		          n = count == null ? 10 : count,
		          start = d[0],
		          stop = d[i],
		          step = d3Array.tickStep(start, stop, n);
		
		      if (step) {
		        step = d3Array.tickStep(Math.floor(start / step) * step, Math.ceil(stop / step) * step, n);
		        d[0] = Math.floor(start / step) * step;
		        d[i] = Math.ceil(stop / step) * step;
		        domain(d);
		      }
		
		      return scale;
		    };
		
		    return scale;
		  }
		
		  function linear() {
		    var scale = continuous(deinterpolate, d3Interpolate.interpolateNumber);
		
		    scale.copy = function() {
		      return copy(scale, linear());
		    };
		
		    return linearish(scale);
		  }
		
		  function identity() {
		    var domain = [0, 1];
		
		    function scale(x) {
		      return +x;
		    }
		
		    scale.invert = scale;
		
		    scale.domain = scale.range = function(_) {
		      return arguments.length ? (domain = map$1.call(_, number), scale) : domain.slice();
		    };
		
		    scale.copy = function() {
		      return identity().domain(domain);
		    };
		
		    return linearish(scale);
		  }
		
		  function nice(domain, interval) {
		    domain = domain.slice();
		
		    var i0 = 0,
		        i1 = domain.length - 1,
		        x0 = domain[i0],
		        x1 = domain[i1],
		        t;
		
		    if (x1 < x0) {
		      t = i0, i0 = i1, i1 = t;
		      t = x0, x0 = x1, x1 = t;
		    }
		
		    domain[i0] = interval.floor(x0);
		    domain[i1] = interval.ceil(x1);
		    return domain;
		  }
		
		  function deinterpolate$1(a, b) {
		    return (b = Math.log(b / a))
		        ? function(x) { return Math.log(x / a) / b; }
		        : constant(b);
		  }
		
		  function reinterpolate(a, b) {
		    return a < 0
		        ? function(t) { return -Math.pow(-b, t) * Math.pow(-a, 1 - t); }
		        : function(t) { return Math.pow(b, t) * Math.pow(a, 1 - t); };
		  }
		
		  function pow10(x) {
		    return isFinite(x) ? +("1e" + x) : x < 0 ? 0 : x;
		  }
		
		  function powp(base) {
		    return base === 10 ? pow10
		        : base === Math.E ? Math.exp
		        : function(x) { return Math.pow(base, x); };
		  }
		
		  function logp(base) {
		    return base === Math.E ? Math.log
		        : base === 10 && Math.log10
		        || base === 2 && Math.log2
		        || (base = Math.log(base), function(x) { return Math.log(x) / base; });
		  }
		
		  function reflect(f) {
		    return function(x) {
		      return -f(-x);
		    };
		  }
		
		  function log() {
		    var scale = continuous(deinterpolate$1, reinterpolate).domain([1, 10]),
		        domain = scale.domain,
		        base = 10,
		        logs = logp(10),
		        pows = powp(10);
		
		    function rescale() {
		      logs = logp(base), pows = powp(base);
		      if (domain()[0] < 0) logs = reflect(logs), pows = reflect(pows);
		      return scale;
		    }
		
		    scale.base = function(_) {
		      return arguments.length ? (base = +_, rescale()) : base;
		    };
		
		    scale.domain = function(_) {
		      return arguments.length ? (domain(_), rescale()) : domain();
		    };
		
		    scale.ticks = function(count) {
		      var d = domain(),
		          u = d[0],
		          v = d[d.length - 1],
		          r;
		
		      if (r = v < u) i = u, u = v, v = i;
		
		      var i = logs(u),
		          j = logs(v),
		          p,
		          k,
		          t,
		          n = count == null ? 10 : +count,
		          z = [];
		
		      if (!(base % 1) && j - i < n) {
		        i = Math.round(i) - 1, j = Math.round(j) + 1;
		        if (u > 0) for (; i < j; ++i) {
		          for (k = 1, p = pows(i); k < base; ++k) {
		            t = p * k;
		            if (t < u) continue;
		            if (t > v) break;
		            z.push(t);
		          }
		        } else for (; i < j; ++i) {
		          for (k = base - 1, p = pows(i); k >= 1; --k) {
		            t = p * k;
		            if (t < u) continue;
		            if (t > v) break;
		            z.push(t);
		          }
		        }
		        if (r) z.reverse();
		      } else {
		        z = d3Array.ticks(i, j, Math.min(j - i, n)).map(pows);
		      }
		
		      return z;
		    };
		
		    scale.tickFormat = function(count, specifier) {
		      if (specifier == null) specifier = base === 10 ? ".0e" : ",";
		      if (typeof specifier !== "function") specifier = d3Format.format(specifier);
		      if (count === Infinity) return specifier;
		      if (count == null) count = 10;
		      var k = Math.max(1, base * count / scale.ticks().length); // TODO fast estimate?
		      return function(d) {
		        var i = d / pows(Math.round(logs(d)));
		        if (i * base < base - 0.5) i *= base;
		        return i <= k ? specifier(d) : "";
		      };
		    };
		
		    scale.nice = function() {
		      return domain(nice(domain(), {
		        floor: function(x) { return pows(Math.floor(logs(x))); },
		        ceil: function(x) { return pows(Math.ceil(logs(x))); }
		      }));
		    };
		
		    scale.copy = function() {
		      return copy(scale, log().base(base));
		    };
		
		    return scale;
		  }
		
		  function raise(x, exponent) {
		    return x < 0 ? -Math.pow(-x, exponent) : Math.pow(x, exponent);
		  }
		
		  function pow() {
		    var exponent = 1,
		        scale = continuous(deinterpolate, reinterpolate),
		        domain = scale.domain;
		
		    function deinterpolate(a, b) {
		      return (b = raise(b, exponent) - (a = raise(a, exponent)))
		          ? function(x) { return (raise(x, exponent) - a) / b; }
		          : constant(b);
		    }
		
		    function reinterpolate(a, b) {
		      b = raise(b, exponent) - (a = raise(a, exponent));
		      return function(t) { return raise(a + b * t, 1 / exponent); };
		    }
		
		    scale.exponent = function(_) {
		      return arguments.length ? (exponent = +_, domain(domain())) : exponent;
		    };
		
		    scale.copy = function() {
		      return copy(scale, pow().exponent(exponent));
		    };
		
		    return linearish(scale);
		  }
		
		  function sqrt() {
		    return pow().exponent(0.5);
		  }
		
		  function quantile$1() {
		    var domain = [],
		        range = [],
		        thresholds = [];
		
		    function rescale() {
		      var i = 0, n = Math.max(1, range.length);
		      thresholds = new Array(n - 1);
		      while (++i < n) thresholds[i - 1] = d3Array.quantile(domain, i / n);
		      return scale;
		    }
		
		    function scale(x) {
		      if (!isNaN(x = +x)) return range[d3Array.bisect(thresholds, x)];
		    }
		
		    scale.invertExtent = function(y) {
		      var i = range.indexOf(y);
		      return i < 0 ? [NaN, NaN] : [
		        i > 0 ? thresholds[i - 1] : domain[0],
		        i < thresholds.length ? thresholds[i] : domain[domain.length - 1]
		      ];
		    };
		
		    scale.domain = function(_) {
		      if (!arguments.length) return domain.slice();
		      domain = [];
		      for (var i = 0, n = _.length, d; i < n; ++i) if (d = _[i], d != null && !isNaN(d = +d)) domain.push(d);
		      domain.sort(d3Array.ascending);
		      return rescale();
		    };
		
		    scale.range = function(_) {
		      return arguments.length ? (range = slice.call(_), rescale()) : range.slice();
		    };
		
		    scale.quantiles = function() {
		      return thresholds.slice();
		    };
		
		    scale.copy = function() {
		      return quantile$1()
		          .domain(domain)
		          .range(range);
		    };
		
		    return scale;
		  }
		
		  function quantize() {
		    var x0 = 0,
		        x1 = 1,
		        n = 1,
		        domain = [0.5],
		        range = [0, 1];
		
		    function scale(x) {
		      if (x <= x) return range[d3Array.bisect(domain, x, 0, n)];
		    }
		
		    function rescale() {
		      var i = -1;
		      domain = new Array(n);
		      while (++i < n) domain[i] = ((i + 1) * x1 - (i - n) * x0) / (n + 1);
		      return scale;
		    }
		
		    scale.domain = function(_) {
		      return arguments.length ? (x0 = +_[0], x1 = +_[1], rescale()) : [x0, x1];
		    };
		
		    scale.range = function(_) {
		      return arguments.length ? (n = (range = slice.call(_)).length - 1, rescale()) : range.slice();
		    };
		
		    scale.invertExtent = function(y) {
		      var i = range.indexOf(y);
		      return i < 0 ? [NaN, NaN]
		          : i < 1 ? [x0, domain[0]]
		          : i >= n ? [domain[n - 1], x1]
		          : [domain[i - 1], domain[i]];
		    };
		
		    scale.copy = function() {
		      return quantize()
		          .domain([x0, x1])
		          .range(range);
		    };
		
		    return linearish(scale);
		  }
		
		  function threshold() {
		    var domain = [0.5],
		        range = [0, 1],
		        n = 1;
		
		    function scale(x) {
		      if (x <= x) return range[d3Array.bisect(domain, x, 0, n)];
		    }
		
		    scale.domain = function(_) {
		      return arguments.length ? (domain = slice.call(_), n = Math.min(domain.length, range.length - 1), scale) : domain.slice();
		    };
		
		    scale.range = function(_) {
		      return arguments.length ? (range = slice.call(_), n = Math.min(domain.length, range.length - 1), scale) : range.slice();
		    };
		
		    scale.invertExtent = function(y) {
		      var i = range.indexOf(y);
		      return [domain[i - 1], domain[i]];
		    };
		
		    scale.copy = function() {
		      return threshold()
		          .domain(domain)
		          .range(range);
		    };
		
		    return scale;
		  }
		
		  var durationSecond = 1000;
		  var durationMinute = durationSecond * 60;
		  var durationHour = durationMinute * 60;
		  var durationDay = durationHour * 24;
		  var durationWeek = durationDay * 7;
		  var durationMonth = durationDay * 30;
		  var durationYear = durationDay * 365;
		  function newDate(t) {
		    return new Date(t);
		  }
		
		  function calendar(year, month, week, day, hour, minute, second, millisecond, format) {
		    var scale = continuous(deinterpolate, d3Interpolate.interpolateNumber),
		        invert = scale.invert,
		        domain = scale.domain;
		
		    var formatMillisecond = format(".%L"),
		        formatSecond = format(":%S"),
		        formatMinute = format("%I:%M"),
		        formatHour = format("%I %p"),
		        formatDay = format("%a %d"),
		        formatWeek = format("%b %d"),
		        formatMonth = format("%B"),
		        formatYear = format("%Y");
		
		    var tickIntervals = [
		      [second,  1,      durationSecond],
		      [second,  5,  5 * durationSecond],
		      [second, 15, 15 * durationSecond],
		      [second, 30, 30 * durationSecond],
		      [minute,  1,      durationMinute],
		      [minute,  5,  5 * durationMinute],
		      [minute, 15, 15 * durationMinute],
		      [minute, 30, 30 * durationMinute],
		      [  hour,  1,      durationHour  ],
		      [  hour,  3,  3 * durationHour  ],
		      [  hour,  6,  6 * durationHour  ],
		      [  hour, 12, 12 * durationHour  ],
		      [   day,  1,      durationDay   ],
		      [   day,  2,  2 * durationDay   ],
		      [  week,  1,      durationWeek  ],
		      [ month,  1,      durationMonth ],
		      [ month,  3,  3 * durationMonth ],
		      [  year,  1,      durationYear  ]
		    ];
		
		    function tickFormat(date) {
		      return (second(date) < date ? formatMillisecond
		          : minute(date) < date ? formatSecond
		          : hour(date) < date ? formatMinute
		          : day(date) < date ? formatHour
		          : month(date) < date ? (week(date) < date ? formatDay : formatWeek)
		          : year(date) < date ? formatMonth
		          : formatYear)(date);
		    }
		
		    function tickInterval(interval, start, stop, step) {
		      if (interval == null) interval = 10;
		
		      // If a desired tick count is specified, pick a reasonable tick interval
		      // based on the extent of the domain and a rough estimate of tick size.
		      // Otherwise, assume interval is already a time interval and use it.
		      if (typeof interval === "number") {
		        var target = Math.abs(stop - start) / interval,
		            i = d3Array.bisector(function(i) { return i[2]; }).right(tickIntervals, target);
		        if (i === tickIntervals.length) {
		          step = d3Array.tickStep(start / durationYear, stop / durationYear, interval);
		          interval = year;
		        } else if (i) {
		          i = tickIntervals[target / tickIntervals[i - 1][2] < tickIntervals[i][2] / target ? i - 1 : i];
		          step = i[1];
		          interval = i[0];
		        } else {
		          step = d3Array.tickStep(start, stop, interval);
		          interval = millisecond;
		        }
		      }
		
		      return step == null ? interval : interval.every(step);
		    }
		
		    scale.invert = function(y) {
		      return new Date(invert(y));
		    };
		
		    scale.domain = function(_) {
		      return arguments.length ? domain(_) : domain().map(newDate);
		    };
		
		    scale.ticks = function(interval, step) {
		      var d = domain(),
		          t0 = d[0],
		          t1 = d[d.length - 1],
		          r = t1 < t0,
		          t;
		      if (r) t = t0, t0 = t1, t1 = t;
		      t = tickInterval(interval, t0, t1, step);
		      t = t ? t.range(t0, t1 + 1) : []; // inclusive stop
		      return r ? t.reverse() : t;
		    };
		
		    scale.tickFormat = function(specifier) {
		      return specifier == null ? tickFormat : format(specifier);
		    };
		
		    scale.nice = function(interval, step) {
		      var d = domain();
		      return (interval = tickInterval(interval, d[0], d[d.length - 1], step))
		          ? domain(nice(d, interval))
		          : scale;
		    };
		
		    scale.copy = function() {
		      return copy(scale, calendar(year, month, week, day, hour, minute, second, millisecond, format));
		    };
		
		    return scale;
		  }
		
		  function time() {
		    return calendar(d3Time.timeYear, d3Time.timeMonth, d3Time.timeWeek, d3Time.timeDay, d3Time.timeHour, d3Time.timeMinute, d3Time.timeSecond, d3Time.timeMillisecond, d3TimeFormat.timeFormat).domain([new Date(2000, 0, 1), new Date(2000, 0, 2)]);
		  }
		
		  function utcTime() {
		    return calendar(d3Time.utcYear, d3Time.utcMonth, d3Time.utcWeek, d3Time.utcDay, d3Time.utcHour, d3Time.utcMinute, d3Time.utcSecond, d3Time.utcMillisecond, d3TimeFormat.utcFormat).domain([Date.UTC(2000, 0, 1), Date.UTC(2000, 0, 2)]);
		  }
		
		  function colors(s) {
		    return s.match(/.{6}/g).map(function(x) {
		      return "#" + x;
		    });
		  }
		
		  var colors10 = colors("1f77b4ff7f0e2ca02cd627289467bd8c564be377c27f7f7fbcbd2217becf");
		
		  function category10() {
		    return ordinal().range(colors10);
		  }
		
		  var colors20b = colors("393b795254a36b6ecf9c9ede6379398ca252b5cf6bcedb9c8c6d31bd9e39e7ba52e7cb94843c39ad494ad6616be7969c7b4173a55194ce6dbdde9ed6");
		
		  function category20b() {
		    return ordinal().range(colors20b);
		  }
		
		  var colors20c = colors("3182bd6baed69ecae1c6dbefe6550dfd8d3cfdae6bfdd0a231a35474c476a1d99bc7e9c0756bb19e9ac8bcbddcdadaeb636363969696bdbdbdd9d9d9");
		
		  function category20c() {
		    return ordinal().range(colors20c);
		  }
		
		  var colors20 = colors("1f77b4aec7e8ff7f0effbb782ca02c98df8ad62728ff98969467bdc5b0d58c564bc49c94e377c2f7b6d27f7f7fc7c7c7bcbd22dbdb8d17becf9edae5");
		
		  function category20() {
		    return ordinal().range(colors20);
		  }
		
		  function cubehelix$1() {
		    return linear()
		        .interpolate(d3Interpolate.interpolateCubehelixLong)
		        .range([d3Color.cubehelix(300, 0.5, 0.0), d3Color.cubehelix(-240, 0.5, 1.0)]);
		  }
		
		  function sequential(interpolate) {
		    var x0 = 0,
		        x1 = 1,
		        clamp = false;
		
		    function scale(x) {
		      var t = (x - x0) / (x1 - x0);
		      return interpolate(clamp ? Math.max(0, Math.min(1, t)) : t);
		    }
		
		    scale.domain = function(_) {
		      return arguments.length ? (x0 = +_[0], x1 = +_[1], scale) : [x0, x1];
		    };
		
		    scale.clamp = function(_) {
		      return arguments.length ? (clamp = !!_, scale) : clamp;
		    };
		
		    scale.copy = function() {
		      return sequential(interpolate).domain([x0, x1]).clamp(clamp);
		    };
		
		    return linearish(scale);
		  }
		
		  function warm() {
		    return sequential(d3Interpolate.interpolateCubehelixLong(d3Color.cubehelix(-100, 0.75, 0.35), d3Color.cubehelix(80, 1.50, 0.8)));
		  }
		
		  function cool() {
		    return sequential(d3Interpolate.interpolateCubehelixLong(d3Color.cubehelix(260, 0.75, 0.35), d3Color.cubehelix(80, 1.50, 0.8)));
		  }
		
		  function rainbow() {
		    var rainbow = d3Color.cubehelix();
		    return sequential(function(t) {
		      if (t < 0 || t > 1) t -= Math.floor(t);
		      var ts = Math.abs(t - 0.5);
		      rainbow.h = 360 * t - 100;
		      rainbow.s = 1.5 - 1.5 * ts;
		      rainbow.l = 0.8 - 0.9 * ts;
		      return rainbow + "";
		    });
		  }
		
		  var rangeViridis = colors("44015444025645045745055946075a46085c460a5d460b5e470d60470e6147106347116447136548146748166848176948186a481a6c481b6d481c6e481d6f481f70482071482173482374482475482576482677482878482979472a7a472c7a472d7b472e7c472f7d46307e46327e46337f463480453581453781453882443983443a83443b84433d84433e85423f854240864241864142874144874045884046883f47883f48893e49893e4a893e4c8a3d4d8a3d4e8a3c4f8a3c508b3b518b3b528b3a538b3a548c39558c39568c38588c38598c375a8c375b8d365c8d365d8d355e8d355f8d34608d34618d33628d33638d32648e32658e31668e31678e31688e30698e306a8e2f6b8e2f6c8e2e6d8e2e6e8e2e6f8e2d708e2d718e2c718e2c728e2c738e2b748e2b758e2a768e2a778e2a788e29798e297a8e297b8e287c8e287d8e277e8e277f8e27808e26818e26828e26828e25838e25848e25858e24868e24878e23888e23898e238a8d228b8d228c8d228d8d218e8d218f8d21908d21918c20928c20928c20938c1f948c1f958b1f968b1f978b1f988b1f998a1f9a8a1e9b8a1e9c891e9d891f9e891f9f881fa0881fa1881fa1871fa28720a38620a48621a58521a68522a78522a88423a98324aa8325ab8225ac8226ad8127ad8128ae8029af7f2ab07f2cb17e2db27d2eb37c2fb47c31b57b32b67a34b67935b77937b87838b9773aba763bbb753dbc743fbc7340bd7242be7144bf7046c06f48c16e4ac16d4cc26c4ec36b50c46a52c56954c56856c66758c7655ac8645cc8635ec96260ca6063cb5f65cb5e67cc5c69cd5b6ccd5a6ece5870cf5773d05675d05477d1537ad1517cd2507fd34e81d34d84d44b86d54989d5488bd6468ed64590d74393d74195d84098d83e9bd93c9dd93ba0da39a2da37a5db36a8db34aadc32addc30b0dd2fb2dd2db5de2bb8de29bade28bddf26c0df25c2df23c5e021c8e020cae11fcde11dd0e11cd2e21bd5e21ad8e219dae319dde318dfe318e2e418e5e419e7e419eae51aece51befe51cf1e51df4e61ef6e620f8e621fbe723fde725");
		  var rangeMagma = colors("00000401000501010601010802010902020b02020d03030f03031204041405041606051806051a07061c08071e0907200a08220b09240c09260d0a290e0b2b100b2d110c2f120d31130d34140e36150e38160f3b180f3d19103f1a10421c10441d11471e114920114b21114e22115024125325125527125829115a2a115c2c115f2d11612f116331116533106734106936106b38106c390f6e3b0f703d0f713f0f72400f74420f75440f764510774710784910784a10794c117a4e117b4f127b51127c52137c54137d56147d57157e59157e5a167e5c167f5d177f5f187f601880621980641a80651a80671b80681c816a1c816b1d816d1d816e1e81701f81721f817320817521817621817822817922827b23827c23827e24828025828125818326818426818627818827818928818b29818c29818e2a81902a81912b81932b80942c80962c80982d80992d809b2e7f9c2e7f9e2f7fa02f7fa1307ea3307ea5317ea6317da8327daa337dab337cad347cae347bb0357bb2357bb3367ab5367ab73779b83779ba3878bc3978bd3977bf3a77c03a76c23b75c43c75c53c74c73d73c83e73ca3e72cc3f71cd4071cf4070d0416fd2426fd3436ed5446dd6456cd8456cd9466bdb476adc4869de4968df4a68e04c67e24d66e34e65e44f64e55064e75263e85362e95462ea5661eb5760ec5860ed5a5fee5b5eef5d5ef05f5ef1605df2625df2645cf3655cf4675cf4695cf56b5cf66c5cf66e5cf7705cf7725cf8745cf8765cf9785df9795df97b5dfa7d5efa7f5efa815ffb835ffb8560fb8761fc8961fc8a62fc8c63fc8e64fc9065fd9266fd9467fd9668fd9869fd9a6afd9b6bfe9d6cfe9f6dfea16efea36ffea571fea772fea973feaa74feac76feae77feb078feb27afeb47bfeb67cfeb77efeb97ffebb81febd82febf84fec185fec287fec488fec68afec88cfeca8dfecc8ffecd90fecf92fed194fed395fed597fed799fed89afdda9cfddc9efddea0fde0a1fde2a3fde3a5fde5a7fde7a9fde9aafdebacfcecaefceeb0fcf0b2fcf2b4fcf4b6fcf6b8fcf7b9fcf9bbfcfbbdfcfdbf");
		  var rangeInferno = colors("00000401000501010601010802010a02020c02020e03021004031204031405041706041907051b08051d09061f0a07220b07240c08260d08290e092b10092d110a30120a32140b34150b37160b39180c3c190c3e1b0c411c0c431e0c451f0c48210c4a230c4c240c4f260c51280b53290b552b0b572d0b592f0a5b310a5c320a5e340a5f3609613809623909633b09643d09653e0966400a67420a68440a68450a69470b6a490b6a4a0c6b4c0c6b4d0d6c4f0d6c510e6c520e6d540f6d550f6d57106e59106e5a116e5c126e5d126e5f136e61136e62146e64156e65156e67166e69166e6a176e6c186e6d186e6f196e71196e721a6e741a6e751b6e771c6d781c6d7a1d6d7c1d6d7d1e6d7f1e6c801f6c82206c84206b85216b87216b88226a8a226a8c23698d23698f24699025689225689326679526679727669827669a28659b29649d29649f2a63a02a63a22b62a32c61a52c60a62d60a82e5fa92e5eab2f5ead305dae305cb0315bb1325ab3325ab43359b63458b73557b93556ba3655bc3754bd3853bf3952c03a51c13a50c33b4fc43c4ec63d4dc73e4cc83f4bca404acb4149cc4248ce4347cf4446d04545d24644d34743d44842d54a41d74b3fd84c3ed94d3dda4e3cdb503bdd513ade5238df5337e05536e15635e25734e35933e45a31e55c30e65d2fe75e2ee8602de9612bea632aeb6429eb6628ec6726ed6925ee6a24ef6c23ef6e21f06f20f1711ff1731df2741cf3761bf37819f47918f57b17f57d15f67e14f68013f78212f78410f8850ff8870ef8890cf98b0bf98c0af98e09fa9008fa9207fa9407fb9606fb9706fb9906fb9b06fb9d07fc9f07fca108fca309fca50afca60cfca80dfcaa0ffcac11fcae12fcb014fcb216fcb418fbb61afbb81dfbba1ffbbc21fbbe23fac026fac228fac42afac62df9c72ff9c932f9cb35f8cd37f8cf3af7d13df7d340f6d543f6d746f5d949f5db4cf4dd4ff4df53f4e156f3e35af3e55df2e661f2e865f2ea69f1ec6df1ed71f1ef75f1f179f2f27df2f482f3f586f3f68af4f88ef5f992f6fa96f8fb9af9fc9dfafda1fcffa4");
		  var rangePlasma = colors("0d088710078813078916078a19068c1b068d1d068e20068f2206902406912605912805922a05932c05942e05952f059631059733059735049837049938049a3a049a3c049b3e049c3f049c41049d43039e44039e46039f48039f4903a04b03a14c02a14e02a25002a25102a35302a35502a45601a45801a45901a55b01a55c01a65e01a66001a66100a76300a76400a76600a76700a86900a86a00a86c00a86e00a86f00a87100a87201a87401a87501a87701a87801a87a02a87b02a87d03a87e03a88004a88104a78305a78405a78606a68707a68808a68a09a58b0aa58d0ba58e0ca48f0da4910ea3920fa39410a29511a19613a19814a099159f9a169f9c179e9d189d9e199da01a9ca11b9ba21d9aa31e9aa51f99a62098a72197a82296aa2395ab2494ac2694ad2793ae2892b02991b12a90b22b8fb32c8eb42e8db52f8cb6308bb7318ab83289ba3388bb3488bc3587bd3786be3885bf3984c03a83c13b82c23c81c33d80c43e7fc5407ec6417dc7427cc8437bc9447aca457acb4679cc4778cc4977cd4a76ce4b75cf4c74d04d73d14e72d24f71d35171d45270d5536fd5546ed6556dd7566cd8576bd9586ada5a6ada5b69db5c68dc5d67dd5e66de5f65de6164df6263e06363e16462e26561e26660e3685fe4695ee56a5de56b5de66c5ce76e5be76f5ae87059e97158e97257ea7457eb7556eb7655ec7754ed7953ed7a52ee7b51ef7c51ef7e50f07f4ff0804ef1814df1834cf2844bf3854bf3874af48849f48948f58b47f58c46f68d45f68f44f79044f79143f79342f89441f89540f9973ff9983ef99a3efa9b3dfa9c3cfa9e3bfb9f3afba139fba238fca338fca537fca636fca835fca934fdab33fdac33fdae32fdaf31fdb130fdb22ffdb42ffdb52efeb72dfeb82cfeba2cfebb2bfebd2afebe2afec029fdc229fdc328fdc527fdc627fdc827fdca26fdcb26fccd25fcce25fcd025fcd225fbd324fbd524fbd724fad824fada24f9dc24f9dd25f8df25f8e125f7e225f7e425f6e626f6e826f5e926f5eb27f4ed27f3ee27f3f027f2f227f1f426f1f525f0f724f0f921");
		  function ramp(range) {
		    var s = sequential(function(t) { return range[Math.round(t * range.length - t)]; }).clamp(true);
		    delete s.clamp;
		    return s;
		  }
		
		  function viridis() {
		    return ramp(rangeViridis);
		  }
		
		  function magma() {
		    return ramp(rangeMagma);
		  }
		
		  function inferno() {
		    return ramp(rangeInferno);
		  }
		
		  function plasma() {
		    return ramp(rangePlasma);
		  }
		
		  var version = "0.6.4";
		
		  exports.version = version;
		  exports.scaleBand = band;
		  exports.scalePoint = point;
		  exports.scaleIdentity = identity;
		  exports.scaleLinear = linear;
		  exports.scaleLog = log;
		  exports.scaleOrdinal = ordinal;
		  exports.scaleImplicit = implicit;
		  exports.scalePow = pow;
		  exports.scaleSqrt = sqrt;
		  exports.scaleQuantile = quantile$1;
		  exports.scaleQuantize = quantize;
		  exports.scaleThreshold = threshold;
		  exports.scaleTime = time;
		  exports.scaleUtc = utcTime;
		  exports.scaleCategory10 = category10;
		  exports.scaleCategory20b = category20b;
		  exports.scaleCategory20c = category20c;
		  exports.scaleCategory20 = category20;
		  exports.scaleCubehelix = cubehelix$1;
		  exports.scaleRainbow = rainbow;
		  exports.scaleWarm = warm;
		  exports.scaleCool = cool;
		  exports.scaleViridis = viridis;
		  exports.scaleMagma = magma;
		  exports.scaleInferno = inferno;
		  exports.scalePlasma = plasma;
		
		}));

	/***/ },
	/* 262 */
	/***/ function(module, exports, __webpack_require__) {

		(function (global, factory) {
		   true ? factory(exports) :
		  typeof define === 'function' && define.amd ? define(['exports'], factory) :
		  (factory((global.d3_array = {})));
		}(this, function (exports) { 'use strict';
		
		  function ascending(a, b) {
		    return a < b ? -1 : a > b ? 1 : a >= b ? 0 : NaN;
		  }
		
		  function bisector(compare) {
		    if (compare.length === 1) compare = ascendingComparator(compare);
		    return {
		      left: function(a, x, lo, hi) {
		        if (lo == null) lo = 0;
		        if (hi == null) hi = a.length;
		        while (lo < hi) {
		          var mid = lo + hi >>> 1;
		          if (compare(a[mid], x) < 0) lo = mid + 1;
		          else hi = mid;
		        }
		        return lo;
		      },
		      right: function(a, x, lo, hi) {
		        if (lo == null) lo = 0;
		        if (hi == null) hi = a.length;
		        while (lo < hi) {
		          var mid = lo + hi >>> 1;
		          if (compare(a[mid], x) > 0) hi = mid;
		          else lo = mid + 1;
		        }
		        return lo;
		      }
		    };
		  }
		
		  function ascendingComparator(f) {
		    return function(d, x) {
		      return ascending(f(d), x);
		    };
		  }
		
		  var ascendingBisect = bisector(ascending);
		  var bisectRight = ascendingBisect.right;
		  var bisectLeft = ascendingBisect.left;
		
		  function descending(a, b) {
		    return b < a ? -1 : b > a ? 1 : b >= a ? 0 : NaN;
		  }
		
		  function number$1(x) {
		    return x === null ? NaN : +x;
		  }
		
		  function variance(array, f) {
		    var n = array.length,
		        m = 0,
		        a,
		        d,
		        s = 0,
		        i = -1,
		        j = 0;
		
		    if (f == null) {
		      while (++i < n) {
		        if (!isNaN(a = number$1(array[i]))) {
		          d = a - m;
		          m += d / ++j;
		          s += d * (a - m);
		        }
		      }
		    }
		
		    else {
		      while (++i < n) {
		        if (!isNaN(a = number$1(f(array[i], i, array)))) {
		          d = a - m;
		          m += d / ++j;
		          s += d * (a - m);
		        }
		      }
		    }
		
		    if (j > 1) return s / (j - 1);
		  }
		
		  function deviation(array, f) {
		    var v = variance(array, f);
		    return v ? Math.sqrt(v) : v;
		  }
		
		  function extent(array, f) {
		    var i = -1,
		        n = array.length,
		        a,
		        b,
		        c;
		
		    if (f == null) {
		      while (++i < n) if ((b = array[i]) != null && b >= b) { a = c = b; break; }
		      while (++i < n) if ((b = array[i]) != null) {
		        if (a > b) a = b;
		        if (c < b) c = b;
		      }
		    }
		
		    else {
		      while (++i < n) if ((b = f(array[i], i, array)) != null && b >= b) { a = c = b; break; }
		      while (++i < n) if ((b = f(array[i], i, array)) != null) {
		        if (a > b) a = b;
		        if (c < b) c = b;
		      }
		    }
		
		    return [a, c];
		  }
		
		  function constant(x) {
		    return function() {
		      return x;
		    };
		  }
		
		  function identity(x) {
		    return x;
		  }
		
		  function range(start, stop, step) {
		    start = +start, stop = +stop, step = (n = arguments.length) < 2 ? (stop = start, start = 0, 1) : n < 3 ? 1 : +step;
		
		    var i = -1,
		        n = Math.max(0, Math.ceil((stop - start) / step)) | 0,
		        range = new Array(n);
		
		    while (++i < n) {
		      range[i] = start + i * step;
		    }
		
		    return range;
		  }
		
		  var e10 = Math.sqrt(50);
		  var e5 = Math.sqrt(10);
		  var e2 = Math.sqrt(2);
		  function ticks(start, stop, count) {
		    var step = tickStep(start, stop, count);
		    return range(
		      Math.ceil(start / step) * step,
		      Math.floor(stop / step) * step + step / 2, // inclusive
		      step
		    );
		  }
		
		  function tickStep(start, stop, count) {
		    var step0 = Math.abs(stop - start) / Math.max(0, count),
		        step1 = Math.pow(10, Math.floor(Math.log(step0) / Math.LN10)),
		        error = step0 / step1;
		    if (error >= e10) step1 *= 10;
		    else if (error >= e5) step1 *= 5;
		    else if (error >= e2) step1 *= 2;
		    return stop < start ? -step1 : step1;
		  }
		
		  function sturges(values) {
		    return Math.ceil(Math.log(values.length) / Math.LN2) + 1;
		  }
		
		  function number(x) {
		    return +x;
		  }
		
		  function histogram() {
		    var value = identity,
		        domain = extent,
		        threshold = sturges;
		
		    function histogram(data) {
		      var i,
		          n = data.length,
		          x,
		          values = new Array(n);
		
		      // Coerce values to numbers.
		      for (i = 0; i < n; ++i) {
		        values[i] = +value(data[i], i, data);
		      }
		
		      var xz = domain(values),
		          x0 = +xz[0],
		          x1 = +xz[1],
		          tz = threshold(values, x0, x1);
		
		      // Convert number of thresholds into uniform thresholds.
		      if (!Array.isArray(tz)) tz = ticks(x0, x1, +tz);
		
		      // Coerce thresholds to numbers, ignoring any outside the domain.
		      var m = tz.length;
		      for (i = 0; i < m; ++i) tz[i] = +tz[i];
		      while (tz[0] <= x0) tz.shift(), --m;
		      while (tz[m - 1] >= x1) tz.pop(), --m;
		
		      var bins = new Array(m + 1),
		          bin;
		
		      // Initialize bins.
		      for (i = 0; i <= m; ++i) {
		        bin = bins[i] = [];
		        bin.x0 = i > 0 ? tz[i - 1] : x0;
		        bin.x1 = i < m ? tz[i] : x1;
		      }
		
		      // Assign data to bins by value, ignoring any outside the domain.
		      for (i = 0; i < n; ++i) {
		        x = values[i];
		        if (x0 <= x && x <= x1) {
		          bins[bisectRight(tz, x, 0, m)].push(data[i]);
		        }
		      }
		
		      return bins;
		    }
		
		    histogram.value = function(_) {
		      return arguments.length ? (value = typeof _ === "function" ? _ : constant(+_), histogram) : value;
		    };
		
		    histogram.domain = function(_) {
		      return arguments.length ? (domain = typeof _ === "function" ? _ : constant([+_[0], +_[1]]), histogram) : domain;
		    };
		
		    histogram.thresholds = function(_) {
		      if (!arguments.length) return threshold;
		      threshold = typeof _ === "function" ? _
		          : Array.isArray(_) ? constant(Array.prototype.map.call(_, number))
		          : constant(+_);
		      return histogram;
		    };
		
		    return histogram;
		  }
		
		  function quantile(array, p, f) {
		    if (f == null) f = number$1;
		    if (!(n = array.length)) return;
		    if ((p = +p) <= 0 || n < 2) return +f(array[0], 0, array);
		    if (p >= 1) return +f(array[n - 1], n - 1, array);
		    var n,
		        h = (n - 1) * p,
		        i = Math.floor(h),
		        a = +f(array[i], i, array),
		        b = +f(array[i + 1], i + 1, array);
		    return a + (b - a) * (h - i);
		  }
		
		  function freedmanDiaconis(values, min, max) {
		    values.sort(ascending);
		    return Math.ceil((max - min) / (2 * (quantile(values, 0.75) - quantile(values, 0.25)) * Math.pow(values.length, -1 / 3)));
		  }
		
		  function scott(values, min, max) {
		    return Math.ceil((max - min) / (3.5 * deviation(values) * Math.pow(values.length, -1 / 3)));
		  }
		
		  function max(array, f) {
		    var i = -1,
		        n = array.length,
		        a,
		        b;
		
		    if (f == null) {
		      while (++i < n) if ((b = array[i]) != null && b >= b) { a = b; break; }
		      while (++i < n) if ((b = array[i]) != null && b > a) a = b;
		    }
		
		    else {
		      while (++i < n) if ((b = f(array[i], i, array)) != null && b >= b) { a = b; break; }
		      while (++i < n) if ((b = f(array[i], i, array)) != null && b > a) a = b;
		    }
		
		    return a;
		  }
		
		  function mean(array, f) {
		    var s = 0,
		        n = array.length,
		        a,
		        i = -1,
		        j = n;
		
		    if (f == null) {
		      while (++i < n) if (!isNaN(a = number$1(array[i]))) s += a; else --j;
		    }
		
		    else {
		      while (++i < n) if (!isNaN(a = number$1(f(array[i], i, array)))) s += a; else --j;
		    }
		
		    if (j) return s / j;
		  }
		
		  function median(array, f) {
		    var numbers = [],
		        n = array.length,
		        a,
		        i = -1;
		
		    if (f == null) {
		      while (++i < n) if (!isNaN(a = number$1(array[i]))) numbers.push(a);
		    }
		
		    else {
		      while (++i < n) if (!isNaN(a = number$1(f(array[i], i, array)))) numbers.push(a);
		    }
		
		    return quantile(numbers.sort(ascending), 0.5);
		  }
		
		  function merge(arrays) {
		    var n = arrays.length,
		        m,
		        i = -1,
		        j = 0,
		        merged,
		        array;
		
		    while (++i < n) j += arrays[i].length;
		    merged = new Array(j);
		
		    while (--n >= 0) {
		      array = arrays[n];
		      m = array.length;
		      while (--m >= 0) {
		        merged[--j] = array[m];
		      }
		    }
		
		    return merged;
		  }
		
		  function min(array, f) {
		    var i = -1,
		        n = array.length,
		        a,
		        b;
		
		    if (f == null) {
		      while (++i < n) if ((b = array[i]) != null && b >= b) { a = b; break; }
		      while (++i < n) if ((b = array[i]) != null && a > b) a = b;
		    }
		
		    else {
		      while (++i < n) if ((b = f(array[i], i, array)) != null && b >= b) { a = b; break; }
		      while (++i < n) if ((b = f(array[i], i, array)) != null && a > b) a = b;
		    }
		
		    return a;
		  }
		
		  function pairs(array) {
		    var i = 0, n = array.length - 1, p = array[0], pairs = new Array(n < 0 ? 0 : n);
		    while (i < n) pairs[i] = [p, p = array[++i]];
		    return pairs;
		  }
		
		  function permute(array, indexes) {
		    var i = indexes.length, permutes = new Array(i);
		    while (i--) permutes[i] = array[indexes[i]];
		    return permutes;
		  }
		
		  function scan(array, compare) {
		    if (!(n = array.length)) return;
		    var i = 0,
		        n,
		        j = 0,
		        xi,
		        xj = array[j];
		
		    if (!compare) compare = ascending;
		
		    while (++i < n) if (compare(xi = array[i], xj) < 0 || compare(xj, xj) !== 0) xj = xi, j = i;
		
		    if (compare(xj, xj) === 0) return j;
		  }
		
		  function shuffle(array, i0, i1) {
		    var m = (i1 == null ? array.length : i1) - (i0 = i0 == null ? 0 : +i0),
		        t,
		        i;
		
		    while (m) {
		      i = Math.random() * m-- | 0;
		      t = array[m + i0];
		      array[m + i0] = array[i + i0];
		      array[i + i0] = t;
		    }
		
		    return array;
		  }
		
		  function sum(array, f) {
		    var s = 0,
		        n = array.length,
		        a,
		        i = -1;
		
		    if (f == null) {
		      while (++i < n) if (a = +array[i]) s += a; // Note: zero and null are equivalent.
		    }
		
		    else {
		      while (++i < n) if (a = +f(array[i], i, array)) s += a;
		    }
		
		    return s;
		  }
		
		  function transpose(matrix) {
		    if (!(n = matrix.length)) return [];
		    for (var i = -1, m = min(matrix, length), transpose = new Array(m); ++i < m;) {
		      for (var j = -1, n, row = transpose[i] = new Array(n); ++j < n;) {
		        row[j] = matrix[j][i];
		      }
		    }
		    return transpose;
		  }
		
		  function length(d) {
		    return d.length;
		  }
		
		  function zip() {
		    return transpose(arguments);
		  }
		
		  var version = "0.7.1";
		
		  exports.version = version;
		  exports.bisect = bisectRight;
		  exports.bisectRight = bisectRight;
		  exports.bisectLeft = bisectLeft;
		  exports.ascending = ascending;
		  exports.bisector = bisector;
		  exports.descending = descending;
		  exports.deviation = deviation;
		  exports.extent = extent;
		  exports.histogram = histogram;
		  exports.thresholdFreedmanDiaconis = freedmanDiaconis;
		  exports.thresholdScott = scott;
		  exports.thresholdSturges = sturges;
		  exports.max = max;
		  exports.mean = mean;
		  exports.median = median;
		  exports.merge = merge;
		  exports.min = min;
		  exports.pairs = pairs;
		  exports.permute = permute;
		  exports.quantile = quantile;
		  exports.range = range;
		  exports.scan = scan;
		  exports.shuffle = shuffle;
		  exports.sum = sum;
		  exports.ticks = ticks;
		  exports.tickStep = tickStep;
		  exports.transpose = transpose;
		  exports.variance = variance;
		  exports.zip = zip;
		
		}));

	/***/ },
	/* 263 */
	/***/ function(module, exports, __webpack_require__) {

		(function (global, factory) {
		   true ? factory(exports) :
		  typeof define === 'function' && define.amd ? define(['exports'], factory) :
		  (factory((global.d3_collection = global.d3_collection || {})));
		}(this, function (exports) { 'use strict';
		
		  var prefix = "$";
		
		  function Map() {}
		
		  Map.prototype = map.prototype = {
		    constructor: Map,
		    has: function(key) {
		      return (prefix + key) in this;
		    },
		    get: function(key) {
		      return this[prefix + key];
		    },
		    set: function(key, value) {
		      this[prefix + key] = value;
		      return this;
		    },
		    remove: function(key) {
		      var property = prefix + key;
		      return property in this && delete this[property];
		    },
		    clear: function() {
		      for (var property in this) if (property[0] === prefix) delete this[property];
		    },
		    keys: function() {
		      var keys = [];
		      for (var property in this) if (property[0] === prefix) keys.push(property.slice(1));
		      return keys;
		    },
		    values: function() {
		      var values = [];
		      for (var property in this) if (property[0] === prefix) values.push(this[property]);
		      return values;
		    },
		    entries: function() {
		      var entries = [];
		      for (var property in this) if (property[0] === prefix) entries.push({key: property.slice(1), value: this[property]});
		      return entries;
		    },
		    size: function() {
		      var size = 0;
		      for (var property in this) if (property[0] === prefix) ++size;
		      return size;
		    },
		    empty: function() {
		      for (var property in this) if (property[0] === prefix) return false;
		      return true;
		    },
		    each: function(f) {
		      for (var property in this) if (property[0] === prefix) f(this[property], property.slice(1), this);
		    }
		  };
		
		  function map(object, f) {
		    var map = new Map;
		
		    // Copy constructor.
		    if (object instanceof Map) object.each(function(value, key) { map.set(key, value); });
		
		    // Index array by numeric index or specified key function.
		    else if (Array.isArray(object)) {
		      var i = -1,
		          n = object.length,
		          o;
		
		      if (f == null) while (++i < n) map.set(i, object[i]);
		      else while (++i < n) map.set(f(o = object[i], i, object), o);
		    }
		
		    // Convert object to map.
		    else if (object) for (var key in object) map.set(key, object[key]);
		
		    return map;
		  }
		
		  function nest() {
		    var keys = [],
		        sortKeys = [],
		        sortValues,
		        rollup,
		        nest;
		
		    function apply(array, depth, createResult, setResult) {
		      if (depth >= keys.length) return rollup
		          ? rollup(array) : (sortValues
		          ? array.sort(sortValues)
		          : array);
		
		      var i = -1,
		          n = array.length,
		          key = keys[depth++],
		          keyValue,
		          value,
		          valuesByKey = map(),
		          values,
		          result = createResult();
		
		      while (++i < n) {
		        if (values = valuesByKey.get(keyValue = key(value = array[i]) + "")) {
		          values.push(value);
		        } else {
		          valuesByKey.set(keyValue, [value]);
		        }
		      }
		
		      valuesByKey.each(function(values, key) {
		        setResult(result, key, apply(values, depth, createResult, setResult));
		      });
		
		      return result;
		    }
		
		    function entries(map, depth) {
		      if (depth >= keys.length) return map;
		
		      var array = [],
		          sortKey = sortKeys[depth++];
		
		      map.each(function(value, key) {
		        array.push({key: key, values: entries(value, depth)});
		      });
		
		      return sortKey
		          ? array.sort(function(a, b) { return sortKey(a.key, b.key); })
		          : array;
		    }
		
		    return nest = {
		      object: function(array) { return apply(array, 0, createObject, setObject); },
		      map: function(array) { return apply(array, 0, createMap, setMap); },
		      entries: function(array) { return entries(apply(array, 0, createMap, setMap), 0); },
		      key: function(d) { keys.push(d); return nest; },
		      sortKeys: function(order) { sortKeys[keys.length - 1] = order; return nest; },
		      sortValues: function(order) { sortValues = order; return nest; },
		      rollup: function(f) { rollup = f; return nest; }
		    };
		  }
		
		  function createObject() {
		    return {};
		  }
		
		  function setObject(object, key, value) {
		    object[key] = value;
		  }
		
		  function createMap() {
		    return map();
		  }
		
		  function setMap(map, key, value) {
		    map.set(key, value);
		  }
		
		  function Set() {}
		
		  var proto = map.prototype;
		
		  Set.prototype = set.prototype = {
		    constructor: Set,
		    has: proto.has,
		    add: function(value) {
		      value += "";
		      this[prefix + value] = value;
		      return this;
		    },
		    remove: proto.remove,
		    clear: proto.clear,
		    values: proto.keys,
		    size: proto.size,
		    empty: proto.empty,
		    each: proto.each
		  };
		
		  function set(object, f) {
		    var set = new Set;
		
		    // Copy constructor.
		    if (object instanceof Set) object.each(function(value) { set.add(value); });
		
		    // Otherwise, assume it’s an array.
		    else if (object) {
		      var i = -1, n = object.length;
		      if (f == null) while (++i < n) set.add(object[i]);
		      else while (++i < n) set.add(f(object[i], i, object));
		    }
		
		    return set;
		  }
		
		  function keys(map) {
		    var keys = [];
		    for (var key in map) keys.push(key);
		    return keys;
		  }
		
		  function values(map) {
		    var values = [];
		    for (var key in map) values.push(map[key]);
		    return values;
		  }
		
		  function entries(map) {
		    var entries = [];
		    for (var key in map) entries.push({key: key, value: map[key]});
		    return entries;
		  }
		
		  var version = "0.1.2";
		
		  exports.version = version;
		  exports.nest = nest;
		  exports.set = set;
		  exports.map = map;
		  exports.keys = keys;
		  exports.values = values;
		  exports.entries = entries;
		
		}));

	/***/ },
	/* 264 */
	/***/ function(module, exports, __webpack_require__) {

		(function (global, factory) {
		   true ? factory(exports, __webpack_require__(265)) :
		  typeof define === 'function' && define.amd ? define(['exports', 'd3-color'], factory) :
		  (factory((global.d3_interpolate = global.d3_interpolate || {}),global.d3_color));
		}(this, function (exports,d3Color) { 'use strict';
		
		  function constant(x) {
		    return function() {
		      return x;
		    };
		  }
		
		  function linear(a, d) {
		    return function(t) {
		      return a + t * d;
		    };
		  }
		
		  function exponential(a, b, y) {
		    return a = Math.pow(a, y), b = Math.pow(b, y) - a, y = 1 / y, function(t) {
		      return Math.pow(a + t * b, y);
		    };
		  }
		
		  function interpolateHue(a, b) {
		    var d = b - a;
		    return d ? linear(a, d > 180 || d < -180 ? d - 360 * Math.round(d / 360) : d) : constant(isNaN(a) ? b : a);
		  }
		
		  function gamma(y) {
		    return (y = +y) === 1 ? nogamma : function(a, b) {
		      return b - a ? exponential(a, b, y) : constant(isNaN(a) ? b : a);
		    };
		  }
		
		  function nogamma(a, b) {
		    var d = b - a;
		    return d ? linear(a, d) : constant(isNaN(a) ? b : a);
		  }
		
		  var rgb$1 = (function gamma$$(y) {
		    var interpolateColor = gamma(y);
		
		    function interpolateRgb(start, end) {
		      var r = interpolateColor((start = d3Color.rgb(start)).r, (end = d3Color.rgb(end)).r),
		          g = interpolateColor(start.g, end.g),
		          b = interpolateColor(start.b, end.b),
		          opacity = interpolateColor(start.opacity, end.opacity);
		      return function(t) {
		        start.r = r(t);
		        start.g = g(t);
		        start.b = b(t);
		        start.opacity = opacity(t);
		        return start + "";
		      };
		    }
		
		    interpolateRgb.gamma = gamma$$;
		
		    return interpolateRgb;
		  })(1);
		
		  // TODO sparse arrays?
		  function array(a, b) {
		    var x = [],
		        c = [],
		        na = a ? a.length : 0,
		        nb = b ? b.length : 0,
		        n0 = Math.min(na, nb),
		        i;
		
		    for (i = 0; i < n0; ++i) x.push(value(a[i], b[i]));
		    for (; i < na; ++i) c[i] = a[i];
		    for (; i < nb; ++i) c[i] = b[i];
		
		    return function(t) {
		      for (i = 0; i < n0; ++i) c[i] = x[i](t);
		      return c;
		    };
		  }
		
		  function number(a, b) {
		    return a = +a, b -= a, function(t) {
		      return a + b * t;
		    };
		  }
		
		  function object(a, b) {
		    var i = {},
		        c = {},
		        k;
		
		    if (a === null || typeof a !== "object") a = {};
		    if (b === null || typeof b !== "object") b = {};
		
		    for (k in a) {
		      if (k in b) {
		        i[k] = value(a[k], b[k]);
		      } else {
		        c[k] = a[k];
		      }
		    }
		
		    for (k in b) {
		      if (!(k in a)) {
		        c[k] = b[k];
		      }
		    }
		
		    return function(t) {
		      for (k in i) c[k] = i[k](t);
		      return c;
		    };
		  }
		
		  var reA = /[-+]?(?:\d+\.?\d*|\.?\d+)(?:[eE][-+]?\d+)?/g;
		  var reB = new RegExp(reA.source, "g");
		  function zero(b) {
		    return function() {
		      return b;
		    };
		  }
		
		  function one(b) {
		    return function(t) {
		      return b(t) + "";
		    };
		  }
		
		  function string(a, b) {
		    var bi = reA.lastIndex = reB.lastIndex = 0, // scan index for next number in b
		        am, // current match in a
		        bm, // current match in b
		        bs, // string preceding current number in b, if any
		        i = -1, // index in s
		        s = [], // string constants and placeholders
		        q = []; // number interpolators
		
		    // Coerce inputs to strings.
		    a = a + "", b = b + "";
		
		    // Interpolate pairs of numbers in a & b.
		    while ((am = reA.exec(a))
		        && (bm = reB.exec(b))) {
		      if ((bs = bm.index) > bi) { // a string precedes the next number in b
		        bs = b.slice(bi, bs);
		        if (s[i]) s[i] += bs; // coalesce with previous string
		        else s[++i] = bs;
		      }
		      if ((am = am[0]) === (bm = bm[0])) { // numbers in a & b match
		        if (s[i]) s[i] += bm; // coalesce with previous string
		        else s[++i] = bm;
		      } else { // interpolate non-matching numbers
		        s[++i] = null;
		        q.push({i: i, x: number(am, bm)});
		      }
		      bi = reB.lastIndex;
		    }
		
		    // Add remains of b.
		    if (bi < b.length) {
		      bs = b.slice(bi);
		      if (s[i]) s[i] += bs; // coalesce with previous string
		      else s[++i] = bs;
		    }
		
		    // Special optimization for only a single match.
		    // Otherwise, interpolate each of the numbers and rejoin the string.
		    return s.length < 2 ? (q[0]
		        ? one(q[0].x)
		        : zero(b))
		        : (b = q.length, function(t) {
		            for (var i = 0, o; i < b; ++i) s[(o = q[i]).i] = o.x(t);
		            return s.join("");
		          });
		  }
		
		  function value(a, b) {
		    var t = typeof b, c;
		    return b == null || t === "boolean" ? constant(b)
		        : (t === "number" ? number
		        : t === "string" ? ((c = d3Color.color(b)) ? (b = c, rgb$1) : string)
		        : b instanceof d3Color.color ? rgb$1
		        : Array.isArray(b) ? array
		        : object)(a, b);
		  }
		
		  function round(a, b) {
		    return a = +a, b -= a, function(t) {
		      return Math.round(a + b * t);
		    };
		  }
		
		  var rad2deg = 180 / Math.PI;
		
		  var identity = {
		    translateX: 0,
		    translateY: 0,
		    rotate: 0,
		    skewX: 0,
		    scaleX: 1,
		    scaleY: 1
		  };
		
		  function decompose(a, b, c, d, e, f) {
		    if (a * d === b * c) return null;
		
		    var scaleX = Math.sqrt(a * a + b * b);
		    a /= scaleX, b /= scaleX;
		
		    var skewX = a * c + b * d;
		    c -= a * skewX, d -= b * skewX;
		
		    var scaleY = Math.sqrt(c * c + d * d);
		    c /= scaleY, d /= scaleY, skewX /= scaleY;
		
		    if (a * d < b * c) a = -a, b = -b, skewX = -skewX, scaleX = -scaleX;
		
		    return {
		      translateX: e,
		      translateY: f,
		      rotate: Math.atan2(b, a) * rad2deg,
		      skewX: Math.atan(skewX) * rad2deg,
		      scaleX: scaleX,
		      scaleY: scaleY
		    };
		  }
		
		  var cssNode;
		  var cssRoot;
		  var cssView;
		  var svgNode;
		  function parseCss(value) {
		    if (value === "none") return identity;
		    if (!cssNode) cssNode = document.createElement("DIV"), cssRoot = document.documentElement, cssView = document.defaultView;
		    cssNode.style.transform = value;
		    value = cssView.getComputedStyle(cssRoot.appendChild(cssNode), null).getPropertyValue("transform");
		    cssRoot.removeChild(cssNode);
		    var m = value.slice(7, -1).split(",");
		    return decompose(+m[0], +m[1], +m[2], +m[3], +m[4], +m[5]);
		  }
		
		  function parseSvg(value) {
		    if (!svgNode) svgNode = document.createElementNS("http://www.w3.org/2000/svg", "g");
		    svgNode.setAttribute("transform", value == null ? "" : value);
		    var m = svgNode.transform.baseVal.consolidate().matrix;
		    return decompose(m.a, m.b, m.c, m.d, m.e, m.f);
		  }
		
		  function interpolateTransform(parse, pxComma, pxParen, degParen) {
		
		    function pop(s) {
		      return s.length ? s.pop() + " " : "";
		    }
		
		    function translate(xa, ya, xb, yb, s, q) {
		      if (xa !== xb || ya !== yb) {
		        var i = s.push("translate(", null, pxComma, null, pxParen);
		        q.push({i: i - 4, x: number(xa, xb)}, {i: i - 2, x: number(ya, yb)});
		      } else if (xb || yb) {
		        s.push("translate(" + xb + pxComma + yb + pxParen);
		      }
		    }
		
		    function rotate(a, b, s, q) {
		      if (a !== b) {
		        if (a - b > 180) b += 360; else if (b - a > 180) a += 360; // shortest path
		        q.push({i: s.push(pop(s) + "rotate(", null, degParen) - 2, x: number(a, b)});
		      } else if (b) {
		        s.push(pop(s) + "rotate(" + b + degParen);
		      }
		    }
		
		    function skewX(a, b, s, q) {
		      if (a !== b) {
		        q.push({i: s.push(pop(s) + "skewX(", null, degParen) - 2, x: number(a, b)});
		      } else if (b) {
		        s.push(pop(s) + "skewX(" + b + degParen);
		      }
		    }
		
		    function scale(xa, ya, xb, yb, s, q) {
		      if (xa !== xb || ya !== yb) {
		        var i = s.push(pop(s) + "scale(", null, ",", null, ")");
		        q.push({i: i - 4, x: number(xa, xb)}, {i: i - 2, x: number(ya, yb)});
		      } else if (xb !== 1 || yb !== 1) {
		        s.push(pop(s) + "scale(" + xb + "," + yb + ")");
		      }
		    }
		
		    return function(a, b) {
		      var s = [], // string constants and placeholders
		          q = []; // number interpolators
		      a = parse(a), b = parse(b);
		      translate(a.translateX, a.translateY, b.translateX, b.translateY, s, q);
		      rotate(a.rotate, b.rotate, s, q);
		      skewX(a.skewX, b.skewX, s, q);
		      scale(a.scaleX, a.scaleY, b.scaleX, b.scaleY, s, q);
		      a = b = null; // gc
		      return function(t) {
		        var i = -1, n = q.length, o;
		        while (++i < n) s[(o = q[i]).i] = o.x(t);
		        return s.join("");
		      };
		    };
		  }
		
		  var interpolateTransformCss = interpolateTransform(parseCss, "px, ", "px)", "deg)");
		  var interpolateTransformSvg = interpolateTransform(parseSvg, ", ", ")", ")");
		
		  var rho = Math.SQRT2;
		  var rho2 = 2;
		  var rho4 = 4;
		  var epsilon2 = 1e-12;
		  function cosh(x) {
		    return ((x = Math.exp(x)) + 1 / x) / 2;
		  }
		
		  function sinh(x) {
		    return ((x = Math.exp(x)) - 1 / x) / 2;
		  }
		
		  function tanh(x) {
		    return ((x = Math.exp(2 * x)) - 1) / (x + 1);
		  }
		
		  // p0 = [ux0, uy0, w0]
		  // p1 = [ux1, uy1, w1]
		  function zoom(p0, p1) {
		    var ux0 = p0[0], uy0 = p0[1], w0 = p0[2],
		        ux1 = p1[0], uy1 = p1[1], w1 = p1[2],
		        dx = ux1 - ux0,
		        dy = uy1 - uy0,
		        d2 = dx * dx + dy * dy,
		        i,
		        S;
		
		    // Special case for u0 ≅ u1.
		    if (d2 < epsilon2) {
		      S = Math.log(w1 / w0) / rho;
		      i = function(t) {
		        return [
		          ux0 + t * dx,
		          uy0 + t * dy,
		          w0 * Math.exp(rho * t * S)
		        ];
		      }
		    }
		
		    // General case.
		    else {
		      var d1 = Math.sqrt(d2),
		          b0 = (w1 * w1 - w0 * w0 + rho4 * d2) / (2 * w0 * rho2 * d1),
		          b1 = (w1 * w1 - w0 * w0 - rho4 * d2) / (2 * w1 * rho2 * d1),
		          r0 = Math.log(Math.sqrt(b0 * b0 + 1) - b0),
		          r1 = Math.log(Math.sqrt(b1 * b1 + 1) - b1);
		      S = (r1 - r0) / rho;
		      i = function(t) {
		        var s = t * S,
		            coshr0 = cosh(r0),
		            u = w0 / (rho2 * d1) * (coshr0 * tanh(rho * s + r0) - sinh(r0));
		        return [
		          ux0 + u * dx,
		          uy0 + u * dy,
		          w0 * coshr0 / cosh(rho * s + r0)
		        ];
		      }
		    }
		
		    i.duration = S * 1000;
		
		    return i;
		  }
		
		  function interpolateHsl(start, end) {
		    var h = interpolateHue((start = d3Color.hsl(start)).h, (end = d3Color.hsl(end)).h),
		        s = nogamma(start.s, end.s),
		        l = nogamma(start.l, end.l),
		        opacity = nogamma(start.opacity, end.opacity);
		    return function(t) {
		      start.h = h(t);
		      start.s = s(t);
		      start.l = l(t);
		      start.opacity = opacity(t);
		      return start + "";
		    };
		  }
		
		  function interpolateHslLong(start, end) {
		    var h = nogamma((start = d3Color.hsl(start)).h, (end = d3Color.hsl(end)).h),
		        s = nogamma(start.s, end.s),
		        l = nogamma(start.l, end.l),
		        opacity = nogamma(start.opacity, end.opacity);
		    return function(t) {
		      start.h = h(t);
		      start.s = s(t);
		      start.l = l(t);
		      start.opacity = opacity(t);
		      return start + "";
		    };
		  }
		
		  function interpolateLab(start, end) {
		    var l = nogamma((start = d3Color.lab(start)).l, (end = d3Color.lab(end)).l),
		        a = nogamma(start.a, end.a),
		        b = nogamma(start.b, end.b),
		        opacity = nogamma(start.opacity, end.opacity);
		    return function(t) {
		      start.l = l(t);
		      start.a = a(t);
		      start.b = b(t);
		      start.opacity = opacity(t);
		      return start + "";
		    };
		  }
		
		  function interpolateHcl(start, end) {
		    var h = interpolateHue((start = d3Color.hcl(start)).h, (end = d3Color.hcl(end)).h),
		        c = nogamma(start.c, end.c),
		        l = nogamma(start.l, end.l),
		        opacity = nogamma(start.opacity, end.opacity);
		    return function(t) {
		      start.h = h(t);
		      start.c = c(t);
		      start.l = l(t);
		      start.opacity = opacity(t);
		      return start + "";
		    };
		  }
		
		  function interpolateHclLong(start, end) {
		    var h = nogamma((start = d3Color.hcl(start)).h, (end = d3Color.hcl(end)).h),
		        c = nogamma(start.c, end.c),
		        l = nogamma(start.l, end.l),
		        opacity = nogamma(start.opacity, end.opacity);
		    return function(t) {
		      start.h = h(t);
		      start.c = c(t);
		      start.l = l(t);
		      start.opacity = opacity(t);
		      return start + "";
		    };
		  }
		
		  var cubehelix$1 = (function gamma(y) {
		    y = +y;
		
		    function interpolateCubehelix(start, end) {
		      var h = interpolateHue((start = d3Color.cubehelix(start)).h, (end = d3Color.cubehelix(end)).h),
		          s = nogamma(start.s, end.s),
		          l = nogamma(start.l, end.l),
		          opacity = nogamma(start.opacity, end.opacity);
		      return function(t) {
		        start.h = h(t);
		        start.s = s(t);
		        start.l = l(Math.pow(t, y));
		        start.opacity = opacity(t);
		        return start + "";
		      };
		    }
		
		    interpolateCubehelix.gamma = gamma;
		
		    return interpolateCubehelix;
		  })(1);
		
		  var cubehelixLong = (function gamma(y) {
		    y = +y;
		
		    function interpolateCubehelixLong(start, end) {
		      var h = nogamma((start = d3Color.cubehelix(start)).h, (end = d3Color.cubehelix(end)).h),
		          s = nogamma(start.s, end.s),
		          l = nogamma(start.l, end.l),
		          opacity = nogamma(start.opacity, end.opacity);
		      return function(t) {
		        start.h = h(t);
		        start.s = s(t);
		        start.l = l(Math.pow(t, y));
		        start.opacity = opacity(t);
		        return start + "";
		      };
		    }
		
		    interpolateCubehelixLong.gamma = gamma;
		
		    return interpolateCubehelixLong;
		  })(1);
		
		  var version = "0.7.0";
		
		  exports.version = version;
		  exports.interpolate = value;
		  exports.interpolateArray = array;
		  exports.interpolateNumber = number;
		  exports.interpolateObject = object;
		  exports.interpolateRound = round;
		  exports.interpolateString = string;
		  exports.interpolateTransformCss = interpolateTransformCss;
		  exports.interpolateTransformSvg = interpolateTransformSvg;
		  exports.interpolateZoom = zoom;
		  exports.interpolateRgb = rgb$1;
		  exports.interpolateHsl = interpolateHsl;
		  exports.interpolateHslLong = interpolateHslLong;
		  exports.interpolateLab = interpolateLab;
		  exports.interpolateHcl = interpolateHcl;
		  exports.interpolateHclLong = interpolateHclLong;
		  exports.interpolateCubehelix = cubehelix$1;
		  exports.interpolateCubehelixLong = cubehelixLong;
		
		}));

	/***/ },
	/* 265 */
	/***/ function(module, exports, __webpack_require__) {

		(function (global, factory) {
		   true ? factory(exports) :
		  typeof define === 'function' && define.amd ? define(['exports'], factory) :
		  (factory((global.d3_color = global.d3_color || {})));
		}(this, function (exports) { 'use strict';
		
		  function define(constructor, factory, prototype) {
		    constructor.prototype = factory.prototype = prototype;
		    prototype.constructor = constructor;
		  }
		
		  function extend(parent, definition) {
		    var prototype = Object.create(parent.prototype);
		    for (var key in definition) prototype[key] = definition[key];
		    return prototype;
		  }
		
		  function Color() {}
		
		  var darker = 0.7;
		  var brighter = 1 / darker;
		
		  var reHex3 = /^#([0-9a-f]{3})$/;
		  var reHex6 = /^#([0-9a-f]{6})$/;
		  var reRgbInteger = /^rgb\(\s*([-+]?\d+)\s*,\s*([-+]?\d+)\s*,\s*([-+]?\d+)\s*\)$/;
		  var reRgbPercent = /^rgb\(\s*([-+]?\d+(?:\.\d+)?)%\s*,\s*([-+]?\d+(?:\.\d+)?)%\s*,\s*([-+]?\d+(?:\.\d+)?)%\s*\)$/;
		  var reRgbaInteger = /^rgba\(\s*([-+]?\d+)\s*,\s*([-+]?\d+)\s*,\s*([-+]?\d+)\s*,\s*([-+]?\d+(?:\.\d+)?)\s*\)$/;
		  var reRgbaPercent = /^rgba\(\s*([-+]?\d+(?:\.\d+)?)%\s*,\s*([-+]?\d+(?:\.\d+)?)%\s*,\s*([-+]?\d+(?:\.\d+)?)%\s*,\s*([-+]?\d+(?:\.\d+)?)\s*\)$/;
		  var reHslPercent = /^hsl\(\s*([-+]?\d+(?:\.\d+)?)\s*,\s*([-+]?\d+(?:\.\d+)?)%\s*,\s*([-+]?\d+(?:\.\d+)?)%\s*\)$/;
		  var reHslaPercent = /^hsla\(\s*([-+]?\d+(?:\.\d+)?)\s*,\s*([-+]?\d+(?:\.\d+)?)%\s*,\s*([-+]?\d+(?:\.\d+)?)%\s*,\s*([-+]?\d+(?:\.\d+)?)\s*\)$/;
		  var named = {
		    aliceblue: 0xf0f8ff,
		    antiquewhite: 0xfaebd7,
		    aqua: 0x00ffff,
		    aquamarine: 0x7fffd4,
		    azure: 0xf0ffff,
		    beige: 0xf5f5dc,
		    bisque: 0xffe4c4,
		    black: 0x000000,
		    blanchedalmond: 0xffebcd,
		    blue: 0x0000ff,
		    blueviolet: 0x8a2be2,
		    brown: 0xa52a2a,
		    burlywood: 0xdeb887,
		    cadetblue: 0x5f9ea0,
		    chartreuse: 0x7fff00,
		    chocolate: 0xd2691e,
		    coral: 0xff7f50,
		    cornflowerblue: 0x6495ed,
		    cornsilk: 0xfff8dc,
		    crimson: 0xdc143c,
		    cyan: 0x00ffff,
		    darkblue: 0x00008b,
		    darkcyan: 0x008b8b,
		    darkgoldenrod: 0xb8860b,
		    darkgray: 0xa9a9a9,
		    darkgreen: 0x006400,
		    darkgrey: 0xa9a9a9,
		    darkkhaki: 0xbdb76b,
		    darkmagenta: 0x8b008b,
		    darkolivegreen: 0x556b2f,
		    darkorange: 0xff8c00,
		    darkorchid: 0x9932cc,
		    darkred: 0x8b0000,
		    darksalmon: 0xe9967a,
		    darkseagreen: 0x8fbc8f,
		    darkslateblue: 0x483d8b,
		    darkslategray: 0x2f4f4f,
		    darkslategrey: 0x2f4f4f,
		    darkturquoise: 0x00ced1,
		    darkviolet: 0x9400d3,
		    deeppink: 0xff1493,
		    deepskyblue: 0x00bfff,
		    dimgray: 0x696969,
		    dimgrey: 0x696969,
		    dodgerblue: 0x1e90ff,
		    firebrick: 0xb22222,
		    floralwhite: 0xfffaf0,
		    forestgreen: 0x228b22,
		    fuchsia: 0xff00ff,
		    gainsboro: 0xdcdcdc,
		    ghostwhite: 0xf8f8ff,
		    gold: 0xffd700,
		    goldenrod: 0xdaa520,
		    gray: 0x808080,
		    green: 0x008000,
		    greenyellow: 0xadff2f,
		    grey: 0x808080,
		    honeydew: 0xf0fff0,
		    hotpink: 0xff69b4,
		    indianred: 0xcd5c5c,
		    indigo: 0x4b0082,
		    ivory: 0xfffff0,
		    khaki: 0xf0e68c,
		    lavender: 0xe6e6fa,
		    lavenderblush: 0xfff0f5,
		    lawngreen: 0x7cfc00,
		    lemonchiffon: 0xfffacd,
		    lightblue: 0xadd8e6,
		    lightcoral: 0xf08080,
		    lightcyan: 0xe0ffff,
		    lightgoldenrodyellow: 0xfafad2,
		    lightgray: 0xd3d3d3,
		    lightgreen: 0x90ee90,
		    lightgrey: 0xd3d3d3,
		    lightpink: 0xffb6c1,
		    lightsalmon: 0xffa07a,
		    lightseagreen: 0x20b2aa,
		    lightskyblue: 0x87cefa,
		    lightslategray: 0x778899,
		    lightslategrey: 0x778899,
		    lightsteelblue: 0xb0c4de,
		    lightyellow: 0xffffe0,
		    lime: 0x00ff00,
		    limegreen: 0x32cd32,
		    linen: 0xfaf0e6,
		    magenta: 0xff00ff,
		    maroon: 0x800000,
		    mediumaquamarine: 0x66cdaa,
		    mediumblue: 0x0000cd,
		    mediumorchid: 0xba55d3,
		    mediumpurple: 0x9370db,
		    mediumseagreen: 0x3cb371,
		    mediumslateblue: 0x7b68ee,
		    mediumspringgreen: 0x00fa9a,
		    mediumturquoise: 0x48d1cc,
		    mediumvioletred: 0xc71585,
		    midnightblue: 0x191970,
		    mintcream: 0xf5fffa,
		    mistyrose: 0xffe4e1,
		    moccasin: 0xffe4b5,
		    navajowhite: 0xffdead,
		    navy: 0x000080,
		    oldlace: 0xfdf5e6,
		    olive: 0x808000,
		    olivedrab: 0x6b8e23,
		    orange: 0xffa500,
		    orangered: 0xff4500,
		    orchid: 0xda70d6,
		    palegoldenrod: 0xeee8aa,
		    palegreen: 0x98fb98,
		    paleturquoise: 0xafeeee,
		    palevioletred: 0xdb7093,
		    papayawhip: 0xffefd5,
		    peachpuff: 0xffdab9,
		    peru: 0xcd853f,
		    pink: 0xffc0cb,
		    plum: 0xdda0dd,
		    powderblue: 0xb0e0e6,
		    purple: 0x800080,
		    rebeccapurple: 0x663399,
		    red: 0xff0000,
		    rosybrown: 0xbc8f8f,
		    royalblue: 0x4169e1,
		    saddlebrown: 0x8b4513,
		    salmon: 0xfa8072,
		    sandybrown: 0xf4a460,
		    seagreen: 0x2e8b57,
		    seashell: 0xfff5ee,
		    sienna: 0xa0522d,
		    silver: 0xc0c0c0,
		    skyblue: 0x87ceeb,
		    slateblue: 0x6a5acd,
		    slategray: 0x708090,
		    slategrey: 0x708090,
		    snow: 0xfffafa,
		    springgreen: 0x00ff7f,
		    steelblue: 0x4682b4,
		    tan: 0xd2b48c,
		    teal: 0x008080,
		    thistle: 0xd8bfd8,
		    tomato: 0xff6347,
		    turquoise: 0x40e0d0,
		    violet: 0xee82ee,
		    wheat: 0xf5deb3,
		    white: 0xffffff,
		    whitesmoke: 0xf5f5f5,
		    yellow: 0xffff00,
		    yellowgreen: 0x9acd32
		  };
		
		  define(Color, color, {
		    displayable: function() {
		      return this.rgb().displayable();
		    },
		    toString: function() {
		      return this.rgb() + "";
		    }
		  });
		
		  function color(format) {
		    var m;
		    format = (format + "").trim().toLowerCase();
		    return (m = reHex3.exec(format)) ? (m = parseInt(m[1], 16), new Rgb((m >> 8 & 0xf) | (m >> 4 & 0x0f0), (m >> 4 & 0xf) | (m & 0xf0), ((m & 0xf) << 4) | (m & 0xf), 1)) // #f00
		        : (m = reHex6.exec(format)) ? rgbn(parseInt(m[1], 16)) // #ff0000
		        : (m = reRgbInteger.exec(format)) ? new Rgb(m[1], m[2], m[3], 1) // rgb(255, 0, 0)
		        : (m = reRgbPercent.exec(format)) ? new Rgb(m[1] * 255 / 100, m[2] * 255 / 100, m[3] * 255 / 100, 1) // rgb(100%, 0%, 0%)
		        : (m = reRgbaInteger.exec(format)) ? rgba(m[1], m[2], m[3], m[4]) // rgba(255, 0, 0, 1)
		        : (m = reRgbaPercent.exec(format)) ? rgba(m[1] * 255 / 100, m[2] * 255 / 100, m[3] * 255 / 100, m[4]) // rgb(100%, 0%, 0%, 1)
		        : (m = reHslPercent.exec(format)) ? hsla(m[1], m[2] / 100, m[3] / 100, 1) // hsl(120, 50%, 50%)
		        : (m = reHslaPercent.exec(format)) ? hsla(m[1], m[2] / 100, m[3] / 100, m[4]) // hsla(120, 50%, 50%, 1)
		        : named.hasOwnProperty(format) ? rgbn(named[format])
		        : format === "transparent" ? new Rgb(NaN, NaN, NaN, 0)
		        : null;
		  }
		
		  function rgbn(n) {
		    return new Rgb(n >> 16 & 0xff, n >> 8 & 0xff, n & 0xff, 1);
		  }
		
		  function rgba(r, g, b, a) {
		    if (a <= 0) r = g = b = NaN;
		    return new Rgb(r, g, b, a);
		  }
		
		  function rgbConvert(o) {
		    if (!(o instanceof Color)) o = color(o);
		    if (!o) return new Rgb;
		    o = o.rgb();
		    return new Rgb(o.r, o.g, o.b, o.opacity);
		  }
		
		  function rgb(r, g, b, opacity) {
		    return arguments.length === 1 ? rgbConvert(r) : new Rgb(r, g, b, opacity == null ? 1 : opacity);
		  }
		
		  function Rgb(r, g, b, opacity) {
		    this.r = +r;
		    this.g = +g;
		    this.b = +b;
		    this.opacity = +opacity;
		  }
		
		  define(Rgb, rgb, extend(Color, {
		    brighter: function(k) {
		      k = k == null ? brighter : Math.pow(brighter, k);
		      return new Rgb(this.r * k, this.g * k, this.b * k, this.opacity);
		    },
		    darker: function(k) {
		      k = k == null ? darker : Math.pow(darker, k);
		      return new Rgb(this.r * k, this.g * k, this.b * k, this.opacity);
		    },
		    rgb: function() {
		      return this;
		    },
		    displayable: function() {
		      return (0 <= this.r && this.r <= 255)
		          && (0 <= this.g && this.g <= 255)
		          && (0 <= this.b && this.b <= 255)
		          && (0 <= this.opacity && this.opacity <= 1);
		    },
		    toString: function() {
		      var a = this.opacity; a = isNaN(a) ? 1 : Math.max(0, Math.min(1, a));
		      return (a === 1 ? "rgb(" : "rgba(")
		          + Math.max(0, Math.min(255, Math.round(this.r) || 0)) + ", "
		          + Math.max(0, Math.min(255, Math.round(this.g) || 0)) + ", "
		          + Math.max(0, Math.min(255, Math.round(this.b) || 0))
		          + (a === 1 ? ")" : ", " + a + ")");
		    }
		  }));
		
		  function hsla(h, s, l, a) {
		    if (a <= 0) h = s = l = NaN;
		    else if (l <= 0 || l >= 1) h = s = NaN;
		    else if (s <= 0) h = NaN;
		    return new Hsl(h, s, l, a);
		  }
		
		  function hslConvert(o) {
		    if (o instanceof Hsl) return new Hsl(o.h, o.s, o.l, o.opacity);
		    if (!(o instanceof Color)) o = color(o);
		    if (!o) return new Hsl;
		    if (o instanceof Hsl) return o;
		    o = o.rgb();
		    var r = o.r / 255,
		        g = o.g / 255,
		        b = o.b / 255,
		        min = Math.min(r, g, b),
		        max = Math.max(r, g, b),
		        h = NaN,
		        s = max - min,
		        l = (max + min) / 2;
		    if (s) {
		      if (r === max) h = (g - b) / s + (g < b) * 6;
		      else if (g === max) h = (b - r) / s + 2;
		      else h = (r - g) / s + 4;
		      s /= l < 0.5 ? max + min : 2 - max - min;
		      h *= 60;
		    } else {
		      s = l > 0 && l < 1 ? 0 : h;
		    }
		    return new Hsl(h, s, l, o.opacity);
		  }
		
		  function hsl(h, s, l, opacity) {
		    return arguments.length === 1 ? hslConvert(h) : new Hsl(h, s, l, opacity == null ? 1 : opacity);
		  }
		
		  function Hsl(h, s, l, opacity) {
		    this.h = +h;
		    this.s = +s;
		    this.l = +l;
		    this.opacity = +opacity;
		  }
		
		  define(Hsl, hsl, extend(Color, {
		    brighter: function(k) {
		      k = k == null ? brighter : Math.pow(brighter, k);
		      return new Hsl(this.h, this.s, this.l * k, this.opacity);
		    },
		    darker: function(k) {
		      k = k == null ? darker : Math.pow(darker, k);
		      return new Hsl(this.h, this.s, this.l * k, this.opacity);
		    },
		    rgb: function() {
		      var h = this.h % 360 + (this.h < 0) * 360,
		          s = isNaN(h) || isNaN(this.s) ? 0 : this.s,
		          l = this.l,
		          m2 = l + (l < 0.5 ? l : 1 - l) * s,
		          m1 = 2 * l - m2;
		      return new Rgb(
		        hsl2rgb(h >= 240 ? h - 240 : h + 120, m1, m2),
		        hsl2rgb(h, m1, m2),
		        hsl2rgb(h < 120 ? h + 240 : h - 120, m1, m2),
		        this.opacity
		      );
		    },
		    displayable: function() {
		      return (0 <= this.s && this.s <= 1 || isNaN(this.s))
		          && (0 <= this.l && this.l <= 1)
		          && (0 <= this.opacity && this.opacity <= 1);
		    }
		  }));
		
		  /* From FvD 13.37, CSS Color Module Level 3 */
		  function hsl2rgb(h, m1, m2) {
		    return (h < 60 ? m1 + (m2 - m1) * h / 60
		        : h < 180 ? m2
		        : h < 240 ? m1 + (m2 - m1) * (240 - h) / 60
		        : m1) * 255;
		  }
		
		  var deg2rad = Math.PI / 180;
		  var rad2deg = 180 / Math.PI;
		
		  var Kn = 18;
		  var Xn = 0.950470;
		  var Yn = 1;
		  var Zn = 1.088830;
		  var t0 = 4 / 29;
		  var t1 = 6 / 29;
		  var t2 = 3 * t1 * t1;
		  var t3 = t1 * t1 * t1;
		  function labConvert(o) {
		    if (o instanceof Lab) return new Lab(o.l, o.a, o.b, o.opacity);
		    if (o instanceof Hcl) {
		      var h = o.h * deg2rad;
		      return new Lab(o.l, Math.cos(h) * o.c, Math.sin(h) * o.c, o.opacity);
		    }
		    if (!(o instanceof Rgb)) o = rgbConvert(o);
		    var b = rgb2xyz(o.r),
		        a = rgb2xyz(o.g),
		        l = rgb2xyz(o.b),
		        x = xyz2lab((0.4124564 * b + 0.3575761 * a + 0.1804375 * l) / Xn),
		        y = xyz2lab((0.2126729 * b + 0.7151522 * a + 0.0721750 * l) / Yn),
		        z = xyz2lab((0.0193339 * b + 0.1191920 * a + 0.9503041 * l) / Zn);
		    return new Lab(116 * y - 16, 500 * (x - y), 200 * (y - z), o.opacity);
		  }
		
		  function lab(l, a, b, opacity) {
		    return arguments.length === 1 ? labConvert(l) : new Lab(l, a, b, opacity == null ? 1 : opacity);
		  }
		
		  function Lab(l, a, b, opacity) {
		    this.l = +l;
		    this.a = +a;
		    this.b = +b;
		    this.opacity = +opacity;
		  }
		
		  define(Lab, lab, extend(Color, {
		    brighter: function(k) {
		      return new Lab(this.l + Kn * (k == null ? 1 : k), this.a, this.b, this.opacity);
		    },
		    darker: function(k) {
		      return new Lab(this.l - Kn * (k == null ? 1 : k), this.a, this.b, this.opacity);
		    },
		    rgb: function() {
		      var y = (this.l + 16) / 116,
		          x = isNaN(this.a) ? y : y + this.a / 500,
		          z = isNaN(this.b) ? y : y - this.b / 200;
		      y = Yn * lab2xyz(y);
		      x = Xn * lab2xyz(x);
		      z = Zn * lab2xyz(z);
		      return new Rgb(
		        xyz2rgb( 3.2404542 * x - 1.5371385 * y - 0.4985314 * z), // D65 -> sRGB
		        xyz2rgb(-0.9692660 * x + 1.8760108 * y + 0.0415560 * z),
		        xyz2rgb( 0.0556434 * x - 0.2040259 * y + 1.0572252 * z),
		        this.opacity
		      );
		    }
		  }));
		
		  function xyz2lab(t) {
		    return t > t3 ? Math.pow(t, 1 / 3) : t / t2 + t0;
		  }
		
		  function lab2xyz(t) {
		    return t > t1 ? t * t * t : t2 * (t - t0);
		  }
		
		  function xyz2rgb(x) {
		    return 255 * (x <= 0.0031308 ? 12.92 * x : 1.055 * Math.pow(x, 1 / 2.4) - 0.055);
		  }
		
		  function rgb2xyz(x) {
		    return (x /= 255) <= 0.04045 ? x / 12.92 : Math.pow((x + 0.055) / 1.055, 2.4);
		  }
		
		  function hclConvert(o) {
		    if (o instanceof Hcl) return new Hcl(o.h, o.c, o.l, o.opacity);
		    if (!(o instanceof Lab)) o = labConvert(o);
		    var h = Math.atan2(o.b, o.a) * rad2deg;
		    return new Hcl(h < 0 ? h + 360 : h, Math.sqrt(o.a * o.a + o.b * o.b), o.l, o.opacity);
		  }
		
		  function hcl(h, c, l, opacity) {
		    return arguments.length === 1 ? hclConvert(h) : new Hcl(h, c, l, opacity == null ? 1 : opacity);
		  }
		
		  function Hcl(h, c, l, opacity) {
		    this.h = +h;
		    this.c = +c;
		    this.l = +l;
		    this.opacity = +opacity;
		  }
		
		  define(Hcl, hcl, extend(Color, {
		    brighter: function(k) {
		      return new Hcl(this.h, this.c, this.l + Kn * (k == null ? 1 : k), this.opacity);
		    },
		    darker: function(k) {
		      return new Hcl(this.h, this.c, this.l - Kn * (k == null ? 1 : k), this.opacity);
		    },
		    rgb: function() {
		      return labConvert(this).rgb();
		    }
		  }));
		
		  var A = -0.14861;
		  var B = +1.78277;
		  var C = -0.29227;
		  var D = -0.90649;
		  var E = +1.97294;
		  var ED = E * D;
		  var EB = E * B;
		  var BC_DA = B * C - D * A;
		  function cubehelixConvert(o) {
		    if (o instanceof Cubehelix) return new Cubehelix(o.h, o.s, o.l, o.opacity);
		    if (!(o instanceof Rgb)) o = rgbConvert(o);
		    var r = o.r / 255,
		        g = o.g / 255,
		        b = o.b / 255,
		        l = (BC_DA * b + ED * r - EB * g) / (BC_DA + ED - EB),
		        bl = b - l,
		        k = (E * (g - l) - C * bl) / D,
		        s = Math.sqrt(k * k + bl * bl) / (E * l * (1 - l)), // NaN if l=0 or l=1
		        h = s ? Math.atan2(k, bl) * rad2deg - 120 : NaN;
		    return new Cubehelix(h < 0 ? h + 360 : h, s, l, o.opacity);
		  }
		
		  function cubehelix(h, s, l, opacity) {
		    return arguments.length === 1 ? cubehelixConvert(h) : new Cubehelix(h, s, l, opacity == null ? 1 : opacity);
		  }
		
		  function Cubehelix(h, s, l, opacity) {
		    this.h = +h;
		    this.s = +s;
		    this.l = +l;
		    this.opacity = +opacity;
		  }
		
		  define(Cubehelix, cubehelix, extend(Color, {
		    brighter: function(k) {
		      k = k == null ? brighter : Math.pow(brighter, k);
		      return new Cubehelix(this.h, this.s, this.l * k, this.opacity);
		    },
		    darker: function(k) {
		      k = k == null ? darker : Math.pow(darker, k);
		      return new Cubehelix(this.h, this.s, this.l * k, this.opacity);
		    },
		    rgb: function() {
		      var h = isNaN(this.h) ? 0 : (this.h + 120) * deg2rad,
		          l = +this.l,
		          a = isNaN(this.s) ? 0 : this.s * l * (1 - l),
		          cosh = Math.cos(h),
		          sinh = Math.sin(h);
		      return new Rgb(
		        255 * (l + a * (A * cosh + B * sinh)),
		        255 * (l + a * (C * cosh + D * sinh)),
		        255 * (l + a * (E * cosh)),
		        this.opacity
		      );
		    }
		  }));
		
		  var version = "0.4.2";
		
		  exports.version = version;
		  exports.color = color;
		  exports.rgb = rgb;
		  exports.hsl = hsl;
		  exports.lab = lab;
		  exports.hcl = hcl;
		  exports.cubehelix = cubehelix;
		
		}));

	/***/ },
	/* 266 */
	/***/ function(module, exports, __webpack_require__) {

		(function (global, factory) {
		   true ? factory(exports) :
		  typeof define === 'function' && define.amd ? define(['exports'], factory) :
		  (factory((global.d3_format = {})));
		}(this, function (exports) { 'use strict';
		
		  // Computes the decimal coefficient and exponent of the specified number x with
		  // significant digits p, where x is positive and p is in [1, 21] or undefined.
		  // For example, formatDecimal(1.23) returns ["123", 0].
		  function formatDecimal(x, p) {
		    if ((i = (x = p ? x.toExponential(p - 1) : x.toExponential()).indexOf("e")) < 0) return null; // NaN, ±Infinity
		    var i, coefficient = x.slice(0, i);
		
		    // The string returned by toExponential either has the form \d\.\d+e[-+]\d+
		    // (e.g., 1.2e+3) or the form \de[-+]\d+ (e.g., 1e+3).
		    return [
		      coefficient.length > 1 ? coefficient[0] + coefficient.slice(2) : coefficient,
		      +x.slice(i + 1)
		    ];
		  }
		
		  function exponent(x) {
		    return x = formatDecimal(Math.abs(x)), x ? x[1] : NaN;
		  }
		
		  function formatGroup(grouping, thousands) {
		    return function(value, width) {
		      var i = value.length,
		          t = [],
		          j = 0,
		          g = grouping[0],
		          length = 0;
		
		      while (i > 0 && g > 0) {
		        if (length + g + 1 > width) g = Math.max(1, width - length);
		        t.push(value.substring(i -= g, i + g));
		        if ((length += g + 1) > width) break;
		        g = grouping[j = (j + 1) % grouping.length];
		      }
		
		      return t.reverse().join(thousands);
		    };
		  }
		
		  function formatDefault(x, p) {
		    x = x.toPrecision(p);
		
		    out: for (var n = x.length, i = 1, i0 = -1, i1; i < n; ++i) {
		      switch (x[i]) {
		        case ".": i0 = i1 = i; break;
		        case "0": if (i0 === 0) i0 = i; i1 = i; break;
		        case "e": break out;
		        default: if (i0 > 0) i0 = 0; break;
		      }
		    }
		
		    return i0 > 0 ? x.slice(0, i0) + x.slice(i1 + 1) : x;
		  }
		
		  var prefixExponent;
		
		  function formatPrefixAuto(x, p) {
		    var d = formatDecimal(x, p);
		    if (!d) return x + "";
		    var coefficient = d[0],
		        exponent = d[1],
		        i = exponent - (prefixExponent = Math.max(-8, Math.min(8, Math.floor(exponent / 3))) * 3) + 1,
		        n = coefficient.length;
		    return i === n ? coefficient
		        : i > n ? coefficient + new Array(i - n + 1).join("0")
		        : i > 0 ? coefficient.slice(0, i) + "." + coefficient.slice(i)
		        : "0." + new Array(1 - i).join("0") + formatDecimal(x, Math.max(0, p + i - 1))[0]; // less than 1y!
		  }
		
		  function formatRounded(x, p) {
		    var d = formatDecimal(x, p);
		    if (!d) return x + "";
		    var coefficient = d[0],
		        exponent = d[1];
		    return exponent < 0 ? "0." + new Array(-exponent).join("0") + coefficient
		        : coefficient.length > exponent + 1 ? coefficient.slice(0, exponent + 1) + "." + coefficient.slice(exponent + 1)
		        : coefficient + new Array(exponent - coefficient.length + 2).join("0");
		  }
		
		  var formatTypes = {
		    "": formatDefault,
		    "%": function(x, p) { return (x * 100).toFixed(p); },
		    "b": function(x) { return Math.round(x).toString(2); },
		    "c": function(x) { return x + ""; },
		    "d": function(x) { return Math.round(x).toString(10); },
		    "e": function(x, p) { return x.toExponential(p); },
		    "f": function(x, p) { return x.toFixed(p); },
		    "g": function(x, p) { return x.toPrecision(p); },
		    "o": function(x) { return Math.round(x).toString(8); },
		    "p": function(x, p) { return formatRounded(x * 100, p); },
		    "r": formatRounded,
		    "s": formatPrefixAuto,
		    "X": function(x) { return Math.round(x).toString(16).toUpperCase(); },
		    "x": function(x) { return Math.round(x).toString(16); }
		  };
		
		  // [[fill]align][sign][symbol][0][width][,][.precision][type]
		  var re = /^(?:(.)?([<>=^]))?([+\-\( ])?([$#])?(0)?(\d+)?(,)?(\.\d+)?([a-z%])?$/i;
		
		  function formatSpecifier(specifier) {
		    return new FormatSpecifier(specifier);
		  }
		
		  function FormatSpecifier(specifier) {
		    if (!(match = re.exec(specifier))) throw new Error("invalid format: " + specifier);
		
		    var match,
		        fill = match[1] || " ",
		        align = match[2] || ">",
		        sign = match[3] || "-",
		        symbol = match[4] || "",
		        zero = !!match[5],
		        width = match[6] && +match[6],
		        comma = !!match[7],
		        precision = match[8] && +match[8].slice(1),
		        type = match[9] || "";
		
		    // The "n" type is an alias for ",g".
		    if (type === "n") comma = true, type = "g";
		
		    // Map invalid types to the default format.
		    else if (!formatTypes[type]) type = "";
		
		    // If zero fill is specified, padding goes after sign and before digits.
		    if (zero || (fill === "0" && align === "=")) zero = true, fill = "0", align = "=";
		
		    this.fill = fill;
		    this.align = align;
		    this.sign = sign;
		    this.symbol = symbol;
		    this.zero = zero;
		    this.width = width;
		    this.comma = comma;
		    this.precision = precision;
		    this.type = type;
		  }
		
		  FormatSpecifier.prototype.toString = function() {
		    return this.fill
		        + this.align
		        + this.sign
		        + this.symbol
		        + (this.zero ? "0" : "")
		        + (this.width == null ? "" : Math.max(1, this.width | 0))
		        + (this.comma ? "," : "")
		        + (this.precision == null ? "" : "." + Math.max(0, this.precision | 0))
		        + this.type;
		  };
		
		  var prefixes = ["y","z","a","f","p","n","µ","m","","k","M","G","T","P","E","Z","Y"];
		
		  function identity(x) {
		    return x;
		  }
		
		  function locale(locale) {
		    var group = locale.grouping && locale.thousands ? formatGroup(locale.grouping, locale.thousands) : identity,
		        currency = locale.currency,
		        decimal = locale.decimal;
		
		    function newFormat(specifier) {
		      specifier = formatSpecifier(specifier);
		
		      var fill = specifier.fill,
		          align = specifier.align,
		          sign = specifier.sign,
		          symbol = specifier.symbol,
		          zero = specifier.zero,
		          width = specifier.width,
		          comma = specifier.comma,
		          precision = specifier.precision,
		          type = specifier.type;
		
		      // Compute the prefix and suffix.
		      // For SI-prefix, the suffix is lazily computed.
		      var prefix = symbol === "$" ? currency[0] : symbol === "#" && /[boxX]/.test(type) ? "0" + type.toLowerCase() : "",
		          suffix = symbol === "$" ? currency[1] : /[%p]/.test(type) ? "%" : "";
		
		      // What format function should we use?
		      // Is this an integer type?
		      // Can this type generate exponential notation?
		      var formatType = formatTypes[type],
		          maybeSuffix = !type || /[defgprs%]/.test(type);
		
		      // Set the default precision if not specified,
		      // or clamp the specified precision to the supported range.
		      // For significant precision, it must be in [1, 21].
		      // For fixed precision, it must be in [0, 20].
		      precision = precision == null ? (type ? 6 : 12)
		          : /[gprs]/.test(type) ? Math.max(1, Math.min(21, precision))
		          : Math.max(0, Math.min(20, precision));
		
		      function format(value) {
		        var valuePrefix = prefix,
		            valueSuffix = suffix,
		            i, n, c;
		
		        if (type === "c") {
		          valueSuffix = formatType(value) + valueSuffix;
		          value = "";
		        } else {
		          value = +value;
		
		          // Convert negative to positive, and compute the prefix.
		          // Note that -0 is not less than 0, but 1 / -0 is!
		          var valueNegative = (value < 0 || 1 / value < 0) && (value *= -1, true);
		
		          // Perform the initial formatting.
		          value = formatType(value, precision);
		
		          // If the original value was negative, it may be rounded to zero during
		          // formatting; treat this as (positive) zero.
		          if (valueNegative) {
		            i = -1, n = value.length;
		            valueNegative = false;
		            while (++i < n) {
		              if (c = value.charCodeAt(i), (48 < c && c < 58)
		                  || (type === "x" && 96 < c && c < 103)
		                  || (type === "X" && 64 < c && c < 71)) {
		                valueNegative = true;
		                break;
		              }
		            }
		          }
		
		          // Compute the prefix and suffix.
		          valuePrefix = (valueNegative ? (sign === "(" ? sign : "-") : sign === "-" || sign === "(" ? "" : sign) + valuePrefix;
		          valueSuffix = valueSuffix + (type === "s" ? prefixes[8 + prefixExponent / 3] : "") + (valueNegative && sign === "(" ? ")" : "");
		
		          // Break the formatted value into the integer “value” part that can be
		          // grouped, and fractional or exponential “suffix” part that is not.
		          if (maybeSuffix) {
		            i = -1, n = value.length;
		            while (++i < n) {
		              if (c = value.charCodeAt(i), 48 > c || c > 57) {
		                valueSuffix = (c === 46 ? decimal + value.slice(i + 1) : value.slice(i)) + valueSuffix;
		                value = value.slice(0, i);
		                break;
		              }
		            }
		          }
		        }
		
		        // If the fill character is not "0", grouping is applied before padding.
		        if (comma && !zero) value = group(value, Infinity);
		
		        // Compute the padding.
		        var length = valuePrefix.length + value.length + valueSuffix.length,
		            padding = length < width ? new Array(width - length + 1).join(fill) : "";
		
		        // If the fill character is "0", grouping is applied after padding.
		        if (comma && zero) value = group(padding + value, padding.length ? width - valueSuffix.length : Infinity), padding = "";
		
		        // Reconstruct the final output based on the desired alignment.
		        switch (align) {
		          case "<": return valuePrefix + value + valueSuffix + padding;
		          case "=": return valuePrefix + padding + value + valueSuffix;
		          case "^": return padding.slice(0, length = padding.length >> 1) + valuePrefix + value + valueSuffix + padding.slice(length);
		        }
		        return padding + valuePrefix + value + valueSuffix;
		      }
		
		      format.toString = function() {
		        return specifier + "";
		      };
		
		      return format;
		    }
		
		    function formatPrefix(specifier, value) {
		      var f = newFormat((specifier = formatSpecifier(specifier), specifier.type = "f", specifier)),
		          e = Math.max(-8, Math.min(8, Math.floor(exponent(value) / 3))) * 3,
		          k = Math.pow(10, -e),
		          prefix = prefixes[8 + e / 3];
		      return function(value) {
		        return f(k * value) + prefix;
		      };
		    }
		
		    return {
		      format: newFormat,
		      formatPrefix: formatPrefix
		    };
		  }
		
		  var defaultLocale = locale({
		    decimal: ".",
		    thousands: ",",
		    grouping: [3],
		    currency: ["$", ""]
		  });
		
		  var caES = locale({
		    decimal: ",",
		    thousands: ".",
		    grouping: [3],
		    currency: ["", "\xa0€"]
		  });
		
		  var csCZ = locale({
		    decimal: ",",
		    thousands: "\xa0",
		    grouping: [3],
		    currency: ["", "\xa0Kč"]
		  });
		
		  var deCH = locale({
		    decimal: ",",
		    thousands: "'",
		    grouping: [3],
		    currency: ["", "\xa0CHF"]
		  });
		
		  var deDE = locale({
		    decimal: ",",
		    thousands: ".",
		    grouping: [3],
		    currency: ["", "\xa0€"]
		  });
		
		  var enCA = locale({
		    decimal: ".",
		    thousands: ",",
		    grouping: [3],
		    currency: ["$", ""]
		  });
		
		  var enGB = locale({
		    decimal: ".",
		    thousands: ",",
		    grouping: [3],
		    currency: ["£", ""]
		  });
		
		  var esES = locale({
		    decimal: ",",
		    thousands: ".",
		    grouping: [3],
		    currency: ["", "\xa0€"]
		  });
		
		  var fiFI = locale({
		    decimal: ",",
		    thousands: "\xa0",
		    grouping: [3],
		    currency: ["", "\xa0€"]
		  });
		
		  var frCA = locale({
		    decimal: ",",
		    thousands: "\xa0",
		    grouping: [3],
		    currency: ["", "$"]
		  });
		
		  var frFR = locale({
		    decimal: ",",
		    thousands: ".",
		    grouping: [3],
		    currency: ["", "\xa0€"]
		  });
		
		  var heIL = locale({
		    decimal: ".",
		    thousands: ",",
		    grouping: [3],
		    currency: ["₪", ""]
		  });
		
		  var huHU = locale({
		    decimal: ",",
		    thousands: "\xa0",
		    grouping: [3],
		    currency: ["", "\xa0Ft"]
		  });
		
		  var itIT = locale({
		    decimal: ",",
		    thousands: ".",
		    grouping: [3],
		    currency: ["€", ""]
		  });
		
		  var jaJP = locale({
		    decimal: ".",
		    thousands: ",",
		    grouping: [3],
		    currency: ["", "円"]
		  });
		
		  var koKR = locale({
		    decimal: ".",
		    thousands: ",",
		    grouping: [3],
		    currency: ["₩", ""]
		  });
		
		  var mkMK = locale({
		    decimal: ",",
		    thousands: ".",
		    grouping: [3],
		    currency: ["", "\xa0ден."]
		  });
		
		  var nlNL = locale({
		    decimal: ",",
		    thousands: ".",
		    grouping: [3],
		    currency: ["€\xa0", ""]
		  });
		
		  var plPL = locale({
		    decimal: ",",
		    thousands: ".",
		    grouping: [3],
		    currency: ["", "zł"]
		  });
		
		  var ptBR = locale({
		    decimal: ",",
		    thousands: ".",
		    grouping: [3],
		    currency: ["R$", ""]
		  });
		
		  var ruRU = locale({
		    decimal: ",",
		    thousands: "\xa0",
		    grouping: [3],
		    currency: ["", "\xa0руб."]
		  });
		
		  var svSE = locale({
		    decimal: ",",
		    thousands: "\xa0",
		    grouping: [3],
		    currency: ["", "SEK"]
		  });
		
		  var zhCN = locale({
		    decimal: ".",
		    thousands: ",",
		    grouping: [3],
		    currency: ["¥", ""]
		  });
		
		  function precisionFixed(step) {
		    return Math.max(0, -exponent(Math.abs(step)));
		  }
		
		  function precisionPrefix(step, value) {
		    return Math.max(0, Math.max(-8, Math.min(8, Math.floor(exponent(value) / 3))) * 3 - exponent(Math.abs(step)));
		  }
		
		  function precisionRound(step, max) {
		    step = Math.abs(step), max = Math.abs(max) - step;
		    return Math.max(0, exponent(max) - exponent(step)) + 1;
		  }
		
		  var format = defaultLocale.format;
		  var formatPrefix = defaultLocale.formatPrefix;
		
		  var version = "0.5.1";
		
		  exports.version = version;
		  exports.format = format;
		  exports.formatPrefix = formatPrefix;
		  exports.formatLocale = locale;
		  exports.formatCaEs = caES;
		  exports.formatCsCz = csCZ;
		  exports.formatDeCh = deCH;
		  exports.formatDeDe = deDE;
		  exports.formatEnCa = enCA;
		  exports.formatEnGb = enGB;
		  exports.formatEnUs = defaultLocale;
		  exports.formatEsEs = esES;
		  exports.formatFiFi = fiFI;
		  exports.formatFrCa = frCA;
		  exports.formatFrFr = frFR;
		  exports.formatHeIl = heIL;
		  exports.formatHuHu = huHU;
		  exports.formatItIt = itIT;
		  exports.formatJaJp = jaJP;
		  exports.formatKoKr = koKR;
		  exports.formatMkMk = mkMK;
		  exports.formatNlNl = nlNL;
		  exports.formatPlPl = plPL;
		  exports.formatPtBr = ptBR;
		  exports.formatRuRu = ruRU;
		  exports.formatSvSe = svSE;
		  exports.formatZhCn = zhCN;
		  exports.formatSpecifier = formatSpecifier;
		  exports.precisionFixed = precisionFixed;
		  exports.precisionPrefix = precisionPrefix;
		  exports.precisionRound = precisionRound;
		
		}));

	/***/ },
	/* 267 */
	/***/ function(module, exports, __webpack_require__) {

		(function (global, factory) {
		   true ? factory(exports) :
		  typeof define === 'function' && define.amd ? define(['exports'], factory) :
		  (factory((global.d3_time = global.d3_time || {})));
		}(this, function (exports) { 'use strict';
		
		  var t0 = new Date;
		  var t1 = new Date;
		  function newInterval(floori, offseti, count, field) {
		
		    function interval(date) {
		      return floori(date = new Date(+date)), date;
		    }
		
		    interval.floor = interval;
		
		    interval.ceil = function(date) {
		      return floori(date = new Date(date - 1)), offseti(date, 1), floori(date), date;
		    };
		
		    interval.round = function(date) {
		      var d0 = interval(date),
		          d1 = interval.ceil(date);
		      return date - d0 < d1 - date ? d0 : d1;
		    };
		
		    interval.offset = function(date, step) {
		      return offseti(date = new Date(+date), step == null ? 1 : Math.floor(step)), date;
		    };
		
		    interval.range = function(start, stop, step) {
		      var range = [];
		      start = interval.ceil(start);
		      step = step == null ? 1 : Math.floor(step);
		      if (!(start < stop) || !(step > 0)) return range; // also handles Invalid Date
		      do range.push(new Date(+start)); while (offseti(start, step), floori(start), start < stop)
		      return range;
		    };
		
		    interval.filter = function(test) {
		      return newInterval(function(date) {
		        while (floori(date), !test(date)) date.setTime(date - 1);
		      }, function(date, step) {
		        while (--step >= 0) while (offseti(date, 1), !test(date));
		      });
		    };
		
		    if (count) {
		      interval.count = function(start, end) {
		        t0.setTime(+start), t1.setTime(+end);
		        floori(t0), floori(t1);
		        return Math.floor(count(t0, t1));
		      };
		
		      interval.every = function(step) {
		        step = Math.floor(step);
		        return !isFinite(step) || !(step > 0) ? null
		            : !(step > 1) ? interval
		            : interval.filter(field
		                ? function(d) { return field(d) % step === 0; }
		                : function(d) { return interval.count(0, d) % step === 0; });
		      };
		    }
		
		    return interval;
		  }
		
		  var millisecond = newInterval(function() {
		    // noop
		  }, function(date, step) {
		    date.setTime(+date + step);
		  }, function(start, end) {
		    return end - start;
		  });
		
		  // An optimized implementation for this simple case.
		  millisecond.every = function(k) {
		    k = Math.floor(k);
		    if (!isFinite(k) || !(k > 0)) return null;
		    if (!(k > 1)) return millisecond;
		    return newInterval(function(date) {
		      date.setTime(Math.floor(date / k) * k);
		    }, function(date, step) {
		      date.setTime(+date + step * k);
		    }, function(start, end) {
		      return (end - start) / k;
		    });
		  };
		
		  var second$1 = 1e3;
		  var minute = 6e4;
		  var hour = 36e5;
		  var day = 864e5;
		  var week = 6048e5;
		
		  var second = newInterval(function(date) {
		    date.setTime(Math.floor(date / second$1) * second$1);
		  }, function(date, step) {
		    date.setTime(+date + step * second$1);
		  }, function(start, end) {
		    return (end - start) / second$1;
		  }, function(date) {
		    return date.getUTCSeconds();
		  });
		
		  var minute$1 = newInterval(function(date) {
		    date.setTime(Math.floor(date / minute) * minute);
		  }, function(date, step) {
		    date.setTime(+date + step * minute);
		  }, function(start, end) {
		    return (end - start) / minute;
		  }, function(date) {
		    return date.getMinutes();
		  });
		
		  var hour$1 = newInterval(function(date) {
		    var offset = date.getTimezoneOffset() * minute % hour;
		    if (offset < 0) offset += hour;
		    date.setTime(Math.floor((+date - offset) / hour) * hour + offset);
		  }, function(date, step) {
		    date.setTime(+date + step * hour);
		  }, function(start, end) {
		    return (end - start) / hour;
		  }, function(date) {
		    return date.getHours();
		  });
		
		  var day$1 = newInterval(function(date) {
		    date.setHours(0, 0, 0, 0);
		  }, function(date, step) {
		    date.setDate(date.getDate() + step);
		  }, function(start, end) {
		    return (end - start - (end.getTimezoneOffset() - start.getTimezoneOffset()) * minute) / day;
		  }, function(date) {
		    return date.getDate() - 1;
		  });
		
		  function weekday(i) {
		    return newInterval(function(date) {
		      date.setHours(0, 0, 0, 0);
		      date.setDate(date.getDate() - (date.getDay() + 7 - i) % 7);
		    }, function(date, step) {
		      date.setDate(date.getDate() + step * 7);
		    }, function(start, end) {
		      return (end - start - (end.getTimezoneOffset() - start.getTimezoneOffset()) * minute) / week;
		    });
		  }
		
		  var sunday = weekday(0);
		  var monday = weekday(1);
		  var tuesday = weekday(2);
		  var wednesday = weekday(3);
		  var thursday = weekday(4);
		  var friday = weekday(5);
		  var saturday = weekday(6);
		
		  var month = newInterval(function(date) {
		    date.setHours(0, 0, 0, 0);
		    date.setDate(1);
		  }, function(date, step) {
		    date.setMonth(date.getMonth() + step);
		  }, function(start, end) {
		    return end.getMonth() - start.getMonth() + (end.getFullYear() - start.getFullYear()) * 12;
		  }, function(date) {
		    return date.getMonth();
		  });
		
		  var year = newInterval(function(date) {
		    date.setHours(0, 0, 0, 0);
		    date.setMonth(0, 1);
		  }, function(date, step) {
		    date.setFullYear(date.getFullYear() + step);
		  }, function(start, end) {
		    return end.getFullYear() - start.getFullYear();
		  }, function(date) {
		    return date.getFullYear();
		  });
		
		  var utcMinute = newInterval(function(date) {
		    date.setUTCSeconds(0, 0);
		  }, function(date, step) {
		    date.setTime(+date + step * minute);
		  }, function(start, end) {
		    return (end - start) / minute;
		  }, function(date) {
		    return date.getUTCMinutes();
		  });
		
		  var utcHour = newInterval(function(date) {
		    date.setUTCMinutes(0, 0, 0);
		  }, function(date, step) {
		    date.setTime(+date + step * hour);
		  }, function(start, end) {
		    return (end - start) / hour;
		  }, function(date) {
		    return date.getUTCHours();
		  });
		
		  var utcDay = newInterval(function(date) {
		    date.setUTCHours(0, 0, 0, 0);
		  }, function(date, step) {
		    date.setUTCDate(date.getUTCDate() + step);
		  }, function(start, end) {
		    return (end - start) / day;
		  }, function(date) {
		    return date.getUTCDate() - 1;
		  });
		
		  function utcWeekday(i) {
		    return newInterval(function(date) {
		      date.setUTCHours(0, 0, 0, 0);
		      date.setUTCDate(date.getUTCDate() - (date.getUTCDay() + 7 - i) % 7);
		    }, function(date, step) {
		      date.setUTCDate(date.getUTCDate() + step * 7);
		    }, function(start, end) {
		      return (end - start) / week;
		    });
		  }
		
		  var utcSunday = utcWeekday(0);
		  var utcMonday = utcWeekday(1);
		  var utcTuesday = utcWeekday(2);
		  var utcWednesday = utcWeekday(3);
		  var utcThursday = utcWeekday(4);
		  var utcFriday = utcWeekday(5);
		  var utcSaturday = utcWeekday(6);
		
		  var utcMonth = newInterval(function(date) {
		    date.setUTCHours(0, 0, 0, 0);
		    date.setUTCDate(1);
		  }, function(date, step) {
		    date.setUTCMonth(date.getUTCMonth() + step);
		  }, function(start, end) {
		    return end.getUTCMonth() - start.getUTCMonth() + (end.getUTCFullYear() - start.getUTCFullYear()) * 12;
		  }, function(date) {
		    return date.getUTCMonth();
		  });
		
		  var utcYear = newInterval(function(date) {
		    date.setUTCHours(0, 0, 0, 0);
		    date.setUTCMonth(0, 1);
		  }, function(date, step) {
		    date.setUTCFullYear(date.getUTCFullYear() + step);
		  }, function(start, end) {
		    return end.getUTCFullYear() - start.getUTCFullYear();
		  }, function(date) {
		    return date.getUTCFullYear();
		  });
		
		  var timeMilliseconds = millisecond.range;
		  var timeSeconds = second.range;
		  var timeMinutes = minute$1.range;
		  var timeHours = hour$1.range;
		  var timeDays = day$1.range;
		  var timeSundays = sunday.range;
		  var timeMondays = monday.range;
		  var timeTuesdays = tuesday.range;
		  var timeWednesdays = wednesday.range;
		  var timeThursdays = thursday.range;
		  var timeFridays = friday.range;
		  var timeSaturdays = saturday.range;
		  var timeWeeks = sunday.range;
		  var timeMonths = month.range;
		  var timeYears = year.range;
		
		  var utcMillisecond = millisecond;
		  var utcMilliseconds = timeMilliseconds;
		  var utcSecond = second;
		  var utcSeconds = timeSeconds;
		  var utcMinutes = utcMinute.range;
		  var utcHours = utcHour.range;
		  var utcDays = utcDay.range;
		  var utcSundays = utcSunday.range;
		  var utcMondays = utcMonday.range;
		  var utcTuesdays = utcTuesday.range;
		  var utcWednesdays = utcWednesday.range;
		  var utcThursdays = utcThursday.range;
		  var utcFridays = utcFriday.range;
		  var utcSaturdays = utcSaturday.range;
		  var utcWeeks = utcSunday.range;
		  var utcMonths = utcMonth.range;
		  var utcYears = utcYear.range;
		
		  var version = "0.2.5";
		
		  exports.version = version;
		  exports.timeMilliseconds = timeMilliseconds;
		  exports.timeSeconds = timeSeconds;
		  exports.timeMinutes = timeMinutes;
		  exports.timeHours = timeHours;
		  exports.timeDays = timeDays;
		  exports.timeSundays = timeSundays;
		  exports.timeMondays = timeMondays;
		  exports.timeTuesdays = timeTuesdays;
		  exports.timeWednesdays = timeWednesdays;
		  exports.timeThursdays = timeThursdays;
		  exports.timeFridays = timeFridays;
		  exports.timeSaturdays = timeSaturdays;
		  exports.timeWeeks = timeWeeks;
		  exports.timeMonths = timeMonths;
		  exports.timeYears = timeYears;
		  exports.utcMillisecond = utcMillisecond;
		  exports.utcMilliseconds = utcMilliseconds;
		  exports.utcSecond = utcSecond;
		  exports.utcSeconds = utcSeconds;
		  exports.utcMinutes = utcMinutes;
		  exports.utcHours = utcHours;
		  exports.utcDays = utcDays;
		  exports.utcSundays = utcSundays;
		  exports.utcMondays = utcMondays;
		  exports.utcTuesdays = utcTuesdays;
		  exports.utcWednesdays = utcWednesdays;
		  exports.utcThursdays = utcThursdays;
		  exports.utcFridays = utcFridays;
		  exports.utcSaturdays = utcSaturdays;
		  exports.utcWeeks = utcWeeks;
		  exports.utcMonths = utcMonths;
		  exports.utcYears = utcYears;
		  exports.timeMillisecond = millisecond;
		  exports.timeSecond = second;
		  exports.timeMinute = minute$1;
		  exports.timeHour = hour$1;
		  exports.timeDay = day$1;
		  exports.timeSunday = sunday;
		  exports.timeMonday = monday;
		  exports.timeTuesday = tuesday;
		  exports.timeWednesday = wednesday;
		  exports.timeThursday = thursday;
		  exports.timeFriday = friday;
		  exports.timeSaturday = saturday;
		  exports.timeWeek = sunday;
		  exports.timeMonth = month;
		  exports.timeYear = year;
		  exports.utcMinute = utcMinute;
		  exports.utcHour = utcHour;
		  exports.utcDay = utcDay;
		  exports.utcSunday = utcSunday;
		  exports.utcMonday = utcMonday;
		  exports.utcTuesday = utcTuesday;
		  exports.utcWednesday = utcWednesday;
		  exports.utcThursday = utcThursday;
		  exports.utcFriday = utcFriday;
		  exports.utcSaturday = utcSaturday;
		  exports.utcWeek = utcSunday;
		  exports.utcMonth = utcMonth;
		  exports.utcYear = utcYear;
		  exports.timeInterval = newInterval;
		
		}));

	/***/ },
	/* 268 */
	/***/ function(module, exports, __webpack_require__) {

		(function (global, factory) {
		   true ? factory(exports, __webpack_require__(267)) :
		  typeof define === 'function' && define.amd ? define(['exports', 'd3-time'], factory) :
		  (factory((global.d3_time_format = {}),global.d3_time));
		}(this, function (exports,d3Time) { 'use strict';
		
		  function localDate(d) {
		    if (0 <= d.y && d.y < 100) {
		      var date = new Date(-1, d.m, d.d, d.H, d.M, d.S, d.L);
		      date.setFullYear(d.y);
		      return date;
		    }
		    return new Date(d.y, d.m, d.d, d.H, d.M, d.S, d.L);
		  }
		
		  function utcDate(d) {
		    if (0 <= d.y && d.y < 100) {
		      var date = new Date(Date.UTC(-1, d.m, d.d, d.H, d.M, d.S, d.L));
		      date.setUTCFullYear(d.y);
		      return date;
		    }
		    return new Date(Date.UTC(d.y, d.m, d.d, d.H, d.M, d.S, d.L));
		  }
		
		  function newYear(y) {
		    return {y: y, m: 0, d: 1, H: 0, M: 0, S: 0, L: 0};
		  }
		
		  function locale$1(locale) {
		    var locale_dateTime = locale.dateTime,
		        locale_date = locale.date,
		        locale_time = locale.time,
		        locale_periods = locale.periods,
		        locale_weekdays = locale.days,
		        locale_shortWeekdays = locale.shortDays,
		        locale_months = locale.months,
		        locale_shortMonths = locale.shortMonths;
		
		    var periodRe = formatRe(locale_periods),
		        periodLookup = formatLookup(locale_periods),
		        weekdayRe = formatRe(locale_weekdays),
		        weekdayLookup = formatLookup(locale_weekdays),
		        shortWeekdayRe = formatRe(locale_shortWeekdays),
		        shortWeekdayLookup = formatLookup(locale_shortWeekdays),
		        monthRe = formatRe(locale_months),
		        monthLookup = formatLookup(locale_months),
		        shortMonthRe = formatRe(locale_shortMonths),
		        shortMonthLookup = formatLookup(locale_shortMonths);
		
		    var formats = {
		      "a": formatShortWeekday,
		      "A": formatWeekday,
		      "b": formatShortMonth,
		      "B": formatMonth,
		      "c": null,
		      "d": formatDayOfMonth,
		      "e": formatDayOfMonth,
		      "H": formatHour24,
		      "I": formatHour12,
		      "j": formatDayOfYear,
		      "L": formatMilliseconds,
		      "m": formatMonthNumber,
		      "M": formatMinutes,
		      "p": formatPeriod,
		      "S": formatSeconds,
		      "U": formatWeekNumberSunday,
		      "w": formatWeekdayNumber,
		      "W": formatWeekNumberMonday,
		      "x": null,
		      "X": null,
		      "y": formatYear,
		      "Y": formatFullYear,
		      "Z": formatZone,
		      "%": formatLiteralPercent
		    };
		
		    var utcFormats = {
		      "a": formatUTCShortWeekday,
		      "A": formatUTCWeekday,
		      "b": formatUTCShortMonth,
		      "B": formatUTCMonth,
		      "c": null,
		      "d": formatUTCDayOfMonth,
		      "e": formatUTCDayOfMonth,
		      "H": formatUTCHour24,
		      "I": formatUTCHour12,
		      "j": formatUTCDayOfYear,
		      "L": formatUTCMilliseconds,
		      "m": formatUTCMonthNumber,
		      "M": formatUTCMinutes,
		      "p": formatUTCPeriod,
		      "S": formatUTCSeconds,
		      "U": formatUTCWeekNumberSunday,
		      "w": formatUTCWeekdayNumber,
		      "W": formatUTCWeekNumberMonday,
		      "x": null,
		      "X": null,
		      "y": formatUTCYear,
		      "Y": formatUTCFullYear,
		      "Z": formatUTCZone,
		      "%": formatLiteralPercent
		    };
		
		    var parses = {
		      "a": parseShortWeekday,
		      "A": parseWeekday,
		      "b": parseShortMonth,
		      "B": parseMonth,
		      "c": parseLocaleDateTime,
		      "d": parseDayOfMonth,
		      "e": parseDayOfMonth,
		      "H": parseHour24,
		      "I": parseHour24,
		      "j": parseDayOfYear,
		      "L": parseMilliseconds,
		      "m": parseMonthNumber,
		      "M": parseMinutes,
		      "p": parsePeriod,
		      "S": parseSeconds,
		      "U": parseWeekNumberSunday,
		      "w": parseWeekdayNumber,
		      "W": parseWeekNumberMonday,
		      "x": parseLocaleDate,
		      "X": parseLocaleTime,
		      "y": parseYear,
		      "Y": parseFullYear,
		      "Z": parseZone,
		      "%": parseLiteralPercent
		    };
		
		    // These recursive directive definitions must be deferred.
		    formats.x = newFormat(locale_date, formats);
		    formats.X = newFormat(locale_time, formats);
		    formats.c = newFormat(locale_dateTime, formats);
		    utcFormats.x = newFormat(locale_date, utcFormats);
		    utcFormats.X = newFormat(locale_time, utcFormats);
		    utcFormats.c = newFormat(locale_dateTime, utcFormats);
		
		    function newFormat(specifier, formats) {
		      return function(date) {
		        var string = [],
		            i = -1,
		            j = 0,
		            n = specifier.length,
		            c,
		            pad,
		            format;
		
		        if (!(date instanceof Date)) date = new Date(+date);
		
		        while (++i < n) {
		          if (specifier.charCodeAt(i) === 37) {
		            string.push(specifier.slice(j, i));
		            if ((pad = pads[c = specifier.charAt(++i)]) != null) c = specifier.charAt(++i);
		            else pad = c === "e" ? " " : "0";
		            if (format = formats[c]) c = format(date, pad);
		            string.push(c);
		            j = i + 1;
		          }
		        }
		
		        string.push(specifier.slice(j, i));
		        return string.join("");
		      };
		    }
		
		    function newParse(specifier, newDate) {
		      return function(string) {
		        var d = newYear(1900),
		            i = parseSpecifier(d, specifier, string += "", 0);
		        if (i != string.length) return null;
		
		        // The am-pm flag is 0 for AM, and 1 for PM.
		        if ("p" in d) d.H = d.H % 12 + d.p * 12;
		
		        // Convert day-of-week and week-of-year to day-of-year.
		        if ("W" in d || "U" in d) {
		          if (!("w" in d)) d.w = "W" in d ? 1 : 0;
		          var day = "Z" in d ? utcDate(newYear(d.y)).getUTCDay() : newDate(newYear(d.y)).getDay();
		          d.m = 0;
		          d.d = "W" in d ? (d.w + 6) % 7 + d.W * 7 - (day + 5) % 7 : d.w + d.U * 7 - (day + 6) % 7;
		        }
		
		        // If a time zone is specified, all fields are interpreted as UTC and then
		        // offset according to the specified time zone.
		        if ("Z" in d) {
		          d.H += d.Z / 100 | 0;
		          d.M += d.Z % 100;
		          return utcDate(d);
		        }
		
		        // Otherwise, all fields are in local time.
		        return newDate(d);
		      };
		    }
		
		    function parseSpecifier(d, specifier, string, j) {
		      var i = 0,
		          n = specifier.length,
		          m = string.length,
		          c,
		          parse;
		
		      while (i < n) {
		        if (j >= m) return -1;
		        c = specifier.charCodeAt(i++);
		        if (c === 37) {
		          c = specifier.charAt(i++);
		          parse = parses[c in pads ? specifier.charAt(i++) : c];
		          if (!parse || ((j = parse(d, string, j)) < 0)) return -1;
		        } else if (c != string.charCodeAt(j++)) {
		          return -1;
		        }
		      }
		
		      return j;
		    }
		
		    function parsePeriod(d, string, i) {
		      var n = periodRe.exec(string.slice(i));
		      return n ? (d.p = periodLookup[n[0].toLowerCase()], i + n[0].length) : -1;
		    }
		
		    function parseShortWeekday(d, string, i) {
		      var n = shortWeekdayRe.exec(string.slice(i));
		      return n ? (d.w = shortWeekdayLookup[n[0].toLowerCase()], i + n[0].length) : -1;
		    }
		
		    function parseWeekday(d, string, i) {
		      var n = weekdayRe.exec(string.slice(i));
		      return n ? (d.w = weekdayLookup[n[0].toLowerCase()], i + n[0].length) : -1;
		    }
		
		    function parseShortMonth(d, string, i) {
		      var n = shortMonthRe.exec(string.slice(i));
		      return n ? (d.m = shortMonthLookup[n[0].toLowerCase()], i + n[0].length) : -1;
		    }
		
		    function parseMonth(d, string, i) {
		      var n = monthRe.exec(string.slice(i));
		      return n ? (d.m = monthLookup[n[0].toLowerCase()], i + n[0].length) : -1;
		    }
		
		    function parseLocaleDateTime(d, string, i) {
		      return parseSpecifier(d, locale_dateTime, string, i);
		    }
		
		    function parseLocaleDate(d, string, i) {
		      return parseSpecifier(d, locale_date, string, i);
		    }
		
		    function parseLocaleTime(d, string, i) {
		      return parseSpecifier(d, locale_time, string, i);
		    }
		
		    function formatShortWeekday(d) {
		      return locale_shortWeekdays[d.getDay()];
		    }
		
		    function formatWeekday(d) {
		      return locale_weekdays[d.getDay()];
		    }
		
		    function formatShortMonth(d) {
		      return locale_shortMonths[d.getMonth()];
		    }
		
		    function formatMonth(d) {
		      return locale_months[d.getMonth()];
		    }
		
		    function formatPeriod(d) {
		      return locale_periods[+(d.getHours() >= 12)];
		    }
		
		    function formatUTCShortWeekday(d) {
		      return locale_shortWeekdays[d.getUTCDay()];
		    }
		
		    function formatUTCWeekday(d) {
		      return locale_weekdays[d.getUTCDay()];
		    }
		
		    function formatUTCShortMonth(d) {
		      return locale_shortMonths[d.getUTCMonth()];
		    }
		
		    function formatUTCMonth(d) {
		      return locale_months[d.getUTCMonth()];
		    }
		
		    function formatUTCPeriod(d) {
		      return locale_periods[+(d.getUTCHours() >= 12)];
		    }
		
		    return {
		      format: function(specifier) {
		        var f = newFormat(specifier += "", formats);
		        f.toString = function() { return specifier; };
		        return f;
		      },
		      parse: function(specifier) {
		        var p = newParse(specifier += "", localDate);
		        p.toString = function() { return specifier; };
		        return p;
		      },
		      utcFormat: function(specifier) {
		        var f = newFormat(specifier += "", utcFormats);
		        f.toString = function() { return specifier; };
		        return f;
		      },
		      utcParse: function(specifier) {
		        var p = newParse(specifier, utcDate);
		        p.toString = function() { return specifier; };
		        return p;
		      }
		    };
		  }
		
		  var pads = {"-": "", "_": " ", "0": "0"};
		  var numberRe = /^\s*\d+/;
		  var percentRe = /^%/;
		  var requoteRe = /[\\\^\$\*\+\?\|\[\]\(\)\.\{\}]/g;
		  function pad(value, fill, width) {
		    var sign = value < 0 ? "-" : "",
		        string = (sign ? -value : value) + "",
		        length = string.length;
		    return sign + (length < width ? new Array(width - length + 1).join(fill) + string : string);
		  }
		
		  function requote(s) {
		    return s.replace(requoteRe, "\\$&");
		  }
		
		  function formatRe(names) {
		    return new RegExp("^(?:" + names.map(requote).join("|") + ")", "i");
		  }
		
		  function formatLookup(names) {
		    var map = {}, i = -1, n = names.length;
		    while (++i < n) map[names[i].toLowerCase()] = i;
		    return map;
		  }
		
		  function parseWeekdayNumber(d, string, i) {
		    var n = numberRe.exec(string.slice(i, i + 1));
		    return n ? (d.w = +n[0], i + n[0].length) : -1;
		  }
		
		  function parseWeekNumberSunday(d, string, i) {
		    var n = numberRe.exec(string.slice(i));
		    return n ? (d.U = +n[0], i + n[0].length) : -1;
		  }
		
		  function parseWeekNumberMonday(d, string, i) {
		    var n = numberRe.exec(string.slice(i));
		    return n ? (d.W = +n[0], i + n[0].length) : -1;
		  }
		
		  function parseFullYear(d, string, i) {
		    var n = numberRe.exec(string.slice(i, i + 4));
		    return n ? (d.y = +n[0], i + n[0].length) : -1;
		  }
		
		  function parseYear(d, string, i) {
		    var n = numberRe.exec(string.slice(i, i + 2));
		    return n ? (d.y = +n[0] + (+n[0] > 68 ? 1900 : 2000), i + n[0].length) : -1;
		  }
		
		  function parseZone(d, string, i) {
		    var n = /^(Z)|([+-]\d\d)(?:\:?(\d\d))?/.exec(string.slice(i, i + 6));
		    return n ? (d.Z = n[1] ? 0 : -(n[2] + (n[3] || "00")), i + n[0].length) : -1;
		  }
		
		  function parseMonthNumber(d, string, i) {
		    var n = numberRe.exec(string.slice(i, i + 2));
		    return n ? (d.m = n[0] - 1, i + n[0].length) : -1;
		  }
		
		  function parseDayOfMonth(d, string, i) {
		    var n = numberRe.exec(string.slice(i, i + 2));
		    return n ? (d.d = +n[0], i + n[0].length) : -1;
		  }
		
		  function parseDayOfYear(d, string, i) {
		    var n = numberRe.exec(string.slice(i, i + 3));
		    return n ? (d.m = 0, d.d = +n[0], i + n[0].length) : -1;
		  }
		
		  function parseHour24(d, string, i) {
		    var n = numberRe.exec(string.slice(i, i + 2));
		    return n ? (d.H = +n[0], i + n[0].length) : -1;
		  }
		
		  function parseMinutes(d, string, i) {
		    var n = numberRe.exec(string.slice(i, i + 2));
		    return n ? (d.M = +n[0], i + n[0].length) : -1;
		  }
		
		  function parseSeconds(d, string, i) {
		    var n = numberRe.exec(string.slice(i, i + 2));
		    return n ? (d.S = +n[0], i + n[0].length) : -1;
		  }
		
		  function parseMilliseconds(d, string, i) {
		    var n = numberRe.exec(string.slice(i, i + 3));
		    return n ? (d.L = +n[0], i + n[0].length) : -1;
		  }
		
		  function parseLiteralPercent(d, string, i) {
		    var n = percentRe.exec(string.slice(i, i + 1));
		    return n ? i + n[0].length : -1;
		  }
		
		  function formatDayOfMonth(d, p) {
		    return pad(d.getDate(), p, 2);
		  }
		
		  function formatHour24(d, p) {
		    return pad(d.getHours(), p, 2);
		  }
		
		  function formatHour12(d, p) {
		    return pad(d.getHours() % 12 || 12, p, 2);
		  }
		
		  function formatDayOfYear(d, p) {
		    return pad(1 + d3Time.timeDay.count(d3Time.timeYear(d), d), p, 3);
		  }
		
		  function formatMilliseconds(d, p) {
		    return pad(d.getMilliseconds(), p, 3);
		  }
		
		  function formatMonthNumber(d, p) {
		    return pad(d.getMonth() + 1, p, 2);
		  }
		
		  function formatMinutes(d, p) {
		    return pad(d.getMinutes(), p, 2);
		  }
		
		  function formatSeconds(d, p) {
		    return pad(d.getSeconds(), p, 2);
		  }
		
		  function formatWeekNumberSunday(d, p) {
		    return pad(d3Time.timeSunday.count(d3Time.timeYear(d), d), p, 2);
		  }
		
		  function formatWeekdayNumber(d) {
		    return d.getDay();
		  }
		
		  function formatWeekNumberMonday(d, p) {
		    return pad(d3Time.timeMonday.count(d3Time.timeYear(d), d), p, 2);
		  }
		
		  function formatYear(d, p) {
		    return pad(d.getFullYear() % 100, p, 2);
		  }
		
		  function formatFullYear(d, p) {
		    return pad(d.getFullYear() % 10000, p, 4);
		  }
		
		  function formatZone(d) {
		    var z = d.getTimezoneOffset();
		    return (z > 0 ? "-" : (z *= -1, "+"))
		        + pad(z / 60 | 0, "0", 2)
		        + pad(z % 60, "0", 2);
		  }
		
		  function formatUTCDayOfMonth(d, p) {
		    return pad(d.getUTCDate(), p, 2);
		  }
		
		  function formatUTCHour24(d, p) {
		    return pad(d.getUTCHours(), p, 2);
		  }
		
		  function formatUTCHour12(d, p) {
		    return pad(d.getUTCHours() % 12 || 12, p, 2);
		  }
		
		  function formatUTCDayOfYear(d, p) {
		    return pad(1 + d3Time.utcDay.count(d3Time.utcYear(d), d), p, 3);
		  }
		
		  function formatUTCMilliseconds(d, p) {
		    return pad(d.getUTCMilliseconds(), p, 3);
		  }
		
		  function formatUTCMonthNumber(d, p) {
		    return pad(d.getUTCMonth() + 1, p, 2);
		  }
		
		  function formatUTCMinutes(d, p) {
		    return pad(d.getUTCMinutes(), p, 2);
		  }
		
		  function formatUTCSeconds(d, p) {
		    return pad(d.getUTCSeconds(), p, 2);
		  }
		
		  function formatUTCWeekNumberSunday(d, p) {
		    return pad(d3Time.utcSunday.count(d3Time.utcYear(d), d), p, 2);
		  }
		
		  function formatUTCWeekdayNumber(d) {
		    return d.getUTCDay();
		  }
		
		  function formatUTCWeekNumberMonday(d, p) {
		    return pad(d3Time.utcMonday.count(d3Time.utcYear(d), d), p, 2);
		  }
		
		  function formatUTCYear(d, p) {
		    return pad(d.getUTCFullYear() % 100, p, 2);
		  }
		
		  function formatUTCFullYear(d, p) {
		    return pad(d.getUTCFullYear() % 10000, p, 4);
		  }
		
		  function formatUTCZone() {
		    return "+0000";
		  }
		
		  function formatLiteralPercent() {
		    return "%";
		  }
		
		  var locale = locale$1({
		    dateTime: "%a %b %e %X %Y",
		    date: "%m/%d/%Y",
		    time: "%H:%M:%S",
		    periods: ["AM", "PM"],
		    days: ["Sunday", "Monday", "Tuesday", "Wednesday", "Thursday", "Friday", "Saturday"],
		    shortDays: ["Sun", "Mon", "Tue", "Wed", "Thu", "Fri", "Sat"],
		    months: ["January", "February", "March", "April", "May", "June", "July", "August", "September", "October", "November", "December"],
		    shortMonths: ["Jan", "Feb", "Mar", "Apr", "May", "Jun", "Jul", "Aug", "Sep", "Oct", "Nov", "Dec"]
		  });
		
		  var caES = locale$1({
		    dateTime: "%A, %e de %B de %Y, %X",
		    date: "%d/%m/%Y",
		    time: "%H:%M:%S",
		    periods: ["AM", "PM"],
		    days: ["diumenge", "dilluns", "dimarts", "dimecres", "dijous", "divendres", "dissabte"],
		    shortDays: ["dg.", "dl.", "dt.", "dc.", "dj.", "dv.", "ds."],
		    months: ["gener", "febrer", "març", "abril", "maig", "juny", "juliol", "agost", "setembre", "octubre", "novembre", "desembre"],
		    shortMonths: ["gen.", "febr.", "març", "abr.", "maig", "juny", "jul.", "ag.", "set.", "oct.", "nov.", "des."]
		  });
		
		  var deCH = locale$1({
		    dateTime: "%A, der %e. %B %Y, %X",
		    date: "%d.%m.%Y",
		    time: "%H:%M:%S",
		    periods: ["AM", "PM"], // unused
		    days: ["Sonntag", "Montag", "Dienstag", "Mittwoch", "Donnerstag", "Freitag", "Samstag"],
		    shortDays: ["So", "Mo", "Di", "Mi", "Do", "Fr", "Sa"],
		    months: ["Januar", "Februar", "März", "April", "Mai", "Juni", "Juli", "August", "September", "Oktober", "November", "Dezember"],
		    shortMonths: ["Jan", "Feb", "Mrz", "Apr", "Mai", "Jun", "Jul", "Aug", "Sep", "Okt", "Nov", "Dez"]
		  });
		
		  var deDE = locale$1({
		    dateTime: "%A, der %e. %B %Y, %X",
		    date: "%d.%m.%Y",
		    time: "%H:%M:%S",
		    periods: ["AM", "PM"], // unused
		    days: ["Sonntag", "Montag", "Dienstag", "Mittwoch", "Donnerstag", "Freitag", "Samstag"],
		    shortDays: ["So", "Mo", "Di", "Mi", "Do", "Fr", "Sa"],
		    months: ["Januar", "Februar", "März", "April", "Mai", "Juni", "Juli", "August", "September", "Oktober", "November", "Dezember"],
		    shortMonths: ["Jan", "Feb", "Mrz", "Apr", "Mai", "Jun", "Jul", "Aug", "Sep", "Okt", "Nov", "Dez"]
		  });
		
		  var enCA = locale$1({
		    dateTime: "%a %b %e %X %Y",
		    date: "%Y-%m-%d",
		    time: "%H:%M:%S",
		    periods: ["AM", "PM"],
		    days: ["Sunday", "Monday", "Tuesday", "Wednesday", "Thursday", "Friday", "Saturday"],
		    shortDays: ["Sun", "Mon", "Tue", "Wed", "Thu", "Fri", "Sat"],
		    months: ["January", "February", "March", "April", "May", "June", "July", "August", "September", "October", "November", "December"],
		    shortMonths: ["Jan", "Feb", "Mar", "Apr", "May", "Jun", "Jul", "Aug", "Sep", "Oct", "Nov", "Dec"]
		  });
		
		  var enGB = locale$1({
		    dateTime: "%a %e %b %X %Y",
		    date: "%d/%m/%Y",
		    time: "%H:%M:%S",
		    periods: ["AM", "PM"],
		    days: ["Sunday", "Monday", "Tuesday", "Wednesday", "Thursday", "Friday", "Saturday"],
		    shortDays: ["Sun", "Mon", "Tue", "Wed", "Thu", "Fri", "Sat"],
		    months: ["January", "February", "March", "April", "May", "June", "July", "August", "September", "October", "November", "December"],
		    shortMonths: ["Jan", "Feb", "Mar", "Apr", "May", "Jun", "Jul", "Aug", "Sep", "Oct", "Nov", "Dec"]
		  });
		
		  var esES = locale$1({
		    dateTime: "%A, %e de %B de %Y, %X",
		    date: "%d/%m/%Y",
		    time: "%H:%M:%S",
		    periods: ["AM", "PM"],
		    days: ["domingo", "lunes", "martes", "miércoles", "jueves", "viernes", "sábado"],
		    shortDays: ["dom", "lun", "mar", "mié", "jue", "vie", "sáb"],
		    months: ["enero", "febrero", "marzo", "abril", "mayo", "junio", "julio", "agosto", "septiembre", "octubre", "noviembre", "diciembre"],
		    shortMonths: ["ene", "feb", "mar", "abr", "may", "jun", "jul", "ago", "sep", "oct", "nov", "dic"]
		  });
		
		  var fiFI = locale$1({
		    dateTime: "%A, %-d. %Bta %Y klo %X",
		    date: "%-d.%-m.%Y",
		    time: "%H:%M:%S",
		    periods: ["a.m.", "p.m."],
		    days: ["sunnuntai", "maanantai", "tiistai", "keskiviikko", "torstai", "perjantai", "lauantai"],
		    shortDays: ["Su", "Ma", "Ti", "Ke", "To", "Pe", "La"],
		    months: ["tammikuu", "helmikuu", "maaliskuu", "huhtikuu", "toukokuu", "kesäkuu", "heinäkuu", "elokuu", "syyskuu", "lokakuu", "marraskuu", "joulukuu"],
		    shortMonths: ["Tammi", "Helmi", "Maalis", "Huhti", "Touko", "Kesä", "Heinä", "Elo", "Syys", "Loka", "Marras", "Joulu"]
		  });
		
		  var frCA = locale$1({
		    dateTime: "%a %e %b %Y %X",
		    date: "%Y-%m-%d",
		    time: "%H:%M:%S",
		    periods: ["", ""],
		    days: ["dimanche", "lundi", "mardi", "mercredi", "jeudi", "vendredi", "samedi"],
		    shortDays: ["dim", "lun", "mar", "mer", "jeu", "ven", "sam"],
		    months: ["janvier", "février", "mars", "avril", "mai", "juin", "juillet", "août", "septembre", "octobre", "novembre", "décembre"],
		    shortMonths: ["jan", "fév", "mar", "avr", "mai", "jui", "jul", "aoû", "sep", "oct", "nov", "déc"]
		  });
		
		  var frFR = locale$1({
		    dateTime: "%A, le %e %B %Y, %X",
		    date: "%d/%m/%Y",
		    time: "%H:%M:%S",
		    periods: ["AM", "PM"], // unused
		    days: ["dimanche", "lundi", "mardi", "mercredi", "jeudi", "vendredi", "samedi"],
		    shortDays: ["dim.", "lun.", "mar.", "mer.", "jeu.", "ven.", "sam."],
		    months: ["janvier", "février", "mars", "avril", "mai", "juin", "juillet", "août", "septembre", "octobre", "novembre", "décembre"],
		    shortMonths: ["janv.", "févr.", "mars", "avr.", "mai", "juin", "juil.", "août", "sept.", "oct.", "nov.", "déc."]
		  });
		
		  var heIL = locale$1({
		    dateTime: "%A, %e ב%B %Y %X",
		    date: "%d.%m.%Y",
		    time: "%H:%M:%S",
		    periods: ["AM", "PM"],
		    days: ["ראשון", "שני", "שלישי", "רביעי", "חמישי", "שישי", "שבת"],
		    shortDays: ["א׳", "ב׳", "ג׳", "ד׳", "ה׳", "ו׳", "ש׳"],
		    months: ["ינואר", "פברואר", "מרץ", "אפריל", "מאי", "יוני", "יולי", "אוגוסט", "ספטמבר", "אוקטובר", "נובמבר", "דצמבר"],
		    shortMonths: ["ינו׳", "פבר׳", "מרץ", "אפר׳", "מאי", "יוני", "יולי", "אוג׳", "ספט׳", "אוק׳", "נוב׳", "דצמ׳"]
		  });
		
		  var huHU = locale$1({
		    dateTime: "%Y. %B %-e., %A %X",
		    date: "%Y. %m. %d.",
		    time: "%H:%M:%S",
		    periods: ["de.", "du."], // unused
		    days: ["vasárnap", "hétfő", "kedd", "szerda", "csütörtök", "péntek", "szombat"],
		    shortDays: ["V", "H", "K", "Sze", "Cs", "P", "Szo"],
		    months: ["január", "február", "március", "április", "május", "június", "július", "augusztus", "szeptember", "október", "november", "december"],
		    shortMonths: ["jan.", "feb.", "már.", "ápr.", "máj.", "jún.", "júl.", "aug.", "szept.", "okt.", "nov.", "dec."]
		  });
		
		  var itIT = locale$1({
		    dateTime: "%A %e %B %Y, %X",
		    date: "%d/%m/%Y",
		    time: "%H:%M:%S",
		    periods: ["AM", "PM"], // unused
		    days: ["Domenica", "Lunedì", "Martedì", "Mercoledì", "Giovedì", "Venerdì", "Sabato"],
		    shortDays: ["Dom", "Lun", "Mar", "Mer", "Gio", "Ven", "Sab"],
		    months: ["Gennaio", "Febbraio", "Marzo", "Aprile", "Maggio", "Giugno", "Luglio", "Agosto", "Settembre", "Ottobre", "Novembre", "Dicembre"],
		    shortMonths: ["Gen", "Feb", "Mar", "Apr", "Mag", "Giu", "Lug", "Ago", "Set", "Ott", "Nov", "Dic"]
		  });
		
		  var jaJP = locale$1({
		    dateTime: "%Y %b %e %a %X",
		    date: "%Y/%m/%d",
		    time: "%H:%M:%S",
		    periods: ["AM", "PM"],
		    days: ["日曜日", "月曜日", "火曜日", "水曜日", "木曜日", "金曜日", "土曜日"],
		    shortDays: ["日", "月", "火", "水", "木", "金", "土"],
		    months: ["睦月", "如月", "弥生", "卯月", "皐月", "水無月", "文月", "葉月", "長月", "神無月", "霜月", "師走"],
		    shortMonths: ["1月", "2月", "3月", "4月", "5月", "6月", "7月", "8月", "9月", "10月", "11月", "12月"]
		  });
		
		  var koKR = locale$1({
		    dateTime: "%Y/%m/%d %a %X",
		    date: "%Y/%m/%d",
		    time: "%H:%M:%S",
		    periods: ["오전", "오후"],
		    days: ["일요일", "월요일", "화요일", "수요일", "목요일", "금요일", "토요일"],
		    shortDays: ["일", "월", "화", "수", "목", "금", "토"],
		    months: ["1월", "2월", "3월", "4월", "5월", "6월", "7월", "8월", "9월", "10월", "11월", "12월"],
		    shortMonths: ["1월", "2월", "3월", "4월", "5월", "6월", "7월", "8월", "9월", "10월", "11월", "12월"]
		  });
		
		  var mkMK = locale$1({
		    dateTime: "%A, %e %B %Y г. %X",
		    date: "%d.%m.%Y",
		    time: "%H:%M:%S",
		    periods: ["AM", "PM"],
		    days: ["недела", "понеделник", "вторник", "среда", "четврток", "петок", "сабота"],
		    shortDays: ["нед", "пон", "вто", "сре", "чет", "пет", "саб"],
		    months: ["јануари", "февруари", "март", "април", "мај", "јуни", "јули", "август", "септември", "октомври", "ноември", "декември"],
		    shortMonths: ["јан", "фев", "мар", "апр", "мај", "јун", "јул", "авг", "сеп", "окт", "ное", "дек"]
		  });
		
		  var nlNL = locale$1({
		    dateTime: "%a %e %B %Y %T",
		    date: "%d-%m-%Y",
		    time: "%H:%M:%S",
		    periods: ["AM", "PM"], // unused
		    days: ["zondag", "maandag", "dinsdag", "woensdag", "donderdag", "vrijdag", "zaterdag"],
		    shortDays: ["zo", "ma", "di", "wo", "do", "vr", "za"],
		    months: ["januari", "februari", "maart", "april", "mei", "juni", "juli", "augustus", "september", "oktober", "november", "december"],
		    shortMonths: ["jan", "feb", "mrt", "apr", "mei", "jun", "jul", "aug", "sep", "okt", "nov", "dec"]
		  });
		
		  var plPL = locale$1({
		    dateTime: "%A, %e %B %Y, %X",
		    date: "%d/%m/%Y",
		    time: "%H:%M:%S",
		    periods: ["AM", "PM"], // unused
		    days: ["Niedziela", "Poniedziałek", "Wtorek", "Środa", "Czwartek", "Piątek", "Sobota"],
		    shortDays: ["Niedz.", "Pon.", "Wt.", "Śr.", "Czw.", "Pt.", "Sob."],
		    months: ["Styczeń", "Luty", "Marzec", "Kwiecień", "Maj", "Czerwiec", "Lipiec", "Sierpień", "Wrzesień", "Październik", "Listopad", "Grudzień"],
		    shortMonths: ["Stycz.", "Luty", "Marz.", "Kwie.", "Maj", "Czerw.", "Lipc.", "Sierp.", "Wrz.", "Paźdz.", "Listop.", "Grudz."]/* In Polish language abbraviated months are not commonly used so there is a dispute about the proper abbraviations. */
		  });
		
		  var ptBR = locale$1({
		    dateTime: "%A, %e de %B de %Y. %X",
		    date: "%d/%m/%Y",
		    time: "%H:%M:%S",
		    periods: ["AM", "PM"],
		    days: ["Domingo", "Segunda", "Terça", "Quarta", "Quinta", "Sexta", "Sábado"],
		    shortDays: ["Dom", "Seg", "Ter", "Qua", "Qui", "Sex", "Sáb"],
		    months: ["Janeiro", "Fevereiro", "Março", "Abril", "Maio", "Junho", "Julho", "Agosto", "Setembro", "Outubro", "Novembro", "Dezembro"],
		    shortMonths: ["Jan", "Fev", "Mar", "Abr", "Mai", "Jun", "Jul", "Ago", "Set", "Out", "Nov", "Dez"]
		  });
		
		  var ruRU = locale$1({
		    dateTime: "%A, %e %B %Y г. %X",
		    date: "%d.%m.%Y",
		    time: "%H:%M:%S",
		    periods: ["AM", "PM"],
		    days: ["воскресенье", "понедельник", "вторник", "среда", "четверг", "пятница", "суббота"],
		    shortDays: ["вс", "пн", "вт", "ср", "чт", "пт", "сб"],
		    months: ["января", "февраля", "марта", "апреля", "мая", "июня", "июля", "августа", "сентября", "октября", "ноября", "декабря"],
		    shortMonths: ["янв", "фев", "мар", "апр", "май", "июн", "июл", "авг", "сен", "окт", "ноя", "дек"]
		  });
		
		  var svSE = locale$1({
		    dateTime: "%A den %d %B %Y %X",
		    date: "%Y-%m-%d",
		    time: "%H:%M:%S",
		    periods: ["fm", "em"],
		    days: ["Söndag", "Måndag", "Tisdag", "Onsdag", "Torsdag", "Fredag", "Lördag"],
		    shortDays: ["Sön", "Mån", "Tis", "Ons", "Tor", "Fre", "Lör"],
		    months: ["Januari", "Februari", "Mars", "April", "Maj", "Juni", "Juli", "Augusti", "September", "Oktober", "November", "December"],
		    shortMonths: ["Jan", "Feb", "Mar", "Apr", "Maj", "Jun", "Jul", "Aug", "Sep", "Okt", "Nov", "Dec"]
		  });
		
		  var zhCN = locale$1({
		    dateTime: "%a %b %e %X %Y",
		    date: "%Y/%-m/%-d",
		    time: "%H:%M:%S",
		    periods: ["上午", "下午"],
		    days: ["星期日", "星期一", "星期二", "星期三", "星期四", "星期五", "星期六"],
		    shortDays: ["星期日", "星期一", "星期二", "星期三", "星期四", "星期五", "星期六"],
		    months: ["一月", "二月", "三月", "四月", "五月", "六月", "七月", "八月", "九月", "十月", "十一月", "十二月"],
		    shortMonths: ["一月", "二月", "三月", "四月", "五月", "六月", "七月", "八月", "九月", "十月", "十一月", "十二月"]
		  });
		
		  var isoSpecifier = "%Y-%m-%dT%H:%M:%S.%LZ";
		
		  function formatIsoNative(date) {
		    return date.toISOString();
		  }
		
		  var formatIso = Date.prototype.toISOString
		      ? formatIsoNative
		      : locale.utcFormat(isoSpecifier);
		
		  function parseIsoNative(string) {
		    var date = new Date(string);
		    return isNaN(date) ? null : date;
		  }
		
		  var parseIso = +new Date("2000-01-01T00:00:00.000Z")
		      ? parseIsoNative
		      : locale.utcParse(isoSpecifier);
		
		  var timeFormat = locale.format;
		  var timeParse = locale.parse;
		  var utcFormat = locale.utcFormat;
		  var utcParse = locale.utcParse;
		
		  var version = "0.3.1";
		
		  exports.version = version;
		  exports.timeFormat = timeFormat;
		  exports.timeParse = timeParse;
		  exports.utcFormat = utcFormat;
		  exports.utcParse = utcParse;
		  exports.timeFormatLocale = locale$1;
		  exports.timeFormatCaEs = caES;
		  exports.timeFormatDeCh = deCH;
		  exports.timeFormatDeDe = deDE;
		  exports.timeFormatEnCa = enCA;
		  exports.timeFormatEnGb = enGB;
		  exports.timeFormatEnUs = locale;
		  exports.timeFormatEsEs = esES;
		  exports.timeFormatFiFi = fiFI;
		  exports.timeFormatFrCa = frCA;
		  exports.timeFormatFrFr = frFR;
		  exports.timeFormatHeIl = heIL;
		  exports.timeFormatHuHu = huHU;
		  exports.timeFormatItIt = itIT;
		  exports.timeFormatJaJp = jaJP;
		  exports.timeFormatKoKr = koKR;
		  exports.timeFormatMkMk = mkMK;
		  exports.timeFormatNlNl = nlNL;
		  exports.timeFormatPlPl = plPL;
		  exports.timeFormatPtBr = ptBR;
		  exports.timeFormatRuRu = ruRU;
		  exports.timeFormatSvSe = svSE;
		  exports.timeFormatZhCn = zhCN;
		  exports.isoFormat = formatIso;
		  exports.isoParse = parseIso;
		
		}));

	/***/ },
	/* 269 */
	/***/ function(module, exports, __webpack_require__) {

		"use strict";
		
		Object.defineProperty(exports, "__esModule", {
		  value: true
		});
		
		var _victoryCore = __webpack_require__(1);
		
		exports.default = {
		  getAxisType: function getAxisType(component) {
		    if (!component.type || component.type.role !== "axis") {
		      return undefined;
		    }
		    return component.props.dependentAxis ? "dependent" : "independent";
		  },
		  getAxisComponent: function getAxisComponent(childComponents, axis) {
		    var getAxis = function getAxis(component) {
		      var flipped = childComponents.some(function (child) {
		        return child.props.horizontal;
		      });
		      return component.type.getAxis(component.props, flipped);
		    };
		    var axisComponents = childComponents.filter(function (component) {
		      return component.type.role === "axis" && getAxis(component) === axis;
		    });
		    return axisComponents[0];
		  },
		  getOrientation: function getOrientation(component, axis) {
		    var typicalOrientations = { x: "bottom", y: "left" };
		    var flippedOrientations = { x: "left", y: "bottom" };
		    if (!component) {
		      return typicalOrientations[axis];
		    } else if (component.props && component.props.orientation) {
		      return component.props.orientation;
		    }
		    var dependent = component.props.dependentAxis;
		    return dependent && axis === "y" || !dependent && axis === "x" ? typicalOrientations[axis] : flippedOrientations[axis];
		  },
		  getAxisOrientations: function getAxisOrientations(childComponents) {
		    return {
		      x: this.getOrientation(this.getAxisComponent(childComponents, "x"), "x"),
		      y: this.getOrientation(this.getAxisComponent(childComponents, "y"), "y")
		    };
		  },
		  isVertical: function isVertical(props) {
		    var orientation = props.orientation || (props.dependentAxis ? "left" : "bottom");
		    var vertical = { top: false, bottom: false, left: true, right: true };
		    return vertical[orientation];
		  },
		  stringTicks: function stringTicks(props) {
		    return props.tickValues !== undefined && _victoryCore.Collection.containsStrings(props.tickValues);
		  }
		};

	/***/ },
	/* 270 */
	/***/ function(module, exports, __webpack_require__) {

		"use strict";
		
		Object.defineProperty(exports, "__esModule", {
		  value: true
		});
		
		var _flatten = __webpack_require__(258);
		
		var _flatten2 = _interopRequireDefault(_flatten);
		
		var _includes = __webpack_require__(215);
		
		var _includes2 = _interopRequireDefault(_includes);
		
		var _data = __webpack_require__(271);
		
		var _data2 = _interopRequireDefault(_data);
		
		var _axis = __webpack_require__(269);
		
		var _axis2 = _interopRequireDefault(_axis);
		
		var _victoryCore = __webpack_require__(1);
		
		function _interopRequireDefault(obj) { return obj && obj.__esModule ? obj : { default: obj }; }
		
		function _toConsumableArray(arr) { if (Array.isArray(arr)) { for (var i = 0, arr2 = Array(arr.length); i < arr.length; i++) { arr2[i] = arr[i]; } return arr2; } else { return Array.from(arr); } }
		
		exports.default = {
		  getDomain: function getDomain(props, axis) {
		    var propsDomain = this.getDomainFromProps(props, axis);
		    if (propsDomain) {
		      return propsDomain;
		    }
		    var dataset = _data2.default.getData(props);
		    return this.getDomainFromData(dataset, axis);
		  },
		  getDomainWithZero: function getDomainWithZero(props, axis) {
		    var propsDomain = this.getDomainFromProps(props, axis);
		    if (propsDomain) {
		      return propsDomain;
		    }
		    var ensureZero = function ensureZero(domain) {
		      return axis === "y" ? [Math.min.apply(Math, _toConsumableArray(domain).concat([0])), Math.max.apply(Math, _toConsumableArray(domain).concat([0]))] : domain;
		    };
		    var categoryDomain = this.getDomainFromCategories(props, axis);
		    if (categoryDomain) {
		      return ensureZero(categoryDomain);
		    }
		    var dataset = _data2.default.getData(props);
		    return ensureZero(this.getDomainFromData(dataset, axis));
		  },
		  getDomainFromProps: function getDomainFromProps(props, axis) {
		    if (props.domain && props.domain[axis]) {
		      return props.domain[axis];
		    } else if (props.domain && Array.isArray(props.domain)) {
		      return props.domain;
		    }
		  },
		  getDomainFromData: function getDomainFromData(dataset, axis) {
		    var allData = (0, _flatten2.default)(dataset).map(function (datum) {
		      return datum[axis];
		    });
		    var min = Math.min.apply(Math, _toConsumableArray(allData));
		    var max = Math.max.apply(Math, _toConsumableArray(allData));
		    // TODO: is this the correct behavior, or should we just error. How do we
		    // handle charts with just one data point?
		    if (min === max) {
		      var adjustedMax = max === 0 ? 1 : max;
		      return [0, adjustedMax];
		    }
		    return [min, max];
		  },
		  getDomainFromTickValues: function getDomainFromTickValues(props) {
		    var domain = void 0;
		    if (_axis2.default.stringTicks(props)) {
		      domain = [1, props.tickValues.length];
		    } else {
		      // coerce ticks to numbers
		      var ticks = props.tickValues.map(function (value) {
		        return +value;
		      });
		      domain = [Math.min.apply(Math, _toConsumableArray(ticks)), Math.max.apply(Math, _toConsumableArray(ticks))];
		    }
		    if (_axis2.default.isVertical(props)) {
		      domain.reverse();
		    }
		    return domain;
		  },
		  getDomainFromCategories: function getDomainFromCategories(props, axis) {
		    var categories = _data2.default.getCategories(props, axis);
		    if (!categories) {
		      return undefined;
		    }
		    var stringArray = _victoryCore.Collection.containsStrings(categories) ? _data2.default.getStringsFromCategories(props, axis) : [];
		    var stringMap = stringArray.length === 0 ? null : stringArray.reduce(function (memo, string, index) {
		      memo[string] = index + 1;
		      return memo;
		    }, {});
		    var categoryValues = stringMap ? categories.map(function (value) {
		      return stringMap[value];
		    }) : categories;
		    return [Math.min.apply(Math, _toConsumableArray(categoryValues)), Math.max.apply(Math, _toConsumableArray(categoryValues))];
		  },
		  getDomainFromGroupedData: function getDomainFromGroupedData(props, axis, datasets) {
		    if (axis === "x" && props.categories) {
		      return this.getDomainFromCategories(props, axis);
		    }
		    var globalDomain = this.getDomainFromData(datasets, axis);
		
		    // find the cumulative max for stacked chart types
		    var cumulativeData = axis === "y" ? this.getCumulativeData(datasets, axis) : [];
		
		    var cumulativeMaxArray = cumulativeData.map(function (dataset) {
		      return dataset.reduce(function (memo, val) {
		        return val > 0 ? memo + val : memo;
		      }, 0);
		    });
		
		    var cumulativeMinArray = cumulativeData.map(function (dataset) {
		      return dataset.reduce(function (memo, val) {
		        return val < 0 ? memo + val : memo;
		      }, 0);
		    });
		
		    var cumulativeMin = Math.min.apply(Math, _toConsumableArray(cumulativeMinArray));
		    // use greatest min / max
		    var domainMin = cumulativeMin < 0 ? cumulativeMin : Math.min.apply(Math, _toConsumableArray(globalDomain));
		    var domainMax = Math.max.apply(Math, _toConsumableArray(globalDomain).concat(_toConsumableArray(cumulativeMaxArray)));
		    // TODO: is this the correct behavior, or should we just error. How do we
		    // handle charts with just one data point?
		    if (domainMin === domainMax) {
		      var adjustedMax = domainMax === 0 ? 1 : domainMax;
		      return [0, adjustedMax];
		    }
		    return [domainMin, domainMax];
		  },
		  getCumulativeData: function getCumulativeData(datasets, axis) {
		    var categories = [];
		    var axisValues = [];
		    datasets.forEach(function (dataset) {
		      dataset.forEach(function (data) {
		        if (data.category !== undefined && !(0, _includes2.default)(categories, data.category)) {
		          categories.push(data.category);
		        } else if (!(0, _includes2.default)(axisValues, data[axis])) {
		          axisValues.push(data[axis]);
		        }
		      });
		    });
		
		    var _dataByCategory = function _dataByCategory() {
		      return categories.map(function (value) {
		        return datasets.reduce(function (prev, data) {
		          return data.category === value ? prev.concat(data[axis]) : prev;
		        }, []);
		      });
		    };
		
		    var _dataByIndex = function _dataByIndex() {
		      return axisValues.map(function (value, index) {
		        return datasets.map(function (data) {
		          return data[index] && data[index][axis];
		        });
		      });
		    };
		
		    return categories.length === 0 ? _dataByIndex() : _dataByCategory();
		  },
		  padDomain: function padDomain(domain, props, axis) {
		    if (!props.domainPadding) {
		      return domain;
		    }
		    var domainPadding = typeof props.domainPadding === "number" ? props.domainPadding : props.domainPadding[axis];
		
		    if (!domainPadding) {
		      return domain;
		    }
		    var domainMin = Math.min.apply(Math, _toConsumableArray(domain));
		    var domainMax = Math.max.apply(Math, _toConsumableArray(domain));
		    var range = _victoryCore.Helpers.getRange(props, axis);
		    var rangeExtent = Math.abs(Math.max.apply(Math, _toConsumableArray(range)) - Math.min.apply(Math, _toConsumableArray(range)));
		    var padding = Math.abs(domainMax - domainMin) * domainPadding / rangeExtent;
		    // don't make the axes cross if they aren't already
		    var adjustedMin = domainMin >= 0 && domainMin - padding <= 0 ? 0 : domainMin.valueOf() - padding;
		    var adjustedMax = domainMax <= 0 && domainMax + padding >= 0 ? 0 : domainMax.valueOf() + padding;
		    return domainMin instanceof Date || domainMax instanceof Date ? [new Date(adjustedMin), new Date(adjustedMax)] : [adjustedMin, adjustedMax];
		  },
		  orientDomain: function orientDomain(domain, orientations, axis) {
		    // If the other axis is in a reversed orientation, the domain of this axis
		    // needs to be reversed
		    var otherAxis = axis === "x" ? "y" : "x";
		    var defaultOrientation = function defaultOrientation(ax) {
		      return ax === "x" ? "bottom" : "left";
		    };
		    var flippedAxis = orientations.x === "left" || orientations.x === "right";
		    var standardOrientation = flippedAxis ? orientations[otherAxis] === defaultOrientation(axis) : orientations[otherAxis] === defaultOrientation(otherAxis);
		    if (flippedAxis) {
		      return standardOrientation ? domain.concat().reverse() : domain;
		    } else {
		      return standardOrientation ? domain : domain.concat().reverse();
		    }
		  }
		};

	/***/ },
	/* 271 */
	/***/ function(module, exports, __webpack_require__) {

		"use strict";
		
		Object.defineProperty(exports, "__esModule", {
		  value: true
		});
		
		var _uniq = __webpack_require__(272);
		
		var _uniq2 = _interopRequireDefault(_uniq);
		
		var _defaults = __webpack_require__(175);
		
		var _defaults2 = _interopRequireDefault(_defaults);
		
		var _assign = __webpack_require__(278);
		
		var _assign2 = _interopRequireDefault(_assign);
		
		var _victoryCore = __webpack_require__(1);
		
		var _scale = __webpack_require__(257);
		
		var _scale2 = _interopRequireDefault(_scale);
		
		var _react = __webpack_require__(157);
		
		var _react2 = _interopRequireDefault(_react);
		
		function _interopRequireDefault(obj) { return obj && obj.__esModule ? obj : { default: obj }; }
		
		function _toConsumableArray(arr) { if (Array.isArray(arr)) { for (var i = 0, arr2 = Array(arr.length); i < arr.length; i++) { arr2[i] = arr[i]; } return arr2; } else { return Array.from(arr); } }
		
		exports.default = {
		  // String Data
		
		  createStringMap: function createStringMap(props, axis) {
		    var hasMultipleDatasets = arguments.length <= 2 || arguments[2] === undefined ? false : arguments[2];
		
		    var stringsFromAxes = this.getStringsFromAxes(props, axis);
		    var stringsFromCategories = this.getStringsFromCategories(props, axis);
		    var stringsFromData = hasMultipleDatasets ? props.data.reduce(function (prev, dataset) {
		      return prev.concat(_victoryCore.Helpers.getStringsFromData((0, _defaults2.default)({}, { data: dataset }, props), axis));
		    }, []) : this.getStringsFromData(props, axis);
		
		    var allStrings = (0, _uniq2.default)([].concat(_toConsumableArray(stringsFromAxes), _toConsumableArray(stringsFromCategories), _toConsumableArray(stringsFromData)));
		    return allStrings.length === 0 ? null : allStrings.reduce(function (memo, string, index) {
		      memo[string] = index + 1;
		      return memo;
		    }, {});
		  },
		  getStringsFromAxes: function getStringsFromAxes(props, axis) {
		    if (!props.tickValues || !Array.isArray(props.tickValues) && !props.tickValues[axis]) {
		      return [];
		    }
		    var tickValueArray = props.tickValues[axis] || props.tickValues;
		    return tickValueArray.filter(function (val) {
		      return typeof val === "string";
		    });
		  },
		  getStringsFromCategories: function getStringsFromCategories(props, axis) {
		    var _this = this;
		
		    var childComponents = props.children && _react2.default.Children.toArray(props.children);
		    if (!props.categories && !props.children) {
		      return [];
		    }
		
		    var getCategoryStrings = function getCategoryStrings(childProps) {
		      var categories = _this.getCategories(childProps, axis);
		      return categories && categories.filter(function (val) {
		        return typeof val === "string";
		      });
		    };
		
		    var categories = props.categories ? getCategoryStrings(props) : childComponents.map(function (child) {
		      return getCategoryStrings(child.props);
		    });
		
		    return categories ? _victoryCore.Collection.removeUndefined(categories) : [];
		  },
		  getCategories: function getCategories(props, axis) {
		    if (!props.categories) {
		      return undefined;
		    }
		    return Array.isArray(props.categories) ? props.categories : props.categories[axis];
		  },
		  getStringsFromData: function getStringsFromData(props, axis) {
		    var childComponents = props.children && _react2.default.Children.toArray(props.children);
		    if (!props.data && !props.children) {
		      return [];
		    }
		
		    var getStrings = function getStrings(childProps) {
		      var accessor = _victoryCore.Helpers.createAccessor(typeof childProps[axis] !== "undefined" ? childProps[axis] : axis);
		      return childProps.data ? childProps.data.reduce(function (prev, curr) {
		        var datum = accessor(curr);
		        return typeof datum === "string" && prev.indexOf(datum) === -1 ? prev.concat(datum) : prev;
		      }, []) : undefined;
		    };
		
		    return props.data ? getStrings(props) : childComponents.map(function (child) {
		      return getStrings(child.props);
		    });
		  },
		
		
		  // for components that take single datasets
		  getData: function getData(props) {
		    if (props.data) {
		      return this.formatData(props.data, props);
		    }
		    var data = this.generateData(props);
		    return this.formatData(data, props);
		  },
		  generateData: function generateData(props) {
		    // create an array of values evenly spaced across the x domain that include domain min/max
		    var domain = props.domain ? props.domain.x || props.domain : _scale2.default.getBaseScale(props, "x").domain();
		    var samples = props.samples || 1;
		    var max = Math.max.apply(Math, _toConsumableArray(domain));
		    var values = Array.apply(undefined, _toConsumableArray(Array(samples))).map(function (val, index) {
		      var v = max / samples * index + Math.min.apply(Math, _toConsumableArray(domain));
		      return { x: v, y: v };
		    });
		    return values[samples - 1].x === max ? values : values.concat([{ x: max, y: max }]);
		  },
		  formatData: function formatData(dataset, props, stringMap) {
		    if (!dataset) {
		      return [];
		    }
		    stringMap = stringMap || {
		      x: this.createStringMap(props, "x"),
		      y: this.createStringMap(props, "y")
		    };
		    var accessor = {
		      x: _victoryCore.Helpers.createAccessor(props.x),
		      y: _victoryCore.Helpers.createAccessor(props.y)
		    };
		    return this.cleanData(dataset, props).map(function (datum) {
		      var x = accessor.x(datum);
		      var y = accessor.y(datum);
		      return (0, _assign2.default)({}, datum, { x: x, y: y },
		      // map string data to numeric values, and add names
		      typeof x === "string" ? { x: stringMap.x[x], xName: x } : {}, typeof y === "string" ? { y: stringMap.y[y], yName: y } : {});
		    });
		  },
		  cleanData: function cleanData(dataset, props) {
		    // Some scale types break when certain data is supplies. This method will
		    // remove data points that break scales. So far this method only removes
		    // zeroes for log scales
		    // TODO other cases?
		    var scaleType = {
		      x: _scale2.default.getScaleType(props, "x"),
		      y: _scale2.default.getScaleType(props, "y")
		    };
		    var accessor = {
		      x: _victoryCore.Helpers.createAccessor(props.x),
		      y: _victoryCore.Helpers.createAccessor(props.y)
		    };
		    if (scaleType.x !== "log" && scaleType.y !== "log") {
		      return dataset;
		    }
		    var rules = function rules(datum, axis) {
		      return scaleType[axis] === "log" ? accessor[axis](datum) !== 0 : true;
		    };
		    return dataset.filter(function (datum) {
		      return rules(datum, "x") && rules(datum, "y");
		    });
		  }
		};

	/***/ },
	/* 272 */
	/***/ function(module, exports, __webpack_require__) {

		var baseUniq = __webpack_require__(273);
		
		/**
		 * Creates a duplicate-free version of an array, using
		 * [`SameValueZero`](http://ecma-international.org/ecma-262/6.0/#sec-samevaluezero)
		 * for equality comparisons, in which only the first occurrence of each element
		 * is kept.
		 *
		 * @static
		 * @memberOf _
		 * @category Array
		 * @param {Array} array The array to inspect.
		 * @returns {Array} Returns the new duplicate free array.
		 * @example
		 *
		 * _.uniq([2, 1, 2]);
		 * // => [2, 1]
		 */
		function uniq(array) {
		  return (array && array.length)
		    ? baseUniq(array)
		    : [];
		}
		
		module.exports = uniq;


	/***/ },
	/* 273 */
	/***/ function(module, exports, __webpack_require__) {

		var SetCache = __webpack_require__(226),
		    arrayIncludes = __webpack_require__(250),
		    arrayIncludesWith = __webpack_require__(251),
		    cacheHas = __webpack_require__(253),
		    createSet = __webpack_require__(274),
		    setToArray = __webpack_require__(277);
		
		/** Used as the size to enable large array optimizations. */
		var LARGE_ARRAY_SIZE = 200;
		
		/**
		 * The base implementation of `_.uniqBy` without support for iteratee shorthands.
		 *
		 * @private
		 * @param {Array} array The array to inspect.
		 * @param {Function} [iteratee] The iteratee invoked per element.
		 * @param {Function} [comparator] The comparator invoked per element.
		 * @returns {Array} Returns the new duplicate free array.
		 */
		function baseUniq(array, iteratee, comparator) {
		  var index = -1,
		      includes = arrayIncludes,
		      length = array.length,
		      isCommon = true,
		      result = [],
		      seen = result;
		
		  if (comparator) {
		    isCommon = false;
		    includes = arrayIncludesWith;
		  }
		  else if (length >= LARGE_ARRAY_SIZE) {
		    var set = iteratee ? null : createSet(array);
		    if (set) {
		      return setToArray(set);
		    }
		    isCommon = false;
		    includes = cacheHas;
		    seen = new SetCache;
		  }
		  else {
		    seen = iteratee ? [] : result;
		  }
		  outer:
		  while (++index < length) {
		    var value = array[index],
		        computed = iteratee ? iteratee(value) : value;
		
		    if (isCommon && computed === computed) {
		      var seenIndex = seen.length;
		      while (seenIndex--) {
		        if (seen[seenIndex] === computed) {
		          continue outer;
		        }
		      }
		      if (iteratee) {
		        seen.push(computed);
		      }
		      result.push(value);
		    }
		    else if (!includes(seen, computed, comparator)) {
		      if (seen !== result) {
		        seen.push(computed);
		      }
		      result.push(value);
		    }
		  }
		  return result;
		}
		
		module.exports = baseUniq;


	/***/ },
	/* 274 */
	/***/ function(module, exports, __webpack_require__) {

		var Set = __webpack_require__(275),
		    noop = __webpack_require__(276);
		
		/**
		 * Creates a set of `values`.
		 *
		 * @private
		 * @param {Array} values The values to add to the set.
		 * @returns {Object} Returns the new set.
		 */
		var createSet = !(Set && new Set([1, 2]).size === 2) ? noop : function(values) {
		  return new Set(values);
		};
		
		module.exports = createSet;


	/***/ },
	/* 275 */
	/***/ function(module, exports, __webpack_require__) {

		var getNative = __webpack_require__(231),
		    root = __webpack_require__(197);
		
		/* Built-in method references that are verified to be native. */
		var Set = getNative(root, 'Set');
		
		module.exports = Set;


	/***/ },
	/* 276 */
	/***/ function(module, exports) {

		/**
		 * A no-operation function that returns `undefined` regardless of the
		 * arguments it receives.
		 *
		 * @static
		 * @memberOf _
		 * @category Util
		 * @example
		 *
		 * var object = { 'user': 'fred' };
		 *
		 * _.noop(object) === undefined;
		 * // => true
		 */
		function noop() {
		  // No operation performed.
		}
		
		module.exports = noop;


	/***/ },
	/* 277 */
	/***/ function(module, exports) {

		/**
		 * Converts `set` to an array.
		 *
		 * @private
		 * @param {Object} set The set to convert.
		 * @returns {Array} Returns the converted array.
		 */
		function setToArray(set) {
		  var index = -1,
		      result = Array(set.size);
		
		  set.forEach(function(value) {
		    result[++index] = value;
		  });
		  return result;
		}
		
		module.exports = setToArray;


	/***/ },
	/* 278 */
	/***/ function(module, exports, __webpack_require__) {

		var assignValue = __webpack_require__(181),
		    copyObject = __webpack_require__(279),
		    createAssigner = __webpack_require__(182),
		    isArrayLike = __webpack_require__(184),
		    isPrototype = __webpack_require__(207),
		    keys = __webpack_require__(221);
		
		/** Used for built-in method references. */
		var objectProto = Object.prototype;
		
		/** Used to check objects for own properties. */
		var hasOwnProperty = objectProto.hasOwnProperty;
		
		/** Built-in value references. */
		var propertyIsEnumerable = objectProto.propertyIsEnumerable;
		
		/** Detect if properties shadowing those on `Object.prototype` are non-enumerable. */
		var nonEnumShadows = !propertyIsEnumerable.call({ 'valueOf': 1 }, 'valueOf');
		
		/**
		 * Assigns own enumerable properties of source objects to the destination
		 * object. Source objects are applied from left to right. Subsequent sources
		 * overwrite property assignments of previous sources.
		 *
		 * **Note:** This method mutates `object` and is loosely based on
		 * [`Object.assign`](https://mdn.io/Object/assign).
		 *
		 * @static
		 * @memberOf _
		 * @category Object
		 * @param {Object} object The destination object.
		 * @param {...Object} [sources] The source objects.
		 * @returns {Object} Returns `object`.
		 * @example
		 *
		 * function Foo() {
		 *   this.c = 3;
		 * }
		 *
		 * function Bar() {
		 *   this.e = 5;
		 * }
		 *
		 * Foo.prototype.d = 4;
		 * Bar.prototype.f = 6;
		 *
		 * _.assign({ 'a': 1 }, new Foo, new Bar);
		 * // => { 'a': 1, 'c': 3, 'e': 5 }
		 */
		var assign = createAssigner(function(object, source) {
		  if (nonEnumShadows || isPrototype(source) || isArrayLike(source)) {
		    copyObject(source, keys(source), object);
		    return;
		  }
		  for (var key in source) {
		    if (hasOwnProperty.call(source, key)) {
		      assignValue(object, key, source[key]);
		    }
		  }
		});
		
		module.exports = assign;


	/***/ },
	/* 279 */
	/***/ function(module, exports, __webpack_require__) {

		var copyObjectWith = __webpack_require__(180);
		
		/**
		 * Copies properties of `source` to `object`.
		 *
		 * @private
		 * @param {Object} source The object to copy properties from.
		 * @param {Array} props The property names to copy.
		 * @param {Object} [object={}] The object to copy properties to.
		 * @returns {Object} Returns `object`.
		 */
		function copyObject(source, props, object) {
		  return copyObjectWith(source, props, object);
		}
		
		module.exports = copyObject;


	/***/ },
	/* 280 */
	/***/ function(module, exports, __webpack_require__) {

		"use strict";
		
		Object.defineProperty(exports, "__esModule", {
		  value: true
		});
		
		var _typeof = typeof Symbol === "function" && typeof Symbol.iterator === "symbol" ? function (obj) { return typeof obj; } : function (obj) { return obj && typeof Symbol === "function" && obj.constructor === Symbol ? "symbol" : typeof obj; };
		
		var _invert = __webpack_require__(281);
		
		var _invert2 = _interopRequireDefault(_invert);
		
		var _sortBy = __webpack_require__(289);
		
		var _sortBy2 = _interopRequireDefault(_sortBy);
		
		var _values = __webpack_require__(218);
		
		var _values2 = _interopRequireDefault(_values);
		
		var _identity = __webpack_require__(288);
		
		var _identity2 = _interopRequireDefault(_identity);
		
		var _uniq = __webpack_require__(272);
		
		var _uniq2 = _interopRequireDefault(_uniq);
		
		var _flatten = __webpack_require__(258);
		
		var _flatten2 = _interopRequireDefault(_flatten);
		
		var _axis = __webpack_require__(269);
		
		var _axis2 = _interopRequireDefault(_axis);
		
		var _data = __webpack_require__(271);
		
		var _data2 = _interopRequireDefault(_data);
		
		var _domain = __webpack_require__(270);
		
		var _domain2 = _interopRequireDefault(_domain);
		
		var _wrapper = __webpack_require__(338);
		
		var _wrapper2 = _interopRequireDefault(_wrapper);
		
		var _react = __webpack_require__(157);
		
		var _react2 = _interopRequireDefault(_react);
		
		var _victoryCore = __webpack_require__(1);
		
		function _interopRequireDefault(obj) { return obj && obj.__esModule ? obj : { default: obj }; }
		
		function _toConsumableArray(arr) { if (Array.isArray(arr)) { for (var i = 0, arr2 = Array(arr.length); i < arr.length; i++) { arr2[i] = arr[i]; } return arr2; } else { return Array.from(arr); } }
		
		exports.default = {
		  getChildComponents: function getChildComponents(props, defaultAxes) {
		    var childComponents = _react2.default.Children.toArray(props.children);
		    if (childComponents.length === 0) {
		      return [defaultAxes.independent, defaultAxes.dependent];
		    }
		
		    var axisComponents = childComponents.filter(function (component) {
		      return component.type && component.type.role === "axis";
		    });
		
		    if (axisComponents.length === 0) {
		      return childComponents.concat(defaultAxes.independent, defaultAxes.dependent);
		    }
		    var dependentAxes = axisComponents.filter(function (component) {
		      return component.props.dependentAxis;
		    });
		    var independentAxes = axisComponents.filter(function (component) {
		      return !component.props.dependentAxis;
		    });
		    if (dependentAxes.length > 1 || independentAxes.length > 1) {
		      var msg = "Only one VictoryAxis component of each axis type is allowed when" + "using the VictoryChart wrapper. Only the first axis will be used. Please compose " + "multi-axis charts manually";
		      _victoryCore.Log.warn(msg);
		      var dataComponents = childComponents.filter(function (component) {
		        return component.type && component.type.role !== "axis";
		      });
		
		      return _victoryCore.Collection.removeUndefined(dataComponents.concat(independentAxes[0], dependentAxes[0]));
		    }
		    return childComponents;
		  },
		  getDataComponents: function getDataComponents(childComponents) {
		    return childComponents.filter(function (child) {
		      var role = child.type && child.type.role;
		      return role !== "axis";
		    });
		  },
		  getDomain: function getDomain(props, childComponents, axis) {
		    var domain = _wrapper2.default.getDomainFromChildren(props, axis);
		    var orientations = _axis2.default.getAxisOrientations(childComponents);
		    return _domain2.default.orientDomain(domain, orientations, axis);
		  },
		  getAxisOffset: function getAxisOffset(props, calculatedProps) {
		    var axisComponents = calculatedProps.axisComponents;
		    var domain = calculatedProps.domain;
		    var scale = calculatedProps.scale;
		    // make the axes line up, and cross when appropriate
		
		    var origin = {
		      x: Math.max(Math.min.apply(Math, _toConsumableArray(domain.x)), 0),
		      y: Math.max(Math.min.apply(Math, _toConsumableArray(domain.y)), 0)
		    };
		    var axisOrientations = {
		      x: _axis2.default.getOrientation(axisComponents.x, "x"),
		      y: _axis2.default.getOrientation(axisComponents.y, "y")
		    };
		    var orientationOffset = {
		      x: axisOrientations.y === "left" ? 0 : props.width,
		      y: axisOrientations.x === "bottom" ? props.height : 0
		    };
		    var calculatedOffset = {
		      x: Math.abs(orientationOffset.x - scale.x.call(null, origin.x)),
		      y: Math.abs(orientationOffset.y - scale.y.call(null, origin.y))
		    };
		    return {
		      x: axisComponents.x && axisComponents.x.offsetX || calculatedOffset.x,
		      y: axisComponents.y && axisComponents.y.offsetY || calculatedOffset.y
		    };
		  },
		  getTicksFromData: function getTicksFromData(calculatedProps, axis) {
		    var stringMap = calculatedProps.stringMap[axis];
		    // if tickValues are defined for an axis component use them
		    var categoryArray = calculatedProps.categories[axis];
		    var ticksFromCategories = categoryArray && _victoryCore.Collection.containsOnlyStrings(categoryArray) ? categoryArray.map(function (tick) {
		      return stringMap[tick];
		    }) : categoryArray;
		    var ticksFromStringMap = stringMap && (0, _values2.default)(stringMap);
		    // when ticks is undefined, axis will determine it's own ticks
		    return ticksFromCategories && ticksFromCategories.length !== 0 ? ticksFromCategories : ticksFromStringMap;
		  },
		  getTicksFromAxis: function getTicksFromAxis(calculatedProps, axis, component) {
		    var tickValues = component.props.tickValues;
		    if (!tickValues) {
		      return undefined;
		    }
		    var stringMap = calculatedProps.stringMap[axis];
		    return _victoryCore.Collection.containsOnlyStrings(tickValues) && stringMap ? tickValues.map(function (tick) {
		      return stringMap[tick];
		    }) : tickValues;
		  },
		  getTicks: function getTicks() {
		    return this.getTicksFromAxis.apply(this, arguments) || this.getTicksFromData.apply(this, arguments);
		  },
		  getTickFormat: function getTickFormat(component, axis, calculatedProps) {
		    var tickValues = component.props.tickValues;
		    var stringMap = calculatedProps.stringMap[axis];
		    if (tickValues && !_victoryCore.Collection.containsStrings(tickValues)) {
		      return _identity2.default;
		    } else if (stringMap !== null) {
		      var _ret = function () {
		        var tickValueArray = (0, _sortBy2.default)((0, _values2.default)(stringMap), function (n) {
		          return n;
		        });
		        var invertedStringMap = (0, _invert2.default)(stringMap);
		        var dataNames = tickValueArray.map(function (tick) {
		          return invertedStringMap[tick];
		        });
		        // string ticks should have one tick of padding at the beginning
		        var dataTicks = [""].concat(_toConsumableArray(dataNames), [""]);
		        return {
		          v: function v(x) {
		            return dataTicks[x];
		          }
		        };
		      }();
		
		      if ((typeof _ret === "undefined" ? "undefined" : _typeof(_ret)) === "object") return _ret.v;
		    } else {
		      return calculatedProps.scale[axis].tickFormat() || _identity2.default;
		    }
		  },
		  getStringsFromChildData: function getStringsFromChildData(child, axis) {
		    if (!child.props.data && !child.type.getData) {
		      return [];
		    }
		    if (child.props.data) {
		      return _data2.default.getStringsFromData(child.props, axis);
		    }
		    var data = (0, _flatten2.default)(child.type.getData(child.props));
		    var attr = axis === "x" ? "xName" : "yName";
		    return data.reduce(function (prev, datum) {
		      return datum[attr] ? prev.concat(datum[attr]) : prev;
		    }, []);
		  },
		  createStringMap: function createStringMap(childComponents, axis) {
		    var _this = this;
		
		    var axisComponent = _axis2.default.getAxisComponent(childComponents, axis);
		    var tickStrings = axisComponent ? _data2.default.getStringsFromAxes(axisComponent.props, axis) : [];
		
		    var categoryStrings = childComponents.reduce(function (prev, component) {
		      var categoryData = _data2.default.getStringsFromCategories(component.props, axis);
		      return categoryData ? prev.concat(categoryData) : prev;
		    }, []);
		    var dataStrings = childComponents.reduce(function (prev, component) {
		      var stringData = _this.getStringsFromChildData(component, axis);
		      return stringData ? prev.concat(stringData) : prev;
		    }, []);
		    var allStrings = (0, _uniq2.default)((0, _flatten2.default)([].concat(_toConsumableArray(tickStrings), _toConsumableArray(categoryStrings), _toConsumableArray(dataStrings))));
		    return allStrings.length === 0 ? null : allStrings.reduce(function (memo, string, index) {
		      memo[string] = index + 1;
		      return memo;
		    }, {});
		  }
		};

	/***/ },
	/* 281 */
	/***/ function(module, exports, __webpack_require__) {

		var constant = __webpack_require__(282),
		    createInverter = __webpack_require__(283),
		    identity = __webpack_require__(288);
		
		/**
		 * Creates an object composed of the inverted keys and values of `object`.
		 * If `object` contains duplicate values, subsequent values overwrite property
		 * assignments of previous values.
		 *
		 * @static
		 * @memberOf _
		 * @category Object
		 * @param {Object} object The object to invert.
		 * @returns {Object} Returns the new inverted object.
		 * @example
		 *
		 * var object = { 'a': 1, 'b': 2, 'c': 1 };
		 *
		 * _.invert(object);
		 * // => { '1': 'c', '2': 'b' }
		 */
		var invert = createInverter(function(result, value, key) {
		  result[value] = key;
		}, constant(identity));
		
		module.exports = invert;


	/***/ },
	/* 282 */
	/***/ function(module, exports) {

		/**
		 * Creates a function that returns `value`.
		 *
		 * @static
		 * @memberOf _
		 * @category Util
		 * @param {*} value The value to return from the new function.
		 * @returns {Function} Returns the new function.
		 * @example
		 *
		 * var object = { 'user': 'fred' };
		 * var getter = _.constant(object);
		 *
		 * getter() === object;
		 * // => true
		 */
		function constant(value) {
		  return function() {
		    return value;
		  };
		}
		
		module.exports = constant;


	/***/ },
	/* 283 */
	/***/ function(module, exports, __webpack_require__) {

		var baseInverter = __webpack_require__(284);
		
		/**
		 * Creates a function like `_.invertBy`.
		 *
		 * @private
		 * @param {Function} setter The function to set accumulator values.
		 * @param {Function} toIteratee The function to resolve iteratees.
		 * @returns {Function} Returns the new inverter function.
		 */
		function createInverter(setter, toIteratee) {
		  return function(object, iteratee) {
		    return baseInverter(object, setter, toIteratee(iteratee), {});
		  };
		}
		
		module.exports = createInverter;


	/***/ },
	/* 284 */
	/***/ function(module, exports, __webpack_require__) {

		var baseForOwn = __webpack_require__(285);
		
		/**
		 * The base implementation of `_.invert` and `_.invertBy` which inverts
		 * `object` with values transformed by `iteratee` and set by `setter`.
		 *
		 * @private
		 * @param {Object} object The object to iterate over.
		 * @param {Function} setter The function to set `accumulator` values.
		 * @param {Function} iteratee The iteratee to transform values.
		 * @param {Object} accumulator The initial inverted object.
		 * @returns {Function} Returns `accumulator`.
		 */
		function baseInverter(object, setter, iteratee, accumulator) {
		  baseForOwn(object, function(value, key, object) {
		    setter(accumulator, iteratee(value), key, object);
		  });
		  return accumulator;
		}
		
		module.exports = baseInverter;


	/***/ },
	/* 285 */
	/***/ function(module, exports, __webpack_require__) {

		var baseFor = __webpack_require__(286),
		    keys = __webpack_require__(221);
		
		/**
		 * The base implementation of `_.forOwn` without support for iteratee shorthands.
		 *
		 * @private
		 * @param {Object} object The object to iterate over.
		 * @param {Function} iteratee The function invoked per iteration.
		 * @returns {Object} Returns `object`.
		 */
		function baseForOwn(object, iteratee) {
		  return object && baseFor(object, iteratee, keys);
		}
		
		module.exports = baseForOwn;


	/***/ },
	/* 286 */
	/***/ function(module, exports, __webpack_require__) {

		var createBaseFor = __webpack_require__(287);
		
		/**
		 * The base implementation of `baseForIn` and `baseForOwn` which iterates
		 * over `object` properties returned by `keysFunc` invoking `iteratee` for
		 * each property. Iteratee functions may exit iteration early by explicitly
		 * returning `false`.
		 *
		 * @private
		 * @param {Object} object The object to iterate over.
		 * @param {Function} iteratee The function invoked per iteration.
		 * @param {Function} keysFunc The function to get the keys of `object`.
		 * @returns {Object} Returns `object`.
		 */
		var baseFor = createBaseFor();
		
		module.exports = baseFor;


	/***/ },
	/* 287 */
	/***/ function(module, exports) {

		/**
		 * Creates a base function for methods like `_.forIn`.
		 *
		 * @private
		 * @param {boolean} [fromRight] Specify iterating from right to left.
		 * @returns {Function} Returns the new base function.
		 */
		function createBaseFor(fromRight) {
		  return function(object, iteratee, keysFunc) {
		    var index = -1,
		        iterable = Object(object),
		        props = keysFunc(object),
		        length = props.length;
		
		    while (length--) {
		      var key = props[fromRight ? length : ++index];
		      if (iteratee(iterable[key], key, iterable) === false) {
		        break;
		      }
		    }
		    return object;
		  };
		}
		
		module.exports = createBaseFor;


	/***/ },
	/* 288 */
	/***/ function(module, exports) {

		/**
		 * This method returns the first argument given to it.
		 *
		 * @static
		 * @memberOf _
		 * @category Util
		 * @param {*} value Any value.
		 * @returns {*} Returns `value`.
		 * @example
		 *
		 * var object = { 'user': 'fred' };
		 *
		 * _.identity(object) === object;
		 * // => true
		 */
		function identity(value) {
		  return value;
		}
		
		module.exports = identity;


	/***/ },
	/* 289 */
	/***/ function(module, exports, __webpack_require__) {

		var baseFlatten = __webpack_require__(259),
		    baseOrderBy = __webpack_require__(290),
		    isIterateeCall = __webpack_require__(183),
		    rest = __webpack_require__(191);
		
		/**
		 * Creates an array of elements, sorted in ascending order by the results of
		 * running each element in a collection through each iteratee. This method
		 * performs a stable sort, that is, it preserves the original sort order of
		 * equal elements. The iteratees are invoked with one argument: (value).
		 *
		 * @static
		 * @memberOf _
		 * @category Collection
		 * @param {Array|Object} collection The collection to iterate over.
		 * @param {...(Function|Function[]|Object|Object[]|string|string[])} [iteratees=[_.identity]]
		 *  The iteratees to sort by, specified individually or in arrays.
		 * @returns {Array} Returns the new sorted array.
		 * @example
		 *
		 * var users = [
		 *   { 'user': 'fred',   'age': 48 },
		 *   { 'user': 'barney', 'age': 36 },
		 *   { 'user': 'fred',   'age': 42 },
		 *   { 'user': 'barney', 'age': 34 }
		 * ];
		 *
		 * _.sortBy(users, function(o) { return o.user; });
		 * // => objects for [['barney', 36], ['barney', 34], ['fred', 48], ['fred', 42]]
		 *
		 * _.sortBy(users, ['user', 'age']);
		 * // => objects for [['barney', 34], ['barney', 36], ['fred', 42], ['fred', 48]]
		 *
		 * _.sortBy(users, 'user', function(o) {
		 *   return Math.floor(o.age / 10);
		 * });
		 * // => objects for [['barney', 36], ['barney', 34], ['fred', 48], ['fred', 42]]
		 */
		var sortBy = rest(function(collection, iteratees) {
		  if (collection == null) {
		    return [];
		  }
		  var length = iteratees.length;
		  if (length > 1 && isIterateeCall(collection, iteratees[0], iteratees[1])) {
		    iteratees = [];
		  } else if (length > 2 && isIterateeCall(iteratees[0], iteratees[1], iteratees[2])) {
		    iteratees.length = 1;
		  }
		  return baseOrderBy(collection, baseFlatten(iteratees, 1), []);
		});
		
		module.exports = sortBy;


	/***/ },
	/* 290 */
	/***/ function(module, exports, __webpack_require__) {

		var arrayMap = __webpack_require__(220),
		    baseIteratee = __webpack_require__(291),
		    baseMap = __webpack_require__(332),
		    baseSortBy = __webpack_require__(335),
		    compareMultiple = __webpack_require__(336);
		
		/**
		 * The base implementation of `_.orderBy` without param guards.
		 *
		 * @private
		 * @param {Array|Object} collection The collection to iterate over.
		 * @param {Function[]|Object[]|string[]} iteratees The iteratees to sort by.
		 * @param {string[]} orders The sort orders of `iteratees`.
		 * @returns {Array} Returns the new sorted array.
		 */
		function baseOrderBy(collection, iteratees, orders) {
		  var index = -1;
		  iteratees = arrayMap(iteratees.length ? iteratees : Array(1), baseIteratee);
		
		  var result = baseMap(collection, function(value, key, collection) {
		    var criteria = arrayMap(iteratees, function(iteratee) {
		      return iteratee(value);
		    });
		    return { 'criteria': criteria, 'index': ++index, 'value': value };
		  });
		
		  return baseSortBy(result, function(object, other) {
		    return compareMultiple(object, other, orders);
		  });
		}
		
		module.exports = baseOrderBy;


	/***/ },
	/* 291 */
	/***/ function(module, exports, __webpack_require__) {

		var baseMatches = __webpack_require__(292),
		    baseMatchesProperty = __webpack_require__(316),
		    identity = __webpack_require__(288),
		    isArray = __webpack_require__(205),
		    property = __webpack_require__(330);
		
		/**
		 * The base implementation of `_.iteratee`.
		 *
		 * @private
		 * @param {*} [value=_.identity] The value to convert to an iteratee.
		 * @returns {Function} Returns the iteratee.
		 */
		function baseIteratee(value) {
		  var type = typeof value;
		  if (type == 'function') {
		    return value;
		  }
		  if (value == null) {
		    return identity;
		  }
		  if (type == 'object') {
		    return isArray(value)
		      ? baseMatchesProperty(value[0], value[1])
		      : baseMatches(value);
		  }
		  return property(value);
		}
		
		module.exports = baseIteratee;


	/***/ },
	/* 292 */
	/***/ function(module, exports, __webpack_require__) {

		var baseIsMatch = __webpack_require__(293),
		    getMatchData = __webpack_require__(312);
		
		/**
		 * The base implementation of `_.matches` which doesn't clone `source`.
		 *
		 * @private
		 * @param {Object} source The object of property values to match.
		 * @returns {Function} Returns the new function.
		 */
		function baseMatches(source) {
		  var matchData = getMatchData(source);
		  if (matchData.length == 1 && matchData[0][2]) {
		    var key = matchData[0][0],
		        value = matchData[0][1];
		
		    return function(object) {
		      if (object == null) {
		        return false;
		      }
		      return object[key] === value &&
		        (value !== undefined || (key in Object(object)));
		    };
		  }
		  return function(object) {
		    return object === source || baseIsMatch(object, source, matchData);
		  };
		}
		
		module.exports = baseMatches;


	/***/ },
	/* 293 */
	/***/ function(module, exports, __webpack_require__) {

		var Stack = __webpack_require__(294),
		    baseIsEqual = __webpack_require__(300);
		
		/** Used to compose bitmasks for comparison styles. */
		var UNORDERED_COMPARE_FLAG = 1,
		    PARTIAL_COMPARE_FLAG = 2;
		
		/**
		 * The base implementation of `_.isMatch` without support for iteratee shorthands.
		 *
		 * @private
		 * @param {Object} object The object to inspect.
		 * @param {Object} source The object of property values to match.
		 * @param {Array} matchData The property names, values, and compare flags to match.
		 * @param {Function} [customizer] The function to customize comparisons.
		 * @returns {boolean} Returns `true` if `object` is a match, else `false`.
		 */
		function baseIsMatch(object, source, matchData, customizer) {
		  var index = matchData.length,
		      length = index,
		      noCustomizer = !customizer;
		
		  if (object == null) {
		    return !length;
		  }
		  object = Object(object);
		  while (index--) {
		    var data = matchData[index];
		    if ((noCustomizer && data[2])
		          ? data[1] !== object[data[0]]
		          : !(data[0] in object)
		        ) {
		      return false;
		    }
		  }
		  while (++index < length) {
		    data = matchData[index];
		    var key = data[0],
		        objValue = object[key],
		        srcValue = data[1];
		
		    if (noCustomizer && data[2]) {
		      if (objValue === undefined && !(key in object)) {
		        return false;
		      }
		    } else {
		      var stack = new Stack,
		          result = customizer ? customizer(objValue, srcValue, key, object, source, stack) : undefined;
		
		      if (!(result === undefined
		            ? baseIsEqual(srcValue, objValue, customizer, UNORDERED_COMPARE_FLAG | PARTIAL_COMPARE_FLAG, stack)
		            : result
		          )) {
		        return false;
		      }
		    }
		  }
		  return true;
		}
		
		module.exports = baseIsMatch;


	/***/ },
	/* 294 */
	/***/ function(module, exports, __webpack_require__) {

		var stackClear = __webpack_require__(295),
		    stackDelete = __webpack_require__(296),
		    stackGet = __webpack_require__(297),
		    stackHas = __webpack_require__(298),
		    stackSet = __webpack_require__(299);
		
		/**
		 * Creates a stack cache object to store key-value pairs.
		 *
		 * @private
		 * @constructor
		 * @param {Array} [values] The values to cache.
		 */
		function Stack(values) {
		  var index = -1,
		      length = values ? values.length : 0;
		
		  this.clear();
		  while (++index < length) {
		    var entry = values[index];
		    this.set(entry[0], entry[1]);
		  }
		}
		
		// Add functions to the `Stack` cache.
		Stack.prototype.clear = stackClear;
		Stack.prototype['delete'] = stackDelete;
		Stack.prototype.get = stackGet;
		Stack.prototype.has = stackHas;
		Stack.prototype.set = stackSet;
		
		module.exports = Stack;


	/***/ },
	/* 295 */
	/***/ function(module, exports) {

		/**
		 * Removes all key-value entries from the stack.
		 *
		 * @private
		 * @name clear
		 * @memberOf Stack
		 */
		function stackClear() {
		  this.__data__ = { 'array': [], 'map': null };
		}
		
		module.exports = stackClear;


	/***/ },
	/* 296 */
	/***/ function(module, exports, __webpack_require__) {

		var assocDelete = __webpack_require__(236);
		
		/**
		 * Removes `key` and its value from the stack.
		 *
		 * @private
		 * @name delete
		 * @memberOf Stack
		 * @param {string} key The key of the value to remove.
		 * @returns {boolean} Returns `true` if the entry was removed, else `false`.
		 */
		function stackDelete(key) {
		  var data = this.__data__,
		      array = data.array;
		
		  return array ? assocDelete(array, key) : data.map['delete'](key);
		}
		
		module.exports = stackDelete;


	/***/ },
	/* 297 */
	/***/ function(module, exports, __webpack_require__) {

		var assocGet = __webpack_require__(242);
		
		/**
		 * Gets the stack value for `key`.
		 *
		 * @private
		 * @name get
		 * @memberOf Stack
		 * @param {string} key The key of the value to get.
		 * @returns {*} Returns the entry value.
		 */
		function stackGet(key) {
		  var data = this.__data__,
		      array = data.array;
		
		  return array ? assocGet(array, key) : data.map.get(key);
		}
		
		module.exports = stackGet;


	/***/ },
	/* 298 */
	/***/ function(module, exports, __webpack_require__) {

		var assocHas = __webpack_require__(245);
		
		/**
		 * Checks if a stack value for `key` exists.
		 *
		 * @private
		 * @name has
		 * @memberOf Stack
		 * @param {string} key The key of the entry to check.
		 * @returns {boolean} Returns `true` if an entry for `key` exists, else `false`.
		 */
		function stackHas(key) {
		  var data = this.__data__,
		      array = data.array;
		
		  return array ? assocHas(array, key) : data.map.has(key);
		}
		
		module.exports = stackHas;


	/***/ },
	/* 299 */
	/***/ function(module, exports, __webpack_require__) {

		var MapCache = __webpack_require__(227),
		    assocSet = __webpack_require__(247);
		
		/** Used as the size to enable large array optimizations. */
		var LARGE_ARRAY_SIZE = 200;
		
		/**
		 * Sets the stack `key` to `value`.
		 *
		 * @private
		 * @name set
		 * @memberOf Stack
		 * @param {string} key The key of the value to set.
		 * @param {*} value The value to set.
		 * @returns {Object} Returns the stack cache object.
		 */
		function stackSet(key, value) {
		  var data = this.__data__,
		      array = data.array;
		
		  if (array) {
		    if (array.length < (LARGE_ARRAY_SIZE - 1)) {
		      assocSet(array, key, value);
		    } else {
		      data.array = null;
		      data.map = new MapCache(array);
		    }
		  }
		  var map = data.map;
		  if (map) {
		    map.set(key, value);
		  }
		  return this;
		}
		
		module.exports = stackSet;


	/***/ },
	/* 300 */
	/***/ function(module, exports, __webpack_require__) {

		var baseIsEqualDeep = __webpack_require__(301),
		    isObject = __webpack_require__(188),
		    isObjectLike = __webpack_require__(204);
		
		/**
		 * The base implementation of `_.isEqual` which supports partial comparisons
		 * and tracks traversed objects.
		 *
		 * @private
		 * @param {*} value The value to compare.
		 * @param {*} other The other value to compare.
		 * @param {Function} [customizer] The function to customize comparisons.
		 * @param {boolean} [bitmask] The bitmask of comparison flags.
		 *  The bitmask may be composed of the following flags:
		 *     1 - Unordered comparison
		 *     2 - Partial comparison
		 * @param {Object} [stack] Tracks traversed `value` and `other` objects.
		 * @returns {boolean} Returns `true` if the values are equivalent, else `false`.
		 */
		function baseIsEqual(value, other, customizer, bitmask, stack) {
		  if (value === other) {
		    return true;
		  }
		  if (value == null || other == null || (!isObject(value) && !isObjectLike(other))) {
		    return value !== value && other !== other;
		  }
		  return baseIsEqualDeep(value, other, baseIsEqual, customizer, bitmask, stack);
		}
		
		module.exports = baseIsEqual;


	/***/ },
	/* 301 */
	/***/ function(module, exports, __webpack_require__) {

		var Stack = __webpack_require__(294),
		    equalArrays = __webpack_require__(302),
		    equalByTag = __webpack_require__(304),
		    equalObjects = __webpack_require__(308),
		    getTag = __webpack_require__(309),
		    isArray = __webpack_require__(205),
		    isHostObject = __webpack_require__(233),
		    isTypedArray = __webpack_require__(311);
		
		/** Used to compose bitmasks for comparison styles. */
		var PARTIAL_COMPARE_FLAG = 2;
		
		/** `Object#toString` result references. */
		var argsTag = '[object Arguments]',
		    arrayTag = '[object Array]',
		    objectTag = '[object Object]';
		
		/** Used for built-in method references. */
		var objectProto = Object.prototype;
		
		/** Used to check objects for own properties. */
		var hasOwnProperty = objectProto.hasOwnProperty;
		
		/**
		 * A specialized version of `baseIsEqual` for arrays and objects which performs
		 * deep comparisons and tracks traversed objects enabling objects with circular
		 * references to be compared.
		 *
		 * @private
		 * @param {Object} object The object to compare.
		 * @param {Object} other The other object to compare.
		 * @param {Function} equalFunc The function to determine equivalents of values.
		 * @param {Function} [customizer] The function to customize comparisons.
		 * @param {number} [bitmask] The bitmask of comparison flags. See `baseIsEqual` for more details.
		 * @param {Object} [stack] Tracks traversed `object` and `other` objects.
		 * @returns {boolean} Returns `true` if the objects are equivalent, else `false`.
		 */
		function baseIsEqualDeep(object, other, equalFunc, customizer, bitmask, stack) {
		  var objIsArr = isArray(object),
		      othIsArr = isArray(other),
		      objTag = arrayTag,
		      othTag = arrayTag;
		
		  if (!objIsArr) {
		    objTag = getTag(object);
		    objTag = objTag == argsTag ? objectTag : objTag;
		  }
		  if (!othIsArr) {
		    othTag = getTag(other);
		    othTag = othTag == argsTag ? objectTag : othTag;
		  }
		  var objIsObj = objTag == objectTag && !isHostObject(object),
		      othIsObj = othTag == objectTag && !isHostObject(other),
		      isSameTag = objTag == othTag;
		
		  if (isSameTag && !objIsObj) {
		    stack || (stack = new Stack);
		    return (objIsArr || isTypedArray(object))
		      ? equalArrays(object, other, equalFunc, customizer, bitmask, stack)
		      : equalByTag(object, other, objTag, equalFunc, customizer, bitmask, stack);
		  }
		  if (!(bitmask & PARTIAL_COMPARE_FLAG)) {
		    var objIsWrapped = objIsObj && hasOwnProperty.call(object, '__wrapped__'),
		        othIsWrapped = othIsObj && hasOwnProperty.call(other, '__wrapped__');
		
		    if (objIsWrapped || othIsWrapped) {
		      stack || (stack = new Stack);
		      return equalFunc(objIsWrapped ? object.value() : object, othIsWrapped ? other.value() : other, customizer, bitmask, stack);
		    }
		  }
		  if (!isSameTag) {
		    return false;
		  }
		  stack || (stack = new Stack);
		  return equalObjects(object, other, equalFunc, customizer, bitmask, stack);
		}
		
		module.exports = baseIsEqualDeep;


	/***/ },
	/* 302 */
	/***/ function(module, exports, __webpack_require__) {

		var arraySome = __webpack_require__(303);
		
		/** Used to compose bitmasks for comparison styles. */
		var UNORDERED_COMPARE_FLAG = 1,
		    PARTIAL_COMPARE_FLAG = 2;
		
		/**
		 * A specialized version of `baseIsEqualDeep` for arrays with support for
		 * partial deep comparisons.
		 *
		 * @private
		 * @param {Array} array The array to compare.
		 * @param {Array} other The other array to compare.
		 * @param {Function} equalFunc The function to determine equivalents of values.
		 * @param {Function} customizer The function to customize comparisons.
		 * @param {number} bitmask The bitmask of comparison flags. See `baseIsEqual` for more details.
		 * @param {Object} stack Tracks traversed `array` and `other` objects.
		 * @returns {boolean} Returns `true` if the arrays are equivalent, else `false`.
		 */
		function equalArrays(array, other, equalFunc, customizer, bitmask, stack) {
		  var index = -1,
		      isPartial = bitmask & PARTIAL_COMPARE_FLAG,
		      isUnordered = bitmask & UNORDERED_COMPARE_FLAG,
		      arrLength = array.length,
		      othLength = other.length;
		
		  if (arrLength != othLength && !(isPartial && othLength > arrLength)) {
		    return false;
		  }
		  // Assume cyclic values are equal.
		  var stacked = stack.get(array);
		  if (stacked) {
		    return stacked == other;
		  }
		  var result = true;
		  stack.set(array, other);
		
		  // Ignore non-index properties.
		  while (++index < arrLength) {
		    var arrValue = array[index],
		        othValue = other[index];
		
		    if (customizer) {
		      var compared = isPartial
		        ? customizer(othValue, arrValue, index, other, array, stack)
		        : customizer(arrValue, othValue, index, array, other, stack);
		    }
		    if (compared !== undefined) {
		      if (compared) {
		        continue;
		      }
		      result = false;
		      break;
		    }
		    // Recursively compare arrays (susceptible to call stack limits).
		    if (isUnordered) {
		      if (!arraySome(other, function(othValue) {
		            return arrValue === othValue || equalFunc(arrValue, othValue, customizer, bitmask, stack);
		          })) {
		        result = false;
		        break;
		      }
		    } else if (!(arrValue === othValue || equalFunc(arrValue, othValue, customizer, bitmask, stack))) {
		      result = false;
		      break;
		    }
		  }
		  stack['delete'](array);
		  return result;
		}
		
		module.exports = equalArrays;


	/***/ },
	/* 303 */
	/***/ function(module, exports) {

		/**
		 * A specialized version of `_.some` for arrays without support for iteratee
		 * shorthands.
		 *
		 * @private
		 * @param {Array} array The array to iterate over.
		 * @param {Function} predicate The function invoked per iteration.
		 * @returns {boolean} Returns `true` if any element passes the predicate check, else `false`.
		 */
		function arraySome(array, predicate) {
		  var index = -1,
		      length = array.length;
		
		  while (++index < length) {
		    if (predicate(array[index], index, array)) {
		      return true;
		    }
		  }
		  return false;
		}
		
		module.exports = arraySome;


	/***/ },
	/* 304 */
	/***/ function(module, exports, __webpack_require__) {

		var Symbol = __webpack_require__(305),
		    Uint8Array = __webpack_require__(306),
		    equalArrays = __webpack_require__(302),
		    mapToArray = __webpack_require__(307),
		    setToArray = __webpack_require__(277);
		
		/** Used to compose bitmasks for comparison styles. */
		var UNORDERED_COMPARE_FLAG = 1,
		    PARTIAL_COMPARE_FLAG = 2;
		
		/** `Object#toString` result references. */
		var boolTag = '[object Boolean]',
		    dateTag = '[object Date]',
		    errorTag = '[object Error]',
		    mapTag = '[object Map]',
		    numberTag = '[object Number]',
		    regexpTag = '[object RegExp]',
		    setTag = '[object Set]',
		    stringTag = '[object String]',
		    symbolTag = '[object Symbol]';
		
		var arrayBufferTag = '[object ArrayBuffer]';
		
		/** Used to convert symbols to primitives and strings. */
		var symbolProto = Symbol ? Symbol.prototype : undefined,
		    symbolValueOf = symbolProto ? symbolProto.valueOf : undefined;
		
		/**
		 * A specialized version of `baseIsEqualDeep` for comparing objects of
		 * the same `toStringTag`.
		 *
		 * **Note:** This function only supports comparing values with tags of
		 * `Boolean`, `Date`, `Error`, `Number`, `RegExp`, or `String`.
		 *
		 * @private
		 * @param {Object} object The object to compare.
		 * @param {Object} other The other object to compare.
		 * @param {string} tag The `toStringTag` of the objects to compare.
		 * @param {Function} equalFunc The function to determine equivalents of values.
		 * @param {Function} customizer The function to customize comparisons.
		 * @param {number} bitmask The bitmask of comparison flags. See `baseIsEqual` for more details.
		 * @param {Object} stack Tracks traversed `object` and `other` objects.
		 * @returns {boolean} Returns `true` if the objects are equivalent, else `false`.
		 */
		function equalByTag(object, other, tag, equalFunc, customizer, bitmask, stack) {
		  switch (tag) {
		    case arrayBufferTag:
		      if ((object.byteLength != other.byteLength) ||
		          !equalFunc(new Uint8Array(object), new Uint8Array(other))) {
		        return false;
		      }
		      return true;
		
		    case boolTag:
		    case dateTag:
		      // Coerce dates and booleans to numbers, dates to milliseconds and booleans
		      // to `1` or `0` treating invalid dates coerced to `NaN` as not equal.
		      return +object == +other;
		
		    case errorTag:
		      return object.name == other.name && object.message == other.message;
		
		    case numberTag:
		      // Treat `NaN` vs. `NaN` as equal.
		      return (object != +object) ? other != +other : object == +other;
		
		    case regexpTag:
		    case stringTag:
		      // Coerce regexes to strings and treat strings primitives and string
		      // objects as equal. See https://es5.github.io/#x15.10.6.4 for more details.
		      return object == (other + '');
		
		    case mapTag:
		      var convert = mapToArray;
		
		    case setTag:
		      var isPartial = bitmask & PARTIAL_COMPARE_FLAG;
		      convert || (convert = setToArray);
		
		      if (object.size != other.size && !isPartial) {
		        return false;
		      }
		      // Assume cyclic values are equal.
		      var stacked = stack.get(object);
		      if (stacked) {
		        return stacked == other;
		      }
		      // Recursively compare objects (susceptible to call stack limits).
		      return equalArrays(convert(object), convert(other), equalFunc, customizer, bitmask | UNORDERED_COMPARE_FLAG, stack.set(object, other));
		
		    case symbolTag:
		      if (symbolValueOf) {
		        return symbolValueOf.call(object) == symbolValueOf.call(other);
		      }
		  }
		  return false;
		}
		
		module.exports = equalByTag;


	/***/ },
	/* 305 */
	/***/ function(module, exports, __webpack_require__) {

		var root = __webpack_require__(197);
		
		/** Built-in value references. */
		var Symbol = root.Symbol;
		
		module.exports = Symbol;


	/***/ },
	/* 306 */
	/***/ function(module, exports, __webpack_require__) {

		var root = __webpack_require__(197);
		
		/** Built-in value references. */
		var Uint8Array = root.Uint8Array;
		
		module.exports = Uint8Array;


	/***/ },
	/* 307 */
	/***/ function(module, exports) {

		/**
		 * Converts `map` to an array.
		 *
		 * @private
		 * @param {Object} map The map to convert.
		 * @returns {Array} Returns the converted array.
		 */
		function mapToArray(map) {
		  var index = -1,
		      result = Array(map.size);
		
		  map.forEach(function(value, key) {
		    result[++index] = [key, value];
		  });
		  return result;
		}
		
		module.exports = mapToArray;


	/***/ },
	/* 308 */
	/***/ function(module, exports, __webpack_require__) {

		var baseHas = __webpack_require__(222),
		    keys = __webpack_require__(221);
		
		/** Used to compose bitmasks for comparison styles. */
		var PARTIAL_COMPARE_FLAG = 2;
		
		/**
		 * A specialized version of `baseIsEqualDeep` for objects with support for
		 * partial deep comparisons.
		 *
		 * @private
		 * @param {Object} object The object to compare.
		 * @param {Object} other The other object to compare.
		 * @param {Function} equalFunc The function to determine equivalents of values.
		 * @param {Function} customizer The function to customize comparisons.
		 * @param {number} bitmask The bitmask of comparison flags. See `baseIsEqual` for more details.
		 * @param {Object} stack Tracks traversed `object` and `other` objects.
		 * @returns {boolean} Returns `true` if the objects are equivalent, else `false`.
		 */
		function equalObjects(object, other, equalFunc, customizer, bitmask, stack) {
		  var isPartial = bitmask & PARTIAL_COMPARE_FLAG,
		      objProps = keys(object),
		      objLength = objProps.length,
		      othProps = keys(other),
		      othLength = othProps.length;
		
		  if (objLength != othLength && !isPartial) {
		    return false;
		  }
		  var index = objLength;
		  while (index--) {
		    var key = objProps[index];
		    if (!(isPartial ? key in other : baseHas(other, key))) {
		      return false;
		    }
		  }
		  // Assume cyclic values are equal.
		  var stacked = stack.get(object);
		  if (stacked) {
		    return stacked == other;
		  }
		  var result = true;
		  stack.set(object, other);
		
		  var skipCtor = isPartial;
		  while (++index < objLength) {
		    key = objProps[index];
		    var objValue = object[key],
		        othValue = other[key];
		
		    if (customizer) {
		      var compared = isPartial
		        ? customizer(othValue, objValue, key, other, object, stack)
		        : customizer(objValue, othValue, key, object, other, stack);
		    }
		    // Recursively compare objects (susceptible to call stack limits).
		    if (!(compared === undefined
		          ? (objValue === othValue || equalFunc(objValue, othValue, customizer, bitmask, stack))
		          : compared
		        )) {
		      result = false;
		      break;
		    }
		    skipCtor || (skipCtor = key == 'constructor');
		  }
		  if (result && !skipCtor) {
		    var objCtor = object.constructor,
		        othCtor = other.constructor;
		
		    // Non `Object` object instances with different constructors are not equal.
		    if (objCtor != othCtor &&
		        ('constructor' in object && 'constructor' in other) &&
		        !(typeof objCtor == 'function' && objCtor instanceof objCtor &&
		          typeof othCtor == 'function' && othCtor instanceof othCtor)) {
		      result = false;
		    }
		  }
		  stack['delete'](object);
		  return result;
		}
		
		module.exports = equalObjects;


	/***/ },
	/* 309 */
	/***/ function(module, exports, __webpack_require__) {

		var Map = __webpack_require__(234),
		    Set = __webpack_require__(275),
		    WeakMap = __webpack_require__(310);
		
		/** `Object#toString` result references. */
		var mapTag = '[object Map]',
		    objectTag = '[object Object]',
		    setTag = '[object Set]',
		    weakMapTag = '[object WeakMap]';
		
		/** Used for built-in method references. */
		var objectProto = Object.prototype;
		
		/** Used to resolve the decompiled source of functions. */
		var funcToString = Function.prototype.toString;
		
		/**
		 * Used to resolve the [`toStringTag`](http://ecma-international.org/ecma-262/6.0/#sec-object.prototype.tostring)
		 * of values.
		 */
		var objectToString = objectProto.toString;
		
		/** Used to detect maps, sets, and weakmaps. */
		var mapCtorString = Map ? funcToString.call(Map) : '',
		    setCtorString = Set ? funcToString.call(Set) : '',
		    weakMapCtorString = WeakMap ? funcToString.call(WeakMap) : '';
		
		/**
		 * Gets the `toStringTag` of `value`.
		 *
		 * @private
		 * @param {*} value The value to query.
		 * @returns {string} Returns the `toStringTag`.
		 */
		function getTag(value) {
		  return objectToString.call(value);
		}
		
		// Fallback for IE 11 providing `toStringTag` values for maps, sets, and weakmaps.
		if ((Map && getTag(new Map) != mapTag) ||
		    (Set && getTag(new Set) != setTag) ||
		    (WeakMap && getTag(new WeakMap) != weakMapTag)) {
		  getTag = function(value) {
		    var result = objectToString.call(value),
		        Ctor = result == objectTag ? value.constructor : null,
		        ctorString = typeof Ctor == 'function' ? funcToString.call(Ctor) : '';
		
		    if (ctorString) {
		      switch (ctorString) {
		        case mapCtorString: return mapTag;
		        case setCtorString: return setTag;
		        case weakMapCtorString: return weakMapTag;
		      }
		    }
		    return result;
		  };
		}
		
		module.exports = getTag;


	/***/ },
	/* 310 */
	/***/ function(module, exports, __webpack_require__) {

		var getNative = __webpack_require__(231),
		    root = __webpack_require__(197);
		
		/* Built-in method references that are verified to be native. */
		var WeakMap = getNative(root, 'WeakMap');
		
		module.exports = WeakMap;


	/***/ },
	/* 311 */
	/***/ function(module, exports, __webpack_require__) {

		var isLength = __webpack_require__(189),
		    isObjectLike = __webpack_require__(204);
		
		/** `Object#toString` result references. */
		var argsTag = '[object Arguments]',
		    arrayTag = '[object Array]',
		    boolTag = '[object Boolean]',
		    dateTag = '[object Date]',
		    errorTag = '[object Error]',
		    funcTag = '[object Function]',
		    mapTag = '[object Map]',
		    numberTag = '[object Number]',
		    objectTag = '[object Object]',
		    regexpTag = '[object RegExp]',
		    setTag = '[object Set]',
		    stringTag = '[object String]',
		    weakMapTag = '[object WeakMap]';
		
		var arrayBufferTag = '[object ArrayBuffer]',
		    float32Tag = '[object Float32Array]',
		    float64Tag = '[object Float64Array]',
		    int8Tag = '[object Int8Array]',
		    int16Tag = '[object Int16Array]',
		    int32Tag = '[object Int32Array]',
		    uint8Tag = '[object Uint8Array]',
		    uint8ClampedTag = '[object Uint8ClampedArray]',
		    uint16Tag = '[object Uint16Array]',
		    uint32Tag = '[object Uint32Array]';
		
		/** Used to identify `toStringTag` values of typed arrays. */
		var typedArrayTags = {};
		typedArrayTags[float32Tag] = typedArrayTags[float64Tag] =
		typedArrayTags[int8Tag] = typedArrayTags[int16Tag] =
		typedArrayTags[int32Tag] = typedArrayTags[uint8Tag] =
		typedArrayTags[uint8ClampedTag] = typedArrayTags[uint16Tag] =
		typedArrayTags[uint32Tag] = true;
		typedArrayTags[argsTag] = typedArrayTags[arrayTag] =
		typedArrayTags[arrayBufferTag] = typedArrayTags[boolTag] =
		typedArrayTags[dateTag] = typedArrayTags[errorTag] =
		typedArrayTags[funcTag] = typedArrayTags[mapTag] =
		typedArrayTags[numberTag] = typedArrayTags[objectTag] =
		typedArrayTags[regexpTag] = typedArrayTags[setTag] =
		typedArrayTags[stringTag] = typedArrayTags[weakMapTag] = false;
		
		/** Used for built-in method references. */
		var objectProto = Object.prototype;
		
		/**
		 * Used to resolve the [`toStringTag`](http://ecma-international.org/ecma-262/6.0/#sec-object.prototype.tostring)
		 * of values.
		 */
		var objectToString = objectProto.toString;
		
		/**
		 * Checks if `value` is classified as a typed array.
		 *
		 * @static
		 * @memberOf _
		 * @category Lang
		 * @param {*} value The value to check.
		 * @returns {boolean} Returns `true` if `value` is correctly classified, else `false`.
		 * @example
		 *
		 * _.isTypedArray(new Uint8Array);
		 * // => true
		 *
		 * _.isTypedArray([]);
		 * // => false
		 */
		function isTypedArray(value) {
		  return isObjectLike(value) &&
		    isLength(value.length) && !!typedArrayTags[objectToString.call(value)];
		}
		
		module.exports = isTypedArray;


	/***/ },
	/* 312 */
	/***/ function(module, exports, __webpack_require__) {

		var isStrictComparable = __webpack_require__(313),
		    toPairs = __webpack_require__(314);
		
		/**
		 * Gets the property names, values, and compare flags of `object`.
		 *
		 * @private
		 * @param {Object} object The object to query.
		 * @returns {Array} Returns the match data of `object`.
		 */
		function getMatchData(object) {
		  var result = toPairs(object),
		      length = result.length;
		
		  while (length--) {
		    result[length][2] = isStrictComparable(result[length][1]);
		  }
		  return result;
		}
		
		module.exports = getMatchData;


	/***/ },
	/* 313 */
	/***/ function(module, exports, __webpack_require__) {

		var isObject = __webpack_require__(188);
		
		/**
		 * Checks if `value` is suitable for strict equality comparisons, i.e. `===`.
		 *
		 * @private
		 * @param {*} value The value to check.
		 * @returns {boolean} Returns `true` if `value` if suitable for strict
		 *  equality comparisons, else `false`.
		 */
		function isStrictComparable(value) {
		  return value === value && !isObject(value);
		}
		
		module.exports = isStrictComparable;


	/***/ },
	/* 314 */
	/***/ function(module, exports, __webpack_require__) {

		var baseToPairs = __webpack_require__(315),
		    keys = __webpack_require__(221);
		
		/**
		 * Creates an array of own enumerable key-value pairs for `object` which
		 * can be consumed by `_.fromPairs`.
		 *
		 * @static
		 * @memberOf _
		 * @category Object
		 * @param {Object} object The object to query.
		 * @returns {Array} Returns the new array of key-value pairs.
		 * @example
		 *
		 * function Foo() {
		 *   this.a = 1;
		 *   this.b = 2;
		 * }
		 *
		 * Foo.prototype.c = 3;
		 *
		 * _.toPairs(new Foo);
		 * // => [['a', 1], ['b', 2]] (iteration order is not guaranteed)
		 */
		function toPairs(object) {
		  return baseToPairs(object, keys(object));
		}
		
		module.exports = toPairs;


	/***/ },
	/* 315 */
	/***/ function(module, exports, __webpack_require__) {

		var arrayMap = __webpack_require__(220);
		
		/**
		 * The base implementation of `_.toPairs` and `_.toPairsIn` which creates an array
		 * of key-value pairs for `object` corresponding to the property names of `props`.
		 *
		 * @private
		 * @param {Object} object The object to query.
		 * @param {Array} props The property names to get values for.
		 * @returns {Object} Returns the new array of key-value pairs.
		 */
		function baseToPairs(object, props) {
		  return arrayMap(props, function(key) {
		    return [key, object[key]];
		  });
		}
		
		module.exports = baseToPairs;


	/***/ },
	/* 316 */
	/***/ function(module, exports, __webpack_require__) {

		var baseIsEqual = __webpack_require__(300),
		    get = __webpack_require__(317),
		    hasIn = __webpack_require__(324);
		
		/** Used to compose bitmasks for comparison styles. */
		var UNORDERED_COMPARE_FLAG = 1,
		    PARTIAL_COMPARE_FLAG = 2;
		
		/**
		 * The base implementation of `_.matchesProperty` which doesn't clone `srcValue`.
		 *
		 * @private
		 * @param {string} path The path of the property to get.
		 * @param {*} srcValue The value to match.
		 * @returns {Function} Returns the new function.
		 */
		function baseMatchesProperty(path, srcValue) {
		  return function(object) {
		    var objValue = get(object, path);
		    return (objValue === undefined && objValue === srcValue)
		      ? hasIn(object, path)
		      : baseIsEqual(srcValue, objValue, undefined, UNORDERED_COMPARE_FLAG | PARTIAL_COMPARE_FLAG);
		  };
		}
		
		module.exports = baseMatchesProperty;


	/***/ },
	/* 317 */
	/***/ function(module, exports, __webpack_require__) {

		var baseGet = __webpack_require__(318);
		
		/**
		 * Gets the value at `path` of `object`. If the resolved value is
		 * `undefined` the `defaultValue` is used in its place.
		 *
		 * @static
		 * @memberOf _
		 * @category Object
		 * @param {Object} object The object to query.
		 * @param {Array|string} path The path of the property to get.
		 * @param {*} [defaultValue] The value returned if the resolved value is `undefined`.
		 * @returns {*} Returns the resolved value.
		 * @example
		 *
		 * var object = { 'a': [{ 'b': { 'c': 3 } }] };
		 *
		 * _.get(object, 'a[0].b.c');
		 * // => 3
		 *
		 * _.get(object, ['a', '0', 'b', 'c']);
		 * // => 3
		 *
		 * _.get(object, 'a.b.c', 'default');
		 * // => 'default'
		 */
		function get(object, path, defaultValue) {
		  var result = object == null ? undefined : baseGet(object, path);
		  return result === undefined ? defaultValue : result;
		}
		
		module.exports = get;


	/***/ },
	/* 318 */
	/***/ function(module, exports, __webpack_require__) {

		var baseCastPath = __webpack_require__(319),
		    isKey = __webpack_require__(323);
		
		/**
		 * The base implementation of `_.get` without support for default values.
		 *
		 * @private
		 * @param {Object} object The object to query.
		 * @param {Array|string} path The path of the property to get.
		 * @returns {*} Returns the resolved value.
		 */
		function baseGet(object, path) {
		  path = isKey(path, object) ? [path + ''] : baseCastPath(path);
		
		  var index = 0,
		      length = path.length;
		
		  while (object != null && index < length) {
		    object = object[path[index++]];
		  }
		  return (index && index == length) ? object : undefined;
		}
		
		module.exports = baseGet;


	/***/ },
	/* 319 */
	/***/ function(module, exports, __webpack_require__) {

		var isArray = __webpack_require__(205),
		    stringToPath = __webpack_require__(320);
		
		/**
		 * Casts `value` to a path array if it's not one.
		 *
		 * @private
		 * @param {*} value The value to inspect.
		 * @returns {Array} Returns the cast property path array.
		 */
		function baseCastPath(value) {
		  return isArray(value) ? value : stringToPath(value);
		}
		
		module.exports = baseCastPath;


	/***/ },
	/* 320 */
	/***/ function(module, exports, __webpack_require__) {

		var toString = __webpack_require__(321);
		
		/** Used to match property names within property paths. */
		var rePropName = /[^.[\]]+|\[(?:(-?\d+(?:\.\d+)?)|(["'])((?:(?!\2)[^\\]|\\.)*?)\2)\]/g;
		
		/** Used to match backslashes in property paths. */
		var reEscapeChar = /\\(\\)?/g;
		
		/**
		 * Converts `string` to a property path array.
		 *
		 * @private
		 * @param {string} string The string to convert.
		 * @returns {Array} Returns the property path array.
		 */
		function stringToPath(string) {
		  var result = [];
		  toString(string).replace(rePropName, function(match, number, quote, string) {
		    result.push(quote ? string.replace(reEscapeChar, '$1') : (number || match));
		  });
		  return result;
		}
		
		module.exports = stringToPath;


	/***/ },
	/* 321 */
	/***/ function(module, exports, __webpack_require__) {

		var Symbol = __webpack_require__(305),
		    isSymbol = __webpack_require__(322);
		
		/** Used as references for various `Number` constants. */
		var INFINITY = 1 / 0;
		
		/** Used to convert symbols to primitives and strings. */
		var symbolProto = Symbol ? Symbol.prototype : undefined,
		    symbolToString = symbolProto ? symbolProto.toString : undefined;
		
		/**
		 * Converts `value` to a string if it's not one. An empty string is returned
		 * for `null` and `undefined` values. The sign of `-0` is preserved.
		 *
		 * @static
		 * @memberOf _
		 * @category Lang
		 * @param {*} value The value to process.
		 * @returns {string} Returns the string.
		 * @example
		 *
		 * _.toString(null);
		 * // => ''
		 *
		 * _.toString(-0);
		 * // => '-0'
		 *
		 * _.toString([1, 2, 3]);
		 * // => '1,2,3'
		 */
		function toString(value) {
		  // Exit early for strings to avoid a performance hit in some environments.
		  if (typeof value == 'string') {
		    return value;
		  }
		  if (value == null) {
		    return '';
		  }
		  if (isSymbol(value)) {
		    return symbolToString ? symbolToString.call(value) : '';
		  }
		  var result = (value + '');
		  return (result == '0' && (1 / value) == -INFINITY) ? '-0' : result;
		}
		
		module.exports = toString;


	/***/ },
	/* 322 */
	/***/ function(module, exports, __webpack_require__) {

		var isObjectLike = __webpack_require__(204);
		
		/** `Object#toString` result references. */
		var symbolTag = '[object Symbol]';
		
		/** Used for built-in method references. */
		var objectProto = Object.prototype;
		
		/**
		 * Used to resolve the [`toStringTag`](http://ecma-international.org/ecma-262/6.0/#sec-object.prototype.tostring)
		 * of values.
		 */
		var objectToString = objectProto.toString;
		
		/**
		 * Checks if `value` is classified as a `Symbol` primitive or object.
		 *
		 * @static
		 * @memberOf _
		 * @category Lang
		 * @param {*} value The value to check.
		 * @returns {boolean} Returns `true` if `value` is correctly classified, else `false`.
		 * @example
		 *
		 * _.isSymbol(Symbol.iterator);
		 * // => true
		 *
		 * _.isSymbol('abc');
		 * // => false
		 */
		function isSymbol(value) {
		  return typeof value == 'symbol' ||
		    (isObjectLike(value) && objectToString.call(value) == symbolTag);
		}
		
		module.exports = isSymbol;


	/***/ },
	/* 323 */
	/***/ function(module, exports, __webpack_require__) {

		var isArray = __webpack_require__(205);
		
		/** Used to match property names within property paths. */
		var reIsDeepProp = /\.|\[(?:[^[\]]*|(["'])(?:(?!\1)[^\\]|\\.)*?\1)\]/,
		    reIsPlainProp = /^\w*$/;
		
		/**
		 * Checks if `value` is a property name and not a property path.
		 *
		 * @private
		 * @param {*} value The value to check.
		 * @param {Object} [object] The object to query keys on.
		 * @returns {boolean} Returns `true` if `value` is a property name, else `false`.
		 */
		function isKey(value, object) {
		  if (typeof value == 'number') {
		    return true;
		  }
		  return !isArray(value) &&
		    (reIsPlainProp.test(value) || !reIsDeepProp.test(value) ||
		      (object != null && value in Object(object)));
		}
		
		module.exports = isKey;


	/***/ },
	/* 324 */
	/***/ function(module, exports, __webpack_require__) {

		var baseHasIn = __webpack_require__(325),
		    hasPath = __webpack_require__(326);
		
		/**
		 * Checks if `path` is a direct or inherited property of `object`.
		 *
		 * @static
		 * @memberOf _
		 * @category Object
		 * @param {Object} object The object to query.
		 * @param {Array|string} path The path to check.
		 * @returns {boolean} Returns `true` if `path` exists, else `false`.
		 * @example
		 *
		 * var object = _.create({ 'a': _.create({ 'b': _.create({ 'c': 3 }) }) });
		 *
		 * _.hasIn(object, 'a');
		 * // => true
		 *
		 * _.hasIn(object, 'a.b.c');
		 * // => true
		 *
		 * _.hasIn(object, ['a', 'b', 'c']);
		 * // => true
		 *
		 * _.hasIn(object, 'b');
		 * // => false
		 */
		function hasIn(object, path) {
		  return hasPath(object, path, baseHasIn);
		}
		
		module.exports = hasIn;


	/***/ },
	/* 325 */
	/***/ function(module, exports) {

		/**
		 * The base implementation of `_.hasIn` without support for deep paths.
		 *
		 * @private
		 * @param {Object} object The object to query.
		 * @param {Array|string} key The key to check.
		 * @returns {boolean} Returns `true` if `key` exists, else `false`.
		 */
		function baseHasIn(object, key) {
		  return key in Object(object);
		}
		
		module.exports = baseHasIn;


	/***/ },
	/* 326 */
	/***/ function(module, exports, __webpack_require__) {

		var baseCastPath = __webpack_require__(319),
		    isArguments = __webpack_require__(202),
		    isArray = __webpack_require__(205),
		    isIndex = __webpack_require__(190),
		    isKey = __webpack_require__(323),
		    isLength = __webpack_require__(189),
		    isString = __webpack_require__(206),
		    last = __webpack_require__(327),
		    parent = __webpack_require__(328);
		
		/**
		 * Checks if `path` exists on `object`.
		 *
		 * @private
		 * @param {Object} object The object to query.
		 * @param {Array|string} path The path to check.
		 * @param {Function} hasFunc The function to check properties.
		 * @returns {boolean} Returns `true` if `path` exists, else `false`.
		 */
		function hasPath(object, path, hasFunc) {
		  if (object == null) {
		    return false;
		  }
		  var result = hasFunc(object, path);
		  if (!result && !isKey(path)) {
		    path = baseCastPath(path);
		    object = parent(object, path);
		    if (object != null) {
		      path = last(path);
		      result = hasFunc(object, path);
		    }
		  }
		  var length = object ? object.length : undefined;
		  return result || (
		    !!length && isLength(length) && isIndex(path, length) &&
		    (isArray(object) || isString(object) || isArguments(object))
		  );
		}
		
		module.exports = hasPath;


	/***/ },
	/* 327 */
	/***/ function(module, exports) {

		/**
		 * Gets the last element of `array`.
		 *
		 * @static
		 * @memberOf _
		 * @category Array
		 * @param {Array} array The array to query.
		 * @returns {*} Returns the last element of `array`.
		 * @example
		 *
		 * _.last([1, 2, 3]);
		 * // => 3
		 */
		function last(array) {
		  var length = array ? array.length : 0;
		  return length ? array[length - 1] : undefined;
		}
		
		module.exports = last;


	/***/ },
	/* 328 */
	/***/ function(module, exports, __webpack_require__) {

		var baseSlice = __webpack_require__(329),
		    get = __webpack_require__(317);
		
		/**
		 * Gets the parent value at `path` of `object`.
		 *
		 * @private
		 * @param {Object} object The object to query.
		 * @param {Array} path The path to get the parent value of.
		 * @returns {*} Returns the parent value.
		 */
		function parent(object, path) {
		  return path.length == 1 ? object : get(object, baseSlice(path, 0, -1));
		}
		
		module.exports = parent;


	/***/ },
	/* 329 */
	/***/ function(module, exports) {

		/**
		 * The base implementation of `_.slice` without an iteratee call guard.
		 *
		 * @private
		 * @param {Array} array The array to slice.
		 * @param {number} [start=0] The start position.
		 * @param {number} [end=array.length] The end position.
		 * @returns {Array} Returns the slice of `array`.
		 */
		function baseSlice(array, start, end) {
		  var index = -1,
		      length = array.length;
		
		  if (start < 0) {
		    start = -start > length ? 0 : (length + start);
		  }
		  end = end > length ? length : end;
		  if (end < 0) {
		    end += length;
		  }
		  length = start > end ? 0 : ((end - start) >>> 0);
		  start >>>= 0;
		
		  var result = Array(length);
		  while (++index < length) {
		    result[index] = array[index + start];
		  }
		  return result;
		}
		
		module.exports = baseSlice;


	/***/ },
	/* 330 */
	/***/ function(module, exports, __webpack_require__) {

		var baseProperty = __webpack_require__(186),
		    basePropertyDeep = __webpack_require__(331),
		    isKey = __webpack_require__(323);
		
		/**
		 * Creates a function that returns the value at `path` of a given object.
		 *
		 * @static
		 * @memberOf _
		 * @category Util
		 * @param {Array|string} path The path of the property to get.
		 * @returns {Function} Returns the new function.
		 * @example
		 *
		 * var objects = [
		 *   { 'a': { 'b': { 'c': 2 } } },
		 *   { 'a': { 'b': { 'c': 1 } } }
		 * ];
		 *
		 * _.map(objects, _.property('a.b.c'));
		 * // => [2, 1]
		 *
		 * _.map(_.sortBy(objects, _.property(['a', 'b', 'c'])), 'a.b.c');
		 * // => [1, 2]
		 */
		function property(path) {
		  return isKey(path) ? baseProperty(path) : basePropertyDeep(path);
		}
		
		module.exports = property;


	/***/ },
	/* 331 */
	/***/ function(module, exports, __webpack_require__) {

		var baseGet = __webpack_require__(318);
		
		/**
		 * A specialized version of `baseProperty` which supports deep paths.
		 *
		 * @private
		 * @param {Array|string} path The path of the property to get.
		 * @returns {Function} Returns the new function.
		 */
		function basePropertyDeep(path) {
		  return function(object) {
		    return baseGet(object, path);
		  };
		}
		
		module.exports = basePropertyDeep;


	/***/ },
	/* 332 */
	/***/ function(module, exports, __webpack_require__) {

		var baseEach = __webpack_require__(333),
		    isArrayLike = __webpack_require__(184);
		
		/**
		 * The base implementation of `_.map` without support for iteratee shorthands.
		 *
		 * @private
		 * @param {Array|Object} collection The collection to iterate over.
		 * @param {Function} iteratee The function invoked per iteration.
		 * @returns {Array} Returns the new mapped array.
		 */
		function baseMap(collection, iteratee) {
		  var index = -1,
		      result = isArrayLike(collection) ? Array(collection.length) : [];
		
		  baseEach(collection, function(value, key, collection) {
		    result[++index] = iteratee(value, key, collection);
		  });
		  return result;
		}
		
		module.exports = baseMap;


	/***/ },
	/* 333 */
	/***/ function(module, exports, __webpack_require__) {

		var baseForOwn = __webpack_require__(285),
		    createBaseEach = __webpack_require__(334);
		
		/**
		 * The base implementation of `_.forEach` without support for iteratee shorthands.
		 *
		 * @private
		 * @param {Array|Object} collection The collection to iterate over.
		 * @param {Function} iteratee The function invoked per iteration.
		 * @returns {Array|Object} Returns `collection`.
		 */
		var baseEach = createBaseEach(baseForOwn);
		
		module.exports = baseEach;


	/***/ },
	/* 334 */
	/***/ function(module, exports, __webpack_require__) {

		var isArrayLike = __webpack_require__(184);
		
		/**
		 * Creates a `baseEach` or `baseEachRight` function.
		 *
		 * @private
		 * @param {Function} eachFunc The function to iterate over a collection.
		 * @param {boolean} [fromRight] Specify iterating from right to left.
		 * @returns {Function} Returns the new base function.
		 */
		function createBaseEach(eachFunc, fromRight) {
		  return function(collection, iteratee) {
		    if (collection == null) {
		      return collection;
		    }
		    if (!isArrayLike(collection)) {
		      return eachFunc(collection, iteratee);
		    }
		    var length = collection.length,
		        index = fromRight ? length : -1,
		        iterable = Object(collection);
		
		    while ((fromRight ? index-- : ++index < length)) {
		      if (iteratee(iterable[index], index, iterable) === false) {
		        break;
		      }
		    }
		    return collection;
		  };
		}
		
		module.exports = createBaseEach;


	/***/ },
	/* 335 */
	/***/ function(module, exports) {

		/**
		 * The base implementation of `_.sortBy` which uses `comparer` to define the
		 * sort order of `array` and replaces criteria objects with their corresponding
		 * values.
		 *
		 * @private
		 * @param {Array} array The array to sort.
		 * @param {Function} comparer The function to define sort order.
		 * @returns {Array} Returns `array`.
		 */
		function baseSortBy(array, comparer) {
		  var length = array.length;
		
		  array.sort(comparer);
		  while (length--) {
		    array[length] = array[length].value;
		  }
		  return array;
		}
		
		module.exports = baseSortBy;


	/***/ },
	/* 336 */
	/***/ function(module, exports, __webpack_require__) {

		var compareAscending = __webpack_require__(337);
		
		/**
		 * Used by `_.orderBy` to compare multiple properties of a value to another
		 * and stable sort them.
		 *
		 * If `orders` is unspecified, all values are sorted in ascending order. Otherwise,
		 * specify an order of "desc" for descending or "asc" for ascending sort order
		 * of corresponding values.
		 *
		 * @private
		 * @param {Object} object The object to compare.
		 * @param {Object} other The other object to compare.
		 * @param {boolean[]|string[]} orders The order to sort by for each property.
		 * @returns {number} Returns the sort order indicator for `object`.
		 */
		function compareMultiple(object, other, orders) {
		  var index = -1,
		      objCriteria = object.criteria,
		      othCriteria = other.criteria,
		      length = objCriteria.length,
		      ordersLength = orders.length;
		
		  while (++index < length) {
		    var result = compareAscending(objCriteria[index], othCriteria[index]);
		    if (result) {
		      if (index >= ordersLength) {
		        return result;
		      }
		      var order = orders[index];
		      return result * (order == 'desc' ? -1 : 1);
		    }
		  }
		  // Fixes an `Array#sort` bug in the JS engine embedded in Adobe applications
		  // that causes it, under certain circumstances, to provide the same value for
		  // `object` and `other`. See https://github.com/jashkenas/underscore/pull/1247
		  // for more details.
		  //
		  // This also ensures a stable sort in V8 and other engines.
		  // See https://code.google.com/p/v8/issues/detail?id=90 for more details.
		  return object.index - other.index;
		}
		
		module.exports = compareMultiple;


	/***/ },
	/* 337 */
	/***/ function(module, exports) {

		/**
		 * Compares values to sort them in ascending order.
		 *
		 * @private
		 * @param {*} value The value to compare.
		 * @param {*} other The other value to compare.
		 * @returns {number} Returns the sort order indicator for `value`.
		 */
		function compareAscending(value, other) {
		  if (value !== other) {
		    var valIsNull = value === null,
		        valIsUndef = value === undefined,
		        valIsReflexive = value === value;
		
		    var othIsNull = other === null,
		        othIsUndef = other === undefined,
		        othIsReflexive = other === other;
		
		    if ((value > other && !othIsNull) || !valIsReflexive ||
		        (valIsNull && !othIsUndef && othIsReflexive) ||
		        (valIsUndef && othIsReflexive)) {
		      return 1;
		    }
		    if ((value < other && !valIsNull) || !othIsReflexive ||
		        (othIsNull && !valIsUndef && valIsReflexive) ||
		        (othIsUndef && valIsReflexive)) {
		      return -1;
		    }
		  }
		  return 0;
		}
		
		module.exports = compareAscending;


	/***/ },
	/* 338 */
	/***/ function(module, exports, __webpack_require__) {

		"use strict";
		
		Object.defineProperty(exports, "__esModule", {
		  value: true
		});
		
		var _defaults = __webpack_require__(175);
		
		var _defaults2 = _interopRequireDefault(_defaults);
		
		var _uniq = __webpack_require__(272);
		
		var _uniq2 = _interopRequireDefault(_uniq);
		
		var _flatten = __webpack_require__(258);
		
		var _flatten2 = _interopRequireDefault(_flatten);
		
		var _partialRight = __webpack_require__(339);
		
		var _partialRight2 = _interopRequireDefault(_partialRight);
		
		var _react = __webpack_require__(157);
		
		var _react2 = _interopRequireDefault(_react);
		
		var _data = __webpack_require__(271);
		
		var _data2 = _interopRequireDefault(_data);
		
		var _domain = __webpack_require__(270);
		
		var _domain2 = _interopRequireDefault(_domain);
		
		var _victoryCore = __webpack_require__(1);
		
		function _interopRequireDefault(obj) { return obj && obj.__esModule ? obj : { default: obj }; }
		
		function _toConsumableArray(arr) { if (Array.isArray(arr)) { for (var i = 0, arr2 = Array(arr.length); i < arr.length; i++) { arr2[i] = arr[i]; } return arr2; } else { return Array.from(arr); } }
		
		exports.default = {
		  getData: function getData(props) {
		    var childComponents = _react2.default.Children.toArray(props.children);
		    return childComponents.map(function (child) {
		      var getData = child.type.getData || _data2.default.getData;
		      return getData(child.props);
		    });
		  },
		  setAnimationState: function setAnimationState(nextProps) {
		    if (!this.props.animate) {
		      return;
		    }
		    if (this.props.animate.parentState) {
		      var nodesWillExit = this.props.animate.parentState.nodesWillExit;
		      var oldProps = nodesWillExit ? this.props : null;
		      this.setState((0, _defaults2.default)({ oldProps: oldProps }, this.props.animate.parentState));
		    } else {
		      var oldChildren = _react2.default.Children.toArray(this.props.children);
		      var nextChildren = _react2.default.Children.toArray(nextProps.children);
		
		      var _Transitions$getIniti = _victoryCore.Transitions.getInitialTransitionState(oldChildren, nextChildren);
		
		      var _nodesWillExit = _Transitions$getIniti.nodesWillExit;
		      var nodesWillEnter = _Transitions$getIniti.nodesWillEnter;
		      var childrenTransitions = _Transitions$getIniti.childrenTransitions;
		      var nodesShouldEnter = _Transitions$getIniti.nodesShouldEnter;
		
		
		      this.setState({
		        nodesWillExit: _nodesWillExit,
		        nodesWillEnter: nodesWillEnter,
		        childrenTransitions: childrenTransitions,
		        nodesShouldEnter: nodesShouldEnter,
		        oldProps: _nodesWillExit ? this.props : null
		      });
		    }
		  },
		  getAnimationProps: function getAnimationProps(props, child, index) {
		    var _this = this;
		
		    var getFilteredState = function getFilteredState() {
		      var childrenTransitions = _this.state && _this.state.childrenTransitions;
		      childrenTransitions = _victoryCore.Collection.isArrayOfArrays(childrenTransitions) ? childrenTransitions[index] : childrenTransitions;
		      return (0, _defaults2.default)({ childrenTransitions: childrenTransitions }, _this.state);
		    };
		
		    var getTransitions = props.animate && props.animate.getTransitions;
		    var state = getFilteredState();
		    var parentState = props.animate && props.animate.parentState || state;
		    if (!getTransitions) {
		      var getTransitionProps = _victoryCore.Transitions.getTransitionPropsFactory(props, state, function (newState) {
		        return _this.setState(newState);
		      });
		      getTransitions = (0, _partialRight2.default)(getTransitionProps, index);
		    }
		    return (0, _defaults2.default)({ getTransitions: getTransitions, parentState: parentState }, props.animate, child.props.animate);
		  },
		  getDomainFromChildren: function getDomainFromChildren(props, axis) {
		    var childComponents = _react2.default.Children.toArray(props.children);
		    var domain = void 0;
		    if (props.domain && (Array.isArray(props.domain) || props.domain[axis])) {
		      domain = Array.isArray(props.domain) ? props.domain : props.domain[axis];
		    } else {
		      var childDomains = childComponents.reduce(function (prev, component) {
		        var childDomain = component.type.getDomain(component.props, axis);
		        return childDomain ? prev.concat(childDomain) : prev;
		      }, []);
		      domain = childDomains.length === 0 ? [0, 1] : [Math.min.apply(Math, _toConsumableArray(childDomains)), Math.max.apply(Math, _toConsumableArray(childDomains))];
		    }
		    return _domain2.default.padDomain(domain, props, axis);
		  },
		  getStackedDomain: function getStackedDomain(props, axis) {
		    var propsDomain = _domain2.default.getDomainFromProps(props, axis);
		    if (propsDomain) {
		      return _domain2.default.padDomain(propsDomain, props, axis);
		    }
		    var ensureZero = function ensureZero(domain) {
		      return axis === "y" ? [Math.min.apply(Math, _toConsumableArray(domain).concat([0])), Math.max.apply(Math, _toConsumableArray(domain).concat([0]))] : domain;
		    };
		    var childComponents = _react2.default.Children.toArray(props.children);
		    var getData = function getData(child) {
		      return child.type.getData(child.props) || _data2.default.getData(child.props);
		    };
		    var datasets = childComponents.map(function (child) {
		      return child.props.children ? _react2.default.Children.toArray(child.props.children).map(function (ch) {
		        return getData(ch);
		      }) : getData(child);
		    });
		    var dataDomain = ensureZero(_domain2.default.getDomainFromGroupedData(props, axis, datasets));
		    return _domain2.default.padDomain(dataDomain, props, axis);
		  },
		  getColor: function getColor(calculatedProps, index) {
		    // check for styles first
		    var style = calculatedProps.style;
		    var colorScale = calculatedProps.colorScale;
		
		    if (style && style.data && style.data.fill) {
		      return style.data.fill;
		    }
		    var colors = Array.isArray(colorScale) ? colorScale : _victoryCore.Style.getColorScale(colorScale);
		    return colors[index % colors.length];
		  },
		  getChildStyle: function getChildStyle(child, index, calculatedProps) {
		    var style = calculatedProps.style;
		
		    var role = child.type && child.type.role;
		    var defaultFill = role === "group-wrapper" || role === "stack-wrapper" ? undefined : this.getColor(calculatedProps, index);
		    var childStyle = child.props.style || {};
		    var dataStyle = (0, _defaults2.default)({}, childStyle.data, style.data, { fill: defaultFill });
		    var labelsStyle = (0, _defaults2.default)({}, childStyle.labels, style.labels);
		    return {
		      parent: style.parent,
		      data: dataStyle,
		      labels: labelsStyle
		    };
		  },
		  getStringsFromChildren: function getStringsFromChildren(props, axis) {
		    var childComponents = _react2.default.Children.toArray(props.children);
		    var categoryStrings = childComponents.reduce(function (prev, component) {
		      var categoryData = _data2.default.getStringsFromCategories(component.props, axis);
		      return categoryData ? prev.concat(categoryData) : prev;
		    }, []);
		    var dataStrings = childComponents.reduce(function (prev, component) {
		      var stringData = _data2.default.getStringsFromData(component.props, axis);
		      return stringData ? prev.concat(stringData) : prev;
		    }, []);
		    return (0, _uniq2.default)((0, _flatten2.default)([].concat(_toConsumableArray(categoryStrings), _toConsumableArray(dataStrings))));
		  },
		  getCategories: function getCategories(props, axis) {
		    var categories = _data2.default.getCategories(props, axis) || this.getStringsFromChildren(props, axis);
		    return categories.length > 0 ? categories : undefined;
		  },
		  getY0: function getY0(datum, index, calculatedProps) {
		    var datasets = calculatedProps.datasets;
		
		    var y = datum.y;
		    var previousDataSets = datasets.slice(0, index);
		    var previousPoints = previousDataSets.reduce(function (prev, dataset) {
		      return prev.concat(dataset.filter(function (previousDatum) {
		        return datum.x instanceof Date ? previousDatum.x.getTime() === datum.x.getTime() : previousDatum.x === datum.x;
		      }).map(function (previousDatum) {
		        return previousDatum.y || 0;
		      }));
		    }, []);
		    return previousPoints.reduce(function (memo, value) {
		      var sameSign = y < 0 && value < 0 || y >= 0 && value >= 0;
		      return sameSign ? memo + value : memo;
		    }, 0);
		  }
		};

	/***/ },
	/* 339 */
	/***/ function(module, exports, __webpack_require__) {

		var createWrapper = __webpack_require__(340),
		    getPlaceholder = __webpack_require__(364),
		    replaceHolders = __webpack_require__(366),
		    rest = __webpack_require__(191);
		
		/** Used to compose bitmasks for wrapper metadata. */
		var PARTIAL_RIGHT_FLAG = 64;
		
		/**
		 * This method is like `_.partial` except that partially applied arguments
		 * are appended to those provided to the new function.
		 *
		 * The `_.partialRight.placeholder` value, which defaults to `_` in monolithic
		 * builds, may be used as a placeholder for partially applied arguments.
		 *
		 * **Note:** This method doesn't set the "length" property of partially
		 * applied functions.
		 *
		 * @static
		 * @memberOf _
		 * @category Function
		 * @param {Function} func The function to partially apply arguments to.
		 * @param {...*} [partials] The arguments to be partially applied.
		 * @returns {Function} Returns the new partially applied function.
		 * @example
		 *
		 * var greet = function(greeting, name) {
		 *   return greeting + ' ' + name;
		 * };
		 *
		 * var greetFred = _.partialRight(greet, 'fred');
		 * greetFred('hi');
		 * // => 'hi fred'
		 *
		 * // Partially applied with placeholders.
		 * var sayHelloTo = _.partialRight(greet, 'hello', _);
		 * sayHelloTo('fred');
		 * // => 'hello fred'
		 */
		var partialRight = rest(function(func, partials) {
		  var holders = replaceHolders(partials, getPlaceholder(partialRight));
		  return createWrapper(func, PARTIAL_RIGHT_FLAG, undefined, partials, holders);
		});
		
		// Assign default placeholders.
		partialRight.placeholder = {};
		
		module.exports = partialRight;


	/***/ },
	/* 340 */
	/***/ function(module, exports, __webpack_require__) {

		var baseSetData = __webpack_require__(341),
		    createBaseWrapper = __webpack_require__(343),
		    createCurryWrapper = __webpack_require__(346),
		    createHybridWrapper = __webpack_require__(347),
		    createPartialWrapper = __webpack_require__(367),
		    getData = __webpack_require__(356),
		    mergeData = __webpack_require__(368),
		    setData = __webpack_require__(362),
		    toInteger = __webpack_require__(192);
		
		/** Used as the `TypeError` message for "Functions" methods. */
		var FUNC_ERROR_TEXT = 'Expected a function';
		
		/** Used to compose bitmasks for wrapper metadata. */
		var BIND_FLAG = 1,
		    BIND_KEY_FLAG = 2,
		    CURRY_FLAG = 8,
		    CURRY_RIGHT_FLAG = 16,
		    PARTIAL_FLAG = 32,
		    PARTIAL_RIGHT_FLAG = 64;
		
		/* Built-in method references for those with the same name as other `lodash` methods. */
		var nativeMax = Math.max;
		
		/**
		 * Creates a function that either curries or invokes `func` with optional
		 * `this` binding and partially applied arguments.
		 *
		 * @private
		 * @param {Function|string} func The function or method name to wrap.
		 * @param {number} bitmask The bitmask of wrapper flags.
		 *  The bitmask may be composed of the following flags:
		 *     1 - `_.bind`
		 *     2 - `_.bindKey`
		 *     4 - `_.curry` or `_.curryRight` of a bound function
		 *     8 - `_.curry`
		 *    16 - `_.curryRight`
		 *    32 - `_.partial`
		 *    64 - `_.partialRight`
		 *   128 - `_.rearg`
		 *   256 - `_.ary`
		 * @param {*} [thisArg] The `this` binding of `func`.
		 * @param {Array} [partials] The arguments to be partially applied.
		 * @param {Array} [holders] The `partials` placeholder indexes.
		 * @param {Array} [argPos] The argument positions of the new function.
		 * @param {number} [ary] The arity cap of `func`.
		 * @param {number} [arity] The arity of `func`.
		 * @returns {Function} Returns the new wrapped function.
		 */
		function createWrapper(func, bitmask, thisArg, partials, holders, argPos, ary, arity) {
		  var isBindKey = bitmask & BIND_KEY_FLAG;
		  if (!isBindKey && typeof func != 'function') {
		    throw new TypeError(FUNC_ERROR_TEXT);
		  }
		  var length = partials ? partials.length : 0;
		  if (!length) {
		    bitmask &= ~(PARTIAL_FLAG | PARTIAL_RIGHT_FLAG);
		    partials = holders = undefined;
		  }
		  ary = ary === undefined ? ary : nativeMax(toInteger(ary), 0);
		  arity = arity === undefined ? arity : toInteger(arity);
		  length -= holders ? holders.length : 0;
		
		  if (bitmask & PARTIAL_RIGHT_FLAG) {
		    var partialsRight = partials,
		        holdersRight = holders;
		
		    partials = holders = undefined;
		  }
		  var data = isBindKey ? undefined : getData(func);
		
		  var newData = [
		    func, bitmask, thisArg, partials, holders, partialsRight, holdersRight,
		    argPos, ary, arity
		  ];
		
		  if (data) {
		    mergeData(newData, data);
		  }
		  func = newData[0];
		  bitmask = newData[1];
		  thisArg = newData[2];
		  partials = newData[3];
		  holders = newData[4];
		  arity = newData[9] = newData[9] == null
		    ? (isBindKey ? 0 : func.length)
		    : nativeMax(newData[9] - length, 0);
		
		  if (!arity && bitmask & (CURRY_FLAG | CURRY_RIGHT_FLAG)) {
		    bitmask &= ~(CURRY_FLAG | CURRY_RIGHT_FLAG);
		  }
		  if (!bitmask || bitmask == BIND_FLAG) {
		    var result = createBaseWrapper(func, bitmask, thisArg);
		  } else if (bitmask == CURRY_FLAG || bitmask == CURRY_RIGHT_FLAG) {
		    result = createCurryWrapper(func, bitmask, arity);
		  } else if ((bitmask == PARTIAL_FLAG || bitmask == (BIND_FLAG | PARTIAL_FLAG)) && !holders.length) {
		    result = createPartialWrapper(func, bitmask, thisArg, partials);
		  } else {
		    result = createHybridWrapper.apply(undefined, newData);
		  }
		  var setter = data ? baseSetData : setData;
		  return setter(result, newData);
		}
		
		module.exports = createWrapper;


	/***/ },
	/* 341 */
	/***/ function(module, exports, __webpack_require__) {

		var identity = __webpack_require__(288),
		    metaMap = __webpack_require__(342);
		
		/**
		 * The base implementation of `setData` without support for hot loop detection.
		 *
		 * @private
		 * @param {Function} func The function to associate metadata with.
		 * @param {*} data The metadata.
		 * @returns {Function} Returns `func`.
		 */
		var baseSetData = !metaMap ? identity : function(func, data) {
		  metaMap.set(func, data);
		  return func;
		};
		
		module.exports = baseSetData;


	/***/ },
	/* 342 */
	/***/ function(module, exports, __webpack_require__) {

		var WeakMap = __webpack_require__(310);
		
		/** Used to store function metadata. */
		var metaMap = WeakMap && new WeakMap;
		
		module.exports = metaMap;


	/***/ },
	/* 343 */
	/***/ function(module, exports, __webpack_require__) {

		var createCtorWrapper = __webpack_require__(344),
		    root = __webpack_require__(197);
		
		/** Used to compose bitmasks for wrapper metadata. */
		var BIND_FLAG = 1;
		
		/**
		 * Creates a function that wraps `func` to invoke it with the optional `this`
		 * binding of `thisArg`.
		 *
		 * @private
		 * @param {Function} func The function to wrap.
		 * @param {number} bitmask The bitmask of wrapper flags. See `createWrapper` for more details.
		 * @param {*} [thisArg] The `this` binding of `func`.
		 * @returns {Function} Returns the new wrapped function.
		 */
		function createBaseWrapper(func, bitmask, thisArg) {
		  var isBind = bitmask & BIND_FLAG,
		      Ctor = createCtorWrapper(func);
		
		  function wrapper() {
		    var fn = (this && this !== root && this instanceof wrapper) ? Ctor : func;
		    return fn.apply(isBind ? thisArg : this, arguments);
		  }
		  return wrapper;
		}
		
		module.exports = createBaseWrapper;


	/***/ },
	/* 344 */
	/***/ function(module, exports, __webpack_require__) {

		var baseCreate = __webpack_require__(345),
		    isObject = __webpack_require__(188);
		
		/**
		 * Creates a function that produces an instance of `Ctor` regardless of
		 * whether it was invoked as part of a `new` expression or by `call` or `apply`.
		 *
		 * @private
		 * @param {Function} Ctor The constructor to wrap.
		 * @returns {Function} Returns the new wrapped function.
		 */
		function createCtorWrapper(Ctor) {
		  return function() {
		    // Use a `switch` statement to work with class constructors.
		    // See http://ecma-international.org/ecma-262/6.0/#sec-ecmascript-function-objects-call-thisargument-argumentslist
		    // for more details.
		    var args = arguments;
		    switch (args.length) {
		      case 0: return new Ctor;
		      case 1: return new Ctor(args[0]);
		      case 2: return new Ctor(args[0], args[1]);
		      case 3: return new Ctor(args[0], args[1], args[2]);
		      case 4: return new Ctor(args[0], args[1], args[2], args[3]);
		      case 5: return new Ctor(args[0], args[1], args[2], args[3], args[4]);
		      case 6: return new Ctor(args[0], args[1], args[2], args[3], args[4], args[5]);
		      case 7: return new Ctor(args[0], args[1], args[2], args[3], args[4], args[5], args[6]);
		    }
		    var thisBinding = baseCreate(Ctor.prototype),
		        result = Ctor.apply(thisBinding, args);
		
		    // Mimic the constructor's `return` behavior.
		    // See https://es5.github.io/#x13.2.2 for more details.
		    return isObject(result) ? result : thisBinding;
		  };
		}
		
		module.exports = createCtorWrapper;


	/***/ },
	/* 345 */
	/***/ function(module, exports, __webpack_require__) {

		var isObject = __webpack_require__(188);
		
		/** Built-in value references. */
		var objectCreate = Object.create;
		
		/**
		 * The base implementation of `_.create` without support for assigning
		 * properties to the created object.
		 *
		 * @private
		 * @param {Object} prototype The object to inherit from.
		 * @returns {Object} Returns the new object.
		 */
		function baseCreate(proto) {
		  return isObject(proto) ? objectCreate(proto) : {};
		}
		
		module.exports = baseCreate;


	/***/ },
	/* 346 */
	/***/ function(module, exports, __webpack_require__) {

		var apply = __webpack_require__(176),
		    createCtorWrapper = __webpack_require__(344),
		    createHybridWrapper = __webpack_require__(347),
		    createRecurryWrapper = __webpack_require__(351),
		    getPlaceholder = __webpack_require__(364),
		    replaceHolders = __webpack_require__(366),
		    root = __webpack_require__(197);
		
		/**
		 * Creates a function that wraps `func` to enable currying.
		 *
		 * @private
		 * @param {Function} func The function to wrap.
		 * @param {number} bitmask The bitmask of wrapper flags. See `createWrapper` for more details.
		 * @param {number} arity The arity of `func`.
		 * @returns {Function} Returns the new wrapped function.
		 */
		function createCurryWrapper(func, bitmask, arity) {
		  var Ctor = createCtorWrapper(func);
		
		  function wrapper() {
		    var length = arguments.length,
		        args = Array(length),
		        index = length,
		        placeholder = getPlaceholder(wrapper);
		
		    while (index--) {
		      args[index] = arguments[index];
		    }
		    var holders = (length < 3 && args[0] !== placeholder && args[length - 1] !== placeholder)
		      ? []
		      : replaceHolders(args, placeholder);
		
		    length -= holders.length;
		    if (length < arity) {
		      return createRecurryWrapper(
		        func, bitmask, createHybridWrapper, wrapper.placeholder, undefined,
		        args, holders, undefined, undefined, arity - length);
		    }
		    var fn = (this && this !== root && this instanceof wrapper) ? Ctor : func;
		    return apply(fn, this, args);
		  }
		  return wrapper;
		}
		
		module.exports = createCurryWrapper;


	/***/ },
	/* 347 */
	/***/ function(module, exports, __webpack_require__) {

		var composeArgs = __webpack_require__(348),
		    composeArgsRight = __webpack_require__(349),
		    countHolders = __webpack_require__(350),
		    createCtorWrapper = __webpack_require__(344),
		    createRecurryWrapper = __webpack_require__(351),
		    getPlaceholder = __webpack_require__(364),
		    reorder = __webpack_require__(365),
		    replaceHolders = __webpack_require__(366),
		    root = __webpack_require__(197);
		
		/** Used to compose bitmasks for wrapper metadata. */
		var BIND_FLAG = 1,
		    BIND_KEY_FLAG = 2,
		    CURRY_FLAG = 8,
		    CURRY_RIGHT_FLAG = 16,
		    ARY_FLAG = 128,
		    FLIP_FLAG = 512;
		
		/**
		 * Creates a function that wraps `func` to invoke it with optional `this`
		 * binding of `thisArg`, partial application, and currying.
		 *
		 * @private
		 * @param {Function|string} func The function or method name to wrap.
		 * @param {number} bitmask The bitmask of wrapper flags. See `createWrapper` for more details.
		 * @param {*} [thisArg] The `this` binding of `func`.
		 * @param {Array} [partials] The arguments to prepend to those provided to the new function.
		 * @param {Array} [holders] The `partials` placeholder indexes.
		 * @param {Array} [partialsRight] The arguments to append to those provided to the new function.
		 * @param {Array} [holdersRight] The `partialsRight` placeholder indexes.
		 * @param {Array} [argPos] The argument positions of the new function.
		 * @param {number} [ary] The arity cap of `func`.
		 * @param {number} [arity] The arity of `func`.
		 * @returns {Function} Returns the new wrapped function.
		 */
		function createHybridWrapper(func, bitmask, thisArg, partials, holders, partialsRight, holdersRight, argPos, ary, arity) {
		  var isAry = bitmask & ARY_FLAG,
		      isBind = bitmask & BIND_FLAG,
		      isBindKey = bitmask & BIND_KEY_FLAG,
		      isCurried = bitmask & (CURRY_FLAG | CURRY_RIGHT_FLAG),
		      isFlip = bitmask & FLIP_FLAG,
		      Ctor = isBindKey ? undefined : createCtorWrapper(func);
		
		  function wrapper() {
		    var length = arguments.length,
		        index = length,
		        args = Array(length);
		
		    while (index--) {
		      args[index] = arguments[index];
		    }
		    if (isCurried) {
		      var placeholder = getPlaceholder(wrapper),
		          holdersCount = countHolders(args, placeholder);
		    }
		    if (partials) {
		      args = composeArgs(args, partials, holders, isCurried);
		    }
		    if (partialsRight) {
		      args = composeArgsRight(args, partialsRight, holdersRight, isCurried);
		    }
		    length -= holdersCount;
		    if (isCurried && length < arity) {
		      var newHolders = replaceHolders(args, placeholder);
		      return createRecurryWrapper(
		        func, bitmask, createHybridWrapper, wrapper.placeholder, thisArg,
		        args, newHolders, argPos, ary, arity - length
		      );
		    }
		    var thisBinding = isBind ? thisArg : this,
		        fn = isBindKey ? thisBinding[func] : func;
		
		    length = args.length;
		    if (argPos) {
		      args = reorder(args, argPos);
		    } else if (isFlip && length > 1) {
		      args.reverse();
		    }
		    if (isAry && ary < length) {
		      args.length = ary;
		    }
		    if (this && this !== root && this instanceof wrapper) {
		      fn = Ctor || createCtorWrapper(fn);
		    }
		    return fn.apply(thisBinding, args);
		  }
		  return wrapper;
		}
		
		module.exports = createHybridWrapper;


	/***/ },
	/* 348 */
	/***/ function(module, exports) {

		/* Built-in method references for those with the same name as other `lodash` methods. */
		var nativeMax = Math.max;
		
		/**
		 * Creates an array that is the composition of partially applied arguments,
		 * placeholders, and provided arguments into a single array of arguments.
		 *
		 * @private
		 * @param {Array|Object} args The provided arguments.
		 * @param {Array} partials The arguments to prepend to those provided.
		 * @param {Array} holders The `partials` placeholder indexes.
		 * @params {boolean} [isCurried] Specify composing for a curried function.
		 * @returns {Array} Returns the new array of composed arguments.
		 */
		function composeArgs(args, partials, holders, isCurried) {
		  var argsIndex = -1,
		      argsLength = args.length,
		      holdersLength = holders.length,
		      leftIndex = -1,
		      leftLength = partials.length,
		      rangeLength = nativeMax(argsLength - holdersLength, 0),
		      result = Array(leftLength + rangeLength),
		      isUncurried = !isCurried;
		
		  while (++leftIndex < leftLength) {
		    result[leftIndex] = partials[leftIndex];
		  }
		  while (++argsIndex < holdersLength) {
		    if (isUncurried || argsIndex < argsLength) {
		      result[holders[argsIndex]] = args[argsIndex];
		    }
		  }
		  while (rangeLength--) {
		    result[leftIndex++] = args[argsIndex++];
		  }
		  return result;
		}
		
		module.exports = composeArgs;


	/***/ },
	/* 349 */
	/***/ function(module, exports) {

		/* Built-in method references for those with the same name as other `lodash` methods. */
		var nativeMax = Math.max;
		
		/**
		 * This function is like `composeArgs` except that the arguments composition
		 * is tailored for `_.partialRight`.
		 *
		 * @private
		 * @param {Array|Object} args The provided arguments.
		 * @param {Array} partials The arguments to append to those provided.
		 * @param {Array} holders The `partials` placeholder indexes.
		 * @params {boolean} [isCurried] Specify composing for a curried function.
		 * @returns {Array} Returns the new array of composed arguments.
		 */
		function composeArgsRight(args, partials, holders, isCurried) {
		  var argsIndex = -1,
		      argsLength = args.length,
		      holdersIndex = -1,
		      holdersLength = holders.length,
		      rightIndex = -1,
		      rightLength = partials.length,
		      rangeLength = nativeMax(argsLength - holdersLength, 0),
		      result = Array(rangeLength + rightLength),
		      isUncurried = !isCurried;
		
		  while (++argsIndex < rangeLength) {
		    result[argsIndex] = args[argsIndex];
		  }
		  var offset = argsIndex;
		  while (++rightIndex < rightLength) {
		    result[offset + rightIndex] = partials[rightIndex];
		  }
		  while (++holdersIndex < holdersLength) {
		    if (isUncurried || argsIndex < argsLength) {
		      result[offset + holders[holdersIndex]] = args[argsIndex++];
		    }
		  }
		  return result;
		}
		
		module.exports = composeArgsRight;


	/***/ },
	/* 350 */
	/***/ function(module, exports) {

		/**
		 * Gets the number of `placeholder` occurrences in `array`.
		 *
		 * @private
		 * @param {Array} array The array to inspect.
		 * @param {*} placeholder The placeholder to search for.
		 * @returns {number} Returns the placeholder count.
		 */
		function countHolders(array, placeholder) {
		  var length = array.length,
		      result = 0;
		
		  while (length--) {
		    if (array[length] === placeholder) {
		      result++;
		    }
		  }
		  return result;
		}
		
		module.exports = countHolders;


	/***/ },
	/* 351 */
	/***/ function(module, exports, __webpack_require__) {

		var copyArray = __webpack_require__(352),
		    isLaziable = __webpack_require__(353),
		    setData = __webpack_require__(362);
		
		/** Used to compose bitmasks for wrapper metadata. */
		var BIND_FLAG = 1,
		    BIND_KEY_FLAG = 2,
		    CURRY_BOUND_FLAG = 4,
		    CURRY_FLAG = 8,
		    PARTIAL_FLAG = 32,
		    PARTIAL_RIGHT_FLAG = 64;
		
		/**
		 * Creates a function that wraps `func` to continue currying.
		 *
		 * @private
		 * @param {Function} func The function to wrap.
		 * @param {number} bitmask The bitmask of wrapper flags. See `createWrapper` for more details.
		 * @param {Function} wrapFunc The function to create the `func` wrapper.
		 * @param {*} placeholder The placeholder value.
		 * @param {*} [thisArg] The `this` binding of `func`.
		 * @param {Array} [partials] The arguments to prepend to those provided to the new function.
		 * @param {Array} [holders] The `partials` placeholder indexes.
		 * @param {Array} [argPos] The argument positions of the new function.
		 * @param {number} [ary] The arity cap of `func`.
		 * @param {number} [arity] The arity of `func`.
		 * @returns {Function} Returns the new wrapped function.
		 */
		function createRecurryWrapper(func, bitmask, wrapFunc, placeholder, thisArg, partials, holders, argPos, ary, arity) {
		  var isCurry = bitmask & CURRY_FLAG,
		      newArgPos = argPos ? copyArray(argPos) : undefined,
		      newHolders = isCurry ? holders : undefined,
		      newHoldersRight = isCurry ? undefined : holders,
		      newPartials = isCurry ? partials : undefined,
		      newPartialsRight = isCurry ? undefined : partials;
		
		  bitmask |= (isCurry ? PARTIAL_FLAG : PARTIAL_RIGHT_FLAG);
		  bitmask &= ~(isCurry ? PARTIAL_RIGHT_FLAG : PARTIAL_FLAG);
		
		  if (!(bitmask & CURRY_BOUND_FLAG)) {
		    bitmask &= ~(BIND_FLAG | BIND_KEY_FLAG);
		  }
		  var newData = [
		    func, bitmask, thisArg, newPartials, newHolders, newPartialsRight,
		    newHoldersRight, newArgPos, ary, arity
		  ];
		
		  var result = wrapFunc.apply(undefined, newData);
		  if (isLaziable(func)) {
		    setData(result, newData);
		  }
		  result.placeholder = placeholder;
		  return result;
		}
		
		module.exports = createRecurryWrapper;


	/***/ },
	/* 352 */
	/***/ function(module, exports) {

		/**
		 * Copies the values of `source` to `array`.
		 *
		 * @private
		 * @param {Array} source The array to copy values from.
		 * @param {Array} [array=[]] The array to copy values to.
		 * @returns {Array} Returns `array`.
		 */
		function copyArray(source, array) {
		  var index = -1,
		      length = source.length;
		
		  array || (array = Array(length));
		  while (++index < length) {
		    array[index] = source[index];
		  }
		  return array;
		}
		
		module.exports = copyArray;


	/***/ },
	/* 353 */
	/***/ function(module, exports, __webpack_require__) {

		var LazyWrapper = __webpack_require__(354),
		    getData = __webpack_require__(356),
		    getFuncName = __webpack_require__(357),
		    lodash = __webpack_require__(359);
		
		/**
		 * Checks if `func` has a lazy counterpart.
		 *
		 * @private
		 * @param {Function} func The function to check.
		 * @returns {boolean} Returns `true` if `func` has a lazy counterpart, else `false`.
		 */
		function isLaziable(func) {
		  var funcName = getFuncName(func),
		      other = lodash[funcName];
		
		  if (typeof other != 'function' || !(funcName in LazyWrapper.prototype)) {
		    return false;
		  }
		  if (func === other) {
		    return true;
		  }
		  var data = getData(other);
		  return !!data && func === data[0];
		}
		
		module.exports = isLaziable;


	/***/ },
	/* 354 */
	/***/ function(module, exports, __webpack_require__) {

		var baseCreate = __webpack_require__(345),
		    baseLodash = __webpack_require__(355);
		
		/** Used as references for the maximum length and index of an array. */
		var MAX_ARRAY_LENGTH = 4294967295;
		
		/**
		 * Creates a lazy wrapper object which wraps `value` to enable lazy evaluation.
		 *
		 * @private
		 * @constructor
		 * @param {*} value The value to wrap.
		 */
		function LazyWrapper(value) {
		  this.__wrapped__ = value;
		  this.__actions__ = [];
		  this.__dir__ = 1;
		  this.__filtered__ = false;
		  this.__iteratees__ = [];
		  this.__takeCount__ = MAX_ARRAY_LENGTH;
		  this.__views__ = [];
		}
		
		LazyWrapper.prototype = baseCreate(baseLodash.prototype);
		LazyWrapper.prototype.constructor = LazyWrapper;
		
		module.exports = LazyWrapper;


	/***/ },
	/* 355 */
	/***/ function(module, exports) {

		/**
		 * The function whose prototype all chaining wrappers inherit from.
		 *
		 * @private
		 */
		function baseLodash() {
		  // No operation performed.
		}
		
		module.exports = baseLodash;


	/***/ },
	/* 356 */
	/***/ function(module, exports, __webpack_require__) {

		var metaMap = __webpack_require__(342),
		    noop = __webpack_require__(276);
		
		/**
		 * Gets metadata for `func`.
		 *
		 * @private
		 * @param {Function} func The function to query.
		 * @returns {*} Returns the metadata for `func`.
		 */
		var getData = !metaMap ? noop : function(func) {
		  return metaMap.get(func);
		};
		
		module.exports = getData;


	/***/ },
	/* 357 */
	/***/ function(module, exports, __webpack_require__) {

		var realNames = __webpack_require__(358);
		
		/** Used for built-in method references. */
		var objectProto = Object.prototype;
		
		/** Used to check objects for own properties. */
		var hasOwnProperty = objectProto.hasOwnProperty;
		
		/**
		 * Gets the name of `func`.
		 *
		 * @private
		 * @param {Function} func The function to query.
		 * @returns {string} Returns the function name.
		 */
		function getFuncName(func) {
		  var result = (func.name + ''),
		      array = realNames[result],
		      length = hasOwnProperty.call(realNames, result) ? array.length : 0;
		
		  while (length--) {
		    var data = array[length],
		        otherFunc = data.func;
		    if (otherFunc == null || otherFunc == func) {
		      return data.name;
		    }
		  }
		  return result;
		}
		
		module.exports = getFuncName;


	/***/ },
	/* 358 */
	/***/ function(module, exports) {

		/** Used to lookup unminified function names. */
		var realNames = {};
		
		module.exports = realNames;


	/***/ },
	/* 359 */
	/***/ function(module, exports, __webpack_require__) {

		var LazyWrapper = __webpack_require__(354),
		    LodashWrapper = __webpack_require__(360),
		    baseLodash = __webpack_require__(355),
		    isArray = __webpack_require__(205),
		    isObjectLike = __webpack_require__(204),
		    wrapperClone = __webpack_require__(361);
		
		/** Used for built-in method references. */
		var objectProto = Object.prototype;
		
		/** Used to check objects for own properties. */
		var hasOwnProperty = objectProto.hasOwnProperty;
		
		/**
		 * Creates a `lodash` object which wraps `value` to enable implicit method
		 * chaining. Methods that operate on and return arrays, collections, and
		 * functions can be chained together. Methods that retrieve a single value or
		 * may return a primitive value will automatically end the chain sequence and
		 * return the unwrapped value. Otherwise, the value must be unwrapped with
		 * `_#value`.
		 *
		 * Explicit chaining, which must be unwrapped with `_#value` in all cases,
		 * may be enabled using `_.chain`.
		 *
		 * The execution of chained methods is lazy, that is, it's deferred until
		 * `_#value` is implicitly or explicitly called.
		 *
		 * Lazy evaluation allows several methods to support shortcut fusion. Shortcut
		 * fusion is an optimization to merge iteratee calls; this avoids the creation
		 * of intermediate arrays and can greatly reduce the number of iteratee executions.
		 * Sections of a chain sequence qualify for shortcut fusion if the section is
		 * applied to an array of at least two hundred elements and any iteratees
		 * accept only one argument. The heuristic for whether a section qualifies
		 * for shortcut fusion is subject to change.
		 *
		 * Chaining is supported in custom builds as long as the `_#value` method is
		 * directly or indirectly included in the build.
		 *
		 * In addition to lodash methods, wrappers have `Array` and `String` methods.
		 *
		 * The wrapper `Array` methods are:
		 * `concat`, `join`, `pop`, `push`, `shift`, `sort`, `splice`, and `unshift`
		 *
		 * The wrapper `String` methods are:
		 * `replace` and `split`
		 *
		 * The wrapper methods that support shortcut fusion are:
		 * `at`, `compact`, `drop`, `dropRight`, `dropWhile`, `filter`, `find`,
		 * `findLast`, `head`, `initial`, `last`, `map`, `reject`, `reverse`, `slice`,
		 * `tail`, `take`, `takeRight`, `takeRightWhile`, `takeWhile`, and `toArray`
		 *
		 * The chainable wrapper methods are:
		 * `after`, `ary`, `assign`, `assignIn`, `assignInWith`, `assignWith`, `at`,
		 * `before`, `bind`, `bindAll`, `bindKey`, `castArray`, `chain`, `chunk`,
		 * `commit`, `compact`, `concat`, `conforms`, `constant`, `countBy`, `create`,
		 * `curry`, `debounce`, `defaults`, `defaultsDeep`, `defer`, `delay`,
		 * `difference`, `differenceBy`, `differenceWith`, `drop`, `dropRight`,
		 * `dropRightWhile`, `dropWhile`, `extend`, `extendWith`, `fill`, `filter`,
		 * `flatten`, `flattenDeep`, `flattenDepth`, `flip`, `flow`, `flowRight`,
		 * `fromPairs`, `functions`, `functionsIn`, `groupBy`, `initial`, `intersection`,
		 * `intersectionBy`, `intersectionWith`, `invert`, `invertBy`, `invokeMap`,
		 * `iteratee`, `keyBy`, `keys`, `keysIn`, `map`, `mapKeys`, `mapValues`,
		 * `matches`, `matchesProperty`, `memoize`, `merge`, `mergeWith`, `method`,
		 * `methodOf`, `mixin`, `negate`, `nthArg`, `omit`, `omitBy`, `once`, `orderBy`,
		 * `over`, `overArgs`, `overEvery`, `overSome`, `partial`, `partialRight`,
		 * `partition`, `pick`, `pickBy`, `plant`, `property`, `propertyOf`, `pull`,
		 * `pullAll`, `pullAllBy`, `pullAllWith`, `pullAt`, `push`, `range`,
		 * `rangeRight`, `rearg`, `reject`, `remove`, `rest`, `reverse`, `sampleSize`,
		 * `set`, `setWith`, `shuffle`, `slice`, `sort`, `sortBy`, `splice`, `spread`,
		 * `tail`, `take`, `takeRight`, `takeRightWhile`, `takeWhile`, `tap`, `throttle`,
		 * `thru`, `toArray`, `toPairs`, `toPairsIn`, `toPath`, `toPlainObject`,
		 * `transform`, `unary`, `union`, `unionBy`, `unionWith`, `uniq`, `uniqBy`,
		 * `uniqWith`, `unset`, `unshift`, `unzip`, `unzipWith`, `update`, `values`,
		 * `valuesIn`, `without`, `wrap`, `xor`, `xorBy`, `xorWith`, `zip`, `zipObject`,
		 * `zipObjectDeep`, and `zipWith`
		 *
		 * The wrapper methods that are **not** chainable by default are:
		 * `add`, `attempt`, `camelCase`, `capitalize`, `ceil`, `clamp`, `clone`,
		 * `cloneDeep`, `cloneDeepWith`, `cloneWith`, `deburr`, `each`, `eachRight`,
		 * `endsWith`, `eq`, `escape`, `escapeRegExp`, `every`, `find`, `findIndex`,
		 * `findKey`, `findLast`, `findLastIndex`, `findLastKey`, `first`, `floor`,
		 * `forEach`, `forEachRight`, `forIn`, `forInRight`, `forOwn`, `forOwnRight`,
		 * `get`, `gt`, `gte`, `has`, `hasIn`, `head`, `identity`, `includes`,
		 * `indexOf`, `inRange`, `invoke`, `isArguments`, `isArray`, `isArrayBuffer`,
		 * `isArrayLike`, `isArrayLikeObject`, `isBoolean`, `isBuffer`, `isDate`,
		 * `isElement`, `isEmpty`, `isEqual`, `isEqualWith`, `isError`, `isFinite`,
		 * `isFunction`, `isInteger`, `isLength`, `isMap`, `isMatch`, `isMatchWith`,
		 * `isNaN`, `isNative`, `isNil`, `isNull`, `isNumber`, `isObject`, `isObjectLike`,
		 * `isPlainObject`, `isRegExp`, `isSafeInteger`, `isSet`, `isString`,
		 * `isUndefined`, `isTypedArray`, `isWeakMap`, `isWeakSet`, `join`, `kebabCase`,
		 * `last`, `lastIndexOf`, `lowerCase`, `lowerFirst`, `lt`, `lte`, `max`,
		 * `maxBy`, `mean`, `min`, `minBy`, `noConflict`, `noop`, `now`, `pad`,
		 * `padEnd`, `padStart`, `parseInt`, `pop`, `random`, `reduce`, `reduceRight`,
		 * `repeat`, `result`, `round`, `runInContext`, `sample`, `shift`, `size`,
		 * `snakeCase`, `some`, `sortedIndex`, `sortedIndexBy`, `sortedLastIndex`,
		 * `sortedLastIndexBy`, `startCase`, `startsWith`, `subtract`, `sum`, `sumBy`,
		 * `template`, `times`, `toInteger`, `toJSON`, `toLength`, `toLower`,
		 * `toNumber`, `toSafeInteger`, `toString`, `toUpper`, `trim`, `trimEnd`,
		 * `trimStart`, `truncate`, `unescape`, `uniqueId`, `upperCase`, `upperFirst`,
		 * `value`, and `words`
		 *
		 * @name _
		 * @constructor
		 * @category Seq
		 * @param {*} value The value to wrap in a `lodash` instance.
		 * @returns {Object} Returns the new `lodash` wrapper instance.
		 * @example
		 *
		 * function square(n) {
		 *   return n * n;
		 * }
		 *
		 * var wrapped = _([1, 2, 3]);
		 *
		 * // Returns an unwrapped value.
		 * wrapped.reduce(_.add);
		 * // => 6
		 *
		 * // Returns a wrapped value.
		 * var squares = wrapped.map(square);
		 *
		 * _.isArray(squares);
		 * // => false
		 *
		 * _.isArray(squares.value());
		 * // => true
		 */
		function lodash(value) {
		  if (isObjectLike(value) && !isArray(value) && !(value instanceof LazyWrapper)) {
		    if (value instanceof LodashWrapper) {
		      return value;
		    }
		    if (hasOwnProperty.call(value, '__wrapped__')) {
		      return wrapperClone(value);
		    }
		  }
		  return new LodashWrapper(value);
		}
		
		// Ensure wrappers are instances of `baseLodash`.
		lodash.prototype = baseLodash.prototype;
		lodash.prototype.constructor = lodash;
		
		module.exports = lodash;


	/***/ },
	/* 360 */
	/***/ function(module, exports, __webpack_require__) {

		var baseCreate = __webpack_require__(345),
		    baseLodash = __webpack_require__(355);
		
		/**
		 * The base constructor for creating `lodash` wrapper objects.
		 *
		 * @private
		 * @param {*} value The value to wrap.
		 * @param {boolean} [chainAll] Enable chaining for all wrapper methods.
		 */
		function LodashWrapper(value, chainAll) {
		  this.__wrapped__ = value;
		  this.__actions__ = [];
		  this.__chain__ = !!chainAll;
		  this.__index__ = 0;
		  this.__values__ = undefined;
		}
		
		LodashWrapper.prototype = baseCreate(baseLodash.prototype);
		LodashWrapper.prototype.constructor = LodashWrapper;
		
		module.exports = LodashWrapper;


	/***/ },
	/* 361 */
	/***/ function(module, exports, __webpack_require__) {

		var LazyWrapper = __webpack_require__(354),
		    LodashWrapper = __webpack_require__(360),
		    copyArray = __webpack_require__(352);
		
		/**
		 * Creates a clone of `wrapper`.
		 *
		 * @private
		 * @param {Object} wrapper The wrapper to clone.
		 * @returns {Object} Returns the cloned wrapper.
		 */
		function wrapperClone(wrapper) {
		  if (wrapper instanceof LazyWrapper) {
		    return wrapper.clone();
		  }
		  var result = new LodashWrapper(wrapper.__wrapped__, wrapper.__chain__);
		  result.__actions__ = copyArray(wrapper.__actions__);
		  result.__index__  = wrapper.__index__;
		  result.__values__ = wrapper.__values__;
		  return result;
		}
		
		module.exports = wrapperClone;


	/***/ },
	/* 362 */
	/***/ function(module, exports, __webpack_require__) {

		var baseSetData = __webpack_require__(341),
		    now = __webpack_require__(363);
		
		/** Used to detect hot functions by number of calls within a span of milliseconds. */
		var HOT_COUNT = 150,
		    HOT_SPAN = 16;
		
		/**
		 * Sets metadata for `func`.
		 *
		 * **Note:** If this function becomes hot, i.e. is invoked a lot in a short
		 * period of time, it will trip its breaker and transition to an identity function
		 * to avoid garbage collection pauses in V8. See [V8 issue 2070](https://code.google.com/p/v8/issues/detail?id=2070)
		 * for more details.
		 *
		 * @private
		 * @param {Function} func The function to associate metadata with.
		 * @param {*} data The metadata.
		 * @returns {Function} Returns `func`.
		 */
		var setData = (function() {
		  var count = 0,
		      lastCalled = 0;
		
		  return function(key, value) {
		    var stamp = now(),
		        remaining = HOT_SPAN - (stamp - lastCalled);
		
		    lastCalled = stamp;
		    if (remaining > 0) {
		      if (++count >= HOT_COUNT) {
		        return key;
		      }
		    } else {
		      count = 0;
		    }
		    return baseSetData(key, value);
		  };
		}());
		
		module.exports = setData;


	/***/ },
	/* 363 */
	/***/ function(module, exports) {

		/**
		 * Gets the timestamp of the number of milliseconds that have elapsed since
		 * the Unix epoch (1 January 1970 00:00:00 UTC).
		 *
		 * @static
		 * @memberOf _
		 * @type {Function}
		 * @category Date
		 * @returns {number} Returns the timestamp.
		 * @example
		 *
		 * _.defer(function(stamp) {
		 *   console.log(_.now() - stamp);
		 * }, _.now());
		 * // => logs the number of milliseconds it took for the deferred function to be invoked
		 */
		var now = Date.now;
		
		module.exports = now;


	/***/ },
	/* 364 */
	/***/ function(module, exports) {

		/**
		 * Gets the argument placeholder value for `func`.
		 *
		 * @private
		 * @param {Function} func The function to inspect.
		 * @returns {*} Returns the placeholder value.
		 */
		function getPlaceholder(func) {
		  var object = func;
		  return object.placeholder;
		}
		
		module.exports = getPlaceholder;


	/***/ },
	/* 365 */
	/***/ function(module, exports, __webpack_require__) {

		var copyArray = __webpack_require__(352),
		    isIndex = __webpack_require__(190);
		
		/* Built-in method references for those with the same name as other `lodash` methods. */
		var nativeMin = Math.min;
		
		/**
		 * Reorder `array` according to the specified indexes where the element at
		 * the first index is assigned as the first element, the element at
		 * the second index is assigned as the second element, and so on.
		 *
		 * @private
		 * @param {Array} array The array to reorder.
		 * @param {Array} indexes The arranged array indexes.
		 * @returns {Array} Returns `array`.
		 */
		function reorder(array, indexes) {
		  var arrLength = array.length,
		      length = nativeMin(indexes.length, arrLength),
		      oldArray = copyArray(array);
		
		  while (length--) {
		    var index = indexes[length];
		    array[length] = isIndex(index, arrLength) ? oldArray[index] : undefined;
		  }
		  return array;
		}
		
		module.exports = reorder;


	/***/ },
	/* 366 */
	/***/ function(module, exports) {

		/** Used as the internal argument placeholder. */
		var PLACEHOLDER = '__lodash_placeholder__';
		
		/**
		 * Replaces all `placeholder` elements in `array` with an internal placeholder
		 * and returns an array of their indexes.
		 *
		 * @private
		 * @param {Array} array The array to modify.
		 * @param {*} placeholder The placeholder to replace.
		 * @returns {Array} Returns the new array of placeholder indexes.
		 */
		function replaceHolders(array, placeholder) {
		  var index = -1,
		      length = array.length,
		      resIndex = 0,
		      result = [];
		
		  while (++index < length) {
		    var value = array[index];
		    if (value === placeholder || value === PLACEHOLDER) {
		      array[index] = PLACEHOLDER;
		      result[resIndex++] = index;
		    }
		  }
		  return result;
		}
		
		module.exports = replaceHolders;


	/***/ },
	/* 367 */
	/***/ function(module, exports, __webpack_require__) {

		var apply = __webpack_require__(176),
		    createCtorWrapper = __webpack_require__(344),
		    root = __webpack_require__(197);
		
		/** Used to compose bitmasks for wrapper metadata. */
		var BIND_FLAG = 1;
		
		/**
		 * Creates a function that wraps `func` to invoke it with the optional `this`
		 * binding of `thisArg` and the `partials` prepended to those provided to
		 * the wrapper.
		 *
		 * @private
		 * @param {Function} func The function to wrap.
		 * @param {number} bitmask The bitmask of wrapper flags. See `createWrapper` for more details.
		 * @param {*} thisArg The `this` binding of `func`.
		 * @param {Array} partials The arguments to prepend to those provided to the new function.
		 * @returns {Function} Returns the new wrapped function.
		 */
		function createPartialWrapper(func, bitmask, thisArg, partials) {
		  var isBind = bitmask & BIND_FLAG,
		      Ctor = createCtorWrapper(func);
		
		  function wrapper() {
		    var argsIndex = -1,
		        argsLength = arguments.length,
		        leftIndex = -1,
		        leftLength = partials.length,
		        args = Array(leftLength + argsLength),
		        fn = (this && this !== root && this instanceof wrapper) ? Ctor : func;
		
		    while (++leftIndex < leftLength) {
		      args[leftIndex] = partials[leftIndex];
		    }
		    while (argsLength--) {
		      args[leftIndex++] = arguments[++argsIndex];
		    }
		    return apply(fn, isBind ? thisArg : this, args);
		  }
		  return wrapper;
		}
		
		module.exports = createPartialWrapper;


	/***/ },
	/* 368 */
	/***/ function(module, exports, __webpack_require__) {

		var composeArgs = __webpack_require__(348),
		    composeArgsRight = __webpack_require__(349),
		    copyArray = __webpack_require__(352),
		    replaceHolders = __webpack_require__(366);
		
		/** Used as the internal argument placeholder. */
		var PLACEHOLDER = '__lodash_placeholder__';
		
		/** Used to compose bitmasks for wrapper metadata. */
		var BIND_FLAG = 1,
		    BIND_KEY_FLAG = 2,
		    CURRY_BOUND_FLAG = 4,
		    CURRY_FLAG = 8,
		    ARY_FLAG = 128,
		    REARG_FLAG = 256;
		
		/* Built-in method references for those with the same name as other `lodash` methods. */
		var nativeMin = Math.min;
		
		/**
		 * Merges the function metadata of `source` into `data`.
		 *
		 * Merging metadata reduces the number of wrappers used to invoke a function.
		 * This is possible because methods like `_.bind`, `_.curry`, and `_.partial`
		 * may be applied regardless of execution order. Methods like `_.ary` and `_.rearg`
		 * modify function arguments, making the order in which they are executed important,
		 * preventing the merging of metadata. However, we make an exception for a safe
		 * combined case where curried functions have `_.ary` and or `_.rearg` applied.
		 *
		 * @private
		 * @param {Array} data The destination metadata.
		 * @param {Array} source The source metadata.
		 * @returns {Array} Returns `data`.
		 */
		function mergeData(data, source) {
		  var bitmask = data[1],
		      srcBitmask = source[1],
		      newBitmask = bitmask | srcBitmask,
		      isCommon = newBitmask < (BIND_FLAG | BIND_KEY_FLAG | ARY_FLAG);
		
		  var isCombo =
		    ((srcBitmask == ARY_FLAG) && (bitmask == CURRY_FLAG)) ||
		    ((srcBitmask == ARY_FLAG) && (bitmask == REARG_FLAG) && (data[7].length <= source[8])) ||
		    ((srcBitmask == (ARY_FLAG | REARG_FLAG)) && (source[7].length <= source[8]) && (bitmask == CURRY_FLAG));
		
		  // Exit early if metadata can't be merged.
		  if (!(isCommon || isCombo)) {
		    return data;
		  }
		  // Use source `thisArg` if available.
		  if (srcBitmask & BIND_FLAG) {
		    data[2] = source[2];
		    // Set when currying a bound function.
		    newBitmask |= bitmask & BIND_FLAG ? 0 : CURRY_BOUND_FLAG;
		  }
		  // Compose partial arguments.
		  var value = source[3];
		  if (value) {
		    var partials = data[3];
		    data[3] = partials ? composeArgs(partials, value, source[4]) : copyArray(value);
		    data[4] = partials ? replaceHolders(data[3], PLACEHOLDER) : copyArray(source[4]);
		  }
		  // Compose partial right arguments.
		  value = source[5];
		  if (value) {
		    partials = data[5];
		    data[5] = partials ? composeArgsRight(partials, value, source[6]) : copyArray(value);
		    data[6] = partials ? replaceHolders(data[5], PLACEHOLDER) : copyArray(source[6]);
		  }
		  // Use source `argPos` if available.
		  value = source[7];
		  if (value) {
		    data[7] = copyArray(value);
		  }
		  // Use source `ary` if it's smaller.
		  if (srcBitmask & ARY_FLAG) {
		    data[8] = data[8] == null ? source[8] : nativeMin(data[8], source[8]);
		  }
		  // Use source `arity` if one is not provided.
		  if (data[9] == null) {
		    data[9] = source[9];
		  }
		  // Use source `func` and merge bitmasks.
		  data[0] = source[0];
		  data[1] = newBitmask;
		
		  return data;
		}
		
		module.exports = mergeData;


	/***/ },
	/* 369 */
	/***/ function(module, exports, __webpack_require__) {

		"use strict";
		
		Object.defineProperty(exports, "__esModule", {
		  value: true
		});
		
		var _extends = Object.assign || function (target) { for (var i = 1; i < arguments.length; i++) { var source = arguments[i]; for (var key in source) { if (Object.prototype.hasOwnProperty.call(source, key)) { target[key] = source[key]; } } } return target; };
		
		var _createClass = function () { function defineProperties(target, props) { for (var i = 0; i < props.length; i++) { var descriptor = props[i]; descriptor.enumerable = descriptor.enumerable || false; descriptor.configurable = true; if ("value" in descriptor) descriptor.writable = true; Object.defineProperty(target, descriptor.key, descriptor); } } return function (Constructor, protoProps, staticProps) { if (protoProps) defineProperties(Constructor.prototype, protoProps); if (staticProps) defineProperties(Constructor, staticProps); return Constructor; }; }();
		
		var _sortBy = __webpack_require__(289);
		
		var _sortBy2 = _interopRequireDefault(_sortBy);
		
		var _defaults = __webpack_require__(175);
		
		var _defaults2 = _interopRequireDefault(_defaults);
		
		var _react = __webpack_require__(157);
		
		var _react2 = _interopRequireDefault(_react);
		
		var _lineSegment = __webpack_require__(370);
		
		var _lineSegment2 = _interopRequireDefault(_lineSegment);
		
		var _lineLabel = __webpack_require__(373);
		
		var _lineLabel2 = _interopRequireDefault(_lineLabel);
		
		var _scale = __webpack_require__(257);
		
		var _scale2 = _interopRequireDefault(_scale);
		
		var _domain = __webpack_require__(270);
		
		var _domain2 = _interopRequireDefault(_domain);
		
		var _data = __webpack_require__(271);
		
		var _data2 = _interopRequireDefault(_data);
		
		var _victoryCore = __webpack_require__(1);
		
		function _interopRequireDefault(obj) { return obj && obj.__esModule ? obj : { default: obj }; }
		
		function _classCallCheck(instance, Constructor) { if (!(instance instanceof Constructor)) { throw new TypeError("Cannot call a class as a function"); } }
		
		function _possibleConstructorReturn(self, call) { if (!self) { throw new ReferenceError("this hasn't been initialised - super() hasn't been called"); } return call && (typeof call === "object" || typeof call === "function") ? call : self; }
		
		function _inherits(subClass, superClass) { if (typeof superClass !== "function" && superClass !== null) { throw new TypeError("Super expression must either be null or a function, not " + typeof superClass); } subClass.prototype = Object.create(superClass && superClass.prototype, { constructor: { value: subClass, enumerable: false, writable: true, configurable: true } }); if (superClass) Object.setPrototypeOf ? Object.setPrototypeOf(subClass, superClass) : subClass.__proto__ = superClass; }
		
		var defaultStyles = {
		  data: {
		    strokeWidth: 2,
		    fill: "none",
		    stroke: "#756f6a",
		    opacity: 1
		  },
		  labels: {
		    padding: 5,
		    fontFamily: "Helvetica",
		    fontSize: 10,
		    strokeWidth: 0,
		    stroke: "transparent",
		    textAnchor: "start"
		  }
		};
		
		var VictoryLine = function (_React$Component) {
		  _inherits(VictoryLine, _React$Component);
		
		  function VictoryLine() {
		    _classCallCheck(this, VictoryLine);
		
		    return _possibleConstructorReturn(this, Object.getPrototypeOf(VictoryLine).apply(this, arguments));
		  }
		
		  _createClass(VictoryLine, [{
		    key: "componentWillMount",
		    value: function componentWillMount() {
		      this.state = {
		        dataState: {},
		        labelsState: {}
		      };
		    }
		  }, {
		    key: "getDataSegments",
		    value: function getDataSegments(dataset) {
		      var orderedData = (0, _sortBy2.default)(dataset, "x");
		      var segments = [];
		      var segmentStartIndex = 0;
		      orderedData.forEach(function (datum, index) {
		        if (datum.y === null || typeof datum.y === "undefined") {
		          segments.push(orderedData.slice(segmentStartIndex, index));
		          segmentStartIndex = index + 1;
		        }
		      });
		      segments.push(orderedData.slice(segmentStartIndex, orderedData.length));
		      return segments.filter(function (segment) {
		        return Array.isArray(segment) && segment.length > 0;
		      });
		    }
		  }, {
		    key: "getLabelStyle",
		    value: function getLabelStyle(style) {
		      // match labels styles to data style by default (fill, opacity, others?)
		      var opacity = style.data.opacity;
		      // match label color to data color if it is not given.
		      // use fill instead of stroke for text
		      var fill = style.data.stroke;
		      var padding = style.labels.padding || 0;
		      return (0, _defaults2.default)({}, style.labels, { opacity: opacity, fill: fill, padding: padding });
		    }
		  }, {
		    key: "renderLine",
		    value: function renderLine(calculatedProps) {
		      var _this2 = this;
		
		      var dataSegments = calculatedProps.dataSegments;
		      var scale = calculatedProps.scale;
		      var style = calculatedProps.style;
		      var _props = this.props;
		      var interpolation = _props.interpolation;
		      var dataComponent = _props.dataComponent;
		      var events = _props.events;
		
		
		      return dataSegments.map(function (segment, index) {
		        var lineEvents = _victoryCore.Helpers.getEvents.bind(_this2)(events.data, "data");
		        var key = "line-segment-" + index;
		
		        return _react2.default.cloneElement(dataComponent, _extends({
		          key: key,
		          index: index,
		          events: lineEvents,
		          data: segment,
		          interpolation: interpolation,
		          scale: scale,
		          style: style.data
		        }, _this2.state.dataState[index]));
		      });
		    }
		  }, {
		    key: "renderLabel",
		    value: function renderLabel(calculatedProps) {
		      var dataset = calculatedProps.dataset;
		      var dataSegments = calculatedProps.dataSegments;
		      var scale = calculatedProps.scale;
		      var style = calculatedProps.style;
		
		      if (!this.props.label) {
		        return undefined;
		      }
		      var lastSegment = dataSegments[dataSegments.length - 1];
		      var lastPoint = Array.isArray(lastSegment) ? lastSegment[lastSegment.length - 1] : lastSegment;
		      var getBoundEvents = _victoryCore.Helpers.getEvents.bind(this);
		      return _react2.default.createElement(_lineLabel2.default, _extends({
		        key: "line-label",
		        events: getBoundEvents(this.props.events.labels, "labels"),
		        data: dataset,
		        position: {
		          x: scale.x.call(this, lastPoint.x),
		          y: scale.y.call(this, lastPoint.y)
		        },
		        label: this.props.label,
		        style: this.getLabelStyle(style)
		      }, this.state.labelsState[0]));
		    }
		  }, {
		    key: "renderData",
		    value: function renderData(props, style) {
		      var dataset = _data2.default.getData(props);
		      var dataSegments = this.getDataSegments(dataset);
		      var range = {
		        x: _victoryCore.Helpers.getRange(props, "x"),
		        y: _victoryCore.Helpers.getRange(props, "y")
		      };
		      var domain = {
		        x: _domain2.default.getDomain(props, "x"),
		        y: _domain2.default.getDomain(props, "y")
		      };
		      var scale = {
		        x: _scale2.default.getBaseScale(props, "x").domain(domain.x).range(range.x),
		        y: _scale2.default.getBaseScale(props, "y").domain(domain.y).range(range.y)
		      };
		      var calculatedProps = { dataset: dataset, dataSegments: dataSegments, scale: scale, style: style };
		      return _react2.default.createElement(
		        "g",
		        { style: style.parent },
		        this.renderLine(calculatedProps),
		        this.renderLabel(calculatedProps)
		      );
		    }
		  }, {
		    key: "render",
		    value: function render() {
		      // If animating, return a `VictoryAnimation` element that will create
		      // a new `VictoryLine` with nearly identical props, except (1) tweened
		      // and (2) `animate` set to null so we don't recurse forever.
		      if (this.props.animate) {
		        // Do less work by having `VictoryAnimation` tween only values that
		        // make sense to tween. In the future, allow customization of animated
		        // prop whitelist/blacklist?
		        // TODO: extract into helper
		        var whitelist = ["data", "domain", "height", "padding", "samples", "style", "width", "x", "y"];
		        return _react2.default.createElement(
		          _victoryCore.VictoryTransition,
		          { animate: this.props.animate, animationWhitelist: whitelist },
		          _react2.default.createElement(VictoryLine, this.props)
		        );
		      }
		      var style = _victoryCore.Helpers.getStyles(this.props.style, defaultStyles, "auto", "100%");
		      var group = _react2.default.createElement(
		        "g",
		        { style: style.parent },
		        this.renderData(this.props, style)
		      );
		      return this.props.standalone ? _react2.default.createElement(
		        "svg",
		        _extends({
		          style: style.parent,
		          viewBox: "0 0 " + this.props.width + " " + this.props.height
		        }, this.props.events.parent),
		        group
		      ) : group;
		    }
		  }]);
		
		  return VictoryLine;
		}(_react2.default.Component);
		
		VictoryLine.role = "line";
		VictoryLine.defaultTransitions = {
		  onExit: {
		    duration: 500,
		    before: function before() {
		      return { y: null };
		    }
		  },
		  onEnter: {
		    duration: 500,
		    before: function before() {
		      return { y: null };
		    },
		    after: function after(datum) {
		      return { y: datum.y };
		    }
		  }
		};
		VictoryLine.propTypes = {
		  /**
		   * The animate prop specifies props for VictoryAnimation to use. The animate prop should
		   * also be used to specify enter and exit transition configurations with the `onExit`
		   * and `onEnter` namespaces respectively.
		   * @examples {duration: 500, onEnd: () => {}, onEnter: {duration: 500, before: () => ({y: 0})})}
		   */
		  animate: _react.PropTypes.object,
		  /**
		   * The categories prop specifies how categorical data for a chart should be ordered.
		   * This prop should be given as an array of string values, or an object with
		   * these arrays of values specified for x and y. If this prop is not set,
		   * categorical data will be plotted in the order it was given in the data array
		   * @examples ["dogs", "cats", "mice"]
		   */
		  categories: _react.PropTypes.oneOfType([_react.PropTypes.arrayOf(_react.PropTypes.string), _react.PropTypes.shape({
		    x: _react.PropTypes.arrayOf(_react.PropTypes.string),
		    y: _react.PropTypes.arrayOf(_react.PropTypes.string)
		  })]),
		  /**
		   * The data prop specifies the data to be plotted.
		   * Data should be in the form of an array of data points.
		   * Each data point may be any format you wish (depending on the `x` and `y` accessor props),
		   * but by default, an object with x and y properties is expected.
		   * @examples [{x: 1, y: 2}, {x: 2, y: 3}], [[1, 2], [2, 3]],
		   * [[{x: "a", y: 1}, {x: "b", y: 2}], [{x: "a", y: 2}, {x: "b", y: 3}]]
		   */
		
		  data: _react.PropTypes.array,
		  /**
		   * The dataComponent prop takes an entire, HTML-complete data component which will be used to
		   * create line segments between each point in the plotted line. The new element created from
		   * the passed dataComponent will have the property data set by the line for the segment it
		   * renders; properties scale and style calculated by the VictoryLine component; a key and index
		   * property set corresponding to the location of the segment in the data provided to the line;
		   * and all the remaining properties from the VictoryLine data at the index of the segment.
		   * If a dataComponent is not provided, VictoryLine's LineSegment component will be used.
		   */
		  dataComponent: _react.PropTypes.element,
		  /**
		   * The domain prop describes the range of values your chart will include. This prop can be
		   * given as a array of the minimum and maximum expected values for your chart,
		   * or as an object that specifies separate arrays for x and y.
		   * If this prop is not provided, a domain will be calculated from data, or other
		   * available information.
		   * @examples [-1, 1], {x: [0, 100], y: [0, 1]}
		   */
		  domain: _react.PropTypes.oneOfType([_victoryCore.PropTypes.domain, _react.PropTypes.shape({
		    x: _victoryCore.PropTypes.domain,
		    y: _victoryCore.PropTypes.domain
		  })]),
		  /**
		   * The events prop attaches arbitrary event handlers to data and label elements
		   * Event handlers are called with their corresponding events, corresponding component props,
		   * and their index in the data array, and event name. The return value of event handlers
		   * will be stored by unique index on the state object of VictoryLine
		   * i.e. `this.state.dataState[dataIndex] = {style: {fill: "red"}...}`, and will be
		   * applied to by index to the appropriate child component. Event props on the
		   * parent namespace are just spread directly on to the top level svg of VictoryLine
		   * if one exists. If VictoryLine is set up to render g elements i.e. when it is
		   * rendered within chart, or when `standalone={false}` parent events will not be applied.
		   *
		   * @examples {data: {
		   *  onClick: () => onClick: () => return {style: {stroke: "green"}}
		   *}}
		   */
		  events: _react.PropTypes.shape({
		    data: _react.PropTypes.object,
		    labels: _react.PropTypes.object,
		    parent: _react.PropTypes.object
		  }),
		  /**
		   * The height props specifies the height the svg viewBox of the chart container.
		   * This value should be given as a number of pixels
		   */
		  height: _victoryCore.PropTypes.nonNegative,
		  /**
		   * The interpolation prop determines how data points should be connected
		   * when plotting a line
		   */
		  interpolation: _react.PropTypes.oneOf(["basis", "basisClosed", "basisOpen", "bundle", "cardinal", "cardinalClosed", "cardinalOpen", "catmullRom", "catmullRomClosed", "catmullRomOpen", "linear", "linearClosed", "monotoneX", "monotoneY", "natural", "radial", "step", "stepAfter", "stepBefore"]),
		  /**
		   * The label prop specifies a label to display at the end of a line component.
		   * This prop can be given as a value, or as an entire, HTML-complete label component.
		   * If given as a value, a new VictoryLabel will be created with props and
		   * styles from the line. When given as a component, a new element will be
		   * cloned from the label component. The new element will have default
		   * values provided by the line for properties x, y, textAnchor, and
		   * verticalAnchor; and styles filled out with defaults from the line, and
		   * overrides from the datum.
		   */
		  label: _react.PropTypes.any,
		  /**
		   * The padding props specifies the amount of padding in number of pixels between
		   * the edge of the chart and any rendered child components. This prop can be given
		   * as a number or as an object with padding specified for top, bottom, left
		   * and right.
		   */
		  padding: _react.PropTypes.oneOfType([_react.PropTypes.number, _react.PropTypes.shape({
		    top: _react.PropTypes.number,
		    bottom: _react.PropTypes.number,
		    left: _react.PropTypes.number,
		    right: _react.PropTypes.number
		  })]),
		  /**
		   * The samples prop specifies how many individual points to plot when plotting
		   * y as a function of x. Samples is ignored if x props are provided instead.
		   */
		  samples: _victoryCore.PropTypes.nonNegative,
		  /**
		   * The scale prop determines which scales your chart should use. This prop can be
		   * given as a string specifying a supported scale ("linear", "time", "log", "sqrt"),
		   * as a d3 scale function, or as an object with scales specified for x and y
		   * @exampes d3Scale.time(), {x: "linear", y: "log"}
		   */
		  scale: _react.PropTypes.oneOfType([_victoryCore.PropTypes.scale, _react.PropTypes.shape({
		    x: _victoryCore.PropTypes.scale,
		    y: _victoryCore.PropTypes.scale
		  })]),
		  /**
		   * The standalone prop determines whether the component will render a standalone svg
		   * or a <g> tag that will be included in an external svg. Set standalone to false to
		   * compose VictoryLine with other components within an enclosing <svg> tag.
		   */
		  standalone: _react.PropTypes.bool,
		  /**
		   * The style prop specifies styles for your VictoryLine. Any valid inline style properties
		   * will be applied. Height, width, and padding should be specified via the height,
		   * width, and padding props, as they are used to calculate the alignment of
		   * components within chart.
		   * @examples {data: {stroke: "red"}, labels: {fontSize: 12}}
		   */
		  style: _react.PropTypes.shape({
		    parent: _react.PropTypes.object,
		    data: _react.PropTypes.object,
		    labels: _react.PropTypes.object
		  }),
		  /**
		   * The width props specifies the width of the svg viewBox of the chart container
		   * This value should be given as a number of pixels
		   */
		  width: _victoryCore.PropTypes.nonNegative,
		  /**
		   * The x prop specifies how to access the X value of each data point.
		   * If given as a function, it will be run on each data point, and returned value will be used.
		   * If given as an integer, it will be used as an array index for array-type data points.
		   * If given as a string, it will be used as a property key for object-type data points.
		   * If given as an array of strings, or a string containing dots or brackets,
		   * it will be used as a nested object property path (for details see Lodash docs for _.get).
		   * If `null` or `undefined`, the data value will be used as is (identity function/pass-through).
		   * @examples 0, 'x', 'x.value.nested.1.thing', 'x[2].also.nested', null, d => Math.sin(d)
		   */
		  x: _react.PropTypes.oneOfType([_react.PropTypes.func, _victoryCore.PropTypes.allOfType([_victoryCore.PropTypes.integer, _victoryCore.PropTypes.nonNegative]), _react.PropTypes.string, _react.PropTypes.arrayOf(_react.PropTypes.string)]),
		  /**
		   * The y prop specifies how to access the Y value of each data point.
		   * If given as a function, it will be run on each data point, and returned value will be used.
		   * If given as an integer, it will be used as an array index for array-type data points.
		   * If given as a string, it will be used as a property key for object-type data points.
		   * If given as an array of strings, or a string containing dots or brackets,
		   * it will be used as a nested object property path (for details see Lodash docs for _.get).
		   * If `null` or `undefined`, the data value will be used as is (identity function/pass-through).
		   * @examples 0, 'y', 'y.value.nested.1.thing', 'y[2].also.nested', null, d => Math.sin(d)
		   */
		  y: _react.PropTypes.oneOfType([_react.PropTypes.func, _victoryCore.PropTypes.allOfType([_victoryCore.PropTypes.integer, _victoryCore.PropTypes.nonNegative]), _react.PropTypes.string, _react.PropTypes.arrayOf(_react.PropTypes.string)])
		};
		VictoryLine.defaultProps = {
		  events: {},
		  height: 300,
		  interpolation: "linear",
		  padding: 50,
		  samples: 50,
		  scale: "linear",
		  standalone: true,
		  width: 450,
		  x: "x",
		  y: "y",
		  dataComponent: _react2.default.createElement(_lineSegment2.default, null)
		};
		VictoryLine.getDomain = _domain2.default.getDomain.bind(_domain2.default);
		VictoryLine.getData = _data2.default.getData.bind(_data2.default);
		exports.default = VictoryLine;

	/***/ },
	/* 370 */
	/***/ function(module, exports, __webpack_require__) {

		"use strict";
		
		Object.defineProperty(exports, "__esModule", {
		  value: true
		});
		
		var _extends = Object.assign || function (target) { for (var i = 1; i < arguments.length; i++) { var source = arguments[i]; for (var key in source) { if (Object.prototype.hasOwnProperty.call(source, key)) { target[key] = source[key]; } } } return target; };
		
		var _createClass = function () { function defineProperties(target, props) { for (var i = 0; i < props.length; i++) { var descriptor = props[i]; descriptor.enumerable = descriptor.enumerable || false; descriptor.configurable = true; if ("value" in descriptor) descriptor.writable = true; Object.defineProperty(target, descriptor.key, descriptor); } } return function (Constructor, protoProps, staticProps) { if (protoProps) defineProperties(Constructor.prototype, protoProps); if (staticProps) defineProperties(Constructor, staticProps); return Constructor; }; }();
		
		var _react = __webpack_require__(157);
		
		var _react2 = _interopRequireDefault(_react);
		
		var _d3Shape = __webpack_require__(371);
		
		var _d3Shape2 = _interopRequireDefault(_d3Shape);
		
		var _victoryCore = __webpack_require__(1);
		
		function _interopRequireDefault(obj) { return obj && obj.__esModule ? obj : { default: obj }; }
		
		function _classCallCheck(instance, Constructor) { if (!(instance instanceof Constructor)) { throw new TypeError("Cannot call a class as a function"); } }
		
		function _possibleConstructorReturn(self, call) { if (!self) { throw new ReferenceError("this hasn't been initialised - super() hasn't been called"); } return call && (typeof call === "object" || typeof call === "function") ? call : self; }
		
		function _inherits(subClass, superClass) { if (typeof superClass !== "function" && superClass !== null) { throw new TypeError("Super expression must either be null or a function, not " + typeof superClass); } subClass.prototype = Object.create(superClass && superClass.prototype, { constructor: { value: subClass, enumerable: false, writable: true, configurable: true } }); if (superClass) Object.setPrototypeOf ? Object.setPrototypeOf(subClass, superClass) : subClass.__proto__ = superClass; }
		
		var LineSegment = function (_React$Component) {
		  _inherits(LineSegment, _React$Component);
		
		  function LineSegment() {
		    _classCallCheck(this, LineSegment);
		
		    return _possibleConstructorReturn(this, Object.getPrototypeOf(LineSegment).apply(this, arguments));
		  }
		
		  _createClass(LineSegment, [{
		    key: "toNewName",
		    value: function toNewName(interpolation) {
		      // d3 shape changed the naming scheme for interpolators from "basis" -> "curveBasis" etc.
		      var capitalize = function capitalize(s) {
		        return s && s[0].toUpperCase() + s.slice(1);
		      };
		      return "curve" + capitalize(interpolation);
		    }
		  }, {
		    key: "render",
		    value: function render() {
		      var props = this.props;
		
		      var style = _victoryCore.Helpers.evaluateStyle(props.style, props.data);
		      var interpolation = _victoryCore.Helpers.evaluateProp(props.interpolation, props.data);
		      var xScale = props.scale.x;
		      var yScale = props.scale.y;
		      var lineFunction = _d3Shape2.default.line().curve(_d3Shape2.default[this.toNewName(interpolation)]).x(function (data) {
		        return xScale(data.x);
		      }).y(function (data) {
		        return yScale(data.y);
		      });
		      var path = lineFunction(props.data);
		      var events = _victoryCore.Helpers.getPartialEvents(props.events, props.index, props);
		      return _react2.default.createElement("path", _extends({ style: style, d: path }, events));
		    }
		  }]);
		
		  return LineSegment;
		}(_react2.default.Component);
		
		LineSegment.propTypes = {
		  index: _react2.default.PropTypes.number,
		  data: _react.PropTypes.array,
		  events: _react.PropTypes.object,
		  interpolation: _react.PropTypes.string,
		  scale: _react.PropTypes.object,
		  style: _react.PropTypes.object
		};
		exports.default = LineSegment;

	/***/ },
	/* 371 */
	/***/ function(module, exports, __webpack_require__) {

		(function (global, factory) {
		   true ? factory(exports, __webpack_require__(372)) :
		  typeof define === 'function' && define.amd ? define(['exports', 'd3-path'], factory) :
		  (factory((global.d3_shape = global.d3_shape || {}),global.d3_path));
		}(this, function (exports,d3Path) { 'use strict';
		
		  var version = "0.6.0";
		
		  function constant(x) {
		    return function constant() {
		      return x;
		    };
		  }
		
		  var epsilon = 1e-12;
		  var pi = Math.PI;
		  var halfPi = pi / 2;
		  var tau = 2 * pi;
		
		  function arcInnerRadius(d) {
		    return d.innerRadius;
		  }
		
		  function arcOuterRadius(d) {
		    return d.outerRadius;
		  }
		
		  function arcStartAngle(d) {
		    return d.startAngle;
		  }
		
		  function arcEndAngle(d) {
		    return d.endAngle;
		  }
		
		  function arcPadAngle(d) {
		    return d && d.padAngle; // Note: optional!
		  }
		
		  function asin(x) {
		    return x >= 1 ? halfPi : x <= -1 ? -halfPi : Math.asin(x);
		  }
		
		  function intersect(x0, y0, x1, y1, x2, y2, x3, y3) {
		    var x10 = x1 - x0, y10 = y1 - y0,
		        x32 = x3 - x2, y32 = y3 - y2,
		        t = (x32 * (y0 - y2) - y32 * (x0 - x2)) / (y32 * x10 - x32 * y10);
		    return [x0 + t * x10, y0 + t * y10];
		  }
		
		  // Compute perpendicular offset line of length rc.
		  // http://mathworld.wolfram.com/Circle-LineIntersection.html
		  function cornerTangents(x0, y0, x1, y1, r1, rc, cw) {
		    var x01 = x0 - x1,
		        y01 = y0 - y1,
		        lo = (cw ? rc : -rc) / Math.sqrt(x01 * x01 + y01 * y01),
		        ox = lo * y01,
		        oy = -lo * x01,
		        x11 = x0 + ox,
		        y11 = y0 + oy,
		        x10 = x1 + ox,
		        y10 = y1 + oy,
		        x00 = (x11 + x10) / 2,
		        y00 = (y11 + y10) / 2,
		        dx = x10 - x11,
		        dy = y10 - y11,
		        d2 = dx * dx + dy * dy,
		        r = r1 - rc,
		        D = x11 * y10 - x10 * y11,
		        d = (dy < 0 ? -1 : 1) * Math.sqrt(Math.max(0, r * r * d2 - D * D)),
		        cx0 = (D * dy - dx * d) / d2,
		        cy0 = (-D * dx - dy * d) / d2,
		        cx1 = (D * dy + dx * d) / d2,
		        cy1 = (-D * dx + dy * d) / d2,
		        dx0 = cx0 - x00,
		        dy0 = cy0 - y00,
		        dx1 = cx1 - x00,
		        dy1 = cy1 - y00;
		
		    // Pick the closer of the two intersection points.
		    // TODO Is there a faster way to determine which intersection to use?
		    if (dx0 * dx0 + dy0 * dy0 > dx1 * dx1 + dy1 * dy1) cx0 = cx1, cy0 = cy1;
		
		    return {
		      cx: cx0,
		      cy: cy0,
		      x01: -ox,
		      y01: -oy,
		      x11: cx0 * (r1 / r - 1),
		      y11: cy0 * (r1 / r - 1)
		    };
		  }
		
		  function arc() {
		    var innerRadius = arcInnerRadius,
		        outerRadius = arcOuterRadius,
		        cornerRadius = constant(0),
		        padRadius = null,
		        startAngle = arcStartAngle,
		        endAngle = arcEndAngle,
		        padAngle = arcPadAngle,
		        context = null;
		
		    function arc() {
		      var buffer,
		          r,
		          r0 = +innerRadius.apply(this, arguments),
		          r1 = +outerRadius.apply(this, arguments),
		          a0 = startAngle.apply(this, arguments) - halfPi,
		          a1 = endAngle.apply(this, arguments) - halfPi,
		          da = Math.abs(a1 - a0),
		          cw = a1 > a0;
		
		      if (!context) context = buffer = d3Path.path();
		
		      // Ensure that the outer radius is always larger than the inner radius.
		      if (r1 < r0) r = r1, r1 = r0, r0 = r;
		
		      // Is it a point?
		      if (!(r1 > epsilon)) context.moveTo(0, 0);
		
		      // Or is it a circle or annulus?
		      else if (da > tau - epsilon) {
		        context.moveTo(r1 * Math.cos(a0), r1 * Math.sin(a0));
		        context.arc(0, 0, r1, a0, a1, !cw);
		        if (r0 > epsilon) {
		          context.moveTo(r0 * Math.cos(a1), r0 * Math.sin(a1));
		          context.arc(0, 0, r0, a1, a0, cw);
		        }
		      }
		
		      // Or is it a circular or annular sector?
		      else {
		        var a01 = a0,
		            a11 = a1,
		            a00 = a0,
		            a10 = a1,
		            da0 = da,
		            da1 = da,
		            ap = padAngle.apply(this, arguments) / 2,
		            rp = (ap > epsilon) && (padRadius ? +padRadius.apply(this, arguments) : Math.sqrt(r0 * r0 + r1 * r1)),
		            rc = Math.min(Math.abs(r1 - r0) / 2, +cornerRadius.apply(this, arguments)),
		            rc0 = rc,
		            rc1 = rc,
		            t0,
		            t1;
		
		        // Apply padding? Note that since r1 ≥ r0, da1 ≥ da0.
		        if (rp > epsilon) {
		          var p0 = asin(rp / r0 * Math.sin(ap)),
		              p1 = asin(rp / r1 * Math.sin(ap));
		          if ((da0 -= p0 * 2) > epsilon) p0 *= (cw ? 1 : -1), a00 += p0, a10 -= p0;
		          else da0 = 0, a00 = a10 = (a0 + a1) / 2;
		          if ((da1 -= p1 * 2) > epsilon) p1 *= (cw ? 1 : -1), a01 += p1, a11 -= p1;
		          else da1 = 0, a01 = a11 = (a0 + a1) / 2;
		        }
		
		        var x01 = r1 * Math.cos(a01),
		            y01 = r1 * Math.sin(a01),
		            x10 = r0 * Math.cos(a10),
		            y10 = r0 * Math.sin(a10);
		
		        // Apply rounded corners?
		        if (rc > epsilon) {
		          var x11 = r1 * Math.cos(a11),
		              y11 = r1 * Math.sin(a11),
		              x00 = r0 * Math.cos(a00),
		              y00 = r0 * Math.sin(a00);
		
		          // Restrict the corner radius according to the sector angle.
		          if (da < pi) {
		            var oc = da0 > epsilon ? intersect(x01, y01, x00, y00, x11, y11, x10, y10) : [x10, y10],
		                ax = x01 - oc[0],
		                ay = y01 - oc[1],
		                bx = x11 - oc[0],
		                by = y11 - oc[1],
		                kc = 1 / Math.sin(Math.acos((ax * bx + ay * by) / (Math.sqrt(ax * ax + ay * ay) * Math.sqrt(bx * bx + by * by))) / 2),
		                lc = Math.sqrt(oc[0] * oc[0] + oc[1] * oc[1]);
		            rc0 = Math.min(rc, (r0 - lc) / (kc - 1));
		            rc1 = Math.min(rc, (r1 - lc) / (kc + 1));
		          }
		        }
		
		        // Is the sector collapsed to a line?
		        if (!(da1 > epsilon)) context.moveTo(x01, y01);
		
		        // Does the sector’s outer ring have rounded corners?
		        else if (rc1 > epsilon) {
		          t0 = cornerTangents(x00, y00, x01, y01, r1, rc1, cw);
		          t1 = cornerTangents(x11, y11, x10, y10, r1, rc1, cw);
		
		          context.moveTo(t0.cx + t0.x01, t0.cy + t0.y01);
		
		          // Have the corners merged?
		          if (rc1 < rc) context.arc(t0.cx, t0.cy, rc1, Math.atan2(t0.y01, t0.x01), Math.atan2(t1.y01, t1.x01), !cw);
		
		          // Otherwise, draw the two corners and the ring.
		          else {
		            context.arc(t0.cx, t0.cy, rc1, Math.atan2(t0.y01, t0.x01), Math.atan2(t0.y11, t0.x11), !cw);
		            context.arc(0, 0, r1, Math.atan2(t0.cy + t0.y11, t0.cx + t0.x11), Math.atan2(t1.cy + t1.y11, t1.cx + t1.x11), !cw);
		            context.arc(t1.cx, t1.cy, rc1, Math.atan2(t1.y11, t1.x11), Math.atan2(t1.y01, t1.x01), !cw);
		          }
		        }
		
		        // Or is the outer ring just a circular arc?
		        else context.moveTo(x01, y01), context.arc(0, 0, r1, a01, a11, !cw);
		
		        // Is there no inner ring, and it’s a circular sector?
		        // Or perhaps it’s an annular sector collapsed due to padding?
		        if (!(r0 > epsilon) || !(da0 > epsilon)) context.lineTo(x10, y10);
		
		        // Does the sector’s inner ring (or point) have rounded corners?
		        else if (rc0 > epsilon) {
		          t0 = cornerTangents(x10, y10, x11, y11, r0, -rc0, cw);
		          t1 = cornerTangents(x01, y01, x00, y00, r0, -rc0, cw);
		
		          context.lineTo(t0.cx + t0.x01, t0.cy + t0.y01);
		
		          // Have the corners merged?
		          if (rc0 < rc) context.arc(t0.cx, t0.cy, rc0, Math.atan2(t0.y01, t0.x01), Math.atan2(t1.y01, t1.x01), !cw);
		
		          // Otherwise, draw the two corners and the ring.
		          else {
		            context.arc(t0.cx, t0.cy, rc0, Math.atan2(t0.y01, t0.x01), Math.atan2(t0.y11, t0.x11), !cw);
		            context.arc(0, 0, r0, Math.atan2(t0.cy + t0.y11, t0.cx + t0.x11), Math.atan2(t1.cy + t1.y11, t1.cx + t1.x11), cw);
		            context.arc(t1.cx, t1.cy, rc0, Math.atan2(t1.y11, t1.x11), Math.atan2(t1.y01, t1.x01), !cw);
		          }
		        }
		
		        // Or is the inner ring just a circular arc?
		        else context.arc(0, 0, r0, a10, a00, cw);
		      }
		
		      context.closePath();
		
		      if (buffer) return context = null, buffer + "" || null;
		    }
		
		    arc.centroid = function() {
		      var r = (+innerRadius.apply(this, arguments) + +outerRadius.apply(this, arguments)) / 2,
		          a = (+startAngle.apply(this, arguments) + +endAngle.apply(this, arguments)) / 2 - pi / 2;
		      return [Math.cos(a) * r, Math.sin(a) * r];
		    };
		
		    arc.innerRadius = function(_) {
		      return arguments.length ? (innerRadius = typeof _ === "function" ? _ : constant(+_), arc) : innerRadius;
		    };
		
		    arc.outerRadius = function(_) {
		      return arguments.length ? (outerRadius = typeof _ === "function" ? _ : constant(+_), arc) : outerRadius;
		    };
		
		    arc.cornerRadius = function(_) {
		      return arguments.length ? (cornerRadius = typeof _ === "function" ? _ : constant(+_), arc) : cornerRadius;
		    };
		
		    arc.padRadius = function(_) {
		      return arguments.length ? (padRadius = _ == null ? null : typeof _ === "function" ? _ : constant(+_), arc) : padRadius;
		    };
		
		    arc.startAngle = function(_) {
		      return arguments.length ? (startAngle = typeof _ === "function" ? _ : constant(+_), arc) : startAngle;
		    };
		
		    arc.endAngle = function(_) {
		      return arguments.length ? (endAngle = typeof _ === "function" ? _ : constant(+_), arc) : endAngle;
		    };
		
		    arc.padAngle = function(_) {
		      return arguments.length ? (padAngle = typeof _ === "function" ? _ : constant(+_), arc) : padAngle;
		    };
		
		    arc.context = function(_) {
		      return arguments.length ? ((context = _ == null ? null : _), arc) : context;
		    };
		
		    return arc;
		  }
		
		  function Linear(context) {
		    this._context = context;
		  }
		
		  Linear.prototype = {
		    areaStart: function() {
		      this._line = 0;
		    },
		    areaEnd: function() {
		      this._line = NaN;
		    },
		    lineStart: function() {
		      this._point = 0;
		    },
		    lineEnd: function() {
		      if (this._line || (this._line !== 0 && this._point === 1)) this._context.closePath();
		      this._line = 1 - this._line;
		    },
		    point: function(x, y) {
		      x = +x, y = +y;
		      switch (this._point) {
		        case 0: this._point = 1; this._line ? this._context.lineTo(x, y) : this._context.moveTo(x, y); break;
		        case 1: this._point = 2; // proceed
		        default: this._context.lineTo(x, y); break;
		      }
		    }
		  };
		
		  function curveLinear(context) {
		    return new Linear(context);
		  }
		
		  function pointX(p) {
		    return p[0];
		  }
		
		  function pointY(p) {
		    return p[1];
		  }
		
		  function area() {
		    var x0 = pointX,
		        x1 = null,
		        y0 = constant(0),
		        y1 = pointY,
		        defined = constant(true),
		        context = null,
		        curve = curveLinear,
		        output = null;
		
		    function area(data) {
		      var i,
		          j,
		          k,
		          n = data.length,
		          d,
		          defined0 = false,
		          buffer,
		          x0z = new Array(n),
		          y0z = new Array(n);
		
		      if (context == null) output = curve(buffer = d3Path.path());
		
		      for (i = 0; i <= n; ++i) {
		        if (!(i < n && defined(d = data[i], i, data)) === defined0) {
		          if (defined0 = !defined0) {
		            j = i;
		            output.areaStart();
		            output.lineStart();
		          } else {
		            output.lineEnd();
		            output.lineStart();
		            for (k = i - 1; k >= j; --k) {
		              output.point(x0z[k], y0z[k]);
		            }
		            output.lineEnd();
		            output.areaEnd();
		          }
		        }
		        if (defined0) {
		          x0z[i] = +x0(d, i, data), y0z[i] = +y0(d, i, data);
		          output.point(x1 ? +x1(d, i, data) : x0z[i], y1 ? +y1(d, i, data) : y0z[i]);
		        }
		      }
		
		      if (buffer) return output = null, buffer + "" || null;
		    }
		
		    area.x = function(_) {
		      return arguments.length ? (x0 = typeof _ === "function" ? _ : constant(+_), x1 = null, area) : x0;
		    };
		
		    area.x0 = function(_) {
		      return arguments.length ? (x0 = typeof _ === "function" ? _ : constant(+_), area) : x0;
		    };
		
		    area.x1 = function(_) {
		      return arguments.length ? (x1 = _ == null ? null : typeof _ === "function" ? _ : constant(+_), area) : x1;
		    };
		
		    area.y = function(_) {
		      return arguments.length ? (y0 = typeof _ === "function" ? _ : constant(+_), y1 = null, area) : y0;
		    };
		
		    area.y0 = function(_) {
		      return arguments.length ? (y0 = typeof _ === "function" ? _ : constant(+_), area) : y0;
		    };
		
		    area.y1 = function(_) {
		      return arguments.length ? (y1 = _ == null ? null : typeof _ === "function" ? _ : constant(+_), area) : y1;
		    };
		
		    area.defined = function(_) {
		      return arguments.length ? (defined = typeof _ === "function" ? _ : constant(!!_), area) : defined;
		    };
		
		    area.curve = function(_) {
		      return arguments.length ? (curve = _, context != null && (output = curve(context)), area) : curve;
		    };
		
		    area.context = function(_) {
		      return arguments.length ? (_ == null ? context = output = null : output = curve(context = _), area) : context;
		    };
		
		    return area;
		  }
		
		  function line() {
		    var x = pointX,
		        y = pointY,
		        defined = constant(true),
		        context = null,
		        curve = curveLinear,
		        output = null;
		
		    function line(data) {
		      var i,
		          n = data.length,
		          d,
		          defined0 = false,
		          buffer;
		
		      if (context == null) output = curve(buffer = d3Path.path());
		
		      for (i = 0; i <= n; ++i) {
		        if (!(i < n && defined(d = data[i], i, data)) === defined0) {
		          if (defined0 = !defined0) output.lineStart();
		          else output.lineEnd();
		        }
		        if (defined0) output.point(+x(d, i, data), +y(d, i, data));
		      }
		
		      if (buffer) return output = null, buffer + "" || null;
		    }
		
		    line.x = function(_) {
		      return arguments.length ? (x = typeof _ === "function" ? _ : constant(+_), line) : x;
		    };
		
		    line.y = function(_) {
		      return arguments.length ? (y = typeof _ === "function" ? _ : constant(+_), line) : y;
		    };
		
		    line.defined = function(_) {
		      return arguments.length ? (defined = typeof _ === "function" ? _ : constant(!!_), line) : defined;
		    };
		
		    line.curve = function(_) {
		      return arguments.length ? (curve = _, context != null && (output = curve(context)), line) : curve;
		    };
		
		    line.context = function(_) {
		      return arguments.length ? (_ == null ? context = output = null : output = curve(context = _), line) : context;
		    };
		
		    return line;
		  }
		
		  function descending(a, b) {
		    return b < a ? -1 : b > a ? 1 : b >= a ? 0 : NaN;
		  }
		
		  function identity(d) {
		    return d;
		  }
		
		  function pie() {
		    var value = identity,
		        sortValues = descending,
		        sort = null,
		        startAngle = constant(0),
		        endAngle = constant(tau),
		        padAngle = constant(0);
		
		    function pie(data) {
		      var i,
		          n = data.length,
		          j,
		          k,
		          sum = 0,
		          index = new Array(n),
		          arcs = new Array(n),
		          a0 = +startAngle.apply(this, arguments),
		          da = Math.min(tau, Math.max(-tau, endAngle.apply(this, arguments) - a0)),
		          a1,
		          p = Math.min(Math.abs(da) / n, padAngle.apply(this, arguments)),
		          pa = p * (da < 0 ? -1 : 1),
		          v;
		
		      for (i = 0; i < n; ++i) {
		        if ((v = arcs[index[i] = i] = +value(data[i], i, data)) > 0) {
		          sum += v;
		        }
		      }
		
		      // Optionally sort the arcs by previously-computed values or by data.
		      if (sortValues != null) index.sort(function(i, j) { return sortValues(arcs[i], arcs[j]); });
		      else if (sort !== null) index.sort(function(i, j) { return sort(data[i], data[j]); });
		
		      // Compute the arcs! They are stored in the original data's order.
		      for (i = 0, k = sum ? (da - n * pa) / sum : 0; i < n; ++i, a0 = a1) {
		        j = index[i], v = arcs[j], a1 = a0 + (v > 0 ? v * k : 0) + pa, arcs[j] = {
		          data: data[j],
		          index: i,
		          value: v,
		          startAngle: a0,
		          endAngle: a1,
		          padAngle: p
		        };
		      }
		
		      return arcs;
		    }
		
		    pie.value = function(_) {
		      return arguments.length ? (value = typeof _ === "function" ? _ : constant(+_), pie) : value;
		    };
		
		    pie.sortValues = function(_) {
		      return arguments.length ? (sortValues = _, sort = null, pie) : sortValues;
		    };
		
		    pie.sort = function(_) {
		      return arguments.length ? (sort = _, sortValues = null, pie) : sort;
		    };
		
		    pie.startAngle = function(_) {
		      return arguments.length ? (startAngle = typeof _ === "function" ? _ : constant(+_), pie) : startAngle;
		    };
		
		    pie.endAngle = function(_) {
		      return arguments.length ? (endAngle = typeof _ === "function" ? _ : constant(+_), pie) : endAngle;
		    };
		
		    pie.padAngle = function(_) {
		      return arguments.length ? (padAngle = typeof _ === "function" ? _ : constant(+_), pie) : padAngle;
		    };
		
		    return pie;
		  }
		
		  function Radial(curve) {
		    this._curve = curve;
		  }
		
		  Radial.prototype = {
		    areaStart: function() {
		      this._curve.areaStart();
		    },
		    areaEnd: function() {
		      this._curve.areaEnd();
		    },
		    lineStart: function() {
		      this._curve.lineStart();
		    },
		    lineEnd: function() {
		      this._curve.lineEnd();
		    },
		    point: function(a, r) {
		      this._curve.point(r * Math.sin(a), r * -Math.cos(a));
		    }
		  };
		
		  function curveRadial(curve) {
		
		    function radial(context) {
		      return new Radial(curve(context));
		    }
		
		    radial._curve = curve;
		
		    return radial;
		  }
		
		  function radialArea() {
		    var a = area(),
		        c = a.curve;
		
		    a.angle = a.x, delete a.x;
		    a.startAngle = a.x0, delete a.x0;
		    a.endAngle = a.x1, delete a.x1;
		    a.radius = a.y, delete a.y;
		    a.innerRadius = a.y0, delete a.y0;
		    a.outerRadius = a.y1, delete a.y1;
		
		    a.curve = function(_) {
		      return arguments.length ? c(curveRadial(_)) : c()._curve;
		    };
		
		    return a.curve(curveLinear);
		  }
		
		  function radialLine() {
		    var l = line(),
		        c = l.curve;
		
		    l.angle = l.x, delete l.x;
		    l.radius = l.y, delete l.y;
		
		    l.curve = function(_) {
		      return arguments.length ? c(curveRadial(_)) : c()._curve;
		    };
		
		    return l.curve(curveLinear);
		  }
		
		  var circle = {
		    draw: function(context, size) {
		      var r = Math.sqrt(size / pi);
		      context.moveTo(r, 0);
		      context.arc(0, 0, r, 0, tau);
		    }
		  };
		
		  var cross = {
		    draw: function(context, size) {
		      var r = Math.sqrt(size / 5) / 2;
		      context.moveTo(-3 * r, -r);
		      context.lineTo(-r, -r);
		      context.lineTo(-r, -3 * r);
		      context.lineTo(r, -3 * r);
		      context.lineTo(r, -r);
		      context.lineTo(3 * r, -r);
		      context.lineTo(3 * r, r);
		      context.lineTo(r, r);
		      context.lineTo(r, 3 * r);
		      context.lineTo(-r, 3 * r);
		      context.lineTo(-r, r);
		      context.lineTo(-3 * r, r);
		      context.closePath();
		    }
		  };
		
		  var tan30 = Math.sqrt(1 / 3);
		  var tan30_2 = tan30 * 2;
		  var diamond = {
		    draw: function(context, size) {
		      var y = Math.sqrt(size / tan30_2),
		          x = y * tan30;
		      context.moveTo(0, -y);
		      context.lineTo(x, 0);
		      context.lineTo(0, y);
		      context.lineTo(-x, 0);
		      context.closePath();
		    }
		  };
		
		  var ka = 0.89081309152928522810;
		  var kr = Math.sin(pi / 10) / Math.sin(7 * pi / 10);
		  var kx = Math.sin(tau / 10) * kr;
		  var ky = -Math.cos(tau / 10) * kr;
		  var star = {
		    draw: function(context, size) {
		      var r = Math.sqrt(size * ka),
		          x = kx * r,
		          y = ky * r;
		      context.moveTo(0, -r);
		      context.lineTo(x, y);
		      for (var i = 1; i < 5; ++i) {
		        var a = tau * i / 5,
		            c = Math.cos(a),
		            s = Math.sin(a);
		        context.lineTo(s * r, -c * r);
		        context.lineTo(c * x - s * y, s * x + c * y);
		      }
		      context.closePath();
		    }
		  };
		
		  var square = {
		    draw: function(context, size) {
		      var w = Math.sqrt(size),
		          x = -w / 2;
		      context.rect(x, x, w, w);
		    }
		  };
		
		  var sqrt3 = Math.sqrt(3);
		
		  var triangle = {
		    draw: function(context, size) {
		      var y = -Math.sqrt(size / (sqrt3 * 3));
		      context.moveTo(0, y * 2);
		      context.lineTo(-sqrt3 * y, -y);
		      context.lineTo(sqrt3 * y, -y);
		      context.closePath();
		    }
		  };
		
		  var c = -0.5;
		  var s = Math.sqrt(3) / 2;
		  var k = 1 / Math.sqrt(12);
		  var a = (k / 2 + 1) * 3;
		  var wye = {
		    draw: function(context, size) {
		      var r = Math.sqrt(size / a),
		          x0 = r / 2,
		          y0 = r * k,
		          x1 = x0,
		          y1 = r * k + r,
		          x2 = -x1,
		          y2 = y1;
		      context.moveTo(x0, y0);
		      context.lineTo(x1, y1);
		      context.lineTo(x2, y2);
		      context.lineTo(c * x0 - s * y0, s * x0 + c * y0);
		      context.lineTo(c * x1 - s * y1, s * x1 + c * y1);
		      context.lineTo(c * x2 - s * y2, s * x2 + c * y2);
		      context.lineTo(c * x0 + s * y0, c * y0 - s * x0);
		      context.lineTo(c * x1 + s * y1, c * y1 - s * x1);
		      context.lineTo(c * x2 + s * y2, c * y2 - s * x2);
		      context.closePath();
		    }
		  };
		
		  var symbols = [
		    circle,
		    cross,
		    diamond,
		    square,
		    star,
		    triangle,
		    wye
		  ];
		
		  function symbol() {
		    var type = constant(circle),
		        size = constant(64),
		        context = null;
		
		    function symbol() {
		      var buffer;
		      if (!context) context = buffer = d3Path.path();
		      type.apply(this, arguments).draw(context, +size.apply(this, arguments));
		      if (buffer) return context = null, buffer + "" || null;
		    }
		
		    symbol.type = function(_) {
		      return arguments.length ? (type = typeof _ === "function" ? _ : constant(_), symbol) : type;
		    };
		
		    symbol.size = function(_) {
		      return arguments.length ? (size = typeof _ === "function" ? _ : constant(+_), symbol) : size;
		    };
		
		    symbol.context = function(_) {
		      return arguments.length ? (context = _ == null ? null : _, symbol) : context;
		    };
		
		    return symbol;
		  }
		
		  function noop() {}
		
		  function point(that, x, y) {
		    that._context.bezierCurveTo(
		      (2 * that._x0 + that._x1) / 3,
		      (2 * that._y0 + that._y1) / 3,
		      (that._x0 + 2 * that._x1) / 3,
		      (that._y0 + 2 * that._y1) / 3,
		      (that._x0 + 4 * that._x1 + x) / 6,
		      (that._y0 + 4 * that._y1 + y) / 6
		    );
		  }
		
		  function Basis(context) {
		    this._context = context;
		  }
		
		  Basis.prototype = {
		    areaStart: function() {
		      this._line = 0;
		    },
		    areaEnd: function() {
		      this._line = NaN;
		    },
		    lineStart: function() {
		      this._x0 = this._x1 =
		      this._y0 = this._y1 = NaN;
		      this._point = 0;
		    },
		    lineEnd: function() {
		      switch (this._point) {
		        case 3: point(this, this._x1, this._y1); // proceed
		        case 2: this._context.lineTo(this._x1, this._y1); break;
		      }
		      if (this._line || (this._line !== 0 && this._point === 1)) this._context.closePath();
		      this._line = 1 - this._line;
		    },
		    point: function(x, y) {
		      x = +x, y = +y;
		      switch (this._point) {
		        case 0: this._point = 1; this._line ? this._context.lineTo(x, y) : this._context.moveTo(x, y); break;
		        case 1: this._point = 2; break;
		        case 2: this._point = 3; this._context.lineTo((5 * this._x0 + this._x1) / 6, (5 * this._y0 + this._y1) / 6); // proceed
		        default: point(this, x, y); break;
		      }
		      this._x0 = this._x1, this._x1 = x;
		      this._y0 = this._y1, this._y1 = y;
		    }
		  };
		
		  function basis(context) {
		    return new Basis(context);
		  }
		
		  function BasisClosed(context) {
		    this._context = context;
		  }
		
		  BasisClosed.prototype = {
		    areaStart: noop,
		    areaEnd: noop,
		    lineStart: function() {
		      this._x0 = this._x1 = this._x2 = this._x3 = this._x4 =
		      this._y0 = this._y1 = this._y2 = this._y3 = this._y4 = NaN;
		      this._point = 0;
		    },
		    lineEnd: function() {
		      switch (this._point) {
		        case 1: {
		          this._context.moveTo(this._x2, this._y2);
		          this._context.closePath();
		          break;
		        }
		        case 2: {
		          this._context.moveTo((this._x2 + 2 * this._x3) / 3, (this._y2 + 2 * this._y3) / 3);
		          this._context.lineTo((this._x3 + 2 * this._x2) / 3, (this._y3 + 2 * this._y2) / 3);
		          this._context.closePath();
		          break;
		        }
		        case 3: {
		          this.point(this._x2, this._y2);
		          this.point(this._x3, this._y3);
		          this.point(this._x4, this._y4);
		          break;
		        }
		      }
		    },
		    point: function(x, y) {
		      x = +x, y = +y;
		      switch (this._point) {
		        case 0: this._point = 1; this._x2 = x, this._y2 = y; break;
		        case 1: this._point = 2; this._x3 = x, this._y3 = y; break;
		        case 2: this._point = 3; this._x4 = x, this._y4 = y; this._context.moveTo((this._x0 + 4 * this._x1 + x) / 6, (this._y0 + 4 * this._y1 + y) / 6); break;
		        default: point(this, x, y); break;
		      }
		      this._x0 = this._x1, this._x1 = x;
		      this._y0 = this._y1, this._y1 = y;
		    }
		  };
		
		  function basisClosed(context) {
		    return new BasisClosed(context);
		  }
		
		  function BasisOpen(context) {
		    this._context = context;
		  }
		
		  BasisOpen.prototype = {
		    areaStart: function() {
		      this._line = 0;
		    },
		    areaEnd: function() {
		      this._line = NaN;
		    },
		    lineStart: function() {
		      this._x0 = this._x1 =
		      this._y0 = this._y1 = NaN;
		      this._point = 0;
		    },
		    lineEnd: function() {
		      if (this._line || (this._line !== 0 && this._point === 3)) this._context.closePath();
		      this._line = 1 - this._line;
		    },
		    point: function(x, y) {
		      x = +x, y = +y;
		      switch (this._point) {
		        case 0: this._point = 1; break;
		        case 1: this._point = 2; break;
		        case 2: this._point = 3; var x0 = (this._x0 + 4 * this._x1 + x) / 6, y0 = (this._y0 + 4 * this._y1 + y) / 6; this._line ? this._context.lineTo(x0, y0) : this._context.moveTo(x0, y0); break;
		        case 3: this._point = 4; // proceed
		        default: point(this, x, y); break;
		      }
		      this._x0 = this._x1, this._x1 = x;
		      this._y0 = this._y1, this._y1 = y;
		    }
		  };
		
		  function basisOpen(context) {
		    return new BasisOpen(context);
		  }
		
		  function Bundle(context, beta) {
		    this._basis = new Basis(context);
		    this._beta = beta;
		  }
		
		  Bundle.prototype = {
		    lineStart: function() {
		      this._x = [];
		      this._y = [];
		      this._basis.lineStart();
		    },
		    lineEnd: function() {
		      var x = this._x,
		          y = this._y,
		          j = x.length - 1;
		
		      if (j > 0) {
		        var x0 = x[0],
		            y0 = y[0],
		            dx = x[j] - x0,
		            dy = y[j] - y0,
		            i = -1,
		            t;
		
		        while (++i <= j) {
		          t = i / j;
		          this._basis.point(
		            this._beta * x[i] + (1 - this._beta) * (x0 + t * dx),
		            this._beta * y[i] + (1 - this._beta) * (y0 + t * dy)
		          );
		        }
		      }
		
		      this._x = this._y = null;
		      this._basis.lineEnd();
		    },
		    point: function(x, y) {
		      this._x.push(+x);
		      this._y.push(+y);
		    }
		  };
		
		  var bundle = (function custom(beta) {
		
		    function bundle(context) {
		      return beta === 1 ? new Basis(context) : new Bundle(context, beta);
		    }
		
		    bundle.beta = function(beta) {
		      return custom(+beta);
		    };
		
		    return bundle;
		  })(0.85);
		
		  function point$1(that, x, y) {
		    that._context.bezierCurveTo(
		      that._x1 + that._k * (that._x2 - that._x0),
		      that._y1 + that._k * (that._y2 - that._y0),
		      that._x2 + that._k * (that._x1 - x),
		      that._y2 + that._k * (that._y1 - y),
		      that._x2,
		      that._y2
		    );
		  }
		
		  function Cardinal(context, tension) {
		    this._context = context;
		    this._k = (1 - tension) / 6;
		  }
		
		  Cardinal.prototype = {
		    areaStart: function() {
		      this._line = 0;
		    },
		    areaEnd: function() {
		      this._line = NaN;
		    },
		    lineStart: function() {
		      this._x0 = this._x1 = this._x2 =
		      this._y0 = this._y1 = this._y2 = NaN;
		      this._point = 0;
		    },
		    lineEnd: function() {
		      switch (this._point) {
		        case 2: this._context.lineTo(this._x2, this._y2); break;
		        case 3: point$1(this, this._x1, this._y1); break;
		      }
		      if (this._line || (this._line !== 0 && this._point === 1)) this._context.closePath();
		      this._line = 1 - this._line;
		    },
		    point: function(x, y) {
		      x = +x, y = +y;
		      switch (this._point) {
		        case 0: this._point = 1; this._line ? this._context.lineTo(x, y) : this._context.moveTo(x, y); break;
		        case 1: this._point = 2; this._x1 = x, this._y1 = y; break;
		        case 2: this._point = 3; // proceed
		        default: point$1(this, x, y); break;
		      }
		      this._x0 = this._x1, this._x1 = this._x2, this._x2 = x;
		      this._y0 = this._y1, this._y1 = this._y2, this._y2 = y;
		    }
		  };
		
		  var cardinal = (function custom(tension) {
		
		    function cardinal(context) {
		      return new Cardinal(context, tension);
		    }
		
		    cardinal.tension = function(tension) {
		      return custom(+tension);
		    };
		
		    return cardinal;
		  })(0);
		
		  function CardinalClosed(context, tension) {
		    this._context = context;
		    this._k = (1 - tension) / 6;
		  }
		
		  CardinalClosed.prototype = {
		    areaStart: noop,
		    areaEnd: noop,
		    lineStart: function() {
		      this._x0 = this._x1 = this._x2 = this._x3 = this._x4 = this._x5 =
		      this._y0 = this._y1 = this._y2 = this._y3 = this._y4 = this._y5 = NaN;
		      this._point = 0;
		    },
		    lineEnd: function() {
		      switch (this._point) {
		        case 1: {
		          this._context.moveTo(this._x3, this._y3);
		          this._context.closePath();
		          break;
		        }
		        case 2: {
		          this._context.lineTo(this._x3, this._y3);
		          this._context.closePath();
		          break;
		        }
		        case 3: {
		          this.point(this._x3, this._y3);
		          this.point(this._x4, this._y4);
		          this.point(this._x5, this._y5);
		          break;
		        }
		      }
		    },
		    point: function(x, y) {
		      x = +x, y = +y;
		      switch (this._point) {
		        case 0: this._point = 1; this._x3 = x, this._y3 = y; break;
		        case 1: this._point = 2; this._context.moveTo(this._x4 = x, this._y4 = y); break;
		        case 2: this._point = 3; this._x5 = x, this._y5 = y; break;
		        default: point$1(this, x, y); break;
		      }
		      this._x0 = this._x1, this._x1 = this._x2, this._x2 = x;
		      this._y0 = this._y1, this._y1 = this._y2, this._y2 = y;
		    }
		  };
		
		  var cardinalClosed = (function custom(tension) {
		
		    function cardinal(context) {
		      return new CardinalClosed(context, tension);
		    }
		
		    cardinal.tension = function(tension) {
		      return custom(+tension);
		    };
		
		    return cardinal;
		  })(0);
		
		  function CardinalOpen(context, tension) {
		    this._context = context;
		    this._k = (1 - tension) / 6;
		  }
		
		  CardinalOpen.prototype = {
		    areaStart: function() {
		      this._line = 0;
		    },
		    areaEnd: function() {
		      this._line = NaN;
		    },
		    lineStart: function() {
		      this._x0 = this._x1 = this._x2 =
		      this._y0 = this._y1 = this._y2 = NaN;
		      this._point = 0;
		    },
		    lineEnd: function() {
		      if (this._line || (this._line !== 0 && this._point === 3)) this._context.closePath();
		      this._line = 1 - this._line;
		    },
		    point: function(x, y) {
		      x = +x, y = +y;
		      switch (this._point) {
		        case 0: this._point = 1; break;
		        case 1: this._point = 2; break;
		        case 2: this._point = 3; this._line ? this._context.lineTo(this._x2, this._y2) : this._context.moveTo(this._x2, this._y2); break;
		        case 3: this._point = 4; // proceed
		        default: point$1(this, x, y); break;
		      }
		      this._x0 = this._x1, this._x1 = this._x2, this._x2 = x;
		      this._y0 = this._y1, this._y1 = this._y2, this._y2 = y;
		    }
		  };
		
		  var cardinalOpen = (function custom(tension) {
		
		    function cardinal(context) {
		      return new CardinalOpen(context, tension);
		    }
		
		    cardinal.tension = function(tension) {
		      return custom(+tension);
		    };
		
		    return cardinal;
		  })(0);
		
		  function point$2(that, x, y) {
		    var x1 = that._x1,
		        y1 = that._y1,
		        x2 = that._x2,
		        y2 = that._y2;
		
		    if (that._l01_a > epsilon) {
		      var a = 2 * that._l01_2a + 3 * that._l01_a * that._l12_a + that._l12_2a,
		          n = 3 * that._l01_a * (that._l01_a + that._l12_a);
		      x1 = (x1 * a - that._x0 * that._l12_2a + that._x2 * that._l01_2a) / n;
		      y1 = (y1 * a - that._y0 * that._l12_2a + that._y2 * that._l01_2a) / n;
		    }
		
		    if (that._l23_a > epsilon) {
		      var b = 2 * that._l23_2a + 3 * that._l23_a * that._l12_a + that._l12_2a,
		          m = 3 * that._l23_a * (that._l23_a + that._l12_a);
		      x2 = (x2 * b + that._x1 * that._l23_2a - x * that._l12_2a) / m;
		      y2 = (y2 * b + that._y1 * that._l23_2a - y * that._l12_2a) / m;
		    }
		
		    that._context.bezierCurveTo(x1, y1, x2, y2, that._x2, that._y2);
		  }
		
		  function CatmullRom(context, alpha) {
		    this._context = context;
		    this._alpha = alpha;
		  }
		
		  CatmullRom.prototype = {
		    areaStart: function() {
		      this._line = 0;
		    },
		    areaEnd: function() {
		      this._line = NaN;
		    },
		    lineStart: function() {
		      this._x0 = this._x1 = this._x2 =
		      this._y0 = this._y1 = this._y2 = NaN;
		      this._l01_a = this._l12_a = this._l23_a =
		      this._l01_2a = this._l12_2a = this._l23_2a =
		      this._point = 0;
		    },
		    lineEnd: function() {
		      switch (this._point) {
		        case 2: this._context.lineTo(this._x2, this._y2); break;
		        case 3: this.point(this, this._x2, this._y2); break;
		      }
		      if (this._line || (this._line !== 0 && this._point === 1)) this._context.closePath();
		      this._line = 1 - this._line;
		    },
		    point: function(x, y) {
		      x = +x, y = +y;
		
		      if (this._point) {
		        var x23 = this._x2 - x,
		            y23 = this._y2 - y;
		        this._l23_a = Math.sqrt(this._l23_2a = Math.pow(x23 * x23 + y23 * y23, this._alpha));
		      }
		
		      switch (this._point) {
		        case 0: this._point = 1; this._line ? this._context.lineTo(x, y) : this._context.moveTo(x, y); break;
		        case 1: this._point = 2; break;
		        case 2: this._point = 3; // proceed
		        default: point$2(this, x, y); break;
		      }
		
		      this._l01_a = this._l12_a, this._l12_a = this._l23_a;
		      this._l01_2a = this._l12_2a, this._l12_2a = this._l23_2a;
		      this._x0 = this._x1, this._x1 = this._x2, this._x2 = x;
		      this._y0 = this._y1, this._y1 = this._y2, this._y2 = y;
		    }
		  };
		
		  var catmullRom = (function custom(alpha) {
		
		    function catmullRom(context) {
		      return alpha ? new CatmullRom(context, alpha) : new Cardinal(context, 0);
		    }
		
		    catmullRom.alpha = function(alpha) {
		      return custom(+alpha);
		    };
		
		    return catmullRom;
		  })(0.5);
		
		  function CatmullRomClosed(context, alpha) {
		    this._context = context;
		    this._alpha = alpha;
		  }
		
		  CatmullRomClosed.prototype = {
		    areaStart: noop,
		    areaEnd: noop,
		    lineStart: function() {
		      this._x0 = this._x1 = this._x2 = this._x3 = this._x4 = this._x5 =
		      this._y0 = this._y1 = this._y2 = this._y3 = this._y4 = this._y5 = NaN;
		      this._l01_a = this._l12_a = this._l23_a =
		      this._l01_2a = this._l12_2a = this._l23_2a =
		      this._point = 0;
		    },
		    lineEnd: function() {
		      switch (this._point) {
		        case 1: {
		          this._context.moveTo(this._x3, this._y3);
		          this._context.closePath();
		          break;
		        }
		        case 2: {
		          this._context.lineTo(this._x3, this._y3);
		          this._context.closePath();
		          break;
		        }
		        case 3: {
		          this.point(this._x3, this._y3);
		          this.point(this._x4, this._y4);
		          this.point(this._x5, this._y5);
		          break;
		        }
		      }
		    },
		    point: function(x, y) {
		      x = +x, y = +y;
		
		      if (this._point) {
		        var x23 = this._x2 - x,
		            y23 = this._y2 - y;
		        this._l23_a = Math.sqrt(this._l23_2a = Math.pow(x23 * x23 + y23 * y23, this._alpha));
		      }
		
		      switch (this._point) {
		        case 0: this._point = 1; this._x3 = x, this._y3 = y; break;
		        case 1: this._point = 2; this._context.moveTo(this._x4 = x, this._y4 = y); break;
		        case 2: this._point = 3; this._x5 = x, this._y5 = y; break;
		        default: point$2(this, x, y); break;
		      }
		
		      this._l01_a = this._l12_a, this._l12_a = this._l23_a;
		      this._l01_2a = this._l12_2a, this._l12_2a = this._l23_2a;
		      this._x0 = this._x1, this._x1 = this._x2, this._x2 = x;
		      this._y0 = this._y1, this._y1 = this._y2, this._y2 = y;
		    }
		  };
		
		  var catmullRomClosed = (function custom(alpha) {
		
		    function catmullRom(context) {
		      return alpha ? new CatmullRomClosed(context, alpha) : new CardinalClosed(context, 0);
		    }
		
		    catmullRom.alpha = function(alpha) {
		      return custom(+alpha);
		    };
		
		    return catmullRom;
		  })(0.5);
		
		  function CatmullRomOpen(context, alpha) {
		    this._context = context;
		    this._alpha = alpha;
		  }
		
		  CatmullRomOpen.prototype = {
		    areaStart: function() {
		      this._line = 0;
		    },
		    areaEnd: function() {
		      this._line = NaN;
		    },
		    lineStart: function() {
		      this._x0 = this._x1 = this._x2 =
		      this._y0 = this._y1 = this._y2 = NaN;
		      this._l01_a = this._l12_a = this._l23_a =
		      this._l01_2a = this._l12_2a = this._l23_2a =
		      this._point = 0;
		    },
		    lineEnd: function() {
		      if (this._line || (this._line !== 0 && this._point === 3)) this._context.closePath();
		      this._line = 1 - this._line;
		    },
		    point: function(x, y) {
		      x = +x, y = +y;
		
		      if (this._point) {
		        var x23 = this._x2 - x,
		            y23 = this._y2 - y;
		        this._l23_a = Math.sqrt(this._l23_2a = Math.pow(x23 * x23 + y23 * y23, this._alpha));
		      }
		
		      switch (this._point) {
		        case 0: this._point = 1; break;
		        case 1: this._point = 2; break;
		        case 2: this._point = 3; this._line ? this._context.lineTo(this._x2, this._y2) : this._context.moveTo(this._x2, this._y2); break;
		        case 3: this._point = 4; // proceed
		        default: point$2(this, x, y); break;
		      }
		
		      this._l01_a = this._l12_a, this._l12_a = this._l23_a;
		      this._l01_2a = this._l12_2a, this._l12_2a = this._l23_2a;
		      this._x0 = this._x1, this._x1 = this._x2, this._x2 = x;
		      this._y0 = this._y1, this._y1 = this._y2, this._y2 = y;
		    }
		  };
		
		  var catmullRomOpen = (function custom(alpha) {
		
		    function catmullRom(context) {
		      return alpha ? new CatmullRomOpen(context, alpha) : new CardinalOpen(context, 0);
		    }
		
		    catmullRom.alpha = function(alpha) {
		      return custom(+alpha);
		    };
		
		    return catmullRom;
		  })(0.5);
		
		  function LinearClosed(context) {
		    this._context = context;
		  }
		
		  LinearClosed.prototype = {
		    areaStart: noop,
		    areaEnd: noop,
		    lineStart: function() {
		      this._point = 0;
		    },
		    lineEnd: function() {
		      if (this._point) this._context.closePath();
		    },
		    point: function(x, y) {
		      x = +x, y = +y;
		      if (this._point) this._context.lineTo(x, y);
		      else this._point = 1, this._context.moveTo(x, y);
		    }
		  };
		
		  function linearClosed(context) {
		    return new LinearClosed(context);
		  }
		
		  function sign(x) {
		    return x < 0 ? -1 : 1;
		  }
		
		  // Calculate the slopes of the tangents (Hermite-type interpolation) based on
		  // the following paper: Steffen, M. 1990. A Simple Method for Monotonic
		  // Interpolation in One Dimension. Astronomy and Astrophysics, Vol. 239, NO.
		  // NOV(II), P. 443, 1990.
		  function slope3(that, x2, y2) {
		    var h0 = that._x1 - that._x0,
		        h1 = x2 - that._x1,
		        s0 = (that._y1 - that._y0) / (h0 || h1 < 0 && -0),
		        s1 = (y2 - that._y1) / (h1 || h0 < 0 && -0),
		        p = (s0 * h1 + s1 * h0) / (h0 + h1);
		    return (sign(s0) + sign(s1)) * Math.min(Math.abs(s0), Math.abs(s1), 0.5 * Math.abs(p)) || 0;
		  }
		
		  // Calculate a one-sided slope.
		  function slope2(that, t) {
		    var h = that._x1 - that._x0;
		    return h ? (3 * (that._y1 - that._y0) / h - t) / 2 : t;
		  }
		
		  // According to https://en.wikipedia.org/wiki/Cubic_Hermite_spline#Representations
		  // "you can express cubic Hermite interpolation in terms of cubic Bézier curves
		  // with respect to the four values p0, p0 + m0 / 3, p1 - m1 / 3, p1".
		  function point$3(that, t0, t1) {
		    var x0 = that._x0,
		        y0 = that._y0,
		        x1 = that._x1,
		        y1 = that._y1,
		        dx = (x1 - x0) / 3;
		    that._context.bezierCurveTo(x0 + dx, y0 + dx * t0, x1 - dx, y1 - dx * t1, x1, y1);
		  }
		
		  function MonotoneX(context) {
		    this._context = context;
		  }
		
		  MonotoneX.prototype = {
		    areaStart: function() {
		      this._line = 0;
		    },
		    areaEnd: function() {
		      this._line = NaN;
		    },
		    lineStart: function() {
		      this._x0 = this._x1 =
		      this._y0 = this._y1 =
		      this._t0 = NaN;
		      this._point = 0;
		    },
		    lineEnd: function() {
		      switch (this._point) {
		        case 2: this._context.lineTo(this._x1, this._y1); break;
		        case 3: point$3(this, this._t0, slope2(this, this._t0)); break;
		      }
		      if (this._line || (this._line !== 0 && this._point === 1)) this._context.closePath();
		      this._line = 1 - this._line;
		    },
		    point: function(x, y) {
		      var t1 = NaN;
		
		      x = +x, y = +y;
		      if (x === this._x1 && y === this._y1) return; // Ignore coincident points.
		      switch (this._point) {
		        case 0: this._point = 1; this._line ? this._context.lineTo(x, y) : this._context.moveTo(x, y); break;
		        case 1: this._point = 2; break;
		        case 2: this._point = 3; point$3(this, slope2(this, t1 = slope3(this, x, y)), t1); break;
		        default: point$3(this, this._t0, t1 = slope3(this, x, y)); break;
		      }
		
		      this._x0 = this._x1, this._x1 = x;
		      this._y0 = this._y1, this._y1 = y;
		      this._t0 = t1;
		    }
		  }
		
		  function MonotoneY(context) {
		    this._context = new ReflectContext(context);
		  }
		
		  (MonotoneY.prototype = Object.create(MonotoneX.prototype)).point = function(x, y) {
		    MonotoneX.prototype.point.call(this, y, x);
		  };
		
		  function ReflectContext(context) {
		    this._context = context;
		  }
		
		  ReflectContext.prototype = {
		    moveTo: function(x, y) { this._context.moveTo(y, x); },
		    closePath: function() { this._context.closePath(); },
		    lineTo: function(x, y) { this._context.lineTo(y, x); },
		    bezierCurveTo: function(x1, y1, x2, y2, x, y) { this._context.bezierCurveTo(y1, x1, y2, x2, y, x); }
		  };
		
		  function monotoneX(context) {
		    return new MonotoneX(context);
		  }
		
		  function monotoneY(context) {
		    return new MonotoneY(context);
		  }
		
		  function Natural(context) {
		    this._context = context;
		  }
		
		  Natural.prototype = {
		    areaStart: function() {
		      this._line = 0;
		    },
		    areaEnd: function() {
		      this._line = NaN;
		    },
		    lineStart: function() {
		      this._x = [];
		      this._y = [];
		    },
		    lineEnd: function() {
		      var x = this._x,
		          y = this._y,
		          n = x.length;
		
		      if (n) {
		        this._line ? this._context.lineTo(x[0], y[0]) : this._context.moveTo(x[0], y[0]);
		        if (n === 2) {
		          this._context.lineTo(x[1], y[1]);
		        } else {
		          var px = controlPoints(x),
		              py = controlPoints(y);
		          for (var i0 = 0, i1 = 1; i1 < n; ++i0, ++i1) {
		            this._context.bezierCurveTo(px[0][i0], py[0][i0], px[1][i0], py[1][i0], x[i1], y[i1]);
		          }
		        }
		      }
		
		      if (this._line || (this._line !== 0 && n === 1)) this._context.closePath();
		      this._line = 1 - this._line;
		      this._x = this._y = null;
		    },
		    point: function(x, y) {
		      this._x.push(+x);
		      this._y.push(+y);
		    }
		  };
		
		  // See https://www.particleincell.com/2012/bezier-splines/ for derivation.
		  function controlPoints(x) {
		    var i,
		        n = x.length - 1,
		        m,
		        a = new Array(n),
		        b = new Array(n),
		        r = new Array(n);
		    a[0] = 0, b[0] = 2, r[0] = x[0] + 2 * x[1];
		    for (i = 1; i < n - 1; ++i) a[i] = 1, b[i] = 4, r[i] = 4 * x[i] + 2 * x[i + 1];
		    a[n - 1] = 2, b[n - 1] = 7, r[n - 1] = 8 * x[n - 1] + x[n];
		    for (i = 1; i < n; ++i) m = a[i] / b[i - 1], b[i] -= m, r[i] -= m * r[i - 1];
		    a[n - 1] = r[n - 1] / b[n - 1];
		    for (i = n - 2; i >= 0; --i) a[i] = (r[i] - a[i + 1]) / b[i];
		    b[n - 1] = (x[n] + a[n - 1]) / 2;
		    for (i = 0; i < n - 1; ++i) b[i] = 2 * x[i + 1] - a[i + 1];
		    return [a, b];
		  }
		
		  function natural(context) {
		    return new Natural(context);
		  }
		
		  function Step(context, t) {
		    this._context = context;
		    this._t = t;
		  }
		
		  Step.prototype = {
		    areaStart: function() {
		      this._line = 0;
		    },
		    areaEnd: function() {
		      this._line = NaN;
		    },
		    lineStart: function() {
		      this._x = this._y = NaN;
		      this._point = 0;
		    },
		    lineEnd: function() {
		      if (0 < this._t && this._t < 1 && this._point === 2) this._context.lineTo(this._x, this._y);
		      if (this._line || (this._line !== 0 && this._point === 1)) this._context.closePath();
		      this._line = 1 - this._line;
		    },
		    point: function(x, y) {
		      x = +x, y = +y;
		      switch (this._point) {
		        case 0: this._point = 1; this._line ? this._context.lineTo(x, y) : this._context.moveTo(x, y); break;
		        case 1: this._point = 2; // proceed
		        default: {
		          var t = x > this._x ? this._t : 1 - this._t;
		          if (t <= 0) {
		            this._context.lineTo(this._x, y);
		            this._context.lineTo(x, y);
		          } else if (t >= 1) {
		            this._context.lineTo(x, this._y);
		            this._context.lineTo(x, y);
		          } else {
		            var x1 = (this._x + x) * t;
		            this._context.lineTo(x1, this._y);
		            this._context.lineTo(x1, y);
		          }
		          break;
		        }
		      }
		      this._x = x, this._y = y;
		    }
		  };
		
		  function step(context) {
		    return new Step(context, 0.5);
		  }
		
		  function stepBefore(context) {
		    return new Step(context, 0);
		  }
		
		  function stepAfter(context) {
		    return new Step(context, 1);
		  }
		
		  var slice = Array.prototype.slice;
		
		  function none(series, order) {
		    if (!((n = series.length) > 1)) return;
		    for (var i = 1, s0, s1 = series[order[0]], n, m = s1.length; i < n; ++i) {
		      s0 = s1, s1 = series[order[i]];
		      for (var j = 0; j < m; ++j) {
		        s1[j][1] += s1[j][0] = isNaN(s0[j][1]) ? s0[j][0] : s0[j][1];
		      }
		    }
		  }
		
		  function none$1(series) {
		    var n = series.length, o = new Array(n);
		    while (--n >= 0) o[n] = n;
		    return o;
		  }
		
		  function stackValue(d, key) {
		    return d[key];
		  }
		
		  function stack() {
		    var keys = constant([]),
		        order = none$1,
		        offset = none,
		        value = stackValue;
		
		    function stack(data) {
		      var kz = keys.apply(this, arguments),
		          i,
		          m = data.length,
		          n = kz.length,
		          sz = new Array(n),
		          oz;
		
		      for (i = 0; i < n; ++i) {
		        for (var ki = kz[i], si = sz[i] = new Array(m), j = 0, sij; j < m; ++j) {
		          si[j] = sij = [0, +value(data[j], ki, j, data)];
		          sij.data = data[j];
		        }
		        si.key = ki;
		      }
		
		      for (i = 0, oz = order(sz); i < n; ++i) {
		        sz[oz[i]].index = i;
		      }
		
		      offset(sz, oz);
		      return sz;
		    }
		
		    stack.keys = function(_) {
		      return arguments.length ? (keys = typeof _ === "function" ? _ : constant(slice.call(_)), stack) : keys;
		    };
		
		    stack.value = function(_) {
		      return arguments.length ? (value = typeof _ === "function" ? _ : constant(+_), stack) : value;
		    };
		
		    stack.order = function(_) {
		      return arguments.length ? (order = _ == null ? none$1 : typeof _ === "function" ? _ : constant(slice.call(_)), stack) : order;
		    };
		
		    stack.offset = function(_) {
		      return arguments.length ? (offset = _ == null ? none : _, stack) : offset;
		    };
		
		    return stack;
		  }
		
		  function expand(series, order) {
		    if (!((n = series.length) > 0)) return;
		    for (var i, n, j = 0, m = series[0].length, y; j < m; ++j) {
		      for (y = i = 0; i < n; ++i) y += series[i][j][1] || 0;
		      if (y) for (i = 0; i < n; ++i) series[i][j][1] /= y;
		    }
		    none(series, order);
		  }
		
		  function silhouette(series, order) {
		    if (!((n = series.length) > 0)) return;
		    for (var j = 0, s0 = series[order[0]], n, m = s0.length; j < m; ++j) {
		      for (var i = 0, y = 0; i < n; ++i) y += series[i][j][1] || 0;
		      s0[j][1] += s0[j][0] = -y / 2;
		    }
		    none(series, order);
		  }
		
		  function wiggle(series, order) {
		    if (!((n = series.length) > 0) || !((m = (s0 = series[order[0]]).length) > 0)) return;
		    for (var y = 0, j = 1, s0, m, n; j < m; ++j) {
		      for (var i = 0, s1 = 0, s2 = 0; i < n; ++i) {
		        var si = series[order[i]],
		            sij0 = si[j][1] || 0,
		            sij1 = si[j - 1][1] || 0,
		            s3 = (sij0 - sij1) / 2;
		        for (var k = 0; k < i; ++k) {
		          var sk = series[order[k]],
		              skj0 = sk[j][1] || 0,
		              skj1 = sk[j - 1][1] || 0;
		          s3 += skj0 - skj1;
		        }
		        s1 += sij0, s2 += s3 * sij0;
		      }
		      s0[j - 1][1] += s0[j - 1][0] = y;
		      if (s1) y -= s2 / s1;
		    }
		    s0[j - 1][1] += s0[j - 1][0] = y;
		    none(series, order);
		  }
		
		  function ascending(series) {
		    var sums = series.map(sum);
		    return none$1(series).sort(function(a, b) { return sums[a] - sums[b]; });
		  }
		
		  function sum(series) {
		    var s = 0, i = -1, n = series.length, v;
		    while (++i < n) if (v = +series[i][1]) s += v;
		    return s;
		  }
		
		  function descending$1(series) {
		    return ascending(series).reverse();
		  }
		
		  function insideOut(series) {
		    var n = series.length,
		        i,
		        j,
		        sums = series.map(sum),
		        order = none$1(series).sort(function(a, b) { return sums[b] - sums[a]; }),
		        top = 0,
		        bottom = 0,
		        tops = [],
		        bottoms = [];
		
		    for (i = 0; i < n; ++i) {
		      j = order[i];
		      if (top < bottom) {
		        top += sums[j];
		        tops.push(j);
		      } else {
		        bottom += sums[j];
		        bottoms.push(j);
		      }
		    }
		
		    return bottoms.reverse().concat(tops);
		  }
		
		  function reverse(series) {
		    return none$1(series).reverse();
		  }
		
		  exports.version = version;
		  exports.arc = arc;
		  exports.area = area;
		  exports.line = line;
		  exports.pie = pie;
		  exports.radialArea = radialArea;
		  exports.radialLine = radialLine;
		  exports.symbol = symbol;
		  exports.symbols = symbols;
		  exports.symbolCircle = circle;
		  exports.symbolCross = cross;
		  exports.symbolDiamond = diamond;
		  exports.symbolSquare = square;
		  exports.symbolStar = star;
		  exports.symbolTriangle = triangle;
		  exports.symbolWye = wye;
		  exports.curveBasisClosed = basisClosed;
		  exports.curveBasisOpen = basisOpen;
		  exports.curveBasis = basis;
		  exports.curveBundle = bundle;
		  exports.curveCardinalClosed = cardinalClosed;
		  exports.curveCardinalOpen = cardinalOpen;
		  exports.curveCardinal = cardinal;
		  exports.curveCatmullRomClosed = catmullRomClosed;
		  exports.curveCatmullRomOpen = catmullRomOpen;
		  exports.curveCatmullRom = catmullRom;
		  exports.curveLinearClosed = linearClosed;
		  exports.curveLinear = curveLinear;
		  exports.curveMonotoneX = monotoneX;
		  exports.curveMonotoneY = monotoneY;
		  exports.curveNatural = natural;
		  exports.curveStep = step;
		  exports.curveStepAfter = stepAfter;
		  exports.curveStepBefore = stepBefore;
		  exports.stack = stack;
		  exports.stackOffsetExpand = expand;
		  exports.stackOffsetNone = none;
		  exports.stackOffsetSilhouette = silhouette;
		  exports.stackOffsetWiggle = wiggle;
		  exports.stackOrderAscending = ascending;
		  exports.stackOrderDescending = descending$1;
		  exports.stackOrderInsideOut = insideOut;
		  exports.stackOrderNone = none$1;
		  exports.stackOrderReverse = reverse;
		
		}));

	/***/ },
	/* 372 */
	/***/ function(module, exports, __webpack_require__) {

		(function (global, factory) {
		   true ? factory(exports) :
		  typeof define === 'function' && define.amd ? define(['exports'], factory) :
		  (factory((global.d3_path = global.d3_path || {})));
		}(this, function (exports) { 'use strict';
		
		  var pi = Math.PI;
		  var tau = 2 * pi;
		  var epsilon = 1e-6;
		  var tauEpsilon = tau - epsilon;
		  function Path() {
		    this._x0 = this._y0 = // start of current subpath
		    this._x1 = this._y1 = null; // end of current subpath
		    this._ = [];
		  }
		
		  function path() {
		    return new Path;
		  }
		
		  Path.prototype = path.prototype = {
		    constructor: Path,
		    moveTo: function(x, y) {
		      this._.push("M", this._x0 = this._x1 = +x, ",", this._y0 = this._y1 = +y);
		    },
		    closePath: function() {
		      if (this._x1 !== null) {
		        this._x1 = this._x0, this._y1 = this._y0;
		        this._.push("Z");
		      }
		    },
		    lineTo: function(x, y) {
		      this._.push("L", this._x1 = +x, ",", this._y1 = +y);
		    },
		    quadraticCurveTo: function(x1, y1, x, y) {
		      this._.push("Q", +x1, ",", +y1, ",", this._x1 = +x, ",", this._y1 = +y);
		    },
		    bezierCurveTo: function(x1, y1, x2, y2, x, y) {
		      this._.push("C", +x1, ",", +y1, ",", +x2, ",", +y2, ",", this._x1 = +x, ",", this._y1 = +y);
		    },
		    arcTo: function(x1, y1, x2, y2, r) {
		      x1 = +x1, y1 = +y1, x2 = +x2, y2 = +y2, r = +r;
		      var x0 = this._x1,
		          y0 = this._y1,
		          x21 = x2 - x1,
		          y21 = y2 - y1,
		          x01 = x0 - x1,
		          y01 = y0 - y1,
		          l01_2 = x01 * x01 + y01 * y01;
		
		      // Is the radius negative? Error.
		      if (r < 0) throw new Error("negative radius: " + r);
		
		      // Is this path empty? Move to (x1,y1).
		      if (this._x1 === null) {
		        this._.push(
		          "M", this._x1 = x1, ",", this._y1 = y1
		        );
		      }
		
		      // Or, is (x1,y1) coincident with (x0,y0)? Do nothing.
		      else if (!(l01_2 > epsilon));
		
		      // Or, are (x0,y0), (x1,y1) and (x2,y2) collinear?
		      // Equivalently, is (x1,y1) coincident with (x2,y2)?
		      // Or, is the radius zero? Line to (x1,y1).
		      else if (!(Math.abs(y01 * x21 - y21 * x01) > epsilon) || !r) {
		        this._.push(
		          "L", this._x1 = x1, ",", this._y1 = y1
		        );
		      }
		
		      // Otherwise, draw an arc!
		      else {
		        var x20 = x2 - x0,
		            y20 = y2 - y0,
		            l21_2 = x21 * x21 + y21 * y21,
		            l20_2 = x20 * x20 + y20 * y20,
		            l21 = Math.sqrt(l21_2),
		            l01 = Math.sqrt(l01_2),
		            l = r * Math.tan((pi - Math.acos((l21_2 + l01_2 - l20_2) / (2 * l21 * l01))) / 2),
		            t01 = l / l01,
		            t21 = l / l21;
		
		        // If the start tangent is not coincident with (x0,y0), line to.
		        if (Math.abs(t01 - 1) > epsilon) {
		          this._.push(
		            "L", x1 + t01 * x01, ",", y1 + t01 * y01
		          );
		        }
		
		        this._.push(
		          "A", r, ",", r, ",0,0,", +(y01 * x20 > x01 * y20), ",", this._x1 = x1 + t21 * x21, ",", this._y1 = y1 + t21 * y21
		        );
		      }
		    },
		    arc: function(x, y, r, a0, a1, ccw) {
		      x = +x, y = +y, r = +r;
		      var dx = r * Math.cos(a0),
		          dy = r * Math.sin(a0),
		          x0 = x + dx,
		          y0 = y + dy,
		          cw = 1 ^ ccw,
		          da = ccw ? a0 - a1 : a1 - a0;
		
		      // Is the radius negative? Error.
		      if (r < 0) throw new Error("negative radius: " + r);
		
		      // Is this path empty? Move to (x0,y0).
		      if (this._x1 === null) {
		        this._.push(
		          "M", x0, ",", y0
		        );
		      }
		
		      // Or, is (x0,y0) not coincident with the previous point? Line to (x0,y0).
		      else if (Math.abs(this._x1 - x0) > epsilon || Math.abs(this._y1 - y0) > epsilon) {
		        this._.push(
		          "L", x0, ",", y0
		        );
		      }
		
		      // Is this arc empty? We’re done.
		      if (!r) return;
		
		      // Is this a complete circle? Draw two arcs to complete the circle.
		      if (da > tauEpsilon) {
		        this._.push(
		          "A", r, ",", r, ",0,1,", cw, ",", x - dx, ",", y - dy,
		          "A", r, ",", r, ",0,1,", cw, ",", this._x1 = x0, ",", this._y1 = y0
		        );
		      }
		
		      // Otherwise, draw an arc!
		      else {
		        if (da < 0) da = da % tau + tau;
		        this._.push(
		          "A", r, ",", r, ",0,", +(da >= pi), ",", cw, ",", this._x1 = x + r * Math.cos(a1), ",", this._y1 = y + r * Math.sin(a1)
		        );
		      }
		    },
		    rect: function(x, y, w, h) {
		      this._.push("M", this._x0 = this._x1 = +x, ",", this._y0 = this._y1 = +y, "h", +w, "v", +h, "h", -w, "Z");
		    },
		    toString: function() {
		      return this._.join("");
		    }
		  };
		
		  var version = "0.1.5";
		
		  exports.version = version;
		  exports.path = path;
		
		}));

	/***/ },
	/* 373 */
	/***/ function(module, exports, __webpack_require__) {

		"use strict";
		
		Object.defineProperty(exports, "__esModule", {
		  value: true
		});
		
		var _createClass = function () { function defineProperties(target, props) { for (var i = 0; i < props.length; i++) { var descriptor = props[i]; descriptor.enumerable = descriptor.enumerable || false; descriptor.configurable = true; if ("value" in descriptor) descriptor.writable = true; Object.defineProperty(target, descriptor.key, descriptor); } } return function (Constructor, protoProps, staticProps) { if (protoProps) defineProperties(Constructor.prototype, protoProps); if (staticProps) defineProperties(Constructor, staticProps); return Constructor; }; }();
		
		var _defaults = __webpack_require__(175);
		
		var _defaults2 = _interopRequireDefault(_defaults);
		
		var _react = __webpack_require__(157);
		
		var _react2 = _interopRequireDefault(_react);
		
		var _victoryCore = __webpack_require__(1);
		
		function _interopRequireDefault(obj) { return obj && obj.__esModule ? obj : { default: obj }; }
		
		function _classCallCheck(instance, Constructor) { if (!(instance instanceof Constructor)) { throw new TypeError("Cannot call a class as a function"); } }
		
		function _possibleConstructorReturn(self, call) { if (!self) { throw new ReferenceError("this hasn't been initialised - super() hasn't been called"); } return call && (typeof call === "object" || typeof call === "function") ? call : self; }
		
		function _inherits(subClass, superClass) { if (typeof superClass !== "function" && superClass !== null) { throw new TypeError("Super expression must either be null or a function, not " + typeof superClass); } subClass.prototype = Object.create(superClass && superClass.prototype, { constructor: { value: subClass, enumerable: false, writable: true, configurable: true } }); if (superClass) Object.setPrototypeOf ? Object.setPrototypeOf(subClass, superClass) : subClass.__proto__ = superClass; }
		
		var LineLabel = function (_React$Component) {
		  _inherits(LineLabel, _React$Component);
		
		  function LineLabel() {
		    _classCallCheck(this, LineLabel);
		
		    return _possibleConstructorReturn(this, Object.getPrototypeOf(LineLabel).apply(this, arguments));
		  }
		
		  _createClass(LineLabel, [{
		    key: "renderLabelComponent",
		    value: function renderLabelComponent(props) {
		      var component = props.label;
		      var baseStyle = (0, _defaults2.default)({}, component.props.style, props.style, { padding: 0 });
		      var style = _victoryCore.Helpers.evaluateStyle(baseStyle, props.data);
		      var baseEvents = component && component.props.events ? (0, _defaults2.default)({}, component.props.events, props.events) : props.events;
		      var events = _victoryCore.Helpers.getPartialEvents(baseEvents, 0, props);
		      var newProps = {
		        x: component.props.x || props.position.x + style.padding,
		        y: component.props.y || props.position.y - style.padding,
		        data: props.data,
		        text: component.props.text,
		        textAnchor: component.props.textAnchor || "start",
		        verticalAnchor: component.props.verticalAnchor || "middle",
		        style: style,
		        events: events
		      };
		      return _react2.default.cloneElement(component, newProps);
		    }
		  }, {
		    key: "renderVictoryLabel",
		    value: function renderVictoryLabel(props) {
		      var style = _victoryCore.Helpers.evaluateStyle((0, _defaults2.default)({}, props.style), props.data, { padding: 0 });
		      var events = _victoryCore.Helpers.getPartialEvents(this.props.events, 0, this.props);
		      return _react2.default.createElement(_victoryCore.VictoryLabel, {
		        x: props.position.x + style.padding,
		        y: props.position.y - style.padding,
		        data: props.data,
		        textAnchor: "start",
		        verticalAnchor: "middle",
		        style: style,
		        text: props.label,
		        events: events
		      });
		    }
		  }, {
		    key: "renderLabel",
		    value: function renderLabel(props) {
		      return props.label && props.label.props ? this.renderLabelComponent(props) : this.renderVictoryLabel(props);
		    }
		  }, {
		    key: "render",
		    value: function render() {
		      return _react2.default.createElement(
		        "g",
		        null,
		        this.renderLabel(this.props)
		      );
		    }
		  }]);
		
		  return LineLabel;
		}(_react2.default.Component);
		
		LineLabel.propTypes = {
		  data: _react.PropTypes.array,
		  events: _react.PropTypes.object,
		  label: _react.PropTypes.any,
		  position: _react.PropTypes.object,
		  style: _react.PropTypes.object
		};
		exports.default = LineLabel;

	/***/ },
	/* 374 */
	/***/ function(module, exports, __webpack_require__) {

		"use strict";
		
		Object.defineProperty(exports, "__esModule", {
		  value: true
		});
		
		var _extends = Object.assign || function (target) { for (var i = 1; i < arguments.length; i++) { var source = arguments[i]; for (var key in source) { if (Object.prototype.hasOwnProperty.call(source, key)) { target[key] = source[key]; } } } return target; };
		
		var _createClass = function () { function defineProperties(target, props) { for (var i = 0; i < props.length; i++) { var descriptor = props[i]; descriptor.enumerable = descriptor.enumerable || false; descriptor.configurable = true; if ("value" in descriptor) descriptor.writable = true; Object.defineProperty(target, descriptor.key, descriptor); } } return function (Constructor, protoProps, staticProps) { if (protoProps) defineProperties(Constructor.prototype, protoProps); if (staticProps) defineProperties(Constructor, staticProps); return Constructor; }; }();
		
		var _last = __webpack_require__(327);
		
		var _last2 = _interopRequireDefault(_last);
		
		var _assign = __webpack_require__(278);
		
		var _assign2 = _interopRequireDefault(_assign);
		
		var _react = __webpack_require__(157);
		
		var _react2 = _interopRequireDefault(_react);
		
		var _data = __webpack_require__(271);
		
		var _data2 = _interopRequireDefault(_data);
		
		var _domain = __webpack_require__(270);
		
		var _domain2 = _interopRequireDefault(_domain);
		
		var _scale = __webpack_require__(257);
		
		var _scale2 = _interopRequireDefault(_scale);
		
		var _victoryCore = __webpack_require__(1);
		
		var _area = __webpack_require__(375);
		
		var _area2 = _interopRequireDefault(_area);
		
		var _areaLabel = __webpack_require__(376);
		
		var _areaLabel2 = _interopRequireDefault(_areaLabel);
		
		function _interopRequireDefault(obj) { return obj && obj.__esModule ? obj : { default: obj }; }
		
		function _toConsumableArray(arr) { if (Array.isArray(arr)) { for (var i = 0, arr2 = Array(arr.length); i < arr.length; i++) { arr2[i] = arr[i]; } return arr2; } else { return Array.from(arr); } }
		
		function _classCallCheck(instance, Constructor) { if (!(instance instanceof Constructor)) { throw new TypeError("Cannot call a class as a function"); } }
		
		function _possibleConstructorReturn(self, call) { if (!self) { throw new ReferenceError("this hasn't been initialised - super() hasn't been called"); } return call && (typeof call === "object" || typeof call === "function") ? call : self; }
		
		function _inherits(subClass, superClass) { if (typeof superClass !== "function" && superClass !== null) { throw new TypeError("Super expression must either be null or a function, not " + typeof superClass); } subClass.prototype = Object.create(superClass && superClass.prototype, { constructor: { value: subClass, enumerable: false, writable: true, configurable: true } }); if (superClass) Object.setPrototypeOf ? Object.setPrototypeOf(subClass, superClass) : subClass.__proto__ = superClass; }
		
		var defaultStyles = {
		  data: {
		    fill: "#756f6a",
		    opacity: 1
		  },
		  labels: {
		    fontSize: 12,
		    padding: 4,
		    fill: "black"
		  }
		};
		
		var VictoryArea = function (_React$Component) {
		  _inherits(VictoryArea, _React$Component);
		
		  function VictoryArea() {
		    _classCallCheck(this, VictoryArea);
		
		    return _possibleConstructorReturn(this, Object.getPrototypeOf(VictoryArea).apply(this, arguments));
		  }
		
		  _createClass(VictoryArea, [{
		    key: "componentWillMount",
		    value: function componentWillMount() {
		      this.state = {
		        dataState: {},
		        labelsState: {}
		      };
		    }
		  }, {
		    key: "getBaseline",
		    value: function getBaseline(calculatedProps) {
		      var data = calculatedProps.data;
		      var domain = calculatedProps.domain;
		
		      var minY = Math.min.apply(Math, _toConsumableArray(domain.y)) > 0 ? Math.min.apply(Math, _toConsumableArray(domain.y)) : 0;
		      return data.map(function (datum) {
		        var y0 = datum.yOffset || minY;
		        return (0, _assign2.default)({ y0: y0 }, datum);
		      });
		    }
		  }, {
		    key: "renderArea",
		    value: function renderArea(props, calculatedProps) {
		      var scale = calculatedProps.scale;
		      var style = calculatedProps.style;
		      var interpolation = props.interpolation;
		      var events = props.events;
		      var label = props.label;
		      var labelComponent = props.labelComponent;
		      var dataComponent = props.dataComponent;
		
		      var getBoundEvents = _victoryCore.Helpers.getEvents.bind(this);
		      var dataEvents = getBoundEvents(events.data, "data");
		      var data = this.getBaseline(calculatedProps);
		      var areaProps = (0, _assign2.default)({ scale: scale, interpolation: interpolation, data: data, events: dataEvents, style: style.data }, this.state.dataState[0]);
		      var areaComponent = _react2.default.cloneElement(dataComponent, areaProps);
		      if (label) {
		        var lastData = (0, _last2.default)(data);
		        var position = {
		          x: scale.x.call(this, lastData.x),
		          y: scale.y.call(this, lastData.y + lastData.y0)
		        };
		        return _react2.default.createElement(
		          "g",
		          null,
		          areaComponent,
		          _react2.default.createElement(_areaLabel2.default, _extends({
		            style: style.labels,
		            data: data,
		            events: getBoundEvents(events.labels, "labels"),
		            position: position,
		            labelText: label,
		            labelComponent: labelComponent
		          }, this.state.labelsState[0]))
		        );
		      }
		      return areaComponent;
		    }
		  }, {
		    key: "renderData",
		    value: function renderData(props, style) {
		      var data = _data2.default.getData(props);
		      var range = {
		        x: _victoryCore.Helpers.getRange(props, "x"),
		        y: _victoryCore.Helpers.getRange(props, "y")
		      };
		      var padding = _victoryCore.Helpers.getPadding(props);
		      var domain = {
		        x: _domain2.default.getDomainWithZero(props, "x"),
		        y: _domain2.default.getDomainWithZero(props, "y")
		      };
		      var scale = {
		        x: _scale2.default.getBaseScale(props, "x").domain(domain.x).range(range.x),
		        y: _scale2.default.getBaseScale(props, "y").domain(domain.y).range(range.y)
		      };
		      var calculatedProps = {
		        style: style, data: data, domain: domain, scale: scale, padding: padding
		      };
		      return this.renderArea(props, calculatedProps);
		    }
		  }, {
		    key: "render",
		    value: function render() {
		      if (this.props.animate) {
		        var whitelist = ["data", "domain", "height", "padding", "style", "width"];
		        return _react2.default.createElement(
		          _victoryCore.VictoryTransition,
		          { animate: this.props.animate, animationWhitelist: whitelist },
		          _react2.default.createElement(VictoryArea, this.props)
		        );
		      }
		
		      var style = _victoryCore.Helpers.getStyles(this.props.style, defaultStyles, "auto", "100%");
		      var group = _react2.default.createElement(
		        "g",
		        { style: style.parent },
		        this.renderData(this.props, style)
		      );
		      return this.props.standalone ? _react2.default.createElement(
		        "svg",
		        _extends({
		          style: style.parent,
		          viewBox: "0 0 " + this.props.width + " " + this.props.height
		        }, this.props.events.parent),
		        group
		      ) : group;
		    }
		  }]);
		
		  return VictoryArea;
		}(_react2.default.Component);
		
		VictoryArea.role = "area";
		VictoryArea.defaultTransitions = {
		  onExit: {
		    duration: 500,
		    before: function before() {
		      return { y: 0, yOffset: 0 };
		    }
		  },
		  onEnter: {
		    duration: 500,
		    before: function before() {
		      return { y: 0, yOffset: 0, xOffset: 0 };
		    },
		    after: function after(datum) {
		      return { y: datum.y, yOffset: datum.yOffset, xOffset: datum.xOffset };
		    }
		  }
		};
		VictoryArea.propTypes = {
		  /**
		   * The animate prop specifies props for VictoryAnimation to use. The animate prop should
		   * also be used to specify enter and exit transition configurations with the `onExit`
		   * and `onEnter` namespaces respectively.
		   * @examples {duration: 500, onEnd: () => {}, onEnter: {duration: 500, before: () => ({y: 0})})}
		   */
		  animate: _react.PropTypes.object,
		  /**
		   * The categories prop specifies how categorical data for a chart should be ordered.
		   * This prop should be given as an array of string values, or an object with
		   * these arrays of values specified for x and y. If this prop is not set,
		   * categorical data will be plotted in the order it was given in the data array
		   * @examples ["dogs", "cats", "mice"]
		   */
		  categories: _react.PropTypes.oneOfType([_react.PropTypes.arrayOf(_react.PropTypes.string), _react.PropTypes.shape({
		    x: _react.PropTypes.arrayOf(_react.PropTypes.string),
		    y: _react.PropTypes.arrayOf(_react.PropTypes.string)
		  })]),
		  /**
		   * The data prop specifies the data to be plotted. Data should be in the form of an array
		   * of data points, or an array of arrays of data points for multiple datasets.
		   * Each data point may be any format you wish (depending on the `x` and `y` accessor props),
		   * but by default, an object with x and y properties is expected.
		   * @examples [{x: 1, y: 2}, {x: 2, y: 3}], [[1, 2], [2, 3]],
		   * [[{x: "a", y: 1}, {x: "b", y: 2}], [{x: "a", y: 2}, {x: "b", y: 3}]]
		   */
		  data: _react.PropTypes.array,
		  /**
		   * The dataComponent prop takes an entire, HTML-complete data component which will be used to
		   * create an area. The new element created from the passed dataComponent will be provided
		   * with the following properties calculated by VictoryArea: a scale object, an array of
		   * modified data objects (including x, y, and calculated y0), interpolation, style, and events
		   * If a dataComponent is not provided, VictoryArea will use its default Area component.
		   */
		  dataComponent: _react.PropTypes.element,
		  /**
		   * The domain prop describes the range of values your bar chart will cover. This prop can be
		   * given as a array of the minimum and maximum expected values for your bar chart,
		   * or as an object that specifies separate arrays for x and y.
		   * If this prop is not provided, a domain will be calculated from data, or other
		   * available information.
		   * @examples [-1, 1], {x: [0, 100], y: [0, 1]}
		   */
		  domain: _react.PropTypes.oneOfType([_victoryCore.PropTypes.domain, _react.PropTypes.shape({
		    x: _victoryCore.PropTypes.domain,
		    y: _victoryCore.PropTypes.domain
		  })]),
		  /**
		   * The events prop attaches arbitrary event handlers to data and label elements
		   * Event handlers are called with their corresponding events, corresponding component props,
		   * and their index in the data array, and event name. The return value of event handlers
		   * will be stored by unique index on the state object of VictoryArea
		   * i.e. `this.state.dataState[dataIndex] = {style: {fill: "red"}...}`, and will be
		   * applied by index to the appropriate child component. Event props on the
		   * parent namespace are just spread directly on to the top level svg of VictoryArea
		   * if one exists. If VictoryArea is set up to render g elements i.e. when it is
		   * rendered within chart, or when `standalone={false}` parent events will not be applied.
		   *
		   * @examples {data: {
		   *  onClick: () => onClick: () => return {style: {fill: "green"}}
		   *}}
		   */
		  events: _react.PropTypes.shape({
		    data: _react.PropTypes.object,
		    labels: _react.PropTypes.object,
		    parent: _react.PropTypes.object
		  }),
		  /**
		   * The height props specifies the height the svg viewBox of the chart container.
		   * This value should be given as a number of pixels
		   */
		  height: _victoryCore.PropTypes.nonNegative,
		  /**
		   * The interpolation prop determines how data points should be connected
		   * when plotting a line
		   */
		  interpolation: _react.PropTypes.oneOf(["basis", "basisClosed", "basisOpen", "bundle", "cardinal", "cardinalClosed", "cardinalOpen", "catmullRom", "catmullRomClosed", "catmullRomOpen", "linear", "linearClosed", "monotoneX", "monotoneY", "natural", "radial", "step", "stepAfter", "stepBefore"]),
		  /**
		   * The label prop defines labels that will appear at the edge of each area. This prop
		   * should be given as a string
		   */
		  label: _react.PropTypes.string,
		  /**
		  * The labelComponent prop takes in an entire, HTML-complete label
		  * component which will be used to create labels for each area in the
		  * chart. The new element created from the passed labelComponent will have
		  * children preserved, or provided via the labels array, textAnchor, and verticalAnchor
		  * preserved or default values provided by defaults; and styles filled out with defaults
		  * provided by the style prop, and dataAttributes prop. If labelComponent is omitted,
		  * but a labels array is specified, a new VictoryLabel will be created.
		   */
		  labelComponent: _react.PropTypes.element,
		  /**
		   * The padding props specifies the amount of padding in number of pixels between
		   * the edge of the chart and any rendered child components. This prop can be given
		   * as a number or as an object with padding specified for top, bottom, left
		   * and right.
		   */
		  padding: _react.PropTypes.oneOfType([_react.PropTypes.number, _react.PropTypes.shape({
		    top: _react.PropTypes.number,
		    bottom: _react.PropTypes.number,
		    left: _react.PropTypes.number,
		    right: _react.PropTypes.number
		  })]),
		  /**
		   * The samples prop specifies how many individual points to plot when plotting
		   * y as a function of x. Samples is ignored if x props are provided instead.
		   */
		  samples: _victoryCore.PropTypes.nonNegative,
		  /**
		   * The scale prop determines which scales your chart should use. This prop can be
		   * given as a string specifying a supported scale ("linear", "time", "log", "sqrt"),
		   * as a d3 scale function, or as an object with scales specified for x and y
		   * @exampes d3Scale.time(), {x: "linear", y: "log"}
		   */
		  scale: _react.PropTypes.oneOfType([_victoryCore.PropTypes.scale, _react.PropTypes.shape({
		    x: _victoryCore.PropTypes.scale,
		    y: _victoryCore.PropTypes.scale
		  })]),
		  /**
		   * The standalone prop determines whether the component will render a standalone svg
		   * or a <g> tag that will be included in an external svg. Set standalone to false to
		   * compose VictoryBar with other components within an enclosing <svg> tag.
		   */
		  standalone: _react.PropTypes.bool,
		  /**
		   * The style prop specifies styles for your VictoryArea. Any valid inline style properties
		   * will be applied. Height, width, and padding should be specified via the height,
		   * width, and padding props, as they are used to calculate the alignment of
		   * components within chart.
		   * @examples {data: {fill: "red"}, labels: {fontSize: 12}}
		   */
		  style: _react.PropTypes.shape({
		    parent: _react.PropTypes.object,
		    data: _react.PropTypes.object,
		    labels: _react.PropTypes.object
		  }),
		  /**
		   * The width props specifies the width of the svg viewBox of the chart container
		   * This value should be given as a number of pixels
		   */
		  width: _victoryCore.PropTypes.nonNegative,
		  /**
		   * The x prop specifies how to access the X value of each data point.
		   * If given as a function, it will be run on each data point, and returned value will be used.
		   * If given as an integer, it will be used as an array index for array-type data points.
		   * If given as a string, it will be used as a property key for object-type data points.
		   * If given as an array of strings, or a string containing dots or brackets,
		   * it will be used as a nested object property path (for details see Lodash docs for _.get).
		   * If `null` or `undefined`, the data value will be used as is (identity function/pass-through).
		   * @examples 0, 'x', 'x.value.nested.1.thing', 'x[2].also.nested', null, d => Math.sin(d)
		   */
		  x: _react.PropTypes.oneOfType([_react.PropTypes.func, _victoryCore.PropTypes.allOfType([_victoryCore.PropTypes.integer, _victoryCore.PropTypes.nonNegative]), _react.PropTypes.string, _react.PropTypes.arrayOf(_react.PropTypes.string)]),
		  /**
		   * The y prop specifies how to access the Y value of each data point.
		   * If given as a function, it will be run on each data point, and returned value will be used.
		   * If given as an integer, it will be used as an array index for array-type data points.
		   * If given as a string, it will be used as a property key for object-type data points.
		   * If given as an array of strings, or a string containing dots or brackets,
		   * it will be used as a nested object property path (for details see Lodash docs for _.get).
		   * If `null` or `undefined`, the data value will be used as is (identity function/pass-through).
		   * @examples 0, 'y', 'y.value.nested.1.thing', 'y[2].also.nested', null, d => Math.sin(d)
		   */
		  y: _react.PropTypes.oneOfType([_react.PropTypes.func, _victoryCore.PropTypes.allOfType([_victoryCore.PropTypes.integer, _victoryCore.PropTypes.nonNegative]), _react.PropTypes.string, _react.PropTypes.arrayOf(_react.PropTypes.string), _react.PropTypes.arrayOf(_react.PropTypes.func)])
		};
		VictoryArea.defaultProps = {
		  dataComponent: _react2.default.createElement(_area2.default, null),
		  events: {},
		  height: 300,
		  padding: 50,
		  scale: "linear",
		  samples: 50,
		  standalone: true,
		  interpolation: "linear",
		  width: 450,
		  x: "x",
		  y: "y"
		};
		VictoryArea.getDomain = _domain2.default.getDomainWithZero.bind(_domain2.default);
		VictoryArea.getData = _data2.default.getData.bind(_data2.default);
		exports.default = VictoryArea;

	/***/ },
	/* 375 */
	/***/ function(module, exports, __webpack_require__) {

		"use strict";
		
		Object.defineProperty(exports, "__esModule", {
		  value: true
		});
		
		var _extends = Object.assign || function (target) { for (var i = 1; i < arguments.length; i++) { var source = arguments[i]; for (var key in source) { if (Object.prototype.hasOwnProperty.call(source, key)) { target[key] = source[key]; } } } return target; };
		
		var _createClass = function () { function defineProperties(target, props) { for (var i = 0; i < props.length; i++) { var descriptor = props[i]; descriptor.enumerable = descriptor.enumerable || false; descriptor.configurable = true; if ("value" in descriptor) descriptor.writable = true; Object.defineProperty(target, descriptor.key, descriptor); } } return function (Constructor, protoProps, staticProps) { if (protoProps) defineProperties(Constructor.prototype, protoProps); if (staticProps) defineProperties(Constructor, staticProps); return Constructor; }; }();
		
		var _react = __webpack_require__(157);
		
		var _react2 = _interopRequireDefault(_react);
		
		var _d3Shape = __webpack_require__(371);
		
		var _d3Shape2 = _interopRequireDefault(_d3Shape);
		
		var _assign = __webpack_require__(278);
		
		var _assign2 = _interopRequireDefault(_assign);
		
		var _victoryCore = __webpack_require__(1);
		
		function _interopRequireDefault(obj) { return obj && obj.__esModule ? obj : { default: obj }; }
		
		function _classCallCheck(instance, Constructor) { if (!(instance instanceof Constructor)) { throw new TypeError("Cannot call a class as a function"); } }
		
		function _possibleConstructorReturn(self, call) { if (!self) { throw new ReferenceError("this hasn't been initialised - super() hasn't been called"); } return call && (typeof call === "object" || typeof call === "function") ? call : self; }
		
		function _inherits(subClass, superClass) { if (typeof superClass !== "function" && superClass !== null) { throw new TypeError("Super expression must either be null or a function, not " + typeof superClass); } subClass.prototype = Object.create(superClass && superClass.prototype, { constructor: { value: subClass, enumerable: false, writable: true, configurable: true } }); if (superClass) Object.setPrototypeOf ? Object.setPrototypeOf(subClass, superClass) : subClass.__proto__ = superClass; }
		
		var Area = function (_React$Component) {
		  _inherits(Area, _React$Component);
		
		  function Area() {
		    _classCallCheck(this, Area);
		
		    return _possibleConstructorReturn(this, Object.getPrototypeOf(Area).apply(this, arguments));
		  }
		
		  _createClass(Area, [{
		    key: "toNewName",
		    value: function toNewName(interpolation) {
		      // d3 shape changed the naming scheme for interpolators from "basis" -> "curveBasis" etc.
		      var capitalize = function capitalize(s) {
		        return s && s[0].toUpperCase() + s.slice(1);
		      };
		      return "curve" + capitalize(interpolation);
		    }
		  }, {
		    key: "renderArea",
		    value: function renderArea(style, interpolation, events) {
		      var xScale = this.props.scale.x;
		      var yScale = this.props.scale.y;
		      var areaStroke = style.stroke ? "none" : style.fill;
		      var areaStyle = (0, _assign2.default)({}, style, { stroke: areaStroke });
		      var areaFunction = _d3Shape2.default.area().curve(_d3Shape2.default[this.toNewName(interpolation)]).x(function (data) {
		        return xScale(data.x);
		      }).y1(function (data) {
		        return yScale(data.y0 + data.y);
		      }).y0(function (data) {
		        return yScale(data.y0);
		      });
		      var path = areaFunction(this.props.data);
		
		      return _react2.default.createElement("path", _extends({ style: areaStyle, d: path }, events));
		    }
		  }, {
		    key: "renderLine",
		    value: function renderLine(style, interpolation, events) {
		      if (!style.stroke || style.stroke === "none" || style.stroke === "transparent") {
		        return undefined;
		      }
		      var lineStyle = (0, _assign2.default)({}, style, { fill: "none" });
		      var xScale = this.props.scale.x;
		      var yScale = this.props.scale.y;
		      var lineFunction = _d3Shape2.default.line().curve(_d3Shape2.default[this.toNewName(interpolation)]).x(function (data) {
		        return xScale(data.x);
		      }).y(function (data) {
		        return yScale(data.y0 + data.y);
		      });
		      var path = lineFunction(this.props.data);
		      return _react2.default.createElement("path", _extends({ style: lineStyle, d: path }, events));
		    }
		  }, {
		    key: "render",
		    value: function render() {
		      var props = this.props;
		
		      var style = _victoryCore.Helpers.evaluateStyle(props.style, props.data);
		      var interpolation = _victoryCore.Helpers.evaluateProp(props.interpolation, props.data);
		      var events = _victoryCore.Helpers.getPartialEvents(props.events, 0, props);
		      return _react2.default.createElement(
		        "g",
		        null,
		        this.renderArea(style, interpolation, events),
		        this.renderLine(style, interpolation, events)
		      );
		    }
		  }]);
		
		  return Area;
		}(_react2.default.Component);
		
		Area.propTypes = {
		  data: _react.PropTypes.array,
		  interpolation: _react.PropTypes.string,
		  scale: _react.PropTypes.object,
		  style: _react.PropTypes.object,
		  events: _react.PropTypes.object
		};
		exports.default = Area;

	/***/ },
	/* 376 */
	/***/ function(module, exports, __webpack_require__) {

		"use strict";
		
		Object.defineProperty(exports, "__esModule", {
		  value: true
		});
		
		var _createClass = function () { function defineProperties(target, props) { for (var i = 0; i < props.length; i++) { var descriptor = props[i]; descriptor.enumerable = descriptor.enumerable || false; descriptor.configurable = true; if ("value" in descriptor) descriptor.writable = true; Object.defineProperty(target, descriptor.key, descriptor); } } return function (Constructor, protoProps, staticProps) { if (protoProps) defineProperties(Constructor.prototype, protoProps); if (staticProps) defineProperties(Constructor, staticProps); return Constructor; }; }();
		
		var _defaults = __webpack_require__(175);
		
		var _defaults2 = _interopRequireDefault(_defaults);
		
		var _react = __webpack_require__(157);
		
		var _react2 = _interopRequireDefault(_react);
		
		var _victoryCore = __webpack_require__(1);
		
		function _interopRequireDefault(obj) { return obj && obj.__esModule ? obj : { default: obj }; }
		
		function _classCallCheck(instance, Constructor) { if (!(instance instanceof Constructor)) { throw new TypeError("Cannot call a class as a function"); } }
		
		function _possibleConstructorReturn(self, call) { if (!self) { throw new ReferenceError("this hasn't been initialised - super() hasn't been called"); } return call && (typeof call === "object" || typeof call === "function") ? call : self; }
		
		function _inherits(subClass, superClass) { if (typeof superClass !== "function" && superClass !== null) { throw new TypeError("Super expression must either be null or a function, not " + typeof superClass); } subClass.prototype = Object.create(superClass && superClass.prototype, { constructor: { value: subClass, enumerable: false, writable: true, configurable: true } }); if (superClass) Object.setPrototypeOf ? Object.setPrototypeOf(subClass, superClass) : subClass.__proto__ = superClass; }
		
		var AreaLabel = function (_React$Component) {
		  _inherits(AreaLabel, _React$Component);
		
		  function AreaLabel() {
		    _classCallCheck(this, AreaLabel);
		
		    return _possibleConstructorReturn(this, Object.getPrototypeOf(AreaLabel).apply(this, arguments));
		  }
		
		  _createClass(AreaLabel, [{
		    key: "renderLabelComponent",
		    value: function renderLabelComponent(props) {
		      var component = props.labelComponent;
		      var baseStyle = (0, _defaults2.default)({ padding: 0 }, component.props.style, props.style);
		      var style = _victoryCore.Helpers.evaluateStyle(baseStyle, props.data);
		      var children = component.props.children || props.labelText || "";
		      var baseEvents = component && component.props.events ? (0, _defaults2.default)({}, component.props.events, props.events) : props.events;
		      var events = _victoryCore.Helpers.getPartialEvents(baseEvents, 0, props);
		      var newProps = {
		        x: component.props.x || props.position.x + style.padding,
		        y: component.props.y || props.position.y - style.padding,
		        textAnchor: component.props.textAnchor || "start",
		        verticalAnchor: component.props.verticalAnchor || "middle",
		        style: style,
		        events: events
		      };
		      return _react2.default.cloneElement(component, newProps, children);
		    }
		  }, {
		    key: "renderVictoryLabel",
		    value: function renderVictoryLabel(props) {
		      var style = _victoryCore.Helpers.evaluateStyle((0, _defaults2.default)({}, props.style), props.data, { padding: 0 });
		      var events = _victoryCore.Helpers.getPartialEvents(props.events, 0, props);
		      return _react2.default.createElement(_victoryCore.VictoryLabel, {
		        x: props.position.x + style.padding,
		        y: props.position.y - style.padding,
		        data: props.data,
		        textAnchor: "start",
		        verticalAnchor: "middle",
		        style: style,
		        text: props.labelText,
		        events: events
		      });
		    }
		  }, {
		    key: "renderLabel",
		    value: function renderLabel(props) {
		      return props.labelComponent ? this.renderLabelComponent(props) : this.renderVictoryLabel(props);
		    }
		  }, {
		    key: "render",
		    value: function render() {
		      return _react2.default.createElement(
		        "g",
		        null,
		        this.renderLabel(this.props)
		      );
		    }
		  }]);
		
		  return AreaLabel;
		}(_react2.default.Component);
		
		AreaLabel.propTypes = {
		  data: _react.PropTypes.array,
		  labelComponent: _react.PropTypes.any,
		  labelText: _react.PropTypes.string,
		  position: _react.PropTypes.object,
		  style: _react.PropTypes.object
		};
		exports.default = AreaLabel;

	/***/ },
	/* 377 */
	/***/ function(module, exports, __webpack_require__) {

		"use strict";
		
		Object.defineProperty(exports, "__esModule", {
		  value: true
		});
		
		var _extends = Object.assign || function (target) { for (var i = 1; i < arguments.length; i++) { var source = arguments[i]; for (var key in source) { if (Object.prototype.hasOwnProperty.call(source, key)) { target[key] = source[key]; } } } return target; };
		
		var _createClass = function () { function defineProperties(target, props) { for (var i = 0; i < props.length; i++) { var descriptor = props[i]; descriptor.enumerable = descriptor.enumerable || false; descriptor.configurable = true; if ("value" in descriptor) descriptor.writable = true; Object.defineProperty(target, descriptor.key, descriptor); } } return function (Constructor, protoProps, staticProps) { if (protoProps) defineProperties(Constructor.prototype, protoProps); if (staticProps) defineProperties(Constructor, staticProps); return Constructor; }; }();
		
		var _omit = __webpack_require__(378);
		
		var _omit2 = _interopRequireDefault(_omit);
		
		var _defaults = __webpack_require__(175);
		
		var _defaults2 = _interopRequireDefault(_defaults);
		
		var _assign = __webpack_require__(278);
		
		var _assign2 = _interopRequireDefault(_assign);
		
		var _react = __webpack_require__(157);
		
		var _react2 = _interopRequireDefault(_react);
		
		var _victoryCore = __webpack_require__(1);
		
		var _bar = __webpack_require__(381);
		
		var _bar2 = _interopRequireDefault(_bar);
		
		var _barLabel = __webpack_require__(382);
		
		var _barLabel2 = _interopRequireDefault(_barLabel);
		
		var _data = __webpack_require__(271);
		
		var _data2 = _interopRequireDefault(_data);
		
		var _domain = __webpack_require__(270);
		
		var _domain2 = _interopRequireDefault(_domain);
		
		var _scale = __webpack_require__(257);
		
		var _scale2 = _interopRequireDefault(_scale);
		
		function _interopRequireDefault(obj) { return obj && obj.__esModule ? obj : { default: obj }; }
		
		function _classCallCheck(instance, Constructor) { if (!(instance instanceof Constructor)) { throw new TypeError("Cannot call a class as a function"); } }
		
		function _possibleConstructorReturn(self, call) { if (!self) { throw new ReferenceError("this hasn't been initialised - super() hasn't been called"); } return call && (typeof call === "object" || typeof call === "function") ? call : self; }
		
		function _inherits(subClass, superClass) { if (typeof superClass !== "function" && superClass !== null) { throw new TypeError("Super expression must either be null or a function, not " + typeof superClass); } subClass.prototype = Object.create(superClass && superClass.prototype, { constructor: { value: subClass, enumerable: false, writable: true, configurable: true } }); if (superClass) Object.setPrototypeOf ? Object.setPrototypeOf(subClass, superClass) : subClass.__proto__ = superClass; }
		
		var defaultStyles = {
		  data: {
		    width: 8,
		    padding: 6,
		    stroke: "transparent",
		    strokeWidth: 0,
		    fill: "#756f6a",
		    opacity: 1
		  },
		  labels: {
		    fontSize: 12,
		    padding: 4,
		    fill: "black"
		  }
		};
		
		var defaultData = [{ x: 1, y: 1 }, { x: 2, y: 2 }, { x: 3, y: 3 }, { x: 4, y: 4 }];
		
		var VictoryBar = function (_React$Component) {
		  _inherits(VictoryBar, _React$Component);
		
		  function VictoryBar() {
		    _classCallCheck(this, VictoryBar);
		
		    return _possibleConstructorReturn(this, Object.getPrototypeOf(VictoryBar).apply(this, arguments));
		  }
		
		  _createClass(VictoryBar, [{
		    key: "componentWillMount",
		    value: function componentWillMount() {
		      this.state = {
		        dataState: {},
		        labelsState: {}
		      };
		    }
		  }, {
		    key: "getScale",
		    value: function getScale(props) {
		      var range = {
		        x: _victoryCore.Helpers.getRange(props, "x"),
		        y: _victoryCore.Helpers.getRange(props, "y")
		      };
		      var domain = {
		        x: _domain2.default.getDomainWithZero(props, "x"),
		        y: _domain2.default.getDomainWithZero(props, "y")
		      };
		      return {
		        x: _scale2.default.getBaseScale(props, "x").domain(domain.x).range(range.x),
		        y: _scale2.default.getBaseScale(props, "y").domain(domain.y).range(range.y)
		      };
		    }
		  }, {
		    key: "getBarPosition",
		    value: function getBarPosition(props, datum) {
		      var yOffset = datum.yOffset || 0;
		      var xOffset = datum.xOffset || 0;
		      var y0 = yOffset;
		      var y1 = datum.y + yOffset;
		      var x = datum.x + xOffset;
		      var formatValue = function formatValue(value, axis) {
		        return datum[axis] instanceof Date ? new Date(value) : value;
		      };
		      var scale = this.getScale(props);
		      return {
		        x: scale.x(formatValue(x, "x")),
		        y0: scale.y(formatValue(y0, "y")),
		        y1: scale.y(formatValue(y1, "y"))
		      };
		    }
		  }, {
		    key: "getBarStyle",
		    value: function getBarStyle(datum, baseStyle) {
		      var styleData = (0, _omit2.default)(datum, ["xName", "yName", "x", "y", "label"]);
		      return (0, _defaults2.default)({}, styleData, baseStyle);
		    }
		  }, {
		    key: "getSharedProps",
		    value: function getSharedProps(props, datum, index) {
		      var horizontal = props.horizontal;
		      var position = this.getBarPosition(props, datum);
		      return { index: index, horizontal: horizontal, datum: datum, position: position };
		    }
		  }, {
		    key: "renderData",
		    value: function renderData(props, data, style) {
		      var _this2 = this;
		
		      return data.map(function (datum, index) {
		        var sharedProps = _this2.getSharedProps(props, datum, index);
		        var getBoundEvents = _victoryCore.Helpers.getEvents.bind(_this2);
		        var barStyle = _this2.getBarStyle(datum, style.data);
		        var events = getBoundEvents(props.events.data, "data");
		        var barProps = (0, _assign2.default)({ key: "bar-" + index, style: barStyle, events: events }, sharedProps, _this2.state.dataState[index]);
		        var barComponent = _react2.default.cloneElement(_this2.props.dataComponent, barProps);
		        if (datum.label || props.labels) {
		          var labelText = datum.label || props.labels && props.labels[index] || "";
		          var labelEvents = getBoundEvents(props.events.labels, "labels");
		          var labelProps = (0, _assign2.default)({
		            key: "bar-label-" + index, style: style.labels, events: labelEvents,
		            labelText: labelText, labelComponent: props.labelComponent
		          }, sharedProps, _this2.state.labelsState[index]);
		          return _react2.default.createElement(
		            "g",
		            { key: "bar-" + index },
		            barComponent,
		            _react2.default.createElement(_barLabel2.default, labelProps)
		          );
		        }
		        return barComponent;
		      });
		    }
		  }, {
		    key: "render",
		    value: function render() {
		
		      // If animating, return a `VictoryAnimation` element that will create
		      // a new `VictoryBar` with nearly identical props, except (1) tweened
		      // and (2) `animate` set to null so we don't recurse forever.
		      if (this.props.animate) {
		        var whitelist = ["data", "domain", "height", "padding", "style", "width"];
		        return _react2.default.createElement(
		          _victoryCore.VictoryTransition,
		          { animate: this.props.animate, animationWhitelist: whitelist },
		          _react2.default.createElement(VictoryBar, this.props)
		        );
		      }
		
		      var style = _victoryCore.Helpers.getStyles(this.props.style, defaultStyles, "auto", "100%");
		      var data = _data2.default.getData(this.props);
		      var group = _react2.default.createElement(
		        "g",
		        { style: style.parent },
		        this.renderData(this.props, data, style)
		      );
		      return this.props.standalone ? _react2.default.createElement(
		        "svg",
		        _extends({
		          style: style.parent,
		          viewBox: "0 0 " + this.props.width + " " + this.props.height
		        }, this.props.events.parent),
		        group
		      ) : group;
		    }
		  }]);
		
		  return VictoryBar;
		}(_react2.default.Component);
		
		VictoryBar.role = "bar";
		VictoryBar.defaultTransitions = {
		  onExit: {
		    duration: 500,
		    before: function before() {
		      return { y: 0, yOffset: 0 };
		    }
		  },
		  onEnter: {
		    duration: 500,
		    before: function before() {
		      return { y: 0, yOffset: 0 };
		    },
		    after: function after(datum) {
		      return { y: datum.y, yOffset: datum.yOffset };
		    }
		  }
		};
		VictoryBar.propTypes = {
		  /**
		   * The animate prop specifies props for VictoryAnimation to use. The animate prop should
		   * also be used to specify enter and exit transition configurations with the `onExit`
		   * and `onEnter` namespaces respectively.
		   * @examples {duration: 500, onEnd: () => {}, onEnter: {duration: 500, before: () => ({y: 0})})}
		   */
		  animate: _react.PropTypes.object,
		  /**
		   * The categories prop specifies how categorical data for a chart should be ordered.
		   * This prop should be given as an array of string values, or an object with
		   * these arrays of values specified for x and y. If this prop is not set,
		   * categorical data will be plotted in the order it was given in the data array
		   * @examples ["dogs", "cats", "mice"]
		   */
		  categories: _react.PropTypes.oneOfType([_react.PropTypes.arrayOf(_react.PropTypes.string), _react.PropTypes.shape({
		    x: _react.PropTypes.arrayOf(_react.PropTypes.string),
		    y: _react.PropTypes.arrayOf(_react.PropTypes.string)
		  })]),
		  /**
		   * The data prop specifies the data to be plotted. Data should be in the form of an array
		   * of data points. Each data point may be any format you wish
		   * (depending on the `x` and `y` accessor props), but by default, an object
		   * with x and y properties is expected.
		   * @examples [{x: 1, y: 2}, {x: 2, y: 3}], [[1, 2], [2, 3]],
		   * [[{x: "a", y: 1}, {x: "b", y: 2}], [{x: "a", y: 2}, {x: "b", y: 3}]]
		   */
		  data: _react.PropTypes.array,
		  /**
		   * The dataComponent prop takes an entire, HTML-complete data component which will be used to
		   * create bars for each datum in the chart. The new element created from the passed
		   * dataComponent will be provided with the following properties calculated by VictoryBar:
		   * datum, index, style, events, horizontal (boolean), and position as object with
		   * values for x, y0, and y1. If a dataComponent is not provided, VictoryBar will
		   * use its default Bar component.
		   */
		  dataComponent: _react.PropTypes.element,
		  /**
		   * The domain prop describes the range of values your bar chart will cover. This prop can be
		   * given as a array of the minimum and maximum expected values for your bar chart,
		   * or as an object that specifies separate arrays for x and y.
		   * If this prop is not provided, a domain will be calculated from data, or other
		   * available information.
		   * @examples [-1, 1], {x: [0, 100], y: [0, 1]}
		   */
		  domain: _react.PropTypes.oneOfType([_victoryCore.PropTypes.domain, _react.PropTypes.shape({
		    x: _victoryCore.PropTypes.domain,
		    y: _victoryCore.PropTypes.domain
		  })]),
		  /**
		   * The events prop attaches arbitrary event handlers to data and label elements
		   * Event handlers are called with their corresponding events, corresponding component props,
		   * and their index in the data array, and event name. The return value of event handlers
		   * will be stored by unique index on the state object of VictoryBar
		   * i.e. `this.state.dataState[dataIndex] = {style: {fill: "red"}...}`, and will be
		   * applied by index to the appropriate child component. Event props on the
		   * parent namespace are just spread directly on to the top level svg of VictoryBar
		   * if one exists. If VictoryBar is set up to render g elements i.e. when it is
		   * rendered within chart, or when `standalone={false}` parent events will not be applied.
		   *
		   * @examples {data: {
		   *  onClick: () => onClick: () => return {style: {fill: "green"}}
		   *}}
		   */
		  events: _react.PropTypes.shape({
		    data: _react.PropTypes.object,
		    labels: _react.PropTypes.object,
		    parent: _react.PropTypes.object
		  }),
		  /**
		   * The height props specifies the height the svg viewBox of the chart container.
		   * This value should be given as a number of pixels
		   */
		  height: _victoryCore.PropTypes.nonNegative,
		  /**
		   * The horizontal prop determines whether the bars will be laid vertically or
		   * horizontally. The bars will be vertical if this prop is false or unspecified,
		   * or horizontal if the prop is set to true.
		   */
		  horizontal: _react.PropTypes.bool,
		  /**
		   * The labels prop defines labels that will appear above each bar in your bar chart.
		   * This prop should be given as an array of values or as a function of data.
		   * If given as an array, the number of elements in the array should be equal to
		   * the length of the data array. Labels may also be added directly to the data object
		   * @examples: ["spring", "summer", "fall", "winter"], (datum) => datum.title
		   */
		  labels: _react.PropTypes.oneOfType([_react.PropTypes.func, _react.PropTypes.array]),
		  /**
		   * The labelComponent prop takes in an entire, HTML-complete label
		   * component which will be used to create labels for each bar in the bar
		   * chart. The new element created from the passed labelComponent will have
		   * property data provided by the bar's datum; properties x, y, textAnchor,
		   * and verticalAnchor preserved or default values provided by the bar; and
		   * styles filled out with defaults provided by the bar, and overrides from
		   * the datum. If labelComponent is omitted, a new VictoryLabel will be
		   * created with props and styles from the bar.
		   */
		  labelComponent: _react.PropTypes.element,
		  /**
		   * The padding props specifies the amount of padding in number of pixels between
		   * the edge of the chart and any rendered child components. This prop can be given
		   * as a number or as an object with padding specified for top, bottom, left
		   * and right.
		   */
		  padding: _react.PropTypes.oneOfType([_react.PropTypes.number, _react.PropTypes.shape({
		    top: _react.PropTypes.number,
		    bottom: _react.PropTypes.number,
		    left: _react.PropTypes.number,
		    right: _react.PropTypes.number
		  })]),
		  /**
		   * The scale prop determines which scales your chart should use. This prop can be
		   * given as a string specifying a supported scale ("linear", "time", "log", "sqrt"),
		   * as a d3 scale function, or as an object with scales specified for x and y
		   * @exampes d3Scale.time(), {x: "linear", y: "log"}
		   */
		  scale: _react.PropTypes.oneOfType([_victoryCore.PropTypes.scale, _react.PropTypes.shape({
		    x: _victoryCore.PropTypes.scale,
		    y: _victoryCore.PropTypes.scale
		  })]),
		  /**
		   * The standalone prop determines whether the component will render a standalone svg
		   * or a <g> tag that will be included in an external svg. Set standalone to false to
		   * compose VictoryBar with other components within an enclosing <svg> tag.
		   */
		  standalone: _react.PropTypes.bool,
		  /**
		   * The style prop specifies styles for your VictoryBar. Any valid inline style properties
		   * will be applied. Height, width, and padding should be specified via the height,
		   * width, and padding props, as they are used to calculate the alignment of
		   * components within chart.
		   * @examples {data: {fill: "red", width: 8}, labels: {fontSize: 12}}
		   */
		  style: _react.PropTypes.shape({
		    parent: _react.PropTypes.object,
		    data: _react.PropTypes.object,
		    labels: _react.PropTypes.object
		  }),
		  /**
		   * The width props specifies the width of the svg viewBox of the chart container
		   * This value should be given as a number of pixels
		   */
		  width: _victoryCore.PropTypes.nonNegative,
		  /**
		   * The x prop specifies how to access the X value of each data point.
		   * If given as a function, it will be run on each data point, and returned value will be used.
		   * If given as an integer, it will be used as an array index for array-type data points.
		   * If given as a string, it will be used as a property key for object-type data points.
		   * If given as an array of strings, or a string containing dots or brackets,
		   * it will be used as a nested object property path (for details see Lodash docs for _.get).
		   * If `null` or `undefined`, the data value will be used as is (identity function/pass-through).
		   * @examples 0, 'x', 'x.value.nested.1.thing', 'x[2].also.nested', null, d => Math.sin(d)
		   */
		  x: _react.PropTypes.oneOfType([_react.PropTypes.func, _victoryCore.PropTypes.allOfType([_victoryCore.PropTypes.integer, _victoryCore.PropTypes.nonNegative]), _react.PropTypes.string, _react.PropTypes.arrayOf(_react.PropTypes.string)]),
		  /**
		   * The y prop specifies how to access the Y value of each data point.
		   * If given as a function, it will be run on each data point, and returned value will be used.
		   * If given as an integer, it will be used as an array index for array-type data points.
		   * If given as a string, it will be used as a property key for object-type data points.
		   * If given as an array of strings, or a string containing dots or brackets,
		   * it will be used as a nested object property path (for details see Lodash docs for _.get).
		   * If `null` or `undefined`, the data value will be used as is (identity function/pass-through).
		   * @examples 0, 'y', 'y.value.nested.1.thing', 'y[2].also.nested', null, d => Math.sin(d)
		   */
		  y: _react.PropTypes.oneOfType([_react.PropTypes.func, _victoryCore.PropTypes.allOfType([_victoryCore.PropTypes.integer, _victoryCore.PropTypes.nonNegative]), _react.PropTypes.string, _react.PropTypes.arrayOf(_react.PropTypes.string)])
		};
		VictoryBar.defaultProps = {
		  data: defaultData,
		  dataComponent: _react2.default.createElement(_bar2.default, null),
		  events: {},
		  height: 300,
		  padding: 50,
		  scale: "linear",
		  standalone: true,
		  width: 450,
		  x: "x",
		  y: "y"
		};
		VictoryBar.getDomain = _domain2.default.getDomainWithZero.bind(_domain2.default);
		VictoryBar.getData = _data2.default.getData.bind(_data2.default);
		exports.default = VictoryBar;

	/***/ },
	/* 378 */
	/***/ function(module, exports, __webpack_require__) {

		var arrayMap = __webpack_require__(220),
		    baseDifference = __webpack_require__(225),
		    baseFlatten = __webpack_require__(259),
		    basePick = __webpack_require__(379),
		    keysIn = __webpack_require__(194),
		    rest = __webpack_require__(191);
		
		/**
		 * The opposite of `_.pick`; this method creates an object composed of the
		 * own and inherited enumerable properties of `object` that are not omitted.
		 *
		 * @static
		 * @memberOf _
		 * @category Object
		 * @param {Object} object The source object.
		 * @param {...(string|string[])} [props] The property names to omit, specified
		 *  individually or in arrays.
		 * @returns {Object} Returns the new object.
		 * @example
		 *
		 * var object = { 'a': 1, 'b': '2', 'c': 3 };
		 *
		 * _.omit(object, ['a', 'c']);
		 * // => { 'b': '2' }
		 */
		var omit = rest(function(object, props) {
		  if (object == null) {
		    return {};
		  }
		  props = arrayMap(baseFlatten(props, 1), String);
		  return basePick(object, baseDifference(keysIn(object), props));
		});
		
		module.exports = omit;


	/***/ },
	/* 379 */
	/***/ function(module, exports, __webpack_require__) {

		var arrayReduce = __webpack_require__(380);
		
		/**
		 * The base implementation of `_.pick` without support for individual
		 * property names.
		 *
		 * @private
		 * @param {Object} object The source object.
		 * @param {string[]} props The property names to pick.
		 * @returns {Object} Returns the new object.
		 */
		function basePick(object, props) {
		  object = Object(object);
		  return arrayReduce(props, function(result, key) {
		    if (key in object) {
		      result[key] = object[key];
		    }
		    return result;
		  }, {});
		}
		
		module.exports = basePick;


	/***/ },
	/* 380 */
	/***/ function(module, exports) {

		/**
		 * A specialized version of `_.reduce` for arrays without support for
		 * iteratee shorthands.
		 *
		 * @private
		 * @param {Array} array The array to iterate over.
		 * @param {Function} iteratee The function invoked per iteration.
		 * @param {*} [accumulator] The initial value.
		 * @param {boolean} [initAccum] Specify using the first element of `array` as the initial value.
		 * @returns {*} Returns the accumulated value.
		 */
		function arrayReduce(array, iteratee, accumulator, initAccum) {
		  var index = -1,
		      length = array.length;
		
		  if (initAccum && length) {
		    accumulator = array[++index];
		  }
		  while (++index < length) {
		    accumulator = iteratee(accumulator, array[index], index, array);
		  }
		  return accumulator;
		}
		
		module.exports = arrayReduce;


	/***/ },
	/* 381 */
	/***/ function(module, exports, __webpack_require__) {

		"use strict";
		
		Object.defineProperty(exports, "__esModule", {
		  value: true
		});
		
		var _extends = Object.assign || function (target) { for (var i = 1; i < arguments.length; i++) { var source = arguments[i]; for (var key in source) { if (Object.prototype.hasOwnProperty.call(source, key)) { target[key] = source[key]; } } } return target; };
		
		var _createClass = function () { function defineProperties(target, props) { for (var i = 0; i < props.length; i++) { var descriptor = props[i]; descriptor.enumerable = descriptor.enumerable || false; descriptor.configurable = true; if ("value" in descriptor) descriptor.writable = true; Object.defineProperty(target, descriptor.key, descriptor); } } return function (Constructor, protoProps, staticProps) { if (protoProps) defineProperties(Constructor.prototype, protoProps); if (staticProps) defineProperties(Constructor, staticProps); return Constructor; }; }();
		
		var _react = __webpack_require__(157);
		
		var _react2 = _interopRequireDefault(_react);
		
		var _victoryCore = __webpack_require__(1);
		
		function _interopRequireDefault(obj) { return obj && obj.__esModule ? obj : { default: obj }; }
		
		function _classCallCheck(instance, Constructor) { if (!(instance instanceof Constructor)) { throw new TypeError("Cannot call a class as a function"); } }
		
		function _possibleConstructorReturn(self, call) { if (!self) { throw new ReferenceError("this hasn't been initialised - super() hasn't been called"); } return call && (typeof call === "object" || typeof call === "function") ? call : self; }
		
		function _inherits(subClass, superClass) { if (typeof superClass !== "function" && superClass !== null) { throw new TypeError("Super expression must either be null or a function, not " + typeof superClass); } subClass.prototype = Object.create(superClass && superClass.prototype, { constructor: { value: subClass, enumerable: false, writable: true, configurable: true } }); if (superClass) Object.setPrototypeOf ? Object.setPrototypeOf(subClass, superClass) : subClass.__proto__ = superClass; }
		
		var Bar = function (_React$Component) {
		  _inherits(Bar, _React$Component);
		
		  function Bar() {
		    _classCallCheck(this, Bar);
		
		    return _possibleConstructorReturn(this, Object.getPrototypeOf(Bar).apply(this, arguments));
		  }
		
		  _createClass(Bar, [{
		    key: "getVerticalBarPath",
		    value: function getVerticalBarPath(position, width) {
		      var x = position.x;
		      var y0 = position.y0;
		      var y1 = position.y1;
		
		      var size = width / 2;
		      return "M " + (x - size) + ", " + y0 + "\n      L " + (x - size) + ", " + y1 + "\n      L " + (x + size) + ", " + y1 + "\n      L " + (x + size) + ", " + y0 + "\n      L " + (x - size) + ", " + y0;
		    }
		  }, {
		    key: "getHorizontalBarPath",
		    value: function getHorizontalBarPath(position, width) {
		      var x = position.x;
		      var y0 = position.y0;
		      var y1 = position.y1;
		
		      var size = width / 2;
		      return "M " + y0 + ", " + (x - size) + "\n      L " + y0 + ", " + (x + size) + "\n      L " + y1 + ", " + (x + size) + "\n      L " + y1 + ", " + (x - size) + "\n      L " + y0 + ", " + (x - size);
		    }
		  }, {
		    key: "getBarPath",
		    value: function getBarPath(position, width) {
		      return this.props.horizontal ? this.getHorizontalBarPath(position, width) : this.getVerticalBarPath(position, width);
		    }
		  }, {
		    key: "render",
		    value: function render() {
		      var style = _victoryCore.Helpers.evaluateStyle(this.props.style, this.props.datum);
		      // TODO better bar width calculation
		      var barWidth = style.width || 8;
		      var path = typeof this.props.position.x === "number" ? this.getBarPath(this.props.position, barWidth) : undefined;
		      var events = _victoryCore.Helpers.getPartialEvents(this.props.events, this.props.index, this.props);
		      return _react2.default.createElement("path", _extends({}, events, {
		        d: path,
		        style: style,
		        shapeRendering: "optimizeSpeed"
		      }));
		    }
		  }]);
		
		  return Bar;
		}(_react2.default.Component);
		
		Bar.propTypes = {
		  index: _react.PropTypes.number,
		  events: _react.PropTypes.object,
		  position: _react.PropTypes.object,
		  horizontal: _react.PropTypes.bool,
		  style: _react.PropTypes.object,
		  datum: _react.PropTypes.object
		};
		exports.default = Bar;

	/***/ },
	/* 382 */
	/***/ function(module, exports, __webpack_require__) {

		"use strict";
		
		Object.defineProperty(exports, "__esModule", {
		  value: true
		});
		
		var _createClass = function () { function defineProperties(target, props) { for (var i = 0; i < props.length; i++) { var descriptor = props[i]; descriptor.enumerable = descriptor.enumerable || false; descriptor.configurable = true; if ("value" in descriptor) descriptor.writable = true; Object.defineProperty(target, descriptor.key, descriptor); } } return function (Constructor, protoProps, staticProps) { if (protoProps) defineProperties(Constructor.prototype, protoProps); if (staticProps) defineProperties(Constructor, staticProps); return Constructor; }; }();
		
		var _defaults = __webpack_require__(175);
		
		var _defaults2 = _interopRequireDefault(_defaults);
		
		var _react = __webpack_require__(157);
		
		var _react2 = _interopRequireDefault(_react);
		
		var _victoryCore = __webpack_require__(1);
		
		function _interopRequireDefault(obj) { return obj && obj.__esModule ? obj : { default: obj }; }
		
		function _classCallCheck(instance, Constructor) { if (!(instance instanceof Constructor)) { throw new TypeError("Cannot call a class as a function"); } }
		
		function _possibleConstructorReturn(self, call) { if (!self) { throw new ReferenceError("this hasn't been initialised - super() hasn't been called"); } return call && (typeof call === "object" || typeof call === "function") ? call : self; }
		
		function _inherits(subClass, superClass) { if (typeof superClass !== "function" && superClass !== null) { throw new TypeError("Super expression must either be null or a function, not " + typeof superClass); } subClass.prototype = Object.create(superClass && superClass.prototype, { constructor: { value: subClass, enumerable: false, writable: true, configurable: true } }); if (superClass) Object.setPrototypeOf ? Object.setPrototypeOf(subClass, superClass) : subClass.__proto__ = superClass; }
		
		var BarLabel = function (_React$Component) {
		  _inherits(BarLabel, _React$Component);
		
		  function BarLabel() {
		    _classCallCheck(this, BarLabel);
		
		    return _possibleConstructorReturn(this, Object.getPrototypeOf(BarLabel).apply(this, arguments));
		  }
		
		  _createClass(BarLabel, [{
		    key: "getLabelAnchors",
		    value: function getLabelAnchors(props) {
		      var sign = props.datum.y >= 0 ? 1 : -1;
		      if (!props.horizontal) {
		        return {
		          vertical: sign >= 0 ? "end" : "start",
		          text: "middle"
		        };
		      } else {
		        return {
		          vertical: "middle",
		          text: sign >= 0 ? "start" : "end"
		        };
		      }
		    }
		  }, {
		    key: "getlabelPadding",
		    value: function getlabelPadding(props, style) {
		      return {
		        x: props.horizontal ? style.padding : 0,
		        y: props.horizontal ? 0 : style.padding
		      };
		    }
		  }, {
		    key: "renderLabelComponent",
		    value: function renderLabelComponent(props, position, anchors) {
		      var component = props.labelComponent;
		      var baseStyle = (0, _defaults2.default)({}, component.props.style, props.style, { padding: 0 });
		      var style = _victoryCore.Helpers.evaluateStyle(baseStyle, props.datum);
		      var padding = this.getlabelPadding(props, style);
		      var labelText = props.labelText || props.datum.label;
		      var index = [props.index.seriesIndex, props.index.barIndex];
		      var baseEvents = component && component.props.events ? (0, _defaults2.default)({}, component.props.events, props.events) : props.events;
		      var events = _victoryCore.Helpers.getPartialEvents(baseEvents, index, props);
		      var newProps = {
		        index: props.index,
		        x: component.props.x || position.x + padding.x,
		        y: component.props.y || position.y - padding.y,
		        datum: props.datum, // Pass datum for custom label component to access
		        text: labelText,
		        textAnchor: component.props.textAnchor || anchors.text,
		        verticalAnchor: component.props.verticalAnchor || anchors.vertical,
		        style: style,
		        events: events
		      };
		      return _react2.default.cloneElement(component, newProps);
		    }
		  }, {
		    key: "renderVictoryLabel",
		    value: function renderVictoryLabel(props, position, anchors) {
		      var baseStyle = (0, _defaults2.default)({}, props.style, { padding: 0 });
		      var style = _victoryCore.Helpers.evaluateStyle(baseStyle, props.datum);
		      var padding = this.getlabelPadding(props, style);
		      var index = props.index;
		      var events = _victoryCore.Helpers.getPartialEvents(props.events, index, props);
		      return _react2.default.createElement(_victoryCore.VictoryLabel, {
		        x: position.x + padding.x,
		        y: position.y - padding.y,
		        datum: props.datum,
		        index: [props.index.seriesIndex, props.index.barIndex],
		        textAnchor: anchors.text,
		        verticalAnchor: anchors.vertical,
		        style: style,
		        text: props.labelText,
		        events: events
		      });
		    }
		  }, {
		    key: "renderLabel",
		    value: function renderLabel(props) {
		      var anchors = this.getLabelAnchors(props);
		      var position = {
		        x: props.horizontal ? props.position.y1 : props.position.x,
		        y: props.horizontal ? props.position.x : props.position.y1
		      };
		      return props.labelComponent ? this.renderLabelComponent(props, position, anchors) : this.renderVictoryLabel(props, position, anchors);
		    }
		  }, {
		    key: "render",
		    value: function render() {
		      return _react2.default.createElement(
		        "g",
		        null,
		        this.renderLabel(this.props)
		      );
		    }
		  }]);
		
		  return BarLabel;
		}(_react2.default.Component);
		
		BarLabel.propTypes = {
		  events: _react.PropTypes.object,
		  position: _react.PropTypes.object,
		  horizontal: _react.PropTypes.bool,
		  style: _react.PropTypes.object,
		  datum: _react.PropTypes.object,
		  index: _react.PropTypes.number,
		  labelText: _react.PropTypes.string,
		  labelComponent: _react.PropTypes.any
		};
		exports.default = BarLabel;

	/***/ },
	/* 383 */
	/***/ function(module, exports, __webpack_require__) {

		"use strict";
		
		Object.defineProperty(exports, "__esModule", {
		  value: true
		});
		
		var _extends = Object.assign || function (target) { for (var i = 1; i < arguments.length; i++) { var source = arguments[i]; for (var key in source) { if (Object.prototype.hasOwnProperty.call(source, key)) { target[key] = source[key]; } } } return target; };
		
		var _createClass = function () { function defineProperties(target, props) { for (var i = 0; i < props.length; i++) { var descriptor = props[i]; descriptor.enumerable = descriptor.enumerable || false; descriptor.configurable = true; if ("value" in descriptor) descriptor.writable = true; Object.defineProperty(target, descriptor.key, descriptor); } } return function (Constructor, protoProps, staticProps) { if (protoProps) defineProperties(Constructor.prototype, protoProps); if (staticProps) defineProperties(Constructor, staticProps); return Constructor; }; }();
		
		var _react = __webpack_require__(157);
		
		var _react2 = _interopRequireDefault(_react);
		
		var _pick = __webpack_require__(384);
		
		var _pick2 = _interopRequireDefault(_pick);
		
		var _omit = __webpack_require__(378);
		
		var _omit2 = _interopRequireDefault(_omit);
		
		var _defaults = __webpack_require__(175);
		
		var _defaults2 = _interopRequireDefault(_defaults);
		
		var _assign = __webpack_require__(278);
		
		var _assign2 = _interopRequireDefault(_assign);
		
		var _point = __webpack_require__(385);
		
		var _point2 = _interopRequireDefault(_point);
		
		var _pointLabel = __webpack_require__(387);
		
		var _pointLabel2 = _interopRequireDefault(_pointLabel);
		
		var _scale = __webpack_require__(257);
		
		var _scale2 = _interopRequireDefault(_scale);
		
		var _domain = __webpack_require__(270);
		
		var _domain2 = _interopRequireDefault(_domain);
		
		var _data = __webpack_require__(271);
		
		var _data2 = _interopRequireDefault(_data);
		
		var _victoryCore = __webpack_require__(1);
		
		var _helperMethods = __webpack_require__(388);
		
		var _helperMethods2 = _interopRequireDefault(_helperMethods);
		
		function _interopRequireDefault(obj) { return obj && obj.__esModule ? obj : { default: obj }; }
		
		function _classCallCheck(instance, Constructor) { if (!(instance instanceof Constructor)) { throw new TypeError("Cannot call a class as a function"); } }
		
		function _possibleConstructorReturn(self, call) { if (!self) { throw new ReferenceError("this hasn't been initialised - super() hasn't been called"); } return call && (typeof call === "object" || typeof call === "function") ? call : self; }
		
		function _inherits(subClass, superClass) { if (typeof superClass !== "function" && superClass !== null) { throw new TypeError("Super expression must either be null or a function, not " + typeof superClass); } subClass.prototype = Object.create(superClass && superClass.prototype, { constructor: { value: subClass, enumerable: false, writable: true, configurable: true } }); if (superClass) Object.setPrototypeOf ? Object.setPrototypeOf(subClass, superClass) : subClass.__proto__ = superClass; }
		
		var defaultStyles = {
		  data: {
		    fill: "#756f6a",
		    opacity: 1,
		    stroke: "transparent",
		    strokeWidth: 0
		  },
		  labels: {
		    stroke: "transparent",
		    fill: "#756f6a",
		    fontFamily: "Helvetica",
		    fontSize: 10,
		    textAnchor: "middle",
		    padding: 5
		  }
		};
		
		var VictoryScatter = function (_React$Component) {
		  _inherits(VictoryScatter, _React$Component);
		
		  function VictoryScatter() {
		    _classCallCheck(this, VictoryScatter);
		
		    return _possibleConstructorReturn(this, Object.getPrototypeOf(VictoryScatter).apply(this, arguments));
		  }
		
		  _createClass(VictoryScatter, [{
		    key: "componentWillMount",
		    value: function componentWillMount() {
		      this.state = {
		        dataState: {},
		        labelsState: {}
		      };
		    }
		  }, {
		    key: "getDataStyles",
		    value: function getDataStyles(data, style) {
		      var stylesFromData = (0, _omit2.default)(data, ["x", "y", "z", "size", "symbol", "name", "label"]);
		      var baseDataStyle = (0, _defaults2.default)({}, stylesFromData, style);
		      return _victoryCore.Helpers.evaluateStyle(baseDataStyle, data);
		    }
		  }, {
		    key: "getSharedProps",
		    value: function getSharedProps(datum, index, calculatedProps) {
		      var style = calculatedProps.style;
		
		      var position = {
		        x: calculatedProps.scale.x.call(null, datum.x),
		        y: calculatedProps.scale.y.call(null, datum.y)
		      };
		
		      var baseSize = _helperMethods2.default.getSize(datum, this.props, calculatedProps);
		
		      var symbol = _helperMethods2.default.getSymbol(datum, this.props);
		
		      return { index: index, datum: datum, baseSize: baseSize, symbol: symbol, style: style, position: position };
		    }
		  }, {
		    key: "addDataProps",
		    value: function addDataProps(sharedProps, getBoundEvents) {
		      var datum = sharedProps.datum;
		      var style = sharedProps.style;
		      var index = sharedProps.index;
		      var baseSize = sharedProps.baseSize;
		
		
		      var dataStyle = this.getDataStyles(datum, style.data);
		      var size = _victoryCore.Helpers.evaluateProp(baseSize, datum);
		      var events = getBoundEvents(this.props.events.data, "data");
		
		      return (0, _assign2.default)({}, sharedProps, { key: "point-" + index, style: dataStyle, events: events, size: size }, this.state.dataState[index]);
		    }
		  }, {
		    key: "addLabelProps",
		    value: function addLabelProps(sharedProps, dataProps, getBoundEvents) {
		      var datum = sharedProps.datum;
		      var style = sharedProps.style;
		      var index = sharedProps.index;
		
		      var dataStyle = dataProps.style;
		      var size = dataProps.size;
		
		
		      var matchedStyle = (0, _pick2.default)(dataStyle, ["opacity", "fill"]);
		      var padding = style.labels.padding || size * 0.25;
		      var baseLabelStyle = (0, _defaults2.default)({}, style.labels, matchedStyle, { padding: padding });
		      var labelStyle = _victoryCore.Helpers.evaluateStyle(baseLabelStyle, datum);
		
		      var events = getBoundEvents(this.props.events.labels, "labels");
		
		      return (0, _assign2.default)({}, sharedProps, { style: labelStyle, labelComponent: this.props.labelComponent, events: events }, this.state.labelsState[index]);
		    }
		  }, {
		    key: "renderPoint",
		    value: function renderPoint(datum, index, calculatedProps) {
		      var getBoundEvents = _victoryCore.Helpers.getEvents.bind(this);
		      var sharedProps = this.getSharedProps(datum, index, calculatedProps);
		      var dataProps = this.addDataProps(sharedProps, getBoundEvents);
		      var pointComponent = _react2.default.cloneElement(this.props.dataComponent, dataProps);
		      if (datum.label) {
		        var labelProps = this.addLabelProps(sharedProps, dataProps, getBoundEvents);
		        return _react2.default.createElement(
		          "g",
		          { key: "point-group-" + index },
		          pointComponent,
		          _react2.default.createElement(_pointLabel2.default, labelProps)
		        );
		      }
		      return pointComponent;
		    }
		  }, {
		    key: "renderData",
		    value: function renderData(props, style) {
		      var _this2 = this;
		
		      var data = _data2.default.getData(props);
		      var range = {
		        x: _victoryCore.Helpers.getRange(props, "x"),
		        y: _victoryCore.Helpers.getRange(props, "y")
		      };
		      var domain = {
		        x: _domain2.default.getDomain(props, "x"),
		        y: _domain2.default.getDomain(props, "y")
		      };
		      var scale = {
		        x: _scale2.default.getBaseScale(props, "x").domain(domain.x).range(range.x),
		        y: _scale2.default.getBaseScale(props, "y").domain(domain.y).range(range.y)
		      };
		      var z = props.bubbleProperty || "z";
		      var calculatedProps = { data: data, scale: scale, style: style, z: z };
		      return data.map(function (datum, index) {
		        return _this2.renderPoint(datum, index, calculatedProps);
		      });
		    }
		  }, {
		    key: "render",
		    value: function render() {
		      // If animating, return a `VictoryAnimation` element that will create
		      // a new `VictoryScatter` with nearly identical props, except (1) tweened
		      // and (2) `animate` set to null so we don't recurse forever.
		      if (this.props.animate) {
		        // Do less work by having `VictoryAnimation` tween only values that
		        // make sense to tween. In the future, allow customization of animated
		        // prop whitelist/blacklist?
		        var whitelist = ["data", "domain", "height", "maxBubbleSize", "padding", "samples", "size", "style", "width", "x", "y"];
		        return _react2.default.createElement(
		          _victoryCore.VictoryTransition,
		          { animate: this.props.animate, animationWhitelist: whitelist },
		          _react2.default.createElement(VictoryScatter, this.props)
		        );
		      }
		
		      var style = _victoryCore.Helpers.getStyles(this.props.style, defaultStyles, "auto", "100%");
		      var group = _react2.default.createElement(
		        "g",
		        { style: style.parent },
		        this.renderData(this.props, style)
		      );
		      return this.props.standalone ? _react2.default.createElement(
		        "svg",
		        _extends({
		          style: style.parent,
		          viewBox: "0 0 " + this.props.width + " " + this.props.height
		        }, this.props.events.parent),
		        group
		      ) : group;
		    }
		  }]);
		
		  return VictoryScatter;
		}(_react2.default.Component);
		
		VictoryScatter.role = "scatter";
		VictoryScatter.defaultTransitions = {
		  onExit: {
		    duration: 600,
		    before: function before() {
		      return { opacity: 0 };
		    }
		  },
		  onEnter: {
		    duration: 600,
		    before: function before() {
		      return { opacity: 0 };
		    },
		    after: function after(datum) {
		      return { opacity: datum.opacity || 1 };
		    }
		  }
		};
		VictoryScatter.propTypes = {
		  /**
		   * The animate prop specifies props for VictoryAnimation to use. The animate prop should
		   * also be used to specify enter and exit transition configurations with the `onExit`
		   * and `onEnter` namespaces respectively.
		   * @examples {duration: 500, onEnd: () => {}, onEnter: {duration: 500, before: () => ({y: 0})})}
		   */
		  animate: _react.PropTypes.object,
		  /**
		   * The categories prop specifies how categorical data for a chart should be ordered.
		   * This prop should be given as an array of string values, or an object with
		   * these arrays of values specified for x and y. If this prop is not set,
		   * categorical data will be plotted in the order it was given in the data array
		   * @examples ["dogs", "cats", "mice"]
		   */
		  categories: _react.PropTypes.oneOfType([_react.PropTypes.arrayOf(_react.PropTypes.string), _react.PropTypes.shape({
		    x: _react.PropTypes.arrayOf(_react.PropTypes.string),
		    y: _react.PropTypes.arrayOf(_react.PropTypes.string)
		  })]),
		  /**
		   * The bubbleProperty prop indicates which property of the data object should be used
		   * to scale data points in a bubble chart
		   */
		  bubbleProperty: _react.PropTypes.string,
		  /**
		   * The data prop specifies the data to be plotted.
		   * Data should be in the form of an array of data points.
		   * Each data point may be any format you wish (depending on the `x` and `y` accessor props),
		   * but by default, an object with x and y properties is expected.
		   * Other properties may be added to the data point object, such as fill, size, and symbol.
		   * These properties will be interpreted and applied to the individual lines
		   * @examples [{x: 1, y: 2, fill: "red"}, {x: 2, y: 3, label: "foo"}]
		   */
		
		  data: _react.PropTypes.array,
		  /**
		   * The dataComponent prop takes an entire, HTML-complete data component which will be used to
		   * create points for each datum in the scatter plot. The new element created from the passed
		   * dataComponent will have the property datum set by the scatter for the point it renders;
		   * properties position (x, y), size and symbol are calculated by the scatter for the datum;
		   * a key and index property set corresponding to the location of the datum in the data
		   * provided to the scatter; style calculated by the scatter based on the scatter's
		   * styles and the datum; and all the remaining properties from the scatter's data
		   * at the index of the datum. If a dataComponent is not provided, VictoryScatter's
		   * Point component will be used.
		   */
		  dataComponent: _react.PropTypes.element,
		  /**
		   * The domain prop describes the range of values your chart will include. This prop can be
		   * given as a array of the minimum and maximum expected values for your chart,
		   * or as an object that specifies separate arrays for x and y.
		   * If this prop is not provided, a domain will be calculated from data, or other
		   * available information.
		   * @examples [-1, 1], {x: [0, 100], y: [0, 1]}
		   */
		  domain: _react.PropTypes.oneOfType([_victoryCore.PropTypes.domain, _react.PropTypes.shape({
		    x: _victoryCore.PropTypes.domain,
		    y: _victoryCore.PropTypes.domain
		  })]),
		  /**
		   * The events prop attaches arbitrary event handlers to data and label elements
		   * Event handlers are called with their corresponding events, corresponding component props,
		   * and their index in the data array, and event name. The return value of event handlers
		   * will be stored by unique index on the state object of VictoryScatter
		   * i.e. `this.state.dataState[dataIndex] = {style: {fill: "red"}...}`, and will be
		   * applied by index to the appropriate child component. Event props on the
		   * parent namespace are just spread directly on to the top level svg of VictoryScatter
		   * if one exists. If VictoryScatter is set up to render g elements i.e. when it is
		   * rendered within chart, or when `standalone={false}` parent events will not be applied.
		   *
		   * @examples {data: {
		   *  onClick: () => onClick: () => return {style: {fill: "green"}}
		   *}}
		   */
		  events: _react.PropTypes.shape({
		    data: _react.PropTypes.object,
		    labels: _react.PropTypes.object,
		    parent: _react.PropTypes.object
		  }),
		  /**
		   * The height props specifies the height the svg viewBox of the chart container.
		   * This value should be given as a number of pixels
		   */
		  height: _victoryCore.PropTypes.nonNegative,
		  /**
		   * The labelComponent prop takes in an entire, HTML-complete label component which will be used
		   * to create labels for each point in the scatter plot. The new element created from the passed
		   * labelComponent will have property data provided by the point's datum; properties
		   * position (x, y), dy, textAnchor, and verticalAnchor preserved or default values
		   * provided by the point; and styles filled out with defaults from the scatter,
		   * and overrides from the datum. If labelComponent is omitted, a new VictoryLabel
		   * will be created with props and styles from the point.
		   */
		  labelComponent: _react.PropTypes.element,
		  /**
		   * The maxBubbleSize prop sets an upper limit for scaling data points in a bubble chart
		   */
		  maxBubbleSize: _victoryCore.PropTypes.nonNegative,
		  /**
		   * The padding props specifies the amount of padding in number of pixels between
		   * the edge of the chart and any rendered child components. This prop can be given
		   * as a number or as an object with padding specified for top, bottom, left
		   * and right.
		   */
		  padding: _react.PropTypes.oneOfType([_react.PropTypes.number, _react.PropTypes.shape({
		    top: _react.PropTypes.number,
		    bottom: _react.PropTypes.number,
		    left: _react.PropTypes.number,
		    right: _react.PropTypes.number
		  })]),
		  /**
		   * The samples prop specifies how many individual points to plot when plotting
		   * y as a function of x. Samples is ignored if x props are provided instead.
		   */
		  samples: _victoryCore.PropTypes.nonNegative,
		  /**
		   * The scale prop determines which scales your chart should use. This prop can be
		   * given as a string specifying a supported scale ("linear", "time", "log", "sqrt"),
		   * as a d3 scale function, or as an object with scales specified for x and y
		   * @exampes d3Scale.time(), {x: "linear", y: "log"}
		   */
		  scale: _react.PropTypes.oneOfType([_victoryCore.PropTypes.scale, _react.PropTypes.shape({
		    x: _victoryCore.PropTypes.scale,
		    y: _victoryCore.PropTypes.scale
		  })]),
		  /**
		   * The size prop determines how to scale each data point
		   */
		  size: _react.PropTypes.oneOfType([_victoryCore.PropTypes.nonNegative, _react.PropTypes.func]),
		  /**
		   * The standalone prop determines whether the component will render a standalone svg
		   * or a <g> tag that will be included in an external svg. Set standalone to false to
		   * compose VictoryScatter with other components within an enclosing <svg> tag.
		   */
		  standalone: _react.PropTypes.bool,
		  /**
		   * The style prop specifies styles for your VictoryScatter. Any valid inline style properties
		   * will be applied. Height, width, and padding should be specified via the height,
		   * width, and padding props, as they are used to calculate the alignment of
		   * components within chart.
		   * @examples {data: {fill: "red"}, labels: {fontSize: 12}}
		   */
		  style: _react.PropTypes.shape({
		    parent: _react.PropTypes.object,
		    data: _react.PropTypes.object,
		    labels: _react.PropTypes.object
		  }),
		  /**
		   * The symbol prop determines which symbol should be drawn to represent data points.
		   */
		  symbol: _react.PropTypes.oneOfType([_react.PropTypes.oneOf(["circle", "diamond", "plus", "square", "star", "triangleDown", "triangleUp"]), _react.PropTypes.func]),
		  /**
		   * The width props specifies the width of the svg viewBox of the chart container
		   * This value should be given as a number of pixels
		   */
		  width: _victoryCore.PropTypes.nonNegative,
		  /**
		   * The x prop specifies how to access the X value of each data point.
		   * If given as a function, it will be run on each data point, and returned value will be used.
		   * If given as an integer, it will be used as an array index for array-type data points.
		   * If given as a string, it will be used as a property key for object-type data points.
		   * If given as an array of strings, or a string containing dots or brackets,
		   * it will be used as a nested object property path (for details see Lodash docs for _.get).
		   * If `null` or `undefined`, the data value will be used as is (identity function/pass-through).
		   * @examples 0, 'x', 'x.value.nested.1.thing', 'x[2].also.nested', null, d => Math.sin(d)
		   */
		  x: _react.PropTypes.oneOfType([_react.PropTypes.func, _victoryCore.PropTypes.allOfType([_victoryCore.PropTypes.integer, _victoryCore.PropTypes.nonNegative]), _react.PropTypes.string, _react.PropTypes.arrayOf(_react.PropTypes.string)]),
		  /**
		   * The y prop specifies how to access the Y value of each data point.
		   * If given as a function, it will be run on each data point, and returned value will be used.
		   * If given as an integer, it will be used as an array index for array-type data points.
		   * If given as a string, it will be used as a property key for object-type data points.
		   * If given as an array of strings, or a string containing dots or brackets,
		   * it will be used as a nested object property path (for details see Lodash docs for _.get).
		   * If `null` or `undefined`, the data value will be used as is (identity function/pass-through).
		   * @examples 0, 'y', 'y.value.nested.1.thing', 'y[2].also.nested', null, d => Math.sin(d)
		   */
		  y: _react.PropTypes.oneOfType([_react.PropTypes.func, _victoryCore.PropTypes.allOfType([_victoryCore.PropTypes.integer, _victoryCore.PropTypes.nonNegative]), _react.PropTypes.string, _react.PropTypes.arrayOf(_react.PropTypes.string)])
		};
		VictoryScatter.defaultProps = {
		  events: {},
		  height: 300,
		  padding: 50,
		  samples: 50,
		  scale: "linear",
		  size: 3,
		  standalone: true,
		  symbol: "circle",
		  width: 450,
		  x: "x",
		  y: "y",
		  dataComponent: _react2.default.createElement(_point2.default, null)
		};
		VictoryScatter.getDomain = _domain2.default.getDomain.bind(_domain2.default);
		VictoryScatter.getData = _data2.default.getData.bind(_data2.default);
		exports.default = VictoryScatter;

	/***/ },
	/* 384 */
	/***/ function(module, exports, __webpack_require__) {

		var baseFlatten = __webpack_require__(259),
		    basePick = __webpack_require__(379),
		    rest = __webpack_require__(191);
		
		/**
		 * Creates an object composed of the picked `object` properties.
		 *
		 * @static
		 * @memberOf _
		 * @category Object
		 * @param {Object} object The source object.
		 * @param {...(string|string[])} [props] The property names to pick, specified
		 *  individually or in arrays.
		 * @returns {Object} Returns the new object.
		 * @example
		 *
		 * var object = { 'a': 1, 'b': '2', 'c': 3 };
		 *
		 * _.pick(object, ['a', 'c']);
		 * // => { 'a': 1, 'c': 3 }
		 */
		var pick = rest(function(object, props) {
		  return object == null ? {} : basePick(object, baseFlatten(props, 1));
		});
		
		module.exports = pick;


	/***/ },
	/* 385 */
	/***/ function(module, exports, __webpack_require__) {

		"use strict";
		
		Object.defineProperty(exports, "__esModule", {
		  value: true
		});
		
		var _extends = Object.assign || function (target) { for (var i = 1; i < arguments.length; i++) { var source = arguments[i]; for (var key in source) { if (Object.prototype.hasOwnProperty.call(source, key)) { target[key] = source[key]; } } } return target; };
		
		var _createClass = function () { function defineProperties(target, props) { for (var i = 0; i < props.length; i++) { var descriptor = props[i]; descriptor.enumerable = descriptor.enumerable || false; descriptor.configurable = true; if ("value" in descriptor) descriptor.writable = true; Object.defineProperty(target, descriptor.key, descriptor); } } return function (Constructor, protoProps, staticProps) { if (protoProps) defineProperties(Constructor.prototype, protoProps); if (staticProps) defineProperties(Constructor, staticProps); return Constructor; }; }();
		
		var _react = __webpack_require__(157);
		
		var _react2 = _interopRequireDefault(_react);
		
		var _victoryCore = __webpack_require__(1);
		
		var _pathHelpers = __webpack_require__(386);
		
		var _pathHelpers2 = _interopRequireDefault(_pathHelpers);
		
		function _interopRequireDefault(obj) { return obj && obj.__esModule ? obj : { default: obj }; }
		
		function _classCallCheck(instance, Constructor) { if (!(instance instanceof Constructor)) { throw new TypeError("Cannot call a class as a function"); } }
		
		function _possibleConstructorReturn(self, call) { if (!self) { throw new ReferenceError("this hasn't been initialised - super() hasn't been called"); } return call && (typeof call === "object" || typeof call === "function") ? call : self; }
		
		function _inherits(subClass, superClass) { if (typeof superClass !== "function" && superClass !== null) { throw new TypeError("Super expression must either be null or a function, not " + typeof superClass); } subClass.prototype = Object.create(superClass && superClass.prototype, { constructor: { value: subClass, enumerable: false, writable: true, configurable: true } }); if (superClass) Object.setPrototypeOf ? Object.setPrototypeOf(subClass, superClass) : subClass.__proto__ = superClass; }
		
		var Point = function (_React$Component) {
		  _inherits(Point, _React$Component);
		
		  function Point() {
		    _classCallCheck(this, Point);
		
		    return _possibleConstructorReturn(this, Object.getPrototypeOf(Point).apply(this, arguments));
		  }
		
		  _createClass(Point, [{
		    key: "getPath",
		    value: function getPath(props) {
		      var pathFunctions = {
		        circle: _pathHelpers2.default.circle,
		        square: _pathHelpers2.default.square,
		        diamond: _pathHelpers2.default.diamond,
		        triangleDown: _pathHelpers2.default.triangleDown,
		        triangleUp: _pathHelpers2.default.triangleUp,
		        plus: _pathHelpers2.default.plus,
		        star: _pathHelpers2.default.star
		      };
		      var symbol = _victoryCore.Helpers.evaluateProp(props.symbol, props.datum);
		      return pathFunctions[symbol].call(null, props.position.x, props.position.y, props.size);
		    }
		  }, {
		    key: "render",
		    value: function render() {
		      var events = _victoryCore.Helpers.getPartialEvents(this.props.events, this.props.index, this.props);
		      return _react2.default.createElement("path", _extends({}, events, {
		        style: this.props.style,
		        d: this.getPath(this.props),
		        shapeRendering: "optimizeSpeed"
		      }));
		    }
		  }]);
		
		  return Point;
		}(_react2.default.Component);
		
		Point.propTypes = {
		  index: _react2.default.PropTypes.number,
		  datum: _react.PropTypes.object,
		  events: _react.PropTypes.object,
		  symbol: _react.PropTypes.oneOfType([_react.PropTypes.oneOf(["circle", "diamond", "plus", "square", "star", "triangleDown", "triangleUp"]), _react.PropTypes.func]),
		  size: _react.PropTypes.oneOfType([_react.PropTypes.number, _react.PropTypes.func]),
		  style: _react.PropTypes.object,
		  position: _react.PropTypes.object
		};
		exports.default = Point;

	/***/ },
	/* 386 */
	/***/ function(module, exports, __webpack_require__) {

		"use strict";
		
		Object.defineProperty(exports, "__esModule", {
		  value: true
		});
		
		var _range = __webpack_require__(254);
		
		var _range2 = _interopRequireDefault(_range);
		
		function _interopRequireDefault(obj) { return obj && obj.__esModule ? obj : { default: obj }; }
		
		exports.default = {
		  circle: function circle(x, y, size) {
		    return "M " + x + ", " + y + " m " + -size + ", 0\n      a " + size + ", " + size + " 0 1,0 " + size * 2 + ",0\n      a " + size + ", " + size + " 0 1,0 " + -size * 2 + ",0";
		  },
		  square: function square(x, y, size) {
		    var baseSize = 0.87 * size;
		    return "M " + (x - baseSize) + ", " + (y + baseSize) + "\n      L " + (x + baseSize) + ", " + (y + baseSize) + "\n      L " + (x + baseSize) + ", " + (y - baseSize) + "\n      L " + (x - baseSize) + ", " + (y - baseSize) + "\n      z";
		  },
		  diamond: function diamond(x, y, size) {
		    var baseSize = 0.87 * size;
		    var length = Math.sqrt(2 * (baseSize * baseSize));
		    return "M " + x + ", " + (y + length) + "\n      L " + (x + length) + ", " + y + "\n      L " + x + ", " + (y - length) + "\n      L " + (x - length) + ", " + y + "\n      z";
		  },
		  triangleDown: function triangleDown(x, y, size) {
		    var height = size / 2 * Math.sqrt(3);
		    return "M " + (x - size) + ", " + (y - size) + "\n      L " + (x + size) + ", " + (y - size) + "\n      L " + x + ", " + (y + height) + "\n      z";
		  },
		  triangleUp: function triangleUp(x, y, size) {
		    var height = size / 2 * Math.sqrt(3);
		    return "M " + (x - size) + ", " + (y + size) + "\n      L " + (x + size) + ", " + (y + size) + "\n      L " + x + ", " + (y - height) + "\n      z";
		  },
		  plus: function plus(x, y, size) {
		    var baseSize = 1.1 * size;
		    return "M " + (x - baseSize / 2.5) + ", " + (y + baseSize) + "\n      L " + (x + baseSize / 2.5) + ", " + (y + baseSize) + "\n      L " + (x + baseSize / 2.5) + ", " + (y + baseSize / 2.5) + "\n      L " + (x + baseSize) + ", " + (y + baseSize / 2.5) + "\n      L " + (x + baseSize) + ", " + (y - baseSize / 2.5) + "\n      L " + (x + baseSize / 2.5) + ", " + (y - baseSize / 2.5) + "\n      L " + (x + baseSize / 2.5) + ", " + (y - baseSize) + "\n      L " + (x - baseSize / 2.5) + ", " + (y - baseSize) + "\n      L " + (x - baseSize / 2.5) + ", " + (y - baseSize / 2.5) + "\n      L " + (x - baseSize) + ", " + (y - baseSize / 2.5) + "\n      L " + (x - baseSize) + ", " + (y + baseSize / 2.5) + "\n      L " + (x - baseSize / 2.5) + ", " + (y + baseSize / 2.5) + "\n      z";
		  },
		  star: function star(x, y, size) {
		    var baseSize = 1.35 * size;
		    var angle = Math.PI / 5;
		    var starCoords = (0, _range2.default)(10).map(function (index) {
		      var length = index % 2 === 0 ? baseSize : baseSize / 2;
		      return length * Math.sin(angle * (index + 1)) + x + ",\n        " + (length * Math.cos(angle * (index + 1)) + y);
		    });
		    return "M " + starCoords.join("L") + " z";
		  }
		};

	/***/ },
	/* 387 */
	/***/ function(module, exports, __webpack_require__) {

		"use strict";
		
		Object.defineProperty(exports, "__esModule", {
		  value: true
		});
		
		var _createClass = function () { function defineProperties(target, props) { for (var i = 0; i < props.length; i++) { var descriptor = props[i]; descriptor.enumerable = descriptor.enumerable || false; descriptor.configurable = true; if ("value" in descriptor) descriptor.writable = true; Object.defineProperty(target, descriptor.key, descriptor); } } return function (Constructor, protoProps, staticProps) { if (protoProps) defineProperties(Constructor.prototype, protoProps); if (staticProps) defineProperties(Constructor, staticProps); return Constructor; }; }();
		
		var _defaults = __webpack_require__(175);
		
		var _defaults2 = _interopRequireDefault(_defaults);
		
		var _react = __webpack_require__(157);
		
		var _react2 = _interopRequireDefault(_react);
		
		var _victoryCore = __webpack_require__(1);
		
		function _interopRequireDefault(obj) { return obj && obj.__esModule ? obj : { default: obj }; }
		
		function _classCallCheck(instance, Constructor) { if (!(instance instanceof Constructor)) { throw new TypeError("Cannot call a class as a function"); } }
		
		function _possibleConstructorReturn(self, call) { if (!self) { throw new ReferenceError("this hasn't been initialised - super() hasn't been called"); } return call && (typeof call === "object" || typeof call === "function") ? call : self; }
		
		function _inherits(subClass, superClass) { if (typeof superClass !== "function" && superClass !== null) { throw new TypeError("Super expression must either be null or a function, not " + typeof superClass); } subClass.prototype = Object.create(superClass && superClass.prototype, { constructor: { value: subClass, enumerable: false, writable: true, configurable: true } }); if (superClass) Object.setPrototypeOf ? Object.setPrototypeOf(subClass, superClass) : subClass.__proto__ = superClass; }
		
		var PointLabel = function (_React$Component) {
		  _inherits(PointLabel, _React$Component);
		
		  function PointLabel() {
		    _classCallCheck(this, PointLabel);
		
		    return _possibleConstructorReturn(this, Object.getPrototypeOf(PointLabel).apply(this, arguments));
		  }
		
		  _createClass(PointLabel, [{
		    key: "renderLabel",
		    value: function renderLabel(props) {
		      if (props.showLabels === false || !props.datum.label) {
		        return undefined;
		      }
		      var component = props.labelComponent;
		      var componentStyle = component && component.props.style || {};
		      var baseStyle = (0, _defaults2.default)({}, componentStyle, props.style);
		      var labelStyle = _victoryCore.Helpers.evaluateStyle(baseStyle, props.datum);
		      var labelText = component && component.props.text || props.datum.label;
		      var baseEvents = component && component.props.events ? (0, _defaults2.default)({}, component.props.events, props.events) : props.events;
		      var events = _victoryCore.Helpers.getPartialEvents(baseEvents, props.index, props);
		      var labelProps = {
		        x: component && component.props.x || props.position.x,
		        y: component && component.props.y || props.position.y - labelStyle.padding,
		        dy: component && component.props.dy,
		        datum: props.datum,
		        text: labelText,
		        textAnchor: component && component.props.textAnchor || labelStyle.textAnchor,
		        verticalAnchor: component && component.props.verticalAnchor || "end",
		        style: labelStyle,
		        events: events
		      };
		
		      return component ? _react2.default.cloneElement(component, labelProps) : _react2.default.createElement(_victoryCore.VictoryLabel, labelProps);
		    }
		  }, {
		    key: "render",
		    value: function render() {
		      return _react2.default.createElement(
		        "g",
		        null,
		        this.renderLabel(this.props)
		      );
		    }
		  }]);
		
		  return PointLabel;
		}(_react2.default.Component);
		
		PointLabel.propTypes = {
		  datum: _react.PropTypes.object,
		  index: _react2.default.PropTypes.number,
		  events: _react.PropTypes.object,
		  labelComponent: _react2.default.PropTypes.element,
		  style: _react.PropTypes.object,
		  position: _react.PropTypes.object
		};
		exports.default = PointLabel;

	/***/ },
	/* 388 */
	/***/ function(module, exports, __webpack_require__) {

		"use strict";
		
		Object.defineProperty(exports, "__esModule", {
		  value: true
		});
		
		var _values = __webpack_require__(218);
		
		var _values2 = _interopRequireDefault(_values);
		
		var _victoryCore = __webpack_require__(1);
		
		function _interopRequireDefault(obj) { return obj && obj.__esModule ? obj : { default: obj }; }
		
		function _toConsumableArray(arr) { if (Array.isArray(arr)) { for (var i = 0, arr2 = Array(arr.length); i < arr.length; i++) { arr2[i] = arr[i]; } return arr2; } else { return Array.from(arr); } }
		
		exports.default = {
		  getSymbol: function getSymbol(data, props) {
		    if (props.bubbleProperty) {
		      return "circle";
		    }
		    return data.symbol || props.symbol;
		  },
		  getBubbleSize: function getBubbleSize(datum, props, calculatedProps) {
		    var data = calculatedProps.data;
		    var z = calculatedProps.z;
		
		    var getMaxRadius = function getMaxRadius() {
		      var minPadding = Math.min.apply(Math, _toConsumableArray((0, _values2.default)(_victoryCore.Helpers.getPadding(props))));
		      return Math.max(minPadding, 5);
		    };
		    var zData = data.map(function (point) {
		      return point.z;
		    });
		    var zMin = Math.min.apply(Math, _toConsumableArray(zData));
		    var zMax = Math.max.apply(Math, _toConsumableArray(zData));
		    var maxRadius = props.maxBubbleSize || getMaxRadius();
		    var maxArea = Math.PI * Math.pow(maxRadius, 2);
		    var area = (datum[z] - zMin) / (zMax - zMin) * maxArea;
		    var radius = Math.sqrt(area / Math.PI);
		    return Math.max(radius, 1);
		  },
		  getSize: function getSize(data, props, calculatedProps) {
		    if (data.size) {
		      return typeof data.size === "function" ? data.size : Math.max(data.size, 1);
		    } else if (typeof props.size === "function") {
		      return props.size;
		    } else if (data[calculatedProps.z]) {
		      return this.getBubbleSize(data, props, calculatedProps);
		    } else {
		      return Math.max(props.size, 1);
		    }
		  }
		};

	/***/ },
	/* 389 */
	/***/ function(module, exports, __webpack_require__) {

		"use strict";
		
		Object.defineProperty(exports, "__esModule", {
		  value: true
		});
		
		var _createClass = function () { function defineProperties(target, props) { for (var i = 0; i < props.length; i++) { var descriptor = props[i]; descriptor.enumerable = descriptor.enumerable || false; descriptor.configurable = true; if ("value" in descriptor) descriptor.writable = true; Object.defineProperty(target, descriptor.key, descriptor); } } return function (Constructor, protoProps, staticProps) { if (protoProps) defineProperties(Constructor.prototype, protoProps); if (staticProps) defineProperties(Constructor, staticProps); return Constructor; }; }();
		
		var _assign = __webpack_require__(278);
		
		var _assign2 = _interopRequireDefault(_assign);
		
		var _uniq = __webpack_require__(272);
		
		var _uniq2 = _interopRequireDefault(_uniq);
		
		var _react = __webpack_require__(157);
		
		var _react2 = _interopRequireDefault(_react);
		
		var _victoryCore = __webpack_require__(1);
		
		var _scale = __webpack_require__(257);
		
		var _scale2 = _interopRequireDefault(_scale);
		
		var _data = __webpack_require__(271);
		
		var _data2 = _interopRequireDefault(_data);
		
		var _wrapper = __webpack_require__(338);
		
		var _wrapper2 = _interopRequireDefault(_wrapper);
		
		function _interopRequireDefault(obj) { return obj && obj.__esModule ? obj : { default: obj }; }
		
		function _toConsumableArray(arr) { if (Array.isArray(arr)) { for (var i = 0, arr2 = Array(arr.length); i < arr.length; i++) { arr2[i] = arr[i]; } return arr2; } else { return Array.from(arr); } }
		
		function _classCallCheck(instance, Constructor) { if (!(instance instanceof Constructor)) { throw new TypeError("Cannot call a class as a function"); } }
		
		function _possibleConstructorReturn(self, call) { if (!self) { throw new ReferenceError("this hasn't been initialised - super() hasn't been called"); } return call && (typeof call === "object" || typeof call === "function") ? call : self; }
		
		function _inherits(subClass, superClass) { if (typeof superClass !== "function" && superClass !== null) { throw new TypeError("Super expression must either be null or a function, not " + typeof superClass); } subClass.prototype = Object.create(superClass && superClass.prototype, { constructor: { value: subClass, enumerable: false, writable: true, configurable: true } }); if (superClass) Object.setPrototypeOf ? Object.setPrototypeOf(subClass, superClass) : subClass.__proto__ = superClass; }
		
		var defaultStyles = {
		  data: {
		    width: 8,
		    padding: 6
		  }
		};
		
		var VictoryGroup = function (_React$Component) {
		  _inherits(VictoryGroup, _React$Component);
		
		  function VictoryGroup() {
		    _classCallCheck(this, VictoryGroup);
		
		    return _possibleConstructorReturn(this, Object.getPrototypeOf(VictoryGroup).apply(this, arguments));
		  }
		
		  _createClass(VictoryGroup, [{
		    key: "componentWillReceiveProps",
		    value: function componentWillReceiveProps(nextProps) {
		      var setAnimationState = _wrapper2.default.setAnimationState.bind(this);
		      setAnimationState(nextProps);
		    }
		  }, {
		    key: "getCalculatedProps",
		    value: function getCalculatedProps(props, childComponents, style) {
		      var horizontal = props.horizontal || props.children.every(function (component) {
		        return component.props.horizontal;
		      });
		      var datasets = childComponents.map(function (child) {
		        var getData = child.type.getData || _data2.default.getData;
		        return getData(child.props);
		      });
		      var domain = {
		        x: _wrapper2.default.getDomainFromChildren(props, "x", datasets),
		        y: _wrapper2.default.getDomainFromChildren(props, "y", datasets)
		      };
		      var range = {
		        x: _victoryCore.Helpers.getRange(props, "x"),
		        y: _victoryCore.Helpers.getRange(props, "y")
		      };
		      var baseScale = {
		        x: _scale2.default.getScaleFromProps(props, "x") || _scale2.default.getDefaultScale(),
		        y: _scale2.default.getScaleFromProps(props, "y") || _scale2.default.getDefaultScale()
		      };
		      var scale = {
		        x: baseScale.x.domain(domain.x).range(range.x),
		        y: baseScale.y.domain(domain.y).range(range.y)
		      };
		      var categories = {
		        x: _wrapper2.default.getCategories(props, "x"),
		        y: _wrapper2.default.getCategories(props, "y")
		      };
		      var colorScale = props.colorScale;
		      return { datasets: datasets, categories: categories, range: range, domain: domain, horizontal: horizontal, scale: scale, style: style, colorScale: colorScale };
		    }
		  }, {
		    key: "pixelsToValue",
		    value: function pixelsToValue(pixels, axis, calculatedProps) {
		      if (pixels === 0) {
		        return 0;
		      }
		      var domain = calculatedProps.domain[axis];
		      var range = calculatedProps.range[axis];
		      var domainExtent = Math.max.apply(Math, _toConsumableArray(domain)) - Math.min.apply(Math, _toConsumableArray(domain));
		      var rangeExtent = Math.max.apply(Math, _toConsumableArray(range)) - Math.min.apply(Math, _toConsumableArray(range));
		      return domainExtent / rangeExtent * pixels;
		    }
		  }, {
		    key: "getXO",
		    value: function getXO(props, calculatedProps, datasets, index) {
		      // eslint-disable-line max-params
		      var center = (datasets.length - 1) / 2;
		      var totalWidth = this.pixelsToValue(props.offset, "x", calculatedProps);
		      return (index - center) * totalWidth;
		    }
		  }, {
		    key: "getLabels",
		    value: function getLabels(props, datasets, index) {
		      if (!props.labels) {
		        return undefined;
		      }
		      return Math.floor(datasets.length / 2) === index ? props.labels : [];
		    }
		  }, {
		    key: "getChildProps",
		    value: function getChildProps(props, calculatedProps) {
		      var categories = calculatedProps.categories;
		      var domain = calculatedProps.domain;
		      var scale = calculatedProps.scale;
		      var horizontal = calculatedProps.horizontal;
		
		      return {
		        height: props.height,
		        width: props.width,
		        padding: _victoryCore.Helpers.getPadding(props),
		        labelComponent: props.labelComponent,
		        standalone: false,
		        categories: categories,
		        domain: domain,
		        scale: scale,
		        horizontal: horizontal
		      };
		    }
		  }, {
		    key: "getColorScale",
		    value: function getColorScale(props, child) {
		      var role = child.type && child.type.role;
		      if (role !== "group-wrapper" && role !== "stack-wrapper") {
		        return undefined;
		      }
		      return child.props.colorScale || props.colorScale;
		    }
		
		    // the old ones were bad
		
		  }, {
		    key: "getNewChildren",
		    value: function getNewChildren(props, childComponents, calculatedProps) {
		      var _this2 = this;
		
		      var datasets = calculatedProps.datasets;
		
		      var childProps = this.getChildProps(props, calculatedProps);
		      var getAnimationProps = _wrapper2.default.getAnimationProps.bind(this);
		      return childComponents.map(function (child, index) {
		        var xOffset = _this2.getXO(props, calculatedProps, datasets, index);
		        var data = datasets[index].map(function (datum) {
		          return (0, _assign2.default)(datum, { xOffset: xOffset });
		        });
		        var style = _wrapper2.default.getChildStyle(child, index, calculatedProps);
		        return _react2.default.cloneElement(child, (0, _assign2.default)({
		          animate: getAnimationProps(props, child, index),
		          key: index,
		          labels: _this2.getLabels(props, datasets, index) || child.props.labels,
		          labelComponent: props.labelComponent || child.props.labelComponent,
		          style: style,
		          data: data,
		          xOffset: child.type.role === "stack-wrapper" ? xOffset : undefined,
		          colorScale: _this2.getColorScale(props, child)
		        }, childProps));
		      });
		    }
		  }, {
		    key: "render",
		    value: function render() {
		      var props = this.state && this.state.nodesWillExit ? this.state.oldProps : this.props;
		      var style = _victoryCore.Helpers.getStyles(props.style, defaultStyles, "auto", "100%");
		      var childComponents = _react2.default.Children.toArray(props.children);
		      var types = (0, _uniq2.default)(childComponents.map(function (child) {
		        return child.type.role;
		      }));
		      if (types.length > 1) {
		        _victoryCore.Log.warn("Only components of the same type can be grouped");
		      }
		      var calculatedProps = this.getCalculatedProps(props, childComponents, style);
		      var group = _react2.default.createElement(
		        "g",
		        { style: style.parent },
		        this.getNewChildren(props, childComponents, calculatedProps)
		      );
		      return this.props.standalone ? _react2.default.createElement(
		        "svg",
		        { style: style.parent, viewBox: "0 0 " + props.width + " " + props.height },
		        group
		      ) : group;
		    }
		  }]);
		
		  return VictoryGroup;
		}(_react2.default.Component);
		
		VictoryGroup.role = "group-wrapper";
		VictoryGroup.propTypes = {
		  /**
		   * The animate prop specifies props for VictoryAnimation to use. If this prop is
		   * given, all children of VictoryGroup will pass the options specified in this prop to
		   * VictoryTransition and VictoryAnimation. Child animation props will be added for any
		   * values not provided via the animation prop for VictoryGroup. The animate prop should
		   * also be used to specify enter and exit transition configurations with the `onExit`
		   * and `onEnter` namespaces respectively. VictoryGroup will coodrinate transitions between all
		   * of its child components so that animation stays in sync
		   * @examples {duration: 500, onEnd: () => {}, onEnter: {duration: 500, before: () => ({y: 0})})}
		   */
		  animate: _react.PropTypes.object,
		  /**
		   * The categories prop specifies how categorical data for a chart should be ordered.
		   * This prop should be given as an array of string values, or an object with
		   * these values for x and y. When categories are not given as an object
		   * When this prop is set on a wrapper component, it will dictate the categories of
		   * its the children. If this prop is not set, any categories on child component
		   * or catigorical data, will be merged to create a shared set of categories.
		   * @examples ["dogs", "cats", "mice"]
		   */
		  categories: _react.PropTypes.oneOfType([_react.PropTypes.arrayOf(_react.PropTypes.string), _react.PropTypes.shape({
		    x: _react.PropTypes.arrayOf(_react.PropTypes.string),
		    y: _react.PropTypes.arrayOf(_react.PropTypes.string)
		  })]),
		  /**
		   * VictoryGroup is a wrapper component that controls the layout and animation behaviors of its
		   * children. VictoryGroup creates a grouped layout for  VictoryArea, or VictoryBar components.
		   * VictoryGroup  can also group components wrapped in VictoryStack
		   */
		  children: _react2.default.PropTypes.oneOfType([_react2.default.PropTypes.arrayOf(_react2.default.PropTypes.node), _react2.default.PropTypes.node]),
		  /**
		   * The colorScale prop is an optional prop that defines the color scale the chart's bars
		   * will be created on. This prop should be given as an array of CSS colors, or as a string
		   * corresponding to one of the built in color scales. VictoryBar will automatically assign
		   * values from this color scale to the bars unless colors are explicitly provided in the
		   * `dataAttributes` prop.
		   */
		  colorScale: _react.PropTypes.oneOfType([_react.PropTypes.arrayOf(_react.PropTypes.string), _react.PropTypes.oneOf(["greyscale", "qualitative", "heatmap", "warm", "cool", "red", "green", "blue"])]),
		  /**
		   * The domain prop describes the range of values your chart will include. This prop can be
		   * given as a array of the minimum and maximum expected values for your chart,
		   * or as an object that specifies separate arrays for x and y.
		   * If this prop is not provided, a domain will be calculated from data, or other
		   * available information.
		   * @examples: [-1, 1], {x: [0, 100], y: [0, 1]}
		   */
		  domain: _react.PropTypes.oneOfType([_victoryCore.PropTypes.domain, _react.PropTypes.shape({
		    x: _victoryCore.PropTypes.domain,
		    y: _victoryCore.PropTypes.domain
		  })]),
		  /**
		   * The domainPadding prop specifies a number of pixels of padding to add to the
		   * beginning and end of a domain. This prop is useful for explicitly spacing ticks farther
		   * from the origin to prevent crowding. This prop should be given as an object with
		   * numbers specified for x and y.
		   */
		  domainPadding: _react.PropTypes.oneOfType([_react.PropTypes.shape({
		    x: _victoryCore.PropTypes.nonNegative,
		    y: _victoryCore.PropTypes.nonNegative
		  }), _victoryCore.PropTypes.nonNegative]),
		  /**
		   * The height props specifies the height the svg viewBox of the chart container.
		   * This value should be given as a number of pixels
		   */
		  height: _victoryCore.PropTypes.nonNegative,
		  /**
		   * The horizontal prop determines whether the bars will be laid vertically or
		   * horizontally. The bars will be vertical if this prop is false or unspecified,
		   * or horizontal if the prop is set to true.
		   */
		  horizontal: _react.PropTypes.bool,
		  /**
		   * The labels prop defines labels that will appear above group of data.
		   * This prop should be given as an array of values or as a function of data.
		   * If given as an array, the number of elements in the array should be equal to
		   * the length of the data array. Group labels will appear above the center
		   * series of the group, and will override the labels prop of child components.
		   * To use group labels with individual data labels, individual labels should be
		   * added directly to data.
		   * @examples: ["spring", "summer", "fall", "winter"], (datum) => datum.title
		   */
		  labels: _react.PropTypes.oneOfType([_react.PropTypes.func, _react.PropTypes.array]),
		  /**
		   * The labelComponent prop takes in an entire, HTML-complete label
		   * component which will be used to create labels for each group of data in the
		   * chart. The new element created from the passed labelComponent will have
		   * property data provided by the bar's datum; properties x, y, textAnchor,
		   * and verticalAnchor preserved or default values provided by the data component; and
		   * styles filled out with defaults provided by the component, and overrides from
		   * the datum. If labelComponent is omitted, a new VictoryLabel will be
		   * created with props and styles from the bar.
		   */
		  labelComponent: _react.PropTypes.element,
		  /**
		   * The offset prop derermines the number of pixels each element in a group should
		   * be offset from the others. In the case of groups of bars, this number should
		   * be equal to the width of the bar plus the desired spacing between bars.
		   */
		  offset: _react.PropTypes.number,
		  /**
		   * The padding props specifies the amount of padding in number of pixels between
		   * the edge of the chart and any rendered child components. This prop can be given
		   * as a number or as an object with padding specified for top, bottom, left
		   * and right.
		   */
		  padding: _react.PropTypes.oneOfType([_react.PropTypes.number, _react.PropTypes.shape({
		    top: _react.PropTypes.number,
		    bottom: _react.PropTypes.number,
		    left: _react.PropTypes.number,
		    right: _react.PropTypes.number
		  })]),
		  /**
		   * The scale prop determines which scales your chart should use. This prop can be
		   * given as a function, or as an object that specifies separate functions for x and y.
		   * @examples d3.time.scale(), {x: d3.scale.linear(), y: d3.scale.log()}
		   */
		  scale: _react.PropTypes.oneOfType([_victoryCore.PropTypes.scale, _react.PropTypes.shape({
		    x: _victoryCore.PropTypes.scale,
		    y: _victoryCore.PropTypes.scale
		  })]),
		  /**
		   * The standalone prop determines whether the component will render a standalone svg
		   * or a <g> tag that will be included in an external svg. Set standalone to false to
		   * compose VictoryChart with other components within an enclosing <svg> tag.
		   */
		  standalone: _react.PropTypes.bool,
		  /**
		   * The style prop specifies styles for your grouped chart. These styles will be
		   * applied to all grouped children
		   */
		  style: _react.PropTypes.shape({
		    parent: _react.PropTypes.object,
		    data: _react.PropTypes.object,
		    labels: _react.PropTypes.object
		  }),
		  /**
		   * The width props specifies the width of the svg viewBox of the chart container
		   * This value should be given as a number of pixels
		   */
		  width: _victoryCore.PropTypes.nonNegative
		};
		VictoryGroup.defaultProps = {
		  scale: "linear",
		  offset: 0,
		  height: 300,
		  width: 450,
		  padding: 50,
		  standalone: true
		};
		VictoryGroup.getDomain = _wrapper2.default.getDomainFromChildren.bind(_wrapper2.default);
		VictoryGroup.getData = _wrapper2.default.getData.bind(_wrapper2.default);
		exports.default = VictoryGroup;

	/***/ },
	/* 390 */
	/***/ function(module, exports, __webpack_require__) {

		"use strict";
		
		Object.defineProperty(exports, "__esModule", {
		  value: true
		});
		
		var _createClass = function () { function defineProperties(target, props) { for (var i = 0; i < props.length; i++) { var descriptor = props[i]; descriptor.enumerable = descriptor.enumerable || false; descriptor.configurable = true; if ("value" in descriptor) descriptor.writable = true; Object.defineProperty(target, descriptor.key, descriptor); } } return function (Constructor, protoProps, staticProps) { if (protoProps) defineProperties(Constructor.prototype, protoProps); if (staticProps) defineProperties(Constructor, staticProps); return Constructor; }; }();
		
		var _assign = __webpack_require__(278);
		
		var _assign2 = _interopRequireDefault(_assign);
		
		var _uniq = __webpack_require__(272);
		
		var _uniq2 = _interopRequireDefault(_uniq);
		
		var _react = __webpack_require__(157);
		
		var _react2 = _interopRequireDefault(_react);
		
		var _victoryCore = __webpack_require__(1);
		
		var _scale = __webpack_require__(257);
		
		var _scale2 = _interopRequireDefault(_scale);
		
		var _data = __webpack_require__(271);
		
		var _data2 = _interopRequireDefault(_data);
		
		var _wrapper = __webpack_require__(338);
		
		var _wrapper2 = _interopRequireDefault(_wrapper);
		
		function _interopRequireDefault(obj) { return obj && obj.__esModule ? obj : { default: obj }; }
		
		function _classCallCheck(instance, Constructor) { if (!(instance instanceof Constructor)) { throw new TypeError("Cannot call a class as a function"); } }
		
		function _possibleConstructorReturn(self, call) { if (!self) { throw new ReferenceError("this hasn't been initialised - super() hasn't been called"); } return call && (typeof call === "object" || typeof call === "function") ? call : self; }
		
		function _inherits(subClass, superClass) { if (typeof superClass !== "function" && superClass !== null) { throw new TypeError("Super expression must either be null or a function, not " + typeof superClass); } subClass.prototype = Object.create(superClass && superClass.prototype, { constructor: { value: subClass, enumerable: false, writable: true, configurable: true } }); if (superClass) Object.setPrototypeOf ? Object.setPrototypeOf(subClass, superClass) : subClass.__proto__ = superClass; }
		
		var defaultStyles = {
		  data: {
		    width: 8,
		    padding: 6
		  }
		};
		
		var VictoryStack = function (_React$Component) {
		  _inherits(VictoryStack, _React$Component);
		
		  function VictoryStack() {
		    _classCallCheck(this, VictoryStack);
		
		    return _possibleConstructorReturn(this, Object.getPrototypeOf(VictoryStack).apply(this, arguments));
		  }
		
		  _createClass(VictoryStack, [{
		    key: "componentWillReceiveProps",
		    value: function componentWillReceiveProps(nextProps) {
		      var setAnimationState = _wrapper2.default.setAnimationState.bind(this);
		      setAnimationState(nextProps);
		    }
		  }, {
		    key: "getCalculatedProps",
		    value: function getCalculatedProps(props, childComponents, style) {
		      var horizontal = props.horizontal || childComponents.every(function (component) {
		        return component.props.horizontal;
		      });
		      var datasets = childComponents.map(function (child) {
		        return child.type.getData(child.props) || _data2.default.getData(child.props);
		      });
		      var domain = {
		        x: _wrapper2.default.getStackedDomain(props, "x", datasets),
		        y: _wrapper2.default.getStackedDomain(props, "y", datasets)
		      };
		      var range = {
		        x: _victoryCore.Helpers.getRange(props, "x"),
		        y: _victoryCore.Helpers.getRange(props, "y")
		      };
		      var baseScale = {
		        x: _scale2.default.getScaleFromProps(props, "x") || _scale2.default.getDefaultScale(),
		        y: _scale2.default.getScaleFromProps(props, "y") || _scale2.default.getDefaultScale()
		      };
		      var scale = {
		        x: baseScale.x.domain(domain.x).range(range.x),
		        y: baseScale.y.domain(domain.y).range(range.y)
		      };
		      var categories = {
		        x: _wrapper2.default.getCategories(props, "x"),
		        y: _wrapper2.default.getCategories(props, "y")
		      };
		      var colorScale = props.colorScale;
		      return { datasets: datasets, categories: categories, range: range, domain: domain, horizontal: horizontal, scale: scale, style: style, colorScale: colorScale };
		    }
		  }, {
		    key: "addLayoutData",
		    value: function addLayoutData(props, calculatedProps, datasets, index) {
		      // eslint-disable-line max-params
		      return datasets[index].map(function (datum) {
		        return (0, _assign2.default)(datum, {
		          yOffset: _wrapper2.default.getY0(datum, index, calculatedProps),
		          xOffset: props.xOffset
		        });
		      });
		    }
		  }, {
		    key: "getLabels",
		    value: function getLabels(props, datasets, index) {
		      if (!props.labels) {
		        return undefined;
		      }
		      return datasets.length === index + 1 ? props.labels : [];
		    }
		  }, {
		    key: "getChildProps",
		    value: function getChildProps(props, calculatedProps) {
		      var categories = calculatedProps.categories;
		      var domain = calculatedProps.domain;
		      var scale = calculatedProps.scale;
		      var horizontal = calculatedProps.horizontal;
		
		      return {
		        height: props.height,
		        width: props.width,
		        padding: _victoryCore.Helpers.getPadding(props),
		        standalone: false,
		        categories: categories,
		        domain: domain,
		        scale: scale,
		        horizontal: horizontal
		      };
		    }
		
		    // the old ones were bad
		
		  }, {
		    key: "getNewChildren",
		    value: function getNewChildren(props, childComponents, calculatedProps) {
		      var _this2 = this;
		
		      var datasets = calculatedProps.datasets;
		
		      var childProps = this.getChildProps(props, calculatedProps);
		      var getAnimationProps = _wrapper2.default.getAnimationProps.bind(this);
		      return childComponents.map(function (child, index) {
		        var data = _this2.addLayoutData(props, calculatedProps, datasets, index);
		        var style = _wrapper2.default.getChildStyle(child, index, calculatedProps);
		        return _react2.default.cloneElement(child, (0, _assign2.default)({
		          animate: getAnimationProps(props, child, index),
		          key: index,
		          labels: _this2.getLabels(props, datasets, index) || child.props.labels,
		          labelComponent: props.labelComponent || child.props.labelComponent,
		          style: style,
		          data: data
		        }, childProps));
		      });
		    }
		  }, {
		    key: "render",
		    value: function render() {
		      var props = this.state && this.state.nodesWillExit ? this.state.oldProps : this.props;
		      var style = _victoryCore.Helpers.getStyles(props.style, defaultStyles, "auto", "100%");
		      var childComponents = _react2.default.Children.toArray(props.children);
		      var types = (0, _uniq2.default)(childComponents.map(function (child) {
		        return child.type.role;
		      }));
		      if (types.length > 1) {
		        _victoryCore.Log.warn("Only components of the same type can be stacked");
		      }
		      if (types.some(function (type) {
		        return type === "group-wrapper";
		      })) {
		        _victoryCore.Log.warn("It is not possible to stack groups.");
		      }
		      var calculatedProps = this.getCalculatedProps(props, childComponents, style);
		      var group = _react2.default.createElement(
		        "g",
		        { style: style.parent },
		        this.getNewChildren(props, childComponents, calculatedProps)
		      );
		      return props.standalone ? _react2.default.createElement(
		        "svg",
		        { style: style.parent, viewBox: "0 0 " + props.width + " " + props.height },
		        group
		      ) : group;
		    }
		  }]);
		
		  return VictoryStack;
		}(_react2.default.Component);
		
		VictoryStack.role = "stack-wrapper";
		VictoryStack.propTypes = {
		  /**
		   * The animate prop specifies props for VictoryAnimation to use. If this prop is
		   * given, all children of VictoryStack will pass the options specified in this prop to
		   * VictoryTransition and VictoryAnimation. Child animation props will be added for any
		   * values not provided via the animation prop for VictoryStack. The animate prop should
		   * also be used to specify enter and exit transition configurations with the `onExit`
		   * and `onEnter` namespaces respectively. VictoryStack will coodrinate transitions between all
		   * of its child components so that animation stays in sync
		   * @examples {duration: 500, onEnd: () => {}, onEnter: {duration: 500, before: () => ({y: 0})})}
		   */
		  animate: _react.PropTypes.object,
		  /**
		   * The categories prop specifies how categorical data for a chart should be ordered.
		   * This prop should be given as an array of string values, or an object with
		   * these values for x and y. When categories are not given as an object
		   * When this prop is set on a wrapper component, it will dictate the categories of
		   * its the children. If this prop is not set, any categories on child component
		   * or catigorical data, will be merged to create a shared set of categories.
		   * @examples ["dogs", "cats", "mice"]
		   */
		  categories: _react.PropTypes.oneOfType([_react.PropTypes.arrayOf(_react.PropTypes.string), _react.PropTypes.shape({
		    x: _react.PropTypes.arrayOf(_react.PropTypes.string),
		    y: _react.PropTypes.arrayOf(_react.PropTypes.string)
		  })]),
		  /**
		   * VictoryStack is a wrapper component that controls the layout and animation behaviors of its
		   * children. VictoryStack creates a stacked layout for  VictoryArea, or VictoryBar components.
		   */
		  children: _react.PropTypes.oneOfType([_react.PropTypes.arrayOf(_react.PropTypes.node), _react.PropTypes.node]),
		  /**
		   * The colorScale prop is an optional prop that defines the color scale the chart's bars
		   * will be created on. This prop should be given as an array of CSS colors, or as a string
		   * corresponding to one of the built in color scales. VictoryBar will automatically assign
		   * values from this color scale to the bars unless colors are explicitly provided in the
		   * `dataAttributes` prop.
		   */
		
		  colorScale: _react.PropTypes.oneOfType([_react.PropTypes.arrayOf(_react.PropTypes.string), _react.PropTypes.oneOf(["greyscale", "qualitative", "heatmap", "warm", "cool", "red", "green", "blue"])]),
		  /**
		   * The domain prop describes the range of values your chart will include. This prop can be
		   * given as a array of the minimum and maximum expected values for your chart,
		   * or as an object that specifies separate arrays for x and y.
		   * If this prop is not provided, a domain will be calculated from data, or other
		   * available information.
		   * @examples: [-1, 1], {x: [0, 100], y: [0, 1]}
		   */
		  domain: _react.PropTypes.oneOfType([_victoryCore.PropTypes.domain, _react.PropTypes.shape({
		    x: _victoryCore.PropTypes.domain,
		    y: _victoryCore.PropTypes.domain
		  })]),
		  /**
		   * The domainPadding prop specifies a number of pixels of padding to add to the
		   * beginning and end of a domain. This prop is useful for explicitly spacing ticks farther
		   * from the origin to prevent crowding. This prop should be given as an object with
		   * numbers specified for x and y.
		   */
		  domainPadding: _react.PropTypes.oneOfType([_react.PropTypes.shape({
		    x: _victoryCore.PropTypes.nonNegative,
		    y: _victoryCore.PropTypes.nonNegative
		  }), _victoryCore.PropTypes.nonNegative]),
		  /**
		   * The height props specifies the height the svg viewBox of the chart container.
		   * This value should be given as a number of pixels
		   */
		  height: _victoryCore.PropTypes.nonNegative,
		  /**
		   * The horizontal prop determines whether the bars will be laid vertically or
		   * horizontally. The bars will be vertical if this prop is false or unspecified,
		   * or horizontal if the prop is set to true.
		   */
		  horizontal: _react.PropTypes.bool,
		  /**
		   * The labels prop defines labels that will appear above stack of data.
		   * This prop should be given as an array of values or as a function of data.
		   * If given as an array, the number of elements in the array should be equal to
		   * the length of the data array. Stack labels will appear above the last
		   * series of the stack, and will override the labels prop of child components.
		   * To use group labels with individual data labels, individual labels should be
		   * added directly to data.
		   * @examples: ["spring", "summer", "fall", "winter"], (datum) => datum.title
		   */
		  labels: _react.PropTypes.oneOfType([_react.PropTypes.func, _react.PropTypes.array]),
		  /**
		   * The labelComponent prop takes in an entire, HTML-complete label
		   * component which will be used to create labels for each stack of data in the
		   * chart. The new element created from the passed labelComponent will have
		   * property data provided by the bar's datum; properties x, y, textAnchor,
		   * and verticalAnchor preserved or default values provided by the data component; and
		   * styles filled out with defaults provided by the component, and overrides from
		   * the datum. If labelComponent is omitted, a new VictoryLabel will be
		   * created with props and styles from the bar.
		   */
		  labelComponent: _react.PropTypes.element,
		  /**
		   * The padding props specifies the amount of padding in number of pixels between
		   * the edge of the chart and any rendered child components. This prop can be given
		   * as a number or as an object with padding specified for top, bottom, left
		   * and right.
		   */
		  padding: _react.PropTypes.oneOfType([_react.PropTypes.number, _react.PropTypes.shape({
		    top: _react.PropTypes.number,
		    bottom: _react.PropTypes.number,
		    left: _react.PropTypes.number,
		    right: _react.PropTypes.number
		  })]),
		  /**
		   * The scale prop determines which scales your chart should use. This prop can be
		   * given as a function, or as an object that specifies separate functions for x and y.
		   * @examples d3.time.scale(), {x: d3.scale.linear(), y: d3.scale.log()}
		   */
		  scale: _react.PropTypes.oneOfType([_victoryCore.PropTypes.scale, _react.PropTypes.shape({
		    x: _victoryCore.PropTypes.scale,
		    y: _victoryCore.PropTypes.scale
		  })]),
		  /**
		   * The standalone prop determines whether the component will render a standalone svg
		   * or a <g> tag that will be included in an external svg. Set standalone to false to
		   * compose VictoryChart with other components within an enclosing <svg> tag.
		   */
		  standalone: _react.PropTypes.bool,
		  /**
		   * The style prop specifies styles for your grouped chart. These styles will be
		   * applied to all grouped children
		   */
		  style: _react.PropTypes.shape({
		    parent: _react.PropTypes.object,
		    data: _react.PropTypes.object,
		    labels: _react.PropTypes.object
		  }),
		  /**
		   * The width props specifies the width of the svg viewBox of the chart container
		   * This value should be given as a number of pixels
		   */
		  width: _victoryCore.PropTypes.nonNegative,
		  /**
		   * The xOffset prop is used for grouping stacks of bars. This prop will be set
		   * by the VictoryGroup component wrapper, or can be set manually.
		   */
		  xOffset: _react.PropTypes.number
		};
		VictoryStack.defaultProps = {
		  scale: "linear",
		  height: 300,
		  width: 450,
		  padding: 50,
		  standalone: true
		};
		VictoryStack.getDomain = _wrapper2.default.getStackedDomain.bind(_wrapper2.default);
		VictoryStack.getData = _wrapper2.default.getData.bind(_wrapper2.default);
		exports.default = VictoryStack;

	/***/ },
	/* 391 */
	/***/ function(module, exports, __webpack_require__) {

		"use strict";
		
		Object.defineProperty(exports, "__esModule", {
		  value: true
		});
		exports.VictoryPie = undefined;
		
		var _victoryPie = __webpack_require__(392);
		
		var _victoryPie2 = _interopRequireDefault(_victoryPie);
		
		function _interopRequireDefault(obj) { return obj && obj.__esModule ? obj : { default: obj }; }
		
		exports.VictoryPie = _victoryPie2.default;

	/***/ },
	/* 392 */
	/***/ function(module, exports, __webpack_require__) {

		"use strict";
		
		Object.defineProperty(exports, "__esModule", {
		  value: true
		});
		
		var _extends = Object.assign || function (target) { for (var i = 1; i < arguments.length; i++) { var source = arguments[i]; for (var key in source) { if (Object.prototype.hasOwnProperty.call(source, key)) { target[key] = source[key]; } } } return target; };
		
		var _createClass = function () { function defineProperties(target, props) { for (var i = 0; i < props.length; i++) { var descriptor = props[i]; descriptor.enumerable = descriptor.enumerable || false; descriptor.configurable = true; if ("value" in descriptor) descriptor.writable = true; Object.defineProperty(target, descriptor.key, descriptor); } } return function (Constructor, protoProps, staticProps) { if (protoProps) defineProperties(Constructor.prototype, protoProps); if (staticProps) defineProperties(Constructor, staticProps); return Constructor; }; }();
		
		var _react = __webpack_require__(157);
		
		var _react2 = _interopRequireDefault(_react);
		
		var _d3Shape = __webpack_require__(371);
		
		var _d3Shape2 = _interopRequireDefault(_d3Shape);
		
		var _defaults = __webpack_require__(393);
		
		var _defaults2 = _interopRequireDefault(_defaults);
		
		var _assign = __webpack_require__(427);
		
		var _assign2 = _interopRequireDefault(_assign);
		
		var _victoryCore = __webpack_require__(1);
		
		var _slice = __webpack_require__(432);
		
		var _slice2 = _interopRequireDefault(_slice);
		
		var _sliceLabel = __webpack_require__(477);
		
		var _sliceLabel2 = _interopRequireDefault(_sliceLabel);
		
		function _interopRequireDefault(obj) { return obj && obj.__esModule ? obj : { default: obj }; }
		
		function _classCallCheck(instance, Constructor) { if (!(instance instanceof Constructor)) { throw new TypeError("Cannot call a class as a function"); } }
		
		function _possibleConstructorReturn(self, call) { if (!self) { throw new ReferenceError("this hasn't been initialised - super() hasn't been called"); } return call && (typeof call === "object" || typeof call === "function") ? call : self; }
		
		function _inherits(subClass, superClass) { if (typeof superClass !== "function" && superClass !== null) { throw new TypeError("Super expression must either be null or a function, not " + typeof superClass); } subClass.prototype = Object.create(superClass && superClass.prototype, { constructor: { value: subClass, enumerable: false, writable: true, configurable: true } }); if (superClass) Object.setPrototypeOf ? Object.setPrototypeOf(subClass, superClass) : subClass.__proto__ = superClass; }
		
		var defaultStyles = {
		  data: {
		    padding: 5,
		    stroke: "white",
		    strokeWidth: 1
		  },
		  labels: {
		    padding: 10,
		    fill: "black",
		    strokeWidth: 0,
		    stroke: "transparent",
		    fontFamily: "'Helvetica Neue', Helvetica, Arial, sans-serif",
		    fontSize: 10,
		    textAnchor: "middle"
		  }
		};
		
		var degreesToRadians = function degreesToRadians(degrees) {
		  return degrees * (Math.PI / 180);
		};
		
		var getRadius = function getRadius(props, padding) {
		  return Math.min(props.width - padding.left - padding.right, props.height - padding.top - padding.bottom) / 2;
		};
		
		var getLabelPosition = function getLabelPosition(props, style, radius) {
		  // TODO: better label positioning
		  var innerRadius = props.innerRadius ? props.innerRadius + style.labels.padding : style.labels.padding;
		  return _d3Shape2.default.arc().outerRadius(radius).innerRadius(innerRadius);
		};
		
		var VictoryPie = function (_React$Component) {
		  _inherits(VictoryPie, _React$Component);
		
		  function VictoryPie() {
		    _classCallCheck(this, VictoryPie);
		
		    return _possibleConstructorReturn(this, Object.getPrototypeOf(VictoryPie).apply(this, arguments));
		  }
		
		  _createClass(VictoryPie, [{
		    key: "componentWillMount",
		    value: function componentWillMount() {
		      this.state = {
		        dataState: {},
		        labelsState: {}
		      };
		    }
		  }, {
		    key: "renderSlice",
		    value: function renderSlice(props, calculatedProps, slice, index) {
		      // eslint-disable-line max-params
		      var style = calculatedProps.style;
		      var colorScale = calculatedProps.colorScale;
		      var makeSlicePath = calculatedProps.makeSlicePath;
		      var labelPosition = calculatedProps.labelPosition;
		
		      var fill = colorScale[index % colorScale.length];
		      var sliceStyle = (0, _defaults2.default)({}, { fill: fill }, style.data);
		      var getBoundEvents = _victoryCore.Helpers.getEvents.bind(this);
		      var sliceComponent = _react2.default.cloneElement(props.dataComponent, _extends({
		        index: index,
		        events: getBoundEvents(props.events.data, "data"),
		        slice: slice,
		        pathFunction: makeSlicePath,
		        style: sliceStyle,
		        datum: slice.data
		      }, this.state.dataState[index]));
		
		      return _react2.default.createElement(
		        "g",
		        { key: index },
		        sliceComponent,
		        _react2.default.createElement(_sliceLabel2.default, _extends({
		          index: index,
		          events: getBoundEvents(props.events.labels, "labels"),
		          labels: props.labels,
		          style: style.labels,
		          positionFunction: labelPosition.centroid,
		          slice: slice,
		          datum: slice.data
		        }, this.state.labelsState[index]))
		      );
		    }
		  }, {
		    key: "renderData",
		    value: function renderData(props, calculatedProps) {
		      var _this2 = this;
		
		      var _calculatedProps = calculatedProps;
		      var style = _calculatedProps.style;
		      var radius = _calculatedProps.radius;
		
		      var data = _victoryCore.Helpers.getData(props);
		      var labelPosition = getLabelPosition(props, style, radius);
		      var colorScale = Array.isArray(props.colorScale) ? props.colorScale : _victoryCore.Style.getColorScale(props.colorScale);
		      var makeSlicePath = _d3Shape2.default.arc().outerRadius(radius).innerRadius(this.props.innerRadius);
		
		      calculatedProps = (0, _assign2.default)(calculatedProps, { data: data, colorScale: colorScale, makeSlicePath: makeSlicePath, labelPosition: labelPosition });
		
		      var pie = _d3Shape2.default.pie().sort(null).startAngle(degreesToRadians(props.startAngle)).endAngle(degreesToRadians(props.endAngle)).padAngle(degreesToRadians(props.padAngle)).value(function (datum) {
		        return datum.y;
		      });
		      var slices = pie(data);
		
		      return _react2.default.createElement(
		        "g",
		        null,
		        slices.map(function (slice, index) {
		          return _this2.renderSlice(props, calculatedProps, slice, index);
		        })
		      );
		    }
		  }, {
		    key: "render",
		    value: function render() {
		      // If animating, return a `VictoryAnimation` element that will create
		      // a new `VictoryBar` with nearly identical props, except (1) tweened
		      // and (2) `animate` set to null so we don't recurse forever.
		      if (this.props.animate) {
		        var whitelist = ["data", "endAngle", "height", "innerRadius", "padAngle", "padding", "colorScale", "startAngle", "style", "width"];
		        return _react2.default.createElement(
		          _victoryCore.VictoryTransition,
		          { animate: this.props.animate, animationWhitelist: whitelist },
		          _react2.default.createElement(VictoryPie, this.props)
		        );
		      }
		
		      var style = _victoryCore.Helpers.getStyles(this.props.style, defaultStyles, "auto", "100%");
		      var padding = _victoryCore.Helpers.getPadding(this.props);
		      var radius = getRadius(this.props, padding);
		      var parentStyle = style.parent;
		      var xOffset = radius + padding.left;
		      var yOffset = radius + padding.top;
		
		      var group = _react2.default.createElement(
		        "g",
		        { style: parentStyle, transform: "translate(" + xOffset + ", " + yOffset + ")" },
		        this.renderData(this.props, { style: style, padding: padding, radius: radius })
		      );
		
		      return this.props.standalone ? _react2.default.createElement(
		        "svg",
		        _extends({
		          style: parentStyle,
		          viewBox: "0 0 " + this.props.width + " " + this.props.height
		        }, this.props.events.parent),
		        group
		      ) : group;
		    }
		  }]);
		
		  return VictoryPie;
		}(_react2.default.Component);
		
		VictoryPie.defaultTransitions = {
		  onExit: {
		    duration: 500,
		    before: function before() {
		      return { y: 0, label: " " };
		    }
		  },
		  onEnter: {
		    duration: 500,
		    before: function before() {
		      return { y: 0, label: " " };
		    },
		    after: function after(datum) {
		      return { y: datum.y, label: datum.label };
		    }
		  }
		};
		VictoryPie.propTypes = {
		  /**
		   * The animate prop specifies props for victory-animation to use. If this prop is
		   * not given, the pie chart will not tween between changing data / style props.
		   * Large datasets might animate slowly due to the inherent limits of svg rendering.
		   * @examples {duration: 500, onEnd: () => alert("done!")}
		   */
		  animate: _react.PropTypes.object,
		  /**
		   * The colorScale prop is an optional prop that defines the color scale the pie
		   * will be created on. This prop should be given as an array of CSS colors, or as a string
		   * corresponding to one of the built in color scales. VictoryPie will automatically assign
		   * values from this color scale to the pie slices unless colors are explicitly provided in the
		   * data object
		   */
		  colorScale: _react.PropTypes.oneOfType([_react.PropTypes.arrayOf(_react.PropTypes.string), _react.PropTypes.oneOf(["greyscale", "qualitative", "heatmap", "warm", "cool", "red", "green", "blue"])]),
		  /**
		   * Objects in the data array must be of the form { x: <x-val>, y: <y-val> }, where <x-val>
		   * is the slice label (string or number), and <y-val> is the corresponding number
		   * used to calculate arc length as a proportion of the pie's circumference.
		   * If the data prop is omitted, the pie will render sample data.
		   */
		
		  /**
		   * The data prop specifies the data to be plotted,
		   * where data X-value is the slice label (string or number),
		   * and Y-value is the corresponding number value represented by the slice
		   * Data should be in the form of an array of data points.
		   * Each data point may be any format you wish (depending on the `x` and `y` accessor props),
		   * but by default, an object with x and y properties is expected.
		   * @examples [{x: 1, y: 2}, {x: 2, y: 3}], [[1, 2], [2, 3]],
		   * [[{x: "a", y: 1}, {x: "b", y: 2}], [{x: "a", y: 2}, {x: "b", y: 3}]]
		   */
		  data: _react.PropTypes.array,
		  /**
		   * The dataComponent prop takes an entire, HTML-complete data component which will be used to
		   * create slices for each datum in the pie chart. The new element created from the passed
		   * dataComponent will have the property datum set by the pie chart for the point it renders;
		   * properties style and pathFunction calculated by VictoryPie; an index property set
		   * corresponding to the location of the datum in the data provided to the pie; events bound to
		   * the VictoryPie; and the d3 compatible slice object.
		   * If a dataComponent is not provided, VictoryPie's Slice component will be used.
		   */
		  dataComponent: _react.PropTypes.element,
		  /**
		   * The overall end angle of the pie in degrees. This prop is used in conjunction with
		   * startAngle to create a pie that spans only a segment of a circle.
		   */
		  endAngle: _react.PropTypes.number,
		  /**
		   * The events prop attaches arbitrary event handlers to data and label elements
		   * Event handlers are called with their corresponding events, corresponding component props,
		   * and their index in the data array, and event name. The return value of event handlers
		   * will be stored by unique index on the state object of VictoryPie
		   * i.e. `this.state.dataState[dataIndex] = {style: {fill: "red"}...}`, and will be
		   * applied by index to the appropriate child component. Event props on the
		   * parent namespace are just spread directly on to the top level svg of VictoryPie
		   * if one exists. If VictoryPie is set up to render g elements i.e. when it is
		   * rendered within chart, or when `standalone={false}` parent events will not be applied.
		   *
		   * @examples {data: {
		   *  onClick: () => onClick: () => return {style: {fill: "green"}}
		   *}}
		   */
		  events: _react.PropTypes.shape({
		    parent: _react.PropTypes.object,
		    data: _react.PropTypes.object,
		    labels: _react.PropTypes.object
		  }),
		  /**
		   * The height props specifies the height of the chart container element in pixels
		   */
		  height: _victoryCore.PropTypes.nonNegative,
		  /**
		   * When creating a donut chart, this prop determines the number of pixels between
		   * the center of the chart and the inner edge of a donut. When this prop is set to zero
		   * a regular pie chart is rendered.
		   */
		  innerRadius: _victoryCore.PropTypes.nonNegative,
		  /**
		   * This prop specifies the labels that will be applied to your data. This prop can be
		   * passed in as an array of values, in the same order as your data, or as a function
		   * to be applied to each data point. If this prop is not specified, the x value
		   * of each data point will be used as a label. An array of custom components may also
		   * be passed in.
		   */
		  labels: _react.PropTypes.element,
		  /**
		   * The padAngle prop determines the amount of separation between adjacent data slices
		   * in number of degrees
		   */
		  padAngle: _victoryCore.PropTypes.nonNegative,
		  /**
		   * The padding props specifies the amount of padding in number of pixels between
		   * the edge of the chart and any rendered child components. This prop can be given
		   * as a number or as an object with padding specified for top, bottom, left
		   * and right.
		   */
		  padding: _react.PropTypes.oneOfType([_react.PropTypes.number, _react.PropTypes.shape({
		    top: _react.PropTypes.number,
		    bottom: _react.PropTypes.number,
		    left: _react.PropTypes.number,
		    right: _react.PropTypes.number
		  })]),
		  /**
		   * The standalone prop determines whether VictoryPie should render as a standalone
		   * svg, or in a g tag to be included in an svg
		   */
		  standalone: _react.PropTypes.bool,
		  /**
		   * The overall start angle of the pie in degrees. This prop is used in conjunction with
		   * endAngle to create a pie that spans only a segment of a circle.
		   */
		  startAngle: _react.PropTypes.number,
		  /**
		   * The style prop specifies styles for your pie. VictoryPie relies on Radium,
		   * so valid Radium style objects should work for this prop. Height, width, and
		   * padding should be specified via the height, width, and padding props.
		   * @examples {data: {stroke: "black"}, label: {fontSize: 10}}
		   */
		  style: _react.PropTypes.shape({
		    parent: _react.PropTypes.object,
		    data: _react.PropTypes.object,
		    labels: _react.PropTypes.object
		  }),
		  /**
		   * The width props specifies the width of the chart container element in pixels
		   */
		  width: _victoryCore.PropTypes.nonNegative,
		  /**
		   * The x prop specifies how to access the X value of each data point.
		   * If given as a function, it will be run on each data point, and returned value will be used.
		   * If given as an integer, it will be used as an array index for array-type data points.
		   * If given as a string, it will be used as a property key for object-type data points.
		   * If given as an array of strings, or a string containing dots or brackets,
		   * it will be used as a nested object property path (for details see Lodash docs for _.get).
		   * If `null` or `undefined`, the data value will be used as is (identity function/pass-through).
		   * @examples 0, 'x', 'x.value.nested.1.thing', 'x[2].also.nested', null, d => Math.sin(d)
		   */
		  x: _react.PropTypes.oneOfType([_react.PropTypes.func, _victoryCore.PropTypes.allOfType([_victoryCore.PropTypes.integer, _victoryCore.PropTypes.nonNegative]), _react.PropTypes.string, _react.PropTypes.arrayOf(_react.PropTypes.string)]),
		  /**
		   * The y prop specifies how to access the Y value of each data point.
		   * If given as a function, it will be run on each data point, and returned value will be used.
		   * If given as an integer, it will be used as an array index for array-type data points.
		   * If given as a string, it will be used as a property key for object-type data points.
		   * If given as an array of strings, or a string containing dots or brackets,
		   * it will be used as a nested object property path (for details see Lodash docs for _.get).
		   * If `null` or `undefined`, the data value will be used as is (identity function/pass-through).
		   * @examples 0, 'y', 'y.value.nested.1.thing', 'y[2].also.nested', null, d => Math.sin(d)
		   */
		  y: _react.PropTypes.oneOfType([_react.PropTypes.func, _victoryCore.PropTypes.allOfType([_victoryCore.PropTypes.integer, _victoryCore.PropTypes.nonNegative]), _react.PropTypes.string, _react.PropTypes.arrayOf(_react.PropTypes.string)])
		};
		VictoryPie.defaultProps = {
		  data: [{ x: "A", y: 1 }, { x: "B", y: 2 }, { x: "C", y: 3 }, { x: "D", y: 1 }, { x: "E", y: 2 }],
		  endAngle: 360,
		  events: {},
		  height: 400,
		  innerRadius: 0,
		  padAngle: 0,
		  padding: 30,
		  colorScale: ["#75C776", "#39B6C5", "#78CCC4", "#62C3A4", "#64A8D1", "#8C95C8", "#3BAF74"],
		  startAngle: 0,
		  standalone: true,
		  width: 400,
		  x: "x",
		  y: "y",
		  dataComponent: _react2.default.createElement(_slice2.default, null)
		};
		exports.default = VictoryPie;

	/***/ },
	/* 393 */
	/***/ function(module, exports, __webpack_require__) {

		var apply = __webpack_require__(394),
		    assignInDefaults = __webpack_require__(395),
		    assignInWith = __webpack_require__(397),
		    rest = __webpack_require__(409);
		
		/**
		 * Assigns own and inherited enumerable string keyed properties of source
		 * objects to the destination object for all destination properties that
		 * resolve to `undefined`. Source objects are applied from left to right.
		 * Once a property is set, additional values of the same property are ignored.
		 *
		 * **Note:** This method mutates `object`.
		 *
		 * @static
		 * @since 0.1.0
		 * @memberOf _
		 * @category Object
		 * @param {Object} object The destination object.
		 * @param {...Object} [sources] The source objects.
		 * @returns {Object} Returns `object`.
		 * @example
		 *
		 * _.defaults({ 'user': 'barney' }, { 'age': 36 }, { 'user': 'fred' });
		 * // => { 'user': 'barney', 'age': 36 }
		 */
		var defaults = rest(function(args) {
		  args.push(undefined, assignInDefaults);
		  return apply(assignInWith, undefined, args);
		});
		
		module.exports = defaults;


	/***/ },
	/* 394 */
	/***/ function(module, exports) {

		/**
		 * A faster alternative to `Function#apply`, this function invokes `func`
		 * with the `this` binding of `thisArg` and the arguments of `args`.
		 *
		 * @private
		 * @param {Function} func The function to invoke.
		 * @param {*} thisArg The `this` binding of `func`.
		 * @param {Array} args The arguments to invoke `func` with.
		 * @returns {*} Returns the result of `func`.
		 */
		function apply(func, thisArg, args) {
		  var length = args.length;
		  switch (length) {
		    case 0: return func.call(thisArg);
		    case 1: return func.call(thisArg, args[0]);
		    case 2: return func.call(thisArg, args[0], args[1]);
		    case 3: return func.call(thisArg, args[0], args[1], args[2]);
		  }
		  return func.apply(thisArg, args);
		}
		
		module.exports = apply;


	/***/ },
	/* 395 */
	/***/ function(module, exports, __webpack_require__) {

		var eq = __webpack_require__(396);
		
		/** Used for built-in method references. */
		var objectProto = Object.prototype;
		
		/** Used to check objects for own properties. */
		var hasOwnProperty = objectProto.hasOwnProperty;
		
		/**
		 * Used by `_.defaults` to customize its `_.assignIn` use.
		 *
		 * @private
		 * @param {*} objValue The destination value.
		 * @param {*} srcValue The source value.
		 * @param {string} key The key of the property to assign.
		 * @param {Object} object The parent object of `objValue`.
		 * @returns {*} Returns the value to assign.
		 */
		function assignInDefaults(objValue, srcValue, key, object) {
		  if (objValue === undefined ||
		      (eq(objValue, objectProto[key]) && !hasOwnProperty.call(object, key))) {
		    return srcValue;
		  }
		  return objValue;
		}
		
		module.exports = assignInDefaults;


	/***/ },
	/* 396 */
	/***/ function(module, exports) {

		/**
		 * Performs a
		 * [`SameValueZero`](http://ecma-international.org/ecma-262/6.0/#sec-samevaluezero)
		 * comparison between two values to determine if they are equivalent.
		 *
		 * @static
		 * @memberOf _
		 * @since 4.0.0
		 * @category Lang
		 * @param {*} value The value to compare.
		 * @param {*} other The other value to compare.
		 * @returns {boolean} Returns `true` if the values are equivalent, else `false`.
		 * @example
		 *
		 * var object = { 'user': 'fred' };
		 * var other = { 'user': 'fred' };
		 *
		 * _.eq(object, object);
		 * // => true
		 *
		 * _.eq(object, other);
		 * // => false
		 *
		 * _.eq('a', 'a');
		 * // => true
		 *
		 * _.eq('a', Object('a'));
		 * // => false
		 *
		 * _.eq(NaN, NaN);
		 * // => true
		 */
		function eq(value, other) {
		  return value === other || (value !== value && other !== other);
		}
		
		module.exports = eq;


	/***/ },
	/* 397 */
	/***/ function(module, exports, __webpack_require__) {

		var copyObject = __webpack_require__(398),
		    createAssigner = __webpack_require__(400),
		    keysIn = __webpack_require__(414);
		
		/**
		 * This method is like `_.assignIn` except that it accepts `customizer`
		 * which is invoked to produce the assigned values. If `customizer` returns
		 * `undefined`, assignment is handled by the method instead. The `customizer`
		 * is invoked with five arguments: (objValue, srcValue, key, object, source).
		 *
		 * **Note:** This method mutates `object`.
		 *
		 * @static
		 * @memberOf _
		 * @since 4.0.0
		 * @alias extendWith
		 * @category Object
		 * @param {Object} object The destination object.
		 * @param {...Object} sources The source objects.
		 * @param {Function} [customizer] The function to customize assigned values.
		 * @returns {Object} Returns `object`.
		 * @example
		 *
		 * function customizer(objValue, srcValue) {
		 *   return _.isUndefined(objValue) ? srcValue : objValue;
		 * }
		 *
		 * var defaults = _.partialRight(_.assignInWith, customizer);
		 *
		 * defaults({ 'a': 1 }, { 'b': 2 }, { 'a': 3 });
		 * // => { 'a': 1, 'b': 2 }
		 */
		var assignInWith = createAssigner(function(object, source, srcIndex, customizer) {
		  copyObject(source, keysIn(source), object, customizer);
		});
		
		module.exports = assignInWith;


	/***/ },
	/* 398 */
	/***/ function(module, exports, __webpack_require__) {

		var assignValue = __webpack_require__(399);
		
		/**
		 * Copies properties of `source` to `object`.
		 *
		 * @private
		 * @param {Object} source The object to copy properties from.
		 * @param {Array} props The property identifiers to copy.
		 * @param {Object} [object={}] The object to copy properties to.
		 * @param {Function} [customizer] The function to customize copied values.
		 * @returns {Object} Returns `object`.
		 */
		function copyObject(source, props, object, customizer) {
		  object || (object = {});
		
		  var index = -1,
		      length = props.length;
		
		  while (++index < length) {
		    var key = props[index];
		
		    var newValue = customizer
		      ? customizer(object[key], source[key], key, object, source)
		      : source[key];
		
		    assignValue(object, key, newValue);
		  }
		  return object;
		}
		
		module.exports = copyObject;


	/***/ },
	/* 399 */
	/***/ function(module, exports, __webpack_require__) {

		var eq = __webpack_require__(396);
		
		/** Used for built-in method references. */
		var objectProto = Object.prototype;
		
		/** Used to check objects for own properties. */
		var hasOwnProperty = objectProto.hasOwnProperty;
		
		/**
		 * Assigns `value` to `key` of `object` if the existing value is not equivalent
		 * using [`SameValueZero`](http://ecma-international.org/ecma-262/6.0/#sec-samevaluezero)
		 * for equality comparisons.
		 *
		 * @private
		 * @param {Object} object The object to modify.
		 * @param {string} key The key of the property to assign.
		 * @param {*} value The value to assign.
		 */
		function assignValue(object, key, value) {
		  var objValue = object[key];
		  if (!(hasOwnProperty.call(object, key) && eq(objValue, value)) ||
		      (value === undefined && !(key in object))) {
		    object[key] = value;
		  }
		}
		
		module.exports = assignValue;


	/***/ },
	/* 400 */
	/***/ function(module, exports, __webpack_require__) {

		var isIterateeCall = __webpack_require__(401),
		    rest = __webpack_require__(409);
		
		/**
		 * Creates a function like `_.assign`.
		 *
		 * @private
		 * @param {Function} assigner The function to assign values.
		 * @returns {Function} Returns the new assigner function.
		 */
		function createAssigner(assigner) {
		  return rest(function(object, sources) {
		    var index = -1,
		        length = sources.length,
		        customizer = length > 1 ? sources[length - 1] : undefined,
		        guard = length > 2 ? sources[2] : undefined;
		
		    customizer = typeof customizer == 'function'
		      ? (length--, customizer)
		      : undefined;
		
		    if (guard && isIterateeCall(sources[0], sources[1], guard)) {
		      customizer = length < 3 ? undefined : customizer;
		      length = 1;
		    }
		    object = Object(object);
		    while (++index < length) {
		      var source = sources[index];
		      if (source) {
		        assigner(object, source, index, customizer);
		      }
		    }
		    return object;
		  });
		}
		
		module.exports = createAssigner;


	/***/ },
	/* 401 */
	/***/ function(module, exports, __webpack_require__) {

		var eq = __webpack_require__(396),
		    isArrayLike = __webpack_require__(402),
		    isIndex = __webpack_require__(408),
		    isObject = __webpack_require__(406);
		
		/**
		 * Checks if the given arguments are from an iteratee call.
		 *
		 * @private
		 * @param {*} value The potential iteratee value argument.
		 * @param {*} index The potential iteratee index or key argument.
		 * @param {*} object The potential iteratee object argument.
		 * @returns {boolean} Returns `true` if the arguments are from an iteratee call,
		 *  else `false`.
		 */
		function isIterateeCall(value, index, object) {
		  if (!isObject(object)) {
		    return false;
		  }
		  var type = typeof index;
		  if (type == 'number'
		        ? (isArrayLike(object) && isIndex(index, object.length))
		        : (type == 'string' && index in object)
		      ) {
		    return eq(object[index], value);
		  }
		  return false;
		}
		
		module.exports = isIterateeCall;


	/***/ },
	/* 402 */
	/***/ function(module, exports, __webpack_require__) {

		var getLength = __webpack_require__(403),
		    isFunction = __webpack_require__(405),
		    isLength = __webpack_require__(407);
		
		/**
		 * Checks if `value` is array-like. A value is considered array-like if it's
		 * not a function and has a `value.length` that's an integer greater than or
		 * equal to `0` and less than or equal to `Number.MAX_SAFE_INTEGER`.
		 *
		 * @static
		 * @memberOf _
		 * @since 4.0.0
		 * @category Lang
		 * @param {*} value The value to check.
		 * @returns {boolean} Returns `true` if `value` is array-like, else `false`.
		 * @example
		 *
		 * _.isArrayLike([1, 2, 3]);
		 * // => true
		 *
		 * _.isArrayLike(document.body.children);
		 * // => true
		 *
		 * _.isArrayLike('abc');
		 * // => true
		 *
		 * _.isArrayLike(_.noop);
		 * // => false
		 */
		function isArrayLike(value) {
		  return value != null && isLength(getLength(value)) && !isFunction(value);
		}
		
		module.exports = isArrayLike;


	/***/ },
	/* 403 */
	/***/ function(module, exports, __webpack_require__) {

		var baseProperty = __webpack_require__(404);
		
		/**
		 * Gets the "length" property value of `object`.
		 *
		 * **Note:** This function is used to avoid a
		 * [JIT bug](https://bugs.webkit.org/show_bug.cgi?id=142792) that affects
		 * Safari on at least iOS 8.1-8.3 ARM64.
		 *
		 * @private
		 * @param {Object} object The object to query.
		 * @returns {*} Returns the "length" value.
		 */
		var getLength = baseProperty('length');
		
		module.exports = getLength;


	/***/ },
	/* 404 */
	/***/ function(module, exports) {

		/**
		 * The base implementation of `_.property` without support for deep paths.
		 *
		 * @private
		 * @param {string} key The key of the property to get.
		 * @returns {Function} Returns the new function.
		 */
		function baseProperty(key) {
		  return function(object) {
		    return object == null ? undefined : object[key];
		  };
		}
		
		module.exports = baseProperty;


	/***/ },
	/* 405 */
	/***/ function(module, exports, __webpack_require__) {

		var isObject = __webpack_require__(406);
		
		/** `Object#toString` result references. */
		var funcTag = '[object Function]',
		    genTag = '[object GeneratorFunction]';
		
		/** Used for built-in method references. */
		var objectProto = Object.prototype;
		
		/**
		 * Used to resolve the
		 * [`toStringTag`](http://ecma-international.org/ecma-262/6.0/#sec-object.prototype.tostring)
		 * of values.
		 */
		var objectToString = objectProto.toString;
		
		/**
		 * Checks if `value` is classified as a `Function` object.
		 *
		 * @static
		 * @memberOf _
		 * @since 0.1.0
		 * @category Lang
		 * @param {*} value The value to check.
		 * @returns {boolean} Returns `true` if `value` is correctly classified,
		 *  else `false`.
		 * @example
		 *
		 * _.isFunction(_);
		 * // => true
		 *
		 * _.isFunction(/abc/);
		 * // => false
		 */
		function isFunction(value) {
		  // The use of `Object#toString` avoids issues with the `typeof` operator
		  // in Safari 8 which returns 'object' for typed array and weak map constructors,
		  // and PhantomJS 1.9 which returns 'function' for `NodeList` instances.
		  var tag = isObject(value) ? objectToString.call(value) : '';
		  return tag == funcTag || tag == genTag;
		}
		
		module.exports = isFunction;


	/***/ },
	/* 406 */
	/***/ function(module, exports) {

		/**
		 * Checks if `value` is the
		 * [language type](http://www.ecma-international.org/ecma-262/6.0/#sec-ecmascript-language-types)
		 * of `Object`. (e.g. arrays, functions, objects, regexes, `new Number(0)`, and `new String('')`)
		 *
		 * @static
		 * @memberOf _
		 * @since 0.1.0
		 * @category Lang
		 * @param {*} value The value to check.
		 * @returns {boolean} Returns `true` if `value` is an object, else `false`.
		 * @example
		 *
		 * _.isObject({});
		 * // => true
		 *
		 * _.isObject([1, 2, 3]);
		 * // => true
		 *
		 * _.isObject(_.noop);
		 * // => true
		 *
		 * _.isObject(null);
		 * // => false
		 */
		function isObject(value) {
		  var type = typeof value;
		  return !!value && (type == 'object' || type == 'function');
		}
		
		module.exports = isObject;


	/***/ },
	/* 407 */
	/***/ function(module, exports) {

		/** Used as references for various `Number` constants. */
		var MAX_SAFE_INTEGER = 9007199254740991;
		
		/**
		 * Checks if `value` is a valid array-like length.
		 *
		 * **Note:** This function is loosely based on
		 * [`ToLength`](http://ecma-international.org/ecma-262/6.0/#sec-tolength).
		 *
		 * @static
		 * @memberOf _
		 * @since 4.0.0
		 * @category Lang
		 * @param {*} value The value to check.
		 * @returns {boolean} Returns `true` if `value` is a valid length,
		 *  else `false`.
		 * @example
		 *
		 * _.isLength(3);
		 * // => true
		 *
		 * _.isLength(Number.MIN_VALUE);
		 * // => false
		 *
		 * _.isLength(Infinity);
		 * // => false
		 *
		 * _.isLength('3');
		 * // => false
		 */
		function isLength(value) {
		  return typeof value == 'number' &&
		    value > -1 && value % 1 == 0 && value <= MAX_SAFE_INTEGER;
		}
		
		module.exports = isLength;


	/***/ },
	/* 408 */
	/***/ function(module, exports) {

		/** Used as references for various `Number` constants. */
		var MAX_SAFE_INTEGER = 9007199254740991;
		
		/** Used to detect unsigned integer values. */
		var reIsUint = /^(?:0|[1-9]\d*)$/;
		
		/**
		 * Checks if `value` is a valid array-like index.
		 *
		 * @private
		 * @param {*} value The value to check.
		 * @param {number} [length=MAX_SAFE_INTEGER] The upper bounds of a valid index.
		 * @returns {boolean} Returns `true` if `value` is a valid index, else `false`.
		 */
		function isIndex(value, length) {
		  value = (typeof value == 'number' || reIsUint.test(value)) ? +value : -1;
		  length = length == null ? MAX_SAFE_INTEGER : length;
		  return value > -1 && value % 1 == 0 && value < length;
		}
		
		module.exports = isIndex;


	/***/ },
	/* 409 */
	/***/ function(module, exports, __webpack_require__) {

		var apply = __webpack_require__(394),
		    toInteger = __webpack_require__(410);
		
		/** Used as the `TypeError` message for "Functions" methods. */
		var FUNC_ERROR_TEXT = 'Expected a function';
		
		/* Built-in method references for those with the same name as other `lodash` methods. */
		var nativeMax = Math.max;
		
		/**
		 * Creates a function that invokes `func` with the `this` binding of the
		 * created function and arguments from `start` and beyond provided as
		 * an array.
		 *
		 * **Note:** This method is based on the
		 * [rest parameter](https://mdn.io/rest_parameters).
		 *
		 * @static
		 * @memberOf _
		 * @since 4.0.0
		 * @category Function
		 * @param {Function} func The function to apply a rest parameter to.
		 * @param {number} [start=func.length-1] The start position of the rest parameter.
		 * @returns {Function} Returns the new function.
		 * @example
		 *
		 * var say = _.rest(function(what, names) {
		 *   return what + ' ' + _.initial(names).join(', ') +
		 *     (_.size(names) > 1 ? ', & ' : '') + _.last(names);
		 * });
		 *
		 * say('hello', 'fred', 'barney', 'pebbles');
		 * // => 'hello fred, barney, & pebbles'
		 */
		function rest(func, start) {
		  if (typeof func != 'function') {
		    throw new TypeError(FUNC_ERROR_TEXT);
		  }
		  start = nativeMax(start === undefined ? (func.length - 1) : toInteger(start), 0);
		  return function() {
		    var args = arguments,
		        index = -1,
		        length = nativeMax(args.length - start, 0),
		        array = Array(length);
		
		    while (++index < length) {
		      array[index] = args[start + index];
		    }
		    switch (start) {
		      case 0: return func.call(this, array);
		      case 1: return func.call(this, args[0], array);
		      case 2: return func.call(this, args[0], args[1], array);
		    }
		    var otherArgs = Array(start + 1);
		    index = -1;
		    while (++index < start) {
		      otherArgs[index] = args[index];
		    }
		    otherArgs[start] = array;
		    return apply(func, this, otherArgs);
		  };
		}
		
		module.exports = rest;


	/***/ },
	/* 410 */
	/***/ function(module, exports, __webpack_require__) {

		var toNumber = __webpack_require__(411);
		
		/** Used as references for various `Number` constants. */
		var INFINITY = 1 / 0,
		    MAX_INTEGER = 1.7976931348623157e+308;
		
		/**
		 * Converts `value` to an integer.
		 *
		 * **Note:** This function is loosely based on
		 * [`ToInteger`](http://www.ecma-international.org/ecma-262/6.0/#sec-tointeger).
		 *
		 * @static
		 * @memberOf _
		 * @since 4.0.0
		 * @category Lang
		 * @param {*} value The value to convert.
		 * @returns {number} Returns the converted integer.
		 * @example
		 *
		 * _.toInteger(3);
		 * // => 3
		 *
		 * _.toInteger(Number.MIN_VALUE);
		 * // => 0
		 *
		 * _.toInteger(Infinity);
		 * // => 1.7976931348623157e+308
		 *
		 * _.toInteger('3');
		 * // => 3
		 */
		function toInteger(value) {
		  if (!value) {
		    return value === 0 ? value : 0;
		  }
		  value = toNumber(value);
		  if (value === INFINITY || value === -INFINITY) {
		    var sign = (value < 0 ? -1 : 1);
		    return sign * MAX_INTEGER;
		  }
		  var remainder = value % 1;
		  return value === value ? (remainder ? value - remainder : value) : 0;
		}
		
		module.exports = toInteger;


	/***/ },
	/* 411 */
	/***/ function(module, exports, __webpack_require__) {

		var isFunction = __webpack_require__(405),
		    isObject = __webpack_require__(406),
		    isSymbol = __webpack_require__(412);
		
		/** Used as references for various `Number` constants. */
		var NAN = 0 / 0;
		
		/** Used to match leading and trailing whitespace. */
		var reTrim = /^\s+|\s+$/g;
		
		/** Used to detect bad signed hexadecimal string values. */
		var reIsBadHex = /^[-+]0x[0-9a-f]+$/i;
		
		/** Used to detect binary string values. */
		var reIsBinary = /^0b[01]+$/i;
		
		/** Used to detect octal string values. */
		var reIsOctal = /^0o[0-7]+$/i;
		
		/** Built-in method references without a dependency on `root`. */
		var freeParseInt = parseInt;
		
		/**
		 * Converts `value` to a number.
		 *
		 * @static
		 * @memberOf _
		 * @since 4.0.0
		 * @category Lang
		 * @param {*} value The value to process.
		 * @returns {number} Returns the number.
		 * @example
		 *
		 * _.toNumber(3);
		 * // => 3
		 *
		 * _.toNumber(Number.MIN_VALUE);
		 * // => 5e-324
		 *
		 * _.toNumber(Infinity);
		 * // => Infinity
		 *
		 * _.toNumber('3');
		 * // => 3
		 */
		function toNumber(value) {
		  if (typeof value == 'number') {
		    return value;
		  }
		  if (isSymbol(value)) {
		    return NAN;
		  }
		  if (isObject(value)) {
		    var other = isFunction(value.valueOf) ? value.valueOf() : value;
		    value = isObject(other) ? (other + '') : other;
		  }
		  if (typeof value != 'string') {
		    return value === 0 ? value : +value;
		  }
		  value = value.replace(reTrim, '');
		  var isBinary = reIsBinary.test(value);
		  return (isBinary || reIsOctal.test(value))
		    ? freeParseInt(value.slice(2), isBinary ? 2 : 8)
		    : (reIsBadHex.test(value) ? NAN : +value);
		}
		
		module.exports = toNumber;


	/***/ },
	/* 412 */
	/***/ function(module, exports, __webpack_require__) {

		var isObjectLike = __webpack_require__(413);
		
		/** `Object#toString` result references. */
		var symbolTag = '[object Symbol]';
		
		/** Used for built-in method references. */
		var objectProto = Object.prototype;
		
		/**
		 * Used to resolve the
		 * [`toStringTag`](http://ecma-international.org/ecma-262/6.0/#sec-object.prototype.tostring)
		 * of values.
		 */
		var objectToString = objectProto.toString;
		
		/**
		 * Checks if `value` is classified as a `Symbol` primitive or object.
		 *
		 * @static
		 * @memberOf _
		 * @since 4.0.0
		 * @category Lang
		 * @param {*} value The value to check.
		 * @returns {boolean} Returns `true` if `value` is correctly classified,
		 *  else `false`.
		 * @example
		 *
		 * _.isSymbol(Symbol.iterator);
		 * // => true
		 *
		 * _.isSymbol('abc');
		 * // => false
		 */
		function isSymbol(value) {
		  return typeof value == 'symbol' ||
		    (isObjectLike(value) && objectToString.call(value) == symbolTag);
		}
		
		module.exports = isSymbol;


	/***/ },
	/* 413 */
	/***/ function(module, exports) {

		/**
		 * Checks if `value` is object-like. A value is object-like if it's not `null`
		 * and has a `typeof` result of "object".
		 *
		 * @static
		 * @memberOf _
		 * @since 4.0.0
		 * @category Lang
		 * @param {*} value The value to check.
		 * @returns {boolean} Returns `true` if `value` is object-like, else `false`.
		 * @example
		 *
		 * _.isObjectLike({});
		 * // => true
		 *
		 * _.isObjectLike([1, 2, 3]);
		 * // => true
		 *
		 * _.isObjectLike(_.noop);
		 * // => false
		 *
		 * _.isObjectLike(null);
		 * // => false
		 */
		function isObjectLike(value) {
		  return !!value && typeof value == 'object';
		}
		
		module.exports = isObjectLike;


	/***/ },
	/* 414 */
	/***/ function(module, exports, __webpack_require__) {

		var baseKeysIn = __webpack_require__(415),
		    indexKeys = __webpack_require__(420),
		    isIndex = __webpack_require__(408),
		    isPrototype = __webpack_require__(426);
		
		/** Used for built-in method references. */
		var objectProto = Object.prototype;
		
		/** Used to check objects for own properties. */
		var hasOwnProperty = objectProto.hasOwnProperty;
		
		/**
		 * Creates an array of the own and inherited enumerable property names of `object`.
		 *
		 * **Note:** Non-object values are coerced to objects.
		 *
		 * @static
		 * @memberOf _
		 * @since 3.0.0
		 * @category Object
		 * @param {Object} object The object to query.
		 * @returns {Array} Returns the array of property names.
		 * @example
		 *
		 * function Foo() {
		 *   this.a = 1;
		 *   this.b = 2;
		 * }
		 *
		 * Foo.prototype.c = 3;
		 *
		 * _.keysIn(new Foo);
		 * // => ['a', 'b', 'c'] (iteration order is not guaranteed)
		 */
		function keysIn(object) {
		  var index = -1,
		      isProto = isPrototype(object),
		      props = baseKeysIn(object),
		      propsLength = props.length,
		      indexes = indexKeys(object),
		      skipIndexes = !!indexes,
		      result = indexes || [],
		      length = result.length;
		
		  while (++index < propsLength) {
		    var key = props[index];
		    if (!(skipIndexes && (key == 'length' || isIndex(key, length))) &&
		        !(key == 'constructor' && (isProto || !hasOwnProperty.call(object, key)))) {
		      result.push(key);
		    }
		  }
		  return result;
		}
		
		module.exports = keysIn;


	/***/ },
	/* 415 */
	/***/ function(module, exports, __webpack_require__) {

		var Reflect = __webpack_require__(416),
		    iteratorToArray = __webpack_require__(419);
		
		/** Used for built-in method references. */
		var objectProto = Object.prototype;
		
		/** Built-in value references. */
		var enumerate = Reflect ? Reflect.enumerate : undefined,
		    propertyIsEnumerable = objectProto.propertyIsEnumerable;
		
		/**
		 * The base implementation of `_.keysIn` which doesn't skip the constructor
		 * property of prototypes or treat sparse arrays as dense.
		 *
		 * @private
		 * @param {Object} object The object to query.
		 * @returns {Array} Returns the array of property names.
		 */
		function baseKeysIn(object) {
		  object = object == null ? object : Object(object);
		
		  var result = [];
		  for (var key in object) {
		    result.push(key);
		  }
		  return result;
		}
		
		// Fallback for IE < 9 with es6-shim.
		if (enumerate && !propertyIsEnumerable.call({ 'valueOf': 1 }, 'valueOf')) {
		  baseKeysIn = function(object) {
		    return iteratorToArray(enumerate(object));
		  };
		}
		
		module.exports = baseKeysIn;


	/***/ },
	/* 416 */
	/***/ function(module, exports, __webpack_require__) {

		var root = __webpack_require__(417);
		
		/** Built-in value references. */
		var Reflect = root.Reflect;
		
		module.exports = Reflect;


	/***/ },
	/* 417 */
	/***/ function(module, exports, __webpack_require__) {

		/* WEBPACK VAR INJECTION */(function(module, global) {var checkGlobal = __webpack_require__(418);
		
		/** Used to determine if values are of the language type `Object`. */
		var objectTypes = {
		  'function': true,
		  'object': true
		};
		
		/** Detect free variable `exports`. */
		var freeExports = (objectTypes[typeof exports] && exports && !exports.nodeType)
		  ? exports
		  : undefined;
		
		/** Detect free variable `module`. */
		var freeModule = (objectTypes[typeof module] && module && !module.nodeType)
		  ? module
		  : undefined;
		
		/** Detect free variable `global` from Node.js. */
		var freeGlobal = checkGlobal(freeExports && freeModule && typeof global == 'object' && global);
		
		/** Detect free variable `self`. */
		var freeSelf = checkGlobal(objectTypes[typeof self] && self);
		
		/** Detect free variable `window`. */
		var freeWindow = checkGlobal(objectTypes[typeof window] && window);
		
		/** Detect `this` as the global object. */
		var thisGlobal = checkGlobal(objectTypes[typeof this] && this);
		
		/**
		 * Used as a reference to the global object.
		 *
		 * The `this` value is used if it's the global object to avoid Greasemonkey's
		 * restricted `window` object, otherwise the `window` object is used.
		 */
		var root = freeGlobal ||
		  ((freeWindow !== (thisGlobal && thisGlobal.window)) && freeWindow) ||
		    freeSelf || thisGlobal || Function('return this')();
		
		module.exports = root;
		
		/* WEBPACK VAR INJECTION */}.call(exports, __webpack_require__(27)(module), (function() { return this; }())))

	/***/ },
	/* 418 */
	/***/ function(module, exports) {

		/**
		 * Checks if `value` is a global object.
		 *
		 * @private
		 * @param {*} value The value to check.
		 * @returns {null|Object} Returns `value` if it's a global object, else `null`.
		 */
		function checkGlobal(value) {
		  return (value && value.Object === Object) ? value : null;
		}
		
		module.exports = checkGlobal;


	/***/ },
	/* 419 */
	/***/ function(module, exports) {

		/**
		 * Converts `iterator` to an array.
		 *
		 * @private
		 * @param {Object} iterator The iterator to convert.
		 * @returns {Array} Returns the converted array.
		 */
		function iteratorToArray(iterator) {
		  var data,
		      result = [];
		
		  while (!(data = iterator.next()).done) {
		    result.push(data.value);
		  }
		  return result;
		}
		
		module.exports = iteratorToArray;


	/***/ },
	/* 420 */
	/***/ function(module, exports, __webpack_require__) {

		var baseTimes = __webpack_require__(421),
		    isArguments = __webpack_require__(422),
		    isArray = __webpack_require__(424),
		    isLength = __webpack_require__(407),
		    isString = __webpack_require__(425);
		
		/**
		 * Creates an array of index keys for `object` values of arrays,
		 * `arguments` objects, and strings, otherwise `null` is returned.
		 *
		 * @private
		 * @param {Object} object The object to query.
		 * @returns {Array|null} Returns index keys, else `null`.
		 */
		function indexKeys(object) {
		  var length = object ? object.length : undefined;
		  if (isLength(length) &&
		      (isArray(object) || isString(object) || isArguments(object))) {
		    return baseTimes(length, String);
		  }
		  return null;
		}
		
		module.exports = indexKeys;


	/***/ },
	/* 421 */
	/***/ function(module, exports) {

		/**
		 * The base implementation of `_.times` without support for iteratee shorthands
		 * or max array length checks.
		 *
		 * @private
		 * @param {number} n The number of times to invoke `iteratee`.
		 * @param {Function} iteratee The function invoked per iteration.
		 * @returns {Array} Returns the array of results.
		 */
		function baseTimes(n, iteratee) {
		  var index = -1,
		      result = Array(n);
		
		  while (++index < n) {
		    result[index] = iteratee(index);
		  }
		  return result;
		}
		
		module.exports = baseTimes;


	/***/ },
	/* 422 */
	/***/ function(module, exports, __webpack_require__) {

		var isArrayLikeObject = __webpack_require__(423);
		
		/** `Object#toString` result references. */
		var argsTag = '[object Arguments]';
		
		/** Used for built-in method references. */
		var objectProto = Object.prototype;
		
		/** Used to check objects for own properties. */
		var hasOwnProperty = objectProto.hasOwnProperty;
		
		/**
		 * Used to resolve the
		 * [`toStringTag`](http://ecma-international.org/ecma-262/6.0/#sec-object.prototype.tostring)
		 * of values.
		 */
		var objectToString = objectProto.toString;
		
		/** Built-in value references. */
		var propertyIsEnumerable = objectProto.propertyIsEnumerable;
		
		/**
		 * Checks if `value` is likely an `arguments` object.
		 *
		 * @static
		 * @memberOf _
		 * @since 0.1.0
		 * @category Lang
		 * @param {*} value The value to check.
		 * @returns {boolean} Returns `true` if `value` is correctly classified,
		 *  else `false`.
		 * @example
		 *
		 * _.isArguments(function() { return arguments; }());
		 * // => true
		 *
		 * _.isArguments([1, 2, 3]);
		 * // => false
		 */
		function isArguments(value) {
		  // Safari 8.1 incorrectly makes `arguments.callee` enumerable in strict mode.
		  return isArrayLikeObject(value) && hasOwnProperty.call(value, 'callee') &&
		    (!propertyIsEnumerable.call(value, 'callee') || objectToString.call(value) == argsTag);
		}
		
		module.exports = isArguments;


	/***/ },
	/* 423 */
	/***/ function(module, exports, __webpack_require__) {

		var isArrayLike = __webpack_require__(402),
		    isObjectLike = __webpack_require__(413);
		
		/**
		 * This method is like `_.isArrayLike` except that it also checks if `value`
		 * is an object.
		 *
		 * @static
		 * @memberOf _
		 * @since 4.0.0
		 * @category Lang
		 * @param {*} value The value to check.
		 * @returns {boolean} Returns `true` if `value` is an array-like object,
		 *  else `false`.
		 * @example
		 *
		 * _.isArrayLikeObject([1, 2, 3]);
		 * // => true
		 *
		 * _.isArrayLikeObject(document.body.children);
		 * // => true
		 *
		 * _.isArrayLikeObject('abc');
		 * // => false
		 *
		 * _.isArrayLikeObject(_.noop);
		 * // => false
		 */
		function isArrayLikeObject(value) {
		  return isObjectLike(value) && isArrayLike(value);
		}
		
		module.exports = isArrayLikeObject;


	/***/ },
	/* 424 */
	/***/ function(module, exports) {

		/**
		 * Checks if `value` is classified as an `Array` object.
		 *
		 * @static
		 * @memberOf _
		 * @since 0.1.0
		 * @type {Function}
		 * @category Lang
		 * @param {*} value The value to check.
		 * @returns {boolean} Returns `true` if `value` is correctly classified,
		 *  else `false`.
		 * @example
		 *
		 * _.isArray([1, 2, 3]);
		 * // => true
		 *
		 * _.isArray(document.body.children);
		 * // => false
		 *
		 * _.isArray('abc');
		 * // => false
		 *
		 * _.isArray(_.noop);
		 * // => false
		 */
		var isArray = Array.isArray;
		
		module.exports = isArray;


	/***/ },
	/* 425 */
	/***/ function(module, exports, __webpack_require__) {

		var isArray = __webpack_require__(424),
		    isObjectLike = __webpack_require__(413);
		
		/** `Object#toString` result references. */
		var stringTag = '[object String]';
		
		/** Used for built-in method references. */
		var objectProto = Object.prototype;
		
		/**
		 * Used to resolve the
		 * [`toStringTag`](http://ecma-international.org/ecma-262/6.0/#sec-object.prototype.tostring)
		 * of values.
		 */
		var objectToString = objectProto.toString;
		
		/**
		 * Checks if `value` is classified as a `String` primitive or object.
		 *
		 * @static
		 * @since 0.1.0
		 * @memberOf _
		 * @category Lang
		 * @param {*} value The value to check.
		 * @returns {boolean} Returns `true` if `value` is correctly classified,
		 *  else `false`.
		 * @example
		 *
		 * _.isString('abc');
		 * // => true
		 *
		 * _.isString(1);
		 * // => false
		 */
		function isString(value) {
		  return typeof value == 'string' ||
		    (!isArray(value) && isObjectLike(value) && objectToString.call(value) == stringTag);
		}
		
		module.exports = isString;


	/***/ },
	/* 426 */
	/***/ function(module, exports) {

		/** Used for built-in method references. */
		var objectProto = Object.prototype;
		
		/**
		 * Checks if `value` is likely a prototype object.
		 *
		 * @private
		 * @param {*} value The value to check.
		 * @returns {boolean} Returns `true` if `value` is a prototype, else `false`.
		 */
		function isPrototype(value) {
		  var Ctor = value && value.constructor,
		      proto = (typeof Ctor == 'function' && Ctor.prototype) || objectProto;
		
		  return value === proto;
		}
		
		module.exports = isPrototype;


	/***/ },
	/* 427 */
	/***/ function(module, exports, __webpack_require__) {

		var assignValue = __webpack_require__(399),
		    copyObject = __webpack_require__(398),
		    createAssigner = __webpack_require__(400),
		    isArrayLike = __webpack_require__(402),
		    isPrototype = __webpack_require__(426),
		    keys = __webpack_require__(428);
		
		/** Used for built-in method references. */
		var objectProto = Object.prototype;
		
		/** Used to check objects for own properties. */
		var hasOwnProperty = objectProto.hasOwnProperty;
		
		/** Built-in value references. */
		var propertyIsEnumerable = objectProto.propertyIsEnumerable;
		
		/** Detect if properties shadowing those on `Object.prototype` are non-enumerable. */
		var nonEnumShadows = !propertyIsEnumerable.call({ 'valueOf': 1 }, 'valueOf');
		
		/**
		 * Assigns own enumerable string keyed properties of source objects to the
		 * destination object. Source objects are applied from left to right.
		 * Subsequent sources overwrite property assignments of previous sources.
		 *
		 * **Note:** This method mutates `object` and is loosely based on
		 * [`Object.assign`](https://mdn.io/Object/assign).
		 *
		 * @static
		 * @memberOf _
		 * @since 0.10.0
		 * @category Object
		 * @param {Object} object The destination object.
		 * @param {...Object} [sources] The source objects.
		 * @returns {Object} Returns `object`.
		 * @example
		 *
		 * function Foo() {
		 *   this.c = 3;
		 * }
		 *
		 * function Bar() {
		 *   this.e = 5;
		 * }
		 *
		 * Foo.prototype.d = 4;
		 * Bar.prototype.f = 6;
		 *
		 * _.assign({ 'a': 1 }, new Foo, new Bar);
		 * // => { 'a': 1, 'c': 3, 'e': 5 }
		 */
		var assign = createAssigner(function(object, source) {
		  if (nonEnumShadows || isPrototype(source) || isArrayLike(source)) {
		    copyObject(source, keys(source), object);
		    return;
		  }
		  for (var key in source) {
		    if (hasOwnProperty.call(source, key)) {
		      assignValue(object, key, source[key]);
		    }
		  }
		});
		
		module.exports = assign;


	/***/ },
	/* 428 */
	/***/ function(module, exports, __webpack_require__) {

		var baseHas = __webpack_require__(429),
		    baseKeys = __webpack_require__(431),
		    indexKeys = __webpack_require__(420),
		    isArrayLike = __webpack_require__(402),
		    isIndex = __webpack_require__(408),
		    isPrototype = __webpack_require__(426);
		
		/**
		 * Creates an array of the own enumerable property names of `object`.
		 *
		 * **Note:** Non-object values are coerced to objects. See the
		 * [ES spec](http://ecma-international.org/ecma-262/6.0/#sec-object.keys)
		 * for more details.
		 *
		 * @static
		 * @since 0.1.0
		 * @memberOf _
		 * @category Object
		 * @param {Object} object The object to query.
		 * @returns {Array} Returns the array of property names.
		 * @example
		 *
		 * function Foo() {
		 *   this.a = 1;
		 *   this.b = 2;
		 * }
		 *
		 * Foo.prototype.c = 3;
		 *
		 * _.keys(new Foo);
		 * // => ['a', 'b'] (iteration order is not guaranteed)
		 *
		 * _.keys('hi');
		 * // => ['0', '1']
		 */
		function keys(object) {
		  var isProto = isPrototype(object);
		  if (!(isProto || isArrayLike(object))) {
		    return baseKeys(object);
		  }
		  var indexes = indexKeys(object),
		      skipIndexes = !!indexes,
		      result = indexes || [],
		      length = result.length;
		
		  for (var key in object) {
		    if (baseHas(object, key) &&
		        !(skipIndexes && (key == 'length' || isIndex(key, length))) &&
		        !(isProto && key == 'constructor')) {
		      result.push(key);
		    }
		  }
		  return result;
		}
		
		module.exports = keys;


	/***/ },
	/* 429 */
	/***/ function(module, exports, __webpack_require__) {

		var getPrototype = __webpack_require__(430);
		
		/** Used for built-in method references. */
		var objectProto = Object.prototype;
		
		/** Used to check objects for own properties. */
		var hasOwnProperty = objectProto.hasOwnProperty;
		
		/**
		 * The base implementation of `_.has` without support for deep paths.
		 *
		 * @private
		 * @param {Object} object The object to query.
		 * @param {Array|string} key The key to check.
		 * @returns {boolean} Returns `true` if `key` exists, else `false`.
		 */
		function baseHas(object, key) {
		  // Avoid a bug in IE 10-11 where objects with a [[Prototype]] of `null`,
		  // that are composed entirely of index properties, return `false` for
		  // `hasOwnProperty` checks of them.
		  return hasOwnProperty.call(object, key) ||
		    (typeof object == 'object' && key in object && getPrototype(object) === null);
		}
		
		module.exports = baseHas;


	/***/ },
	/* 430 */
	/***/ function(module, exports) {

		/* Built-in method references for those with the same name as other `lodash` methods. */
		var nativeGetPrototype = Object.getPrototypeOf;
		
		/**
		 * Gets the `[[Prototype]]` of `value`.
		 *
		 * @private
		 * @param {*} value The value to query.
		 * @returns {null|Object} Returns the `[[Prototype]]`.
		 */
		function getPrototype(value) {
		  return nativeGetPrototype(Object(value));
		}
		
		module.exports = getPrototype;


	/***/ },
	/* 431 */
	/***/ function(module, exports) {

		/* Built-in method references for those with the same name as other `lodash` methods. */
		var nativeKeys = Object.keys;
		
		/**
		 * The base implementation of `_.keys` which doesn't skip the constructor
		 * property of prototypes or treat sparse arrays as dense.
		 *
		 * @private
		 * @param {Object} object The object to query.
		 * @returns {Array} Returns the array of property names.
		 */
		function baseKeys(object) {
		  return nativeKeys(Object(object));
		}
		
		module.exports = baseKeys;


	/***/ },
	/* 432 */
	/***/ function(module, exports, __webpack_require__) {

		"use strict";
		
		Object.defineProperty(exports, "__esModule", {
		  value: true
		});
		
		var _extends = Object.assign || function (target) { for (var i = 1; i < arguments.length; i++) { var source = arguments[i]; for (var key in source) { if (Object.prototype.hasOwnProperty.call(source, key)) { target[key] = source[key]; } } } return target; };
		
		var _createClass = function () { function defineProperties(target, props) { for (var i = 0; i < props.length; i++) { var descriptor = props[i]; descriptor.enumerable = descriptor.enumerable || false; descriptor.configurable = true; if ("value" in descriptor) descriptor.writable = true; Object.defineProperty(target, descriptor.key, descriptor); } } return function (Constructor, protoProps, staticProps) { if (protoProps) defineProperties(Constructor.prototype, protoProps); if (staticProps) defineProperties(Constructor, staticProps); return Constructor; }; }();
		
		var _react = __webpack_require__(157);
		
		var _react2 = _interopRequireDefault(_react);
		
		var _victoryCore = __webpack_require__(1);
		
		var _defaults = __webpack_require__(393);
		
		var _defaults2 = _interopRequireDefault(_defaults);
		
		var _omit = __webpack_require__(433);
		
		var _omit2 = _interopRequireDefault(_omit);
		
		function _interopRequireDefault(obj) { return obj && obj.__esModule ? obj : { default: obj }; }
		
		function _classCallCheck(instance, Constructor) { if (!(instance instanceof Constructor)) { throw new TypeError("Cannot call a class as a function"); } }
		
		function _possibleConstructorReturn(self, call) { if (!self) { throw new ReferenceError("this hasn't been initialised - super() hasn't been called"); } return call && (typeof call === "object" || typeof call === "function") ? call : self; }
		
		function _inherits(subClass, superClass) { if (typeof superClass !== "function" && superClass !== null) { throw new TypeError("Super expression must either be null or a function, not " + typeof superClass); } subClass.prototype = Object.create(superClass && superClass.prototype, { constructor: { value: subClass, enumerable: false, writable: true, configurable: true } }); if (superClass) Object.setPrototypeOf ? Object.setPrototypeOf(subClass, superClass) : subClass.__proto__ = superClass; }
		
		var Slice = function (_React$Component) {
		  _inherits(Slice, _React$Component);
		
		  function Slice() {
		    _classCallCheck(this, Slice);
		
		    return _possibleConstructorReturn(this, Object.getPrototypeOf(Slice).apply(this, arguments));
		  }
		
		  _createClass(Slice, [{
		    key: "renderSlice",
		    value: function renderSlice(props) {
		      var dataStyles = (0, _omit2.default)(props.slice.data, ["x", "y", "label"]);
		      var style = _victoryCore.Helpers.evaluateStyle((0, _defaults2.default)({}, dataStyles, props.style), props.slice.data);
		      var events = _victoryCore.Helpers.getPartialEvents(props.events, props.index, props);
		      return _react2.default.createElement("path", _extends({
		        d: props.pathFunction(props.slice),
		        style: style
		      }, events));
		    }
		  }, {
		    key: "render",
		    value: function render() {
		      return this.renderSlice(this.props);
		    }
		  }]);
		
		  return Slice;
		}(_react2.default.Component);
		
		Slice.propTypes = {
		  index: _react.PropTypes.number,
		  slice: _react.PropTypes.object,
		  pathFunction: _react.PropTypes.func,
		  style: _react.PropTypes.object,
		  datum: _react.PropTypes.object,
		  events: _react.PropTypes.object
		};
		exports.default = Slice;

	/***/ },
	/* 433 */
	/***/ function(module, exports, __webpack_require__) {

		var arrayMap = __webpack_require__(434),
		    baseDifference = __webpack_require__(435),
		    baseFlatten = __webpack_require__(467),
		    basePick = __webpack_require__(470),
		    getAllKeysIn = __webpack_require__(472),
		    rest = __webpack_require__(409),
		    toKey = __webpack_require__(476);
		
		/**
		 * The opposite of `_.pick`; this method creates an object composed of the
		 * own and inherited enumerable string keyed properties of `object` that are
		 * not omitted.
		 *
		 * @static
		 * @since 0.1.0
		 * @memberOf _
		 * @category Object
		 * @param {Object} object The source object.
		 * @param {...(string|string[])} [props] The property identifiers to omit.
		 * @returns {Object} Returns the new object.
		 * @example
		 *
		 * var object = { 'a': 1, 'b': '2', 'c': 3 };
		 *
		 * _.omit(object, ['a', 'c']);
		 * // => { 'b': '2' }
		 */
		var omit = rest(function(object, props) {
		  if (object == null) {
		    return {};
		  }
		  props = arrayMap(baseFlatten(props, 1), toKey);
		  return basePick(object, baseDifference(getAllKeysIn(object), props));
		});
		
		module.exports = omit;


	/***/ },
	/* 434 */
	/***/ function(module, exports) {

		/**
		 * A specialized version of `_.map` for arrays without support for iteratee
		 * shorthands.
		 *
		 * @private
		 * @param {Array} array The array to iterate over.
		 * @param {Function} iteratee The function invoked per iteration.
		 * @returns {Array} Returns the new mapped array.
		 */
		function arrayMap(array, iteratee) {
		  var index = -1,
		      length = array.length,
		      result = Array(length);
		
		  while (++index < length) {
		    result[index] = iteratee(array[index], index, array);
		  }
		  return result;
		}
		
		module.exports = arrayMap;


	/***/ },
	/* 435 */
	/***/ function(module, exports, __webpack_require__) {

		var SetCache = __webpack_require__(436),
		    arrayIncludes = __webpack_require__(461),
		    arrayIncludesWith = __webpack_require__(464),
		    arrayMap = __webpack_require__(434),
		    baseUnary = __webpack_require__(465),
		    cacheHas = __webpack_require__(466);
		
		/** Used as the size to enable large array optimizations. */
		var LARGE_ARRAY_SIZE = 200;
		
		/**
		 * The base implementation of methods like `_.difference` without support
		 * for excluding multiple arrays or iteratee shorthands.
		 *
		 * @private
		 * @param {Array} array The array to inspect.
		 * @param {Array} values The values to exclude.
		 * @param {Function} [iteratee] The iteratee invoked per element.
		 * @param {Function} [comparator] The comparator invoked per element.
		 * @returns {Array} Returns the new array of filtered values.
		 */
		function baseDifference(array, values, iteratee, comparator) {
		  var index = -1,
		      includes = arrayIncludes,
		      isCommon = true,
		      length = array.length,
		      result = [],
		      valuesLength = values.length;
		
		  if (!length) {
		    return result;
		  }
		  if (iteratee) {
		    values = arrayMap(values, baseUnary(iteratee));
		  }
		  if (comparator) {
		    includes = arrayIncludesWith;
		    isCommon = false;
		  }
		  else if (values.length >= LARGE_ARRAY_SIZE) {
		    includes = cacheHas;
		    isCommon = false;
		    values = new SetCache(values);
		  }
		  outer:
		  while (++index < length) {
		    var value = array[index],
		        computed = iteratee ? iteratee(value) : value;
		
		    if (isCommon && computed === computed) {
		      var valuesIndex = valuesLength;
		      while (valuesIndex--) {
		        if (values[valuesIndex] === computed) {
		          continue outer;
		        }
		      }
		      result.push(value);
		    }
		    else if (!includes(values, computed, comparator)) {
		      result.push(value);
		    }
		  }
		  return result;
		}
		
		module.exports = baseDifference;


	/***/ },
	/* 436 */
	/***/ function(module, exports, __webpack_require__) {

		var MapCache = __webpack_require__(437),
		    cachePush = __webpack_require__(460);
		
		/**
		 *
		 * Creates a set cache object to store unique values.
		 *
		 * @private
		 * @constructor
		 * @param {Array} [values] The values to cache.
		 */
		function SetCache(values) {
		  var index = -1,
		      length = values ? values.length : 0;
		
		  this.__data__ = new MapCache;
		  while (++index < length) {
		    this.push(values[index]);
		  }
		}
		
		// Add methods to `SetCache`.
		SetCache.prototype.push = cachePush;
		
		module.exports = SetCache;


	/***/ },
	/* 437 */
	/***/ function(module, exports, __webpack_require__) {

		var mapClear = __webpack_require__(438),
		    mapDelete = __webpack_require__(446),
		    mapGet = __webpack_require__(452),
		    mapHas = __webpack_require__(455),
		    mapSet = __webpack_require__(457);
		
		/**
		 * Creates a map cache object to store key-value pairs.
		 *
		 * @private
		 * @constructor
		 * @param {Array} [values] The values to cache.
		 */
		function MapCache(values) {
		  var index = -1,
		      length = values ? values.length : 0;
		
		  this.clear();
		  while (++index < length) {
		    var entry = values[index];
		    this.set(entry[0], entry[1]);
		  }
		}
		
		// Add methods to `MapCache`.
		MapCache.prototype.clear = mapClear;
		MapCache.prototype['delete'] = mapDelete;
		MapCache.prototype.get = mapGet;
		MapCache.prototype.has = mapHas;
		MapCache.prototype.set = mapSet;
		
		module.exports = MapCache;


	/***/ },
	/* 438 */
	/***/ function(module, exports, __webpack_require__) {

		var Hash = __webpack_require__(439),
		    Map = __webpack_require__(445);
		
		/**
		 * Removes all key-value entries from the map.
		 *
		 * @private
		 * @name clear
		 * @memberOf MapCache
		 */
		function mapClear() {
		  this.__data__ = {
		    'hash': new Hash,
		    'map': Map ? new Map : [],
		    'string': new Hash
		  };
		}
		
		module.exports = mapClear;


	/***/ },
	/* 439 */
	/***/ function(module, exports, __webpack_require__) {

		var nativeCreate = __webpack_require__(440);
		
		/** Used for built-in method references. */
		var objectProto = Object.prototype;
		
		/**
		 * Creates a hash object.
		 *
		 * @private
		 * @constructor
		 * @returns {Object} Returns the new hash object.
		 */
		function Hash() {}
		
		// Avoid inheriting from `Object.prototype` when possible.
		Hash.prototype = nativeCreate ? nativeCreate(null) : objectProto;
		
		module.exports = Hash;


	/***/ },
	/* 440 */
	/***/ function(module, exports, __webpack_require__) {

		var getNative = __webpack_require__(441);
		
		/* Built-in method references that are verified to be native. */
		var nativeCreate = getNative(Object, 'create');
		
		module.exports = nativeCreate;


	/***/ },
	/* 441 */
	/***/ function(module, exports, __webpack_require__) {

		var isNative = __webpack_require__(442);
		
		/**
		 * Gets the native function at `key` of `object`.
		 *
		 * @private
		 * @param {Object} object The object to query.
		 * @param {string} key The key of the method to get.
		 * @returns {*} Returns the function if it's native, else `undefined`.
		 */
		function getNative(object, key) {
		  var value = object[key];
		  return isNative(value) ? value : undefined;
		}
		
		module.exports = getNative;


	/***/ },
	/* 442 */
	/***/ function(module, exports, __webpack_require__) {

		var isFunction = __webpack_require__(405),
		    isHostObject = __webpack_require__(443),
		    isObject = __webpack_require__(406),
		    toSource = __webpack_require__(444);
		
		/**
		 * Used to match `RegExp`
		 * [syntax characters](http://ecma-international.org/ecma-262/6.0/#sec-patterns).
		 */
		var reRegExpChar = /[\\^$.*+?()[\]{}|]/g;
		
		/** Used to detect host constructors (Safari). */
		var reIsHostCtor = /^\[object .+?Constructor\]$/;
		
		/** Used for built-in method references. */
		var objectProto = Object.prototype;
		
		/** Used to resolve the decompiled source of functions. */
		var funcToString = Function.prototype.toString;
		
		/** Used to check objects for own properties. */
		var hasOwnProperty = objectProto.hasOwnProperty;
		
		/** Used to detect if a method is native. */
		var reIsNative = RegExp('^' +
		  funcToString.call(hasOwnProperty).replace(reRegExpChar, '\\$&')
		  .replace(/hasOwnProperty|(function).*?(?=\\\()| for .+?(?=\\\])/g, '$1.*?') + '$'
		);
		
		/**
		 * Checks if `value` is a native function.
		 *
		 * @static
		 * @memberOf _
		 * @since 3.0.0
		 * @category Lang
		 * @param {*} value The value to check.
		 * @returns {boolean} Returns `true` if `value` is a native function,
		 *  else `false`.
		 * @example
		 *
		 * _.isNative(Array.prototype.push);
		 * // => true
		 *
		 * _.isNative(_);
		 * // => false
		 */
		function isNative(value) {
		  if (!isObject(value)) {
		    return false;
		  }
		  var pattern = (isFunction(value) || isHostObject(value)) ? reIsNative : reIsHostCtor;
		  return pattern.test(toSource(value));
		}
		
		module.exports = isNative;


	/***/ },
	/* 443 */
	/***/ function(module, exports) {

		/**
		 * Checks if `value` is a host object in IE < 9.
		 *
		 * @private
		 * @param {*} value The value to check.
		 * @returns {boolean} Returns `true` if `value` is a host object, else `false`.
		 */
		function isHostObject(value) {
		  // Many host objects are `Object` objects that can coerce to strings
		  // despite having improperly defined `toString` methods.
		  var result = false;
		  if (value != null && typeof value.toString != 'function') {
		    try {
		      result = !!(value + '');
		    } catch (e) {}
		  }
		  return result;
		}
		
		module.exports = isHostObject;


	/***/ },
	/* 444 */
	/***/ function(module, exports) {

		/** Used to resolve the decompiled source of functions. */
		var funcToString = Function.prototype.toString;
		
		/**
		 * Converts `func` to its source code.
		 *
		 * @private
		 * @param {Function} func The function to process.
		 * @returns {string} Returns the source code.
		 */
		function toSource(func) {
		  if (func != null) {
		    try {
		      return funcToString.call(func);
		    } catch (e) {}
		    try {
		      return (func + '');
		    } catch (e) {}
		  }
		  return '';
		}
		
		module.exports = toSource;


	/***/ },
	/* 445 */
	/***/ function(module, exports, __webpack_require__) {

		var getNative = __webpack_require__(441),
		    root = __webpack_require__(417);
		
		/* Built-in method references that are verified to be native. */
		var Map = getNative(root, 'Map');
		
		module.exports = Map;


	/***/ },
	/* 446 */
	/***/ function(module, exports, __webpack_require__) {

		var Map = __webpack_require__(445),
		    assocDelete = __webpack_require__(447),
		    hashDelete = __webpack_require__(449),
		    isKeyable = __webpack_require__(451);
		
		/**
		 * Removes `key` and its value from the map.
		 *
		 * @private
		 * @name delete
		 * @memberOf MapCache
		 * @param {string} key The key of the value to remove.
		 * @returns {boolean} Returns `true` if the entry was removed, else `false`.
		 */
		function mapDelete(key) {
		  var data = this.__data__;
		  if (isKeyable(key)) {
		    return hashDelete(typeof key == 'string' ? data.string : data.hash, key);
		  }
		  return Map ? data.map['delete'](key) : assocDelete(data.map, key);
		}
		
		module.exports = mapDelete;


	/***/ },
	/* 447 */
	/***/ function(module, exports, __webpack_require__) {

		var assocIndexOf = __webpack_require__(448);
		
		/** Used for built-in method references. */
		var arrayProto = Array.prototype;
		
		/** Built-in value references. */
		var splice = arrayProto.splice;
		
		/**
		 * Removes `key` and its value from the associative array.
		 *
		 * @private
		 * @param {Array} array The array to modify.
		 * @param {string} key The key of the value to remove.
		 * @returns {boolean} Returns `true` if the entry was removed, else `false`.
		 */
		function assocDelete(array, key) {
		  var index = assocIndexOf(array, key);
		  if (index < 0) {
		    return false;
		  }
		  var lastIndex = array.length - 1;
		  if (index == lastIndex) {
		    array.pop();
		  } else {
		    splice.call(array, index, 1);
		  }
		  return true;
		}
		
		module.exports = assocDelete;


	/***/ },
	/* 448 */
	/***/ function(module, exports, __webpack_require__) {

		var eq = __webpack_require__(396);
		
		/**
		 * Gets the index at which the `key` is found in `array` of key-value pairs.
		 *
		 * @private
		 * @param {Array} array The array to search.
		 * @param {*} key The key to search for.
		 * @returns {number} Returns the index of the matched value, else `-1`.
		 */
		function assocIndexOf(array, key) {
		  var length = array.length;
		  while (length--) {
		    if (eq(array[length][0], key)) {
		      return length;
		    }
		  }
		  return -1;
		}
		
		module.exports = assocIndexOf;


	/***/ },
	/* 449 */
	/***/ function(module, exports, __webpack_require__) {

		var hashHas = __webpack_require__(450);
		
		/**
		 * Removes `key` and its value from the hash.
		 *
		 * @private
		 * @param {Object} hash The hash to modify.
		 * @param {string} key The key of the value to remove.
		 * @returns {boolean} Returns `true` if the entry was removed, else `false`.
		 */
		function hashDelete(hash, key) {
		  return hashHas(hash, key) && delete hash[key];
		}
		
		module.exports = hashDelete;


	/***/ },
	/* 450 */
	/***/ function(module, exports, __webpack_require__) {

		var nativeCreate = __webpack_require__(440);
		
		/** Used for built-in method references. */
		var objectProto = Object.prototype;
		
		/** Used to check objects for own properties. */
		var hasOwnProperty = objectProto.hasOwnProperty;
		
		/**
		 * Checks if a hash value for `key` exists.
		 *
		 * @private
		 * @param {Object} hash The hash to query.
		 * @param {string} key The key of the entry to check.
		 * @returns {boolean} Returns `true` if an entry for `key` exists, else `false`.
		 */
		function hashHas(hash, key) {
		  return nativeCreate ? hash[key] !== undefined : hasOwnProperty.call(hash, key);
		}
		
		module.exports = hashHas;


	/***/ },
	/* 451 */
	/***/ function(module, exports) {

		/**
		 * Checks if `value` is suitable for use as unique object key.
		 *
		 * @private
		 * @param {*} value The value to check.
		 * @returns {boolean} Returns `true` if `value` is suitable, else `false`.
		 */
		function isKeyable(value) {
		  var type = typeof value;
		  return type == 'number' || type == 'boolean' ||
		    (type == 'string' && value != '__proto__') || value == null;
		}
		
		module.exports = isKeyable;


	/***/ },
	/* 452 */
	/***/ function(module, exports, __webpack_require__) {

		var Map = __webpack_require__(445),
		    assocGet = __webpack_require__(453),
		    hashGet = __webpack_require__(454),
		    isKeyable = __webpack_require__(451);
		
		/**
		 * Gets the map value for `key`.
		 *
		 * @private
		 * @name get
		 * @memberOf MapCache
		 * @param {string} key The key of the value to get.
		 * @returns {*} Returns the entry value.
		 */
		function mapGet(key) {
		  var data = this.__data__;
		  if (isKeyable(key)) {
		    return hashGet(typeof key == 'string' ? data.string : data.hash, key);
		  }
		  return Map ? data.map.get(key) : assocGet(data.map, key);
		}
		
		module.exports = mapGet;


	/***/ },
	/* 453 */
	/***/ function(module, exports, __webpack_require__) {

		var assocIndexOf = __webpack_require__(448);
		
		/**
		 * Gets the associative array value for `key`.
		 *
		 * @private
		 * @param {Array} array The array to query.
		 * @param {string} key The key of the value to get.
		 * @returns {*} Returns the entry value.
		 */
		function assocGet(array, key) {
		  var index = assocIndexOf(array, key);
		  return index < 0 ? undefined : array[index][1];
		}
		
		module.exports = assocGet;


	/***/ },
	/* 454 */
	/***/ function(module, exports, __webpack_require__) {

		var nativeCreate = __webpack_require__(440);
		
		/** Used to stand-in for `undefined` hash values. */
		var HASH_UNDEFINED = '__lodash_hash_undefined__';
		
		/** Used for built-in method references. */
		var objectProto = Object.prototype;
		
		/** Used to check objects for own properties. */
		var hasOwnProperty = objectProto.hasOwnProperty;
		
		/**
		 * Gets the hash value for `key`.
		 *
		 * @private
		 * @param {Object} hash The hash to query.
		 * @param {string} key The key of the value to get.
		 * @returns {*} Returns the entry value.
		 */
		function hashGet(hash, key) {
		  if (nativeCreate) {
		    var result = hash[key];
		    return result === HASH_UNDEFINED ? undefined : result;
		  }
		  return hasOwnProperty.call(hash, key) ? hash[key] : undefined;
		}
		
		module.exports = hashGet;


	/***/ },
	/* 455 */
	/***/ function(module, exports, __webpack_require__) {

		var Map = __webpack_require__(445),
		    assocHas = __webpack_require__(456),
		    hashHas = __webpack_require__(450),
		    isKeyable = __webpack_require__(451);
		
		/**
		 * Checks if a map value for `key` exists.
		 *
		 * @private
		 * @name has
		 * @memberOf MapCache
		 * @param {string} key The key of the entry to check.
		 * @returns {boolean} Returns `true` if an entry for `key` exists, else `false`.
		 */
		function mapHas(key) {
		  var data = this.__data__;
		  if (isKeyable(key)) {
		    return hashHas(typeof key == 'string' ? data.string : data.hash, key);
		  }
		  return Map ? data.map.has(key) : assocHas(data.map, key);
		}
		
		module.exports = mapHas;


	/***/ },
	/* 456 */
	/***/ function(module, exports, __webpack_require__) {

		var assocIndexOf = __webpack_require__(448);
		
		/**
		 * Checks if an associative array value for `key` exists.
		 *
		 * @private
		 * @param {Array} array The array to query.
		 * @param {string} key The key of the entry to check.
		 * @returns {boolean} Returns `true` if an entry for `key` exists, else `false`.
		 */
		function assocHas(array, key) {
		  return assocIndexOf(array, key) > -1;
		}
		
		module.exports = assocHas;


	/***/ },
	/* 457 */
	/***/ function(module, exports, __webpack_require__) {

		var Map = __webpack_require__(445),
		    assocSet = __webpack_require__(458),
		    hashSet = __webpack_require__(459),
		    isKeyable = __webpack_require__(451);
		
		/**
		 * Sets the map `key` to `value`.
		 *
		 * @private
		 * @name set
		 * @memberOf MapCache
		 * @param {string} key The key of the value to set.
		 * @param {*} value The value to set.
		 * @returns {Object} Returns the map cache instance.
		 */
		function mapSet(key, value) {
		  var data = this.__data__;
		  if (isKeyable(key)) {
		    hashSet(typeof key == 'string' ? data.string : data.hash, key, value);
		  } else if (Map) {
		    data.map.set(key, value);
		  } else {
		    assocSet(data.map, key, value);
		  }
		  return this;
		}
		
		module.exports = mapSet;


	/***/ },
	/* 458 */
	/***/ function(module, exports, __webpack_require__) {

		var assocIndexOf = __webpack_require__(448);
		
		/**
		 * Sets the associative array `key` to `value`.
		 *
		 * @private
		 * @param {Array} array The array to modify.
		 * @param {string} key The key of the value to set.
		 * @param {*} value The value to set.
		 */
		function assocSet(array, key, value) {
		  var index = assocIndexOf(array, key);
		  if (index < 0) {
		    array.push([key, value]);
		  } else {
		    array[index][1] = value;
		  }
		}
		
		module.exports = assocSet;


	/***/ },
	/* 459 */
	/***/ function(module, exports, __webpack_require__) {

		var nativeCreate = __webpack_require__(440);
		
		/** Used to stand-in for `undefined` hash values. */
		var HASH_UNDEFINED = '__lodash_hash_undefined__';
		
		/**
		 * Sets the hash `key` to `value`.
		 *
		 * @private
		 * @param {Object} hash The hash to modify.
		 * @param {string} key The key of the value to set.
		 * @param {*} value The value to set.
		 */
		function hashSet(hash, key, value) {
		  hash[key] = (nativeCreate && value === undefined) ? HASH_UNDEFINED : value;
		}
		
		module.exports = hashSet;


	/***/ },
	/* 460 */
	/***/ function(module, exports, __webpack_require__) {

		var isKeyable = __webpack_require__(451);
		
		/** Used to stand-in for `undefined` hash values. */
		var HASH_UNDEFINED = '__lodash_hash_undefined__';
		
		/**
		 * Adds `value` to the set cache.
		 *
		 * @private
		 * @name push
		 * @memberOf SetCache
		 * @param {*} value The value to cache.
		 */
		function cachePush(value) {
		  var map = this.__data__;
		  if (isKeyable(value)) {
		    var data = map.__data__,
		        hash = typeof value == 'string' ? data.string : data.hash;
		
		    hash[value] = HASH_UNDEFINED;
		  }
		  else {
		    map.set(value, HASH_UNDEFINED);
		  }
		}
		
		module.exports = cachePush;


	/***/ },
	/* 461 */
	/***/ function(module, exports, __webpack_require__) {

		var baseIndexOf = __webpack_require__(462);
		
		/**
		 * A specialized version of `_.includes` for arrays without support for
		 * specifying an index to search from.
		 *
		 * @private
		 * @param {Array} array The array to search.
		 * @param {*} target The value to search for.
		 * @returns {boolean} Returns `true` if `target` is found, else `false`.
		 */
		function arrayIncludes(array, value) {
		  return !!array.length && baseIndexOf(array, value, 0) > -1;
		}
		
		module.exports = arrayIncludes;


	/***/ },
	/* 462 */
	/***/ function(module, exports, __webpack_require__) {

		var indexOfNaN = __webpack_require__(463);
		
		/**
		 * The base implementation of `_.indexOf` without `fromIndex` bounds checks.
		 *
		 * @private
		 * @param {Array} array The array to search.
		 * @param {*} value The value to search for.
		 * @param {number} fromIndex The index to search from.
		 * @returns {number} Returns the index of the matched value, else `-1`.
		 */
		function baseIndexOf(array, value, fromIndex) {
		  if (value !== value) {
		    return indexOfNaN(array, fromIndex);
		  }
		  var index = fromIndex - 1,
		      length = array.length;
		
		  while (++index < length) {
		    if (array[index] === value) {
		      return index;
		    }
		  }
		  return -1;
		}
		
		module.exports = baseIndexOf;


	/***/ },
	/* 463 */
	/***/ function(module, exports) {

		/**
		 * Gets the index at which the first occurrence of `NaN` is found in `array`.
		 *
		 * @private
		 * @param {Array} array The array to search.
		 * @param {number} fromIndex The index to search from.
		 * @param {boolean} [fromRight] Specify iterating from right to left.
		 * @returns {number} Returns the index of the matched `NaN`, else `-1`.
		 */
		function indexOfNaN(array, fromIndex, fromRight) {
		  var length = array.length,
		      index = fromIndex + (fromRight ? 0 : -1);
		
		  while ((fromRight ? index-- : ++index < length)) {
		    var other = array[index];
		    if (other !== other) {
		      return index;
		    }
		  }
		  return -1;
		}
		
		module.exports = indexOfNaN;


	/***/ },
	/* 464 */
	/***/ function(module, exports) {

		/**
		 * This function is like `arrayIncludes` except that it accepts a comparator.
		 *
		 * @private
		 * @param {Array} array The array to search.
		 * @param {*} target The value to search for.
		 * @param {Function} comparator The comparator invoked per element.
		 * @returns {boolean} Returns `true` if `target` is found, else `false`.
		 */
		function arrayIncludesWith(array, value, comparator) {
		  var index = -1,
		      length = array.length;
		
		  while (++index < length) {
		    if (comparator(value, array[index])) {
		      return true;
		    }
		  }
		  return false;
		}
		
		module.exports = arrayIncludesWith;


	/***/ },
	/* 465 */
	/***/ function(module, exports) {

		/**
		 * The base implementation of `_.unary` without support for storing wrapper metadata.
		 *
		 * @private
		 * @param {Function} func The function to cap arguments for.
		 * @returns {Function} Returns the new function.
		 */
		function baseUnary(func) {
		  return function(value) {
		    return func(value);
		  };
		}
		
		module.exports = baseUnary;


	/***/ },
	/* 466 */
	/***/ function(module, exports, __webpack_require__) {

		var isKeyable = __webpack_require__(451);
		
		/** Used to stand-in for `undefined` hash values. */
		var HASH_UNDEFINED = '__lodash_hash_undefined__';
		
		/**
		 * Checks if `value` is in `cache`.
		 *
		 * @private
		 * @param {Object} cache The set cache to search.
		 * @param {*} value The value to search for.
		 * @returns {number} Returns `true` if `value` is found, else `false`.
		 */
		function cacheHas(cache, value) {
		  var map = cache.__data__;
		  if (isKeyable(value)) {
		    var data = map.__data__,
		        hash = typeof value == 'string' ? data.string : data.hash;
		
		    return hash[value] === HASH_UNDEFINED;
		  }
		  return map.has(value);
		}
		
		module.exports = cacheHas;


	/***/ },
	/* 467 */
	/***/ function(module, exports, __webpack_require__) {

		var arrayPush = __webpack_require__(468),
		    isFlattenable = __webpack_require__(469);
		
		/**
		 * The base implementation of `_.flatten` with support for restricting flattening.
		 *
		 * @private
		 * @param {Array} array The array to flatten.
		 * @param {number} depth The maximum recursion depth.
		 * @param {boolean} [predicate=isFlattenable] The function invoked per iteration.
		 * @param {boolean} [isStrict] Restrict to values that pass `predicate` checks.
		 * @param {Array} [result=[]] The initial result value.
		 * @returns {Array} Returns the new flattened array.
		 */
		function baseFlatten(array, depth, predicate, isStrict, result) {
		  var index = -1,
		      length = array.length;
		
		  predicate || (predicate = isFlattenable);
		  result || (result = []);
		
		  while (++index < length) {
		    var value = array[index];
		    if (depth > 0 && predicate(value)) {
		      if (depth > 1) {
		        // Recursively flatten arrays (susceptible to call stack limits).
		        baseFlatten(value, depth - 1, predicate, isStrict, result);
		      } else {
		        arrayPush(result, value);
		      }
		    } else if (!isStrict) {
		      result[result.length] = value;
		    }
		  }
		  return result;
		}
		
		module.exports = baseFlatten;


	/***/ },
	/* 468 */
	/***/ function(module, exports) {

		/**
		 * Appends the elements of `values` to `array`.
		 *
		 * @private
		 * @param {Array} array The array to modify.
		 * @param {Array} values The values to append.
		 * @returns {Array} Returns `array`.
		 */
		function arrayPush(array, values) {
		  var index = -1,
		      length = values.length,
		      offset = array.length;
		
		  while (++index < length) {
		    array[offset + index] = values[index];
		  }
		  return array;
		}
		
		module.exports = arrayPush;


	/***/ },
	/* 469 */
	/***/ function(module, exports, __webpack_require__) {

		var isArguments = __webpack_require__(422),
		    isArray = __webpack_require__(424),
		    isArrayLikeObject = __webpack_require__(423);
		
		/**
		 * Checks if `value` is a flattenable `arguments` object or array.
		 *
		 * @private
		 * @param {*} value The value to check.
		 * @returns {boolean} Returns `true` if `value` is flattenable, else `false`.
		 */
		function isFlattenable(value) {
		  return isArrayLikeObject(value) && (isArray(value) || isArguments(value));
		}
		
		module.exports = isFlattenable;


	/***/ },
	/* 470 */
	/***/ function(module, exports, __webpack_require__) {

		var arrayReduce = __webpack_require__(471);
		
		/**
		 * The base implementation of `_.pick` without support for individual
		 * property identifiers.
		 *
		 * @private
		 * @param {Object} object The source object.
		 * @param {string[]} props The property identifiers to pick.
		 * @returns {Object} Returns the new object.
		 */
		function basePick(object, props) {
		  object = Object(object);
		  return arrayReduce(props, function(result, key) {
		    if (key in object) {
		      result[key] = object[key];
		    }
		    return result;
		  }, {});
		}
		
		module.exports = basePick;


	/***/ },
	/* 471 */
	/***/ function(module, exports) {

		/**
		 * A specialized version of `_.reduce` for arrays without support for
		 * iteratee shorthands.
		 *
		 * @private
		 * @param {Array} array The array to iterate over.
		 * @param {Function} iteratee The function invoked per iteration.
		 * @param {*} [accumulator] The initial value.
		 * @param {boolean} [initAccum] Specify using the first element of `array` as
		 *  the initial value.
		 * @returns {*} Returns the accumulated value.
		 */
		function arrayReduce(array, iteratee, accumulator, initAccum) {
		  var index = -1,
		      length = array.length;
		
		  if (initAccum && length) {
		    accumulator = array[++index];
		  }
		  while (++index < length) {
		    accumulator = iteratee(accumulator, array[index], index, array);
		  }
		  return accumulator;
		}
		
		module.exports = arrayReduce;


	/***/ },
	/* 472 */
	/***/ function(module, exports, __webpack_require__) {

		var baseGetAllKeys = __webpack_require__(473),
		    getSymbolsIn = __webpack_require__(474),
		    keysIn = __webpack_require__(414);
		
		/**
		 * Creates an array of own and inherited enumerable property names and
		 * symbols of `object`.
		 *
		 * @private
		 * @param {Object} object The object to query.
		 * @returns {Array} Returns the array of property names and symbols.
		 */
		function getAllKeysIn(object) {
		  return baseGetAllKeys(object, keysIn, getSymbolsIn);
		}
		
		module.exports = getAllKeysIn;


	/***/ },
	/* 473 */
	/***/ function(module, exports, __webpack_require__) {

		var arrayPush = __webpack_require__(468),
		    isArray = __webpack_require__(424);
		
		/**
		 * The base implementation of `getAllKeys` and `getAllKeysIn` which uses
		 * `keysFunc` and `symbolsFunc` to get the enumerable property names and
		 * symbols of `object`.
		 *
		 * @private
		 * @param {Object} object The object to query.
		 * @param {Function} keysFunc The function to get the keys of `object`.
		 * @param {Function} symbolsFunc The function to get the symbols of `object`.
		 * @returns {Array} Returns the array of property names and symbols.
		 */
		function baseGetAllKeys(object, keysFunc, symbolsFunc) {
		  var result = keysFunc(object);
		  return isArray(object)
		    ? result
		    : arrayPush(result, symbolsFunc(object));
		}
		
		module.exports = baseGetAllKeys;


	/***/ },
	/* 474 */
	/***/ function(module, exports, __webpack_require__) {

		var arrayPush = __webpack_require__(468),
		    getPrototype = __webpack_require__(430),
		    getSymbols = __webpack_require__(475);
		
		/** Built-in value references. */
		var getOwnPropertySymbols = Object.getOwnPropertySymbols;
		
		/**
		 * Creates an array of the own and inherited enumerable symbol properties
		 * of `object`.
		 *
		 * @private
		 * @param {Object} object The object to query.
		 * @returns {Array} Returns the array of symbols.
		 */
		var getSymbolsIn = !getOwnPropertySymbols ? getSymbols : function(object) {
		  var result = [];
		  while (object) {
		    arrayPush(result, getSymbols(object));
		    object = getPrototype(object);
		  }
		  return result;
		};
		
		module.exports = getSymbolsIn;


	/***/ },
	/* 475 */
	/***/ function(module, exports) {

		/** Built-in value references. */
		var getOwnPropertySymbols = Object.getOwnPropertySymbols;
		
		/**
		 * Creates an array of the own enumerable symbol properties of `object`.
		 *
		 * @private
		 * @param {Object} object The object to query.
		 * @returns {Array} Returns the array of symbols.
		 */
		function getSymbols(object) {
		  // Coerce `object` to an object to avoid non-object errors in V8.
		  // See https://bugs.chromium.org/p/v8/issues/detail?id=3443 for more details.
		  return getOwnPropertySymbols(Object(object));
		}
		
		// Fallback for IE < 11.
		if (!getOwnPropertySymbols) {
		  getSymbols = function() {
		    return [];
		  };
		}
		
		module.exports = getSymbols;


	/***/ },
	/* 476 */
	/***/ function(module, exports, __webpack_require__) {

		var isSymbol = __webpack_require__(412);
		
		/**
		 * Converts `value` to a string key if it's not a string or symbol.
		 *
		 * @private
		 * @param {*} value The value to inspect.
		 * @returns {string|symbol} Returns the key.
		 */
		function toKey(key) {
		  return (typeof key == 'string' || isSymbol(key)) ? key : (key + '');
		}
		
		module.exports = toKey;


	/***/ },
	/* 477 */
	/***/ function(module, exports, __webpack_require__) {

		"use strict";
		
		Object.defineProperty(exports, "__esModule", {
		  value: true
		});
		
		var _createClass = function () { function defineProperties(target, props) { for (var i = 0; i < props.length; i++) { var descriptor = props[i]; descriptor.enumerable = descriptor.enumerable || false; descriptor.configurable = true; if ("value" in descriptor) descriptor.writable = true; Object.defineProperty(target, descriptor.key, descriptor); } } return function (Constructor, protoProps, staticProps) { if (protoProps) defineProperties(Constructor.prototype, protoProps); if (staticProps) defineProperties(Constructor, staticProps); return Constructor; }; }();
		
		var _react = __webpack_require__(157);
		
		var _react2 = _interopRequireDefault(_react);
		
		var _victoryCore = __webpack_require__(1);
		
		var _defaults = __webpack_require__(393);
		
		var _defaults2 = _interopRequireDefault(_defaults);
		
		var _assign = __webpack_require__(427);
		
		var _assign2 = _interopRequireDefault(_assign);
		
		function _interopRequireDefault(obj) { return obj && obj.__esModule ? obj : { default: obj }; }
		
		function _classCallCheck(instance, Constructor) { if (!(instance instanceof Constructor)) { throw new TypeError("Cannot call a class as a function"); } }
		
		function _possibleConstructorReturn(self, call) { if (!self) { throw new ReferenceError("this hasn't been initialised - super() hasn't been called"); } return call && (typeof call === "object" || typeof call === "function") ? call : self; }
		
		function _inherits(subClass, superClass) { if (typeof superClass !== "function" && superClass !== null) { throw new TypeError("Super expression must either be null or a function, not " + typeof superClass); } subClass.prototype = Object.create(superClass && superClass.prototype, { constructor: { value: subClass, enumerable: false, writable: true, configurable: true } }); if (superClass) Object.setPrototypeOf ? Object.setPrototypeOf(subClass, superClass) : subClass.__proto__ = superClass; }
		
		var SliceLabel = function (_React$Component) {
		  _inherits(SliceLabel, _React$Component);
		
		  function SliceLabel() {
		    _classCallCheck(this, SliceLabel);
		
		    return _possibleConstructorReturn(this, Object.getPrototypeOf(SliceLabel).apply(this, arguments));
		  }
		
		  _createClass(SliceLabel, [{
		    key: "renderLabelComponent",
		    value: function renderLabelComponent(props, position, label) {
		      var component = props.labels;
		      var style = _victoryCore.Helpers.evaluateStyle((0, _defaults2.default)({}, component.props.style, props.style, { padding: 0 }), this.data);
		      var baseEvents = component && component.props.events ? (0, _defaults2.default)({}, component.props.events, props.events) : props.events;
		      var events = _victoryCore.Helpers.getPartialEvents(baseEvents, props.index, props);
		      var newProps = (0, _assign2.default)({}, events, {
		        x: component.props.x || position[0],
		        y: component.props.y || position[1],
		        datum: props.datum, // Pass data for custom label component to access
		        textAnchor: component.props.textAnchor || "start",
		        verticalAnchor: component.props.verticalAnchor || "middle",
		        text: component.props.text || label,
		        style: style
		      });
		      return _react2.default.cloneElement(component, newProps);
		    }
		  }, {
		    key: "renderVictoryLabel",
		    value: function renderVictoryLabel(props, position, label) {
		      var style = _victoryCore.Helpers.evaluateStyle((0, _assign2.default)({ padding: 0 }, props.style), props.datum);
		      var events = _victoryCore.Helpers.getPartialEvents(props.events, props.index, props);
		      return _react2.default.createElement(_victoryCore.VictoryLabel, {
		        x: position[0],
		        y: position[1],
		        datum: props.datum,
		        style: style,
		        text: label,
		        events: events
		      });
		    }
		  }, {
		    key: "renderLabel",
		    value: function renderLabel(props) {
		      var position = props.positionFunction(props.slice);
		      var dataLabel = props.datum.xName ? "" + props.datum.xName : "" + props.datum.x;
		      var label = props.datum.label ? "" + _victoryCore.Helpers.evaluateProp(props.datum.label, props.datum) : dataLabel;
		      return props.labels && props.labels.props ? this.renderLabelComponent(props, position, label) : this.renderVictoryLabel(props, position, label);
		    }
		  }, {
		    key: "render",
		    value: function render() {
		      return this.renderLabel(this.props);
		    }
		  }]);
		
		  return SliceLabel;
		}(_react2.default.Component);
		
		SliceLabel.propTypes = {
		  index: _react.PropTypes.number,
		  labels: _react.PropTypes.any,
		  positionFunction: _react.PropTypes.func,
		  slice: _react.PropTypes.object,
		  style: _react.PropTypes.object,
		  datum: _react.PropTypes.object,
		  events: _react.PropTypes.object
		};
		exports.default = SliceLabel;

	/***/ }
	/******/ ])
	});
	;
	//# sourceMappingURL=victory.js.map

/***/ },
/* 240 */
/***/ function(module, exports, __webpack_require__) {

	'use strict';

	Object.defineProperty(exports, "__esModule", {
	  value: true
	});

	var _createClass = function () { function defineProperties(target, props) { for (var i = 0; i < props.length; i++) { var descriptor = props[i]; descriptor.enumerable = descriptor.enumerable || false; descriptor.configurable = true; if ("value" in descriptor) descriptor.writable = true; Object.defineProperty(target, descriptor.key, descriptor); } } return function (Constructor, protoProps, staticProps) { if (protoProps) defineProperties(Constructor.prototype, protoProps); if (staticProps) defineProperties(Constructor, staticProps); return Constructor; }; }();

	var _react = __webpack_require__(2);

	var _react2 = _interopRequireDefault(_react);

	var _linechart = __webpack_require__(238);

	var _linechart2 = _interopRequireDefault(_linechart);

	var _barchart = __webpack_require__(241);

	var _barchart2 = _interopRequireDefault(_barchart);

	var _victory = __webpack_require__(239);

	function _interopRequireDefault(obj) { return obj && obj.__esModule ? obj : { default: obj }; }

	function _classCallCheck(instance, Constructor) { if (!(instance instanceof Constructor)) { throw new TypeError("Cannot call a class as a function"); } }

	function _possibleConstructorReturn(self, call) { if (!self) { throw new ReferenceError("this hasn't been initialised - super() hasn't been called"); } return call && (typeof call === "object" || typeof call === "function") ? call : self; }

	function _inherits(subClass, superClass) { if (typeof superClass !== "function" && superClass !== null) { throw new TypeError("Super expression must either be null or a function, not " + typeof superClass); } subClass.prototype = Object.create(superClass && superClass.prototype, { constructor: { value: subClass, enumerable: false, writable: true, configurable: true } }); if (superClass) Object.setPrototypeOf ? Object.setPrototypeOf(subClass, superClass) : subClass.__proto__ = superClass; }

	var SentimentTrends = function (_Component) {
	  _inherits(SentimentTrends, _Component);

	  function SentimentTrends(props) {
	    _classCallCheck(this, SentimentTrends);

	    var _this = _possibleConstructorReturn(this, Object.getPrototypeOf(SentimentTrends).call(this, props));

	    _this.state = {
	      data: _this.props.sentimentData
	    };
	    return _this;
	  }

	  _createClass(SentimentTrends, [{
	    key: 'render',
	    value: function render() {

	      console.log('props:', this.props.sentimentData);

	      if (!this.props.sentimentData) {
	        return _react2.default.createElement(
	          'p',
	          null,
	          'Loading Sentiment Data...'
	        );
	      }

	      return _react2.default.createElement(
	        'section',
	        { className: 'sentiments' },
	        _react2.default.createElement(
	          'div',
	          { className: 'center-content' },
	          _react2.default.createElement(
	            'div',
	            { className: 'row' },
	            _react2.default.createElement(
	              'h2',
	              null,
	              'Consumer/Economic Sentiment - News in Past Two Months'
	            ),
	            _react2.default.createElement(
	              'div',
	              { className: 'col-md-8' },
	              _react2.default.createElement(
	                'div',
	                { className: 'sentiment-chart' },
	                _react2.default.createElement(_barchart2.default, {
	                  data: this.props.sentimentData,
	                  x: 'newsTopic',
	                  y: 'sentimentScore',
	                  height: 300,
	                  width: 500
	                })
	              )
	            ),
	            _react2.default.createElement(
	              'div',
	              { className: 'google-summary col-md-4 card card-block' },
	              _react2.default.createElement(
	                'p',
	                null,
	                'Lorem Ipsum is simply dummy text of the printing and typesetting industry. Lorem Ipsum has been the industry\'s standard dummy text ever since the 1500s, when an unknown printer took a galley of type and scrambled it to make a type specimen book. It has survived not only five centuries, but also the leap into electronic typesetting, remaining essentially unchanged.'
	              )
	            )
	          )
	        )
	      );
	    }
	  }]);

	  return SentimentTrends;
	}(_react.Component);

	exports.default = SentimentTrends;

/***/ },
/* 241 */
/***/ function(module, exports, __webpack_require__) {

	'use strict';

	Object.defineProperty(exports, "__esModule", {
	  value: true
	});

	var _createClass = function () { function defineProperties(target, props) { for (var i = 0; i < props.length; i++) { var descriptor = props[i]; descriptor.enumerable = descriptor.enumerable || false; descriptor.configurable = true; if ("value" in descriptor) descriptor.writable = true; Object.defineProperty(target, descriptor.key, descriptor); } } return function (Constructor, protoProps, staticProps) { if (protoProps) defineProperties(Constructor.prototype, protoProps); if (staticProps) defineProperties(Constructor, staticProps); return Constructor; }; }();

	var _react = __webpack_require__(2);

	var _react2 = _interopRequireDefault(_react);

	var _victory = __webpack_require__(239);

	function _interopRequireDefault(obj) { return obj && obj.__esModule ? obj : { default: obj }; }

	function _defineProperty(obj, key, value) { if (key in obj) { Object.defineProperty(obj, key, { value: value, enumerable: true, configurable: true, writable: true }); } else { obj[key] = value; } return obj; }

	function _classCallCheck(instance, Constructor) { if (!(instance instanceof Constructor)) { throw new TypeError("Cannot call a class as a function"); } }

	function _possibleConstructorReturn(self, call) { if (!self) { throw new ReferenceError("this hasn't been initialised - super() hasn't been called"); } return call && (typeof call === "object" || typeof call === "function") ? call : self; }

	function _inherits(subClass, superClass) { if (typeof superClass !== "function" && superClass !== null) { throw new TypeError("Super expression must either be null or a function, not " + typeof superClass); } subClass.prototype = Object.create(superClass && superClass.prototype, { constructor: { value: subClass, enumerable: false, writable: true, configurable: true } }); if (superClass) Object.setPrototypeOf ? Object.setPrototypeOf(subClass, superClass) : subClass.__proto__ = superClass; }

	var CentralAxis = function (_Component) {
	  _inherits(CentralAxis, _Component);

	  function CentralAxis(props) {
	    _classCallCheck(this, CentralAxis);

	    return _possibleConstructorReturn(this, Object.getPrototypeOf(CentralAxis).call(this, props));
	  }

	  _createClass(CentralAxis, [{
	    key: 'render',
	    value: function render() {
	      var _React$createElement;

	      return(
	        // <div className='bar-chart'>
	        _react2.default.createElement(
	          'svg',
	          { width: 500, height: 350 },
	          _react2.default.createElement(
	            _victory.VictoryChart,
	            (_React$createElement = { horizontal: true,
	              height: 350,
	              width: 500,
	              padding: 40,
	              domain: { x: [-1.2, 1.2], y: [0, 7] },
	              style: {
	                data: { width: 50 },
	                labels: { fontSize: 12 }
	              }
	            }, _defineProperty(_React$createElement, 'padding', {
	              top: 20,
	              bottom: 60,
	              left: 20,
	              right: 20
	            }), _defineProperty(_React$createElement, 'domainPadding', { x: 15 }), _React$createElement),
	            _react2.default.createElement(_victory.VictoryAxis, {
	              label: 'Sentiment',
	              orientation: 'bottom' }),
	            _react2.default.createElement(_victory.VictoryAxis, {
	              domain: { y: [0, 5] },
	              tickValues: [-1, -0.75, -0.5, -.25, 0, .25, .50, .75, 1],
	              style: {
	                labels: { fontSize: 9 },
	                grid: {
	                  stroke: "grey",
	                  strokeWidth: 1
	                },
	                axis: { stroke: "transparent" },
	                ticks: { stroke: "transparent" }
	              } }),
	            _react2.default.createElement(_victory.VictoryBar, { horizontal: true,
	              style: {
	                data: {
	                  width: 17,
	                  labels: { padding: 5, fontSize: 10 },
	                  fill: function fill(data) {
	                    return data.y > 0 ? "gold" : "blue";
	                  }
	                }
	              },
	              data: [{ x: 1, y: -0.51, label: 'EMPLOYMENT' }, { x: 2, y: -0.2, label: 'ECONOMY' }, { x: 3, y: -0.06, label: 'BUSINESS CONDITIONS' }, { x: 4, y: 0.13, label: 'GOLD' }, { x: 5, y: 0.46, label: 'CONSUMER SPENDING' }, { x: 6, y: 0.52, label: 'INCOME' }, { x: 7, y: 0.9, label: 'RESTAURANTS' }]
	            })
	          )
	        )
	        // </div>

	      );
	    }
	  }]);

	  return CentralAxis;
	}(_react.Component);

	exports.default = CentralAxis;

/***/ },
/* 242 */
/***/ function(module, exports, __webpack_require__) {

	'use strict';

	Object.defineProperty(exports, "__esModule", {
	  value: true
	});

	var _react = __webpack_require__(2);

	var _react2 = _interopRequireDefault(_react);

	function _interopRequireDefault(obj) { return obj && obj.__esModule ? obj : { default: obj }; }

	var NewsTrends = function NewsTrends(props) {

	  return(
	    // insert jsx here
	    _react2.default.createElement(
	      'h2',
	      null,
	      'News Chart'
	    )
	  );
	};

	exports.default = NewsTrends;

/***/ },
/* 243 */
/***/ function(module, exports, __webpack_require__) {

	'use strict';

	Object.defineProperty(exports, "__esModule", {
	  value: true
	});

	var _createClass = function () { function defineProperties(target, props) { for (var i = 0; i < props.length; i++) { var descriptor = props[i]; descriptor.enumerable = descriptor.enumerable || false; descriptor.configurable = true; if ("value" in descriptor) descriptor.writable = true; Object.defineProperty(target, descriptor.key, descriptor); } } return function (Constructor, protoProps, staticProps) { if (protoProps) defineProperties(Constructor.prototype, protoProps); if (staticProps) defineProperties(Constructor, staticProps); return Constructor; }; }();

	var _react = __webpack_require__(2);

	var _react2 = _interopRequireDefault(_react);

	var _victory = __webpack_require__(239);

	function _interopRequireDefault(obj) { return obj && obj.__esModule ? obj : { default: obj }; }

	function _classCallCheck(instance, Constructor) { if (!(instance instanceof Constructor)) { throw new TypeError("Cannot call a class as a function"); } }

	function _possibleConstructorReturn(self, call) { if (!self) { throw new ReferenceError("this hasn't been initialised - super() hasn't been called"); } return call && (typeof call === "object" || typeof call === "function") ? call : self; }

	function _inherits(subClass, superClass) { if (typeof superClass !== "function" && superClass !== null) { throw new TypeError("Super expression must either be null or a function, not " + typeof superClass); } subClass.prototype = Object.create(superClass && superClass.prototype, { constructor: { value: subClass, enumerable: false, writable: true, configurable: true } }); if (superClass) Object.setPrototypeOf ? Object.setPrototypeOf(subClass, superClass) : subClass.__proto__ = superClass; }

	var TwitterChart = function (_Component) {
	  _inherits(TwitterChart, _Component);

	  function TwitterChart(props) {
	    _classCallCheck(this, TwitterChart);

	    var _this = _possibleConstructorReturn(this, Object.getPrototypeOf(TwitterChart).call(this, props));

	    _this.state = {
	      data: _this.props.twitterData,
	      currentQuery: 'ford' // may want to add adjustable time interval here
	    };

	    _this.clickHandler = _this.clickHandler.bind(_this);
	    return _this;
	  }

	  _createClass(TwitterChart, [{
	    key: 'clickHandler',
	    value: function clickHandler(event) {
	      this.setState({ currentQuery: event.target.value });
	    }
	  }, {
	    key: 'getStyles',
	    value: function getStyles() {
	      return {
	        parent: {
	          boxSizing: "border-box",
	          display: "block",
	          width: "75%",
	          height: "65%",
	          padding: 20
	        }
	      };
	    }
	  }, {
	    key: 'render',
	    value: function render() {
	      // return (
	      //     <section className="twitter-component">
	      //       <div className="row">
	      //         <div className="col-md-8">
	      //           <VictoryChart />
	      //         </div>
	      //         <div className="trends col-md-4">
	      //           <div className="row">
	      //             <article className="orange col-sm-6">
	      //               <span className="">796</span>
	      //               <p>Tweets around the world</p>
	      //             </article>
	      //             <article className="red col-sm-6">
	      //               <span className="">Sad</span>
	      //               <p>Overall feeling</p>
	      //             </article>
	      //           </div>

	      //           <div className="row">
	      //             <article className="brown col-sm-6">
	      //               <p>Some interesting content</p>
	      //               <span className=""></span>
	      //             </article>
	      //             <article className="gray col-sm-6">
	      //               <p>Some interesting content</p>
	      //               <span className=""></span>
	      //             </article>
	      //           </div>
	      //         </div>
	      //       </div>
	      //     </section>

	      // );

	      if (!this.props.twitterData) {
	        return _react2.default.createElement(
	          'div',
	          null,
	          'Loading Twitter data for detail view component!'
	        );
	      }

	      var currentQuery = this.state.currentQuery;
	      var company = this.props.twitterData.filter(function (obj) {
	        return obj.keyword === currentQuery ? true : false;
	      })[0];

	      var data = company.data.map(function (obj, index, array) {
	        return { time: index,
	          numTweets: obj.numTweets || 0,
	          sentimentAverage: obj.sentimentAverage * 5 || 0 };
	      });

	      var styles = this.getStyles();
	      var chart = _react2.default.createElement(
	        _victory.VictoryChart,
	        { animate: { duration: 5000 } },
	        _react2.default.createElement(_victory.VictoryArea, {
	          interpolation: 'cardinal',
	          style: {
	            data: { fill: "tomato" }
	          },
	          data: data.slice(-20),
	          x: "time",
	          y: "numTweets"
	        }),
	        _react2.default.createElement(_victory.VictoryLine, {
	          interpolation: 'cardinal',
	          style: {
	            data: {
	              stroke: "cornflowerblue",
	              strokeWidth: 5
	            },
	            labels: { fontSize: 8 }
	          },
	          data: data.slice(-20),
	          x: "time",
	          y: "sentimentAverage",
	          label: 'Sentiment Score',
	          standalone: false,
	          fill: "teal"
	        })
	      );

	      return _react2.default.createElement(
	        'div',
	        null,
	        _react2.default.createElement(
	          'div',
	          null,
	          'Twitter Detail Component'
	        ),
	        _react2.default.createElement(
	          'div',
	          null,
	          chart
	        ),
	        _react2.default.createElement(
	          'div',
	          null,
	          _react2.default.createElement(
	            'button',
	            { onClick: this.clickHandler, value: 'nintendo' },
	            'nintendo'
	          ),
	          _react2.default.createElement(
	            'button',
	            { onClick: this.clickHandler, value: 'google' },
	            'google'
	          ),
	          _react2.default.createElement(
	            'button',
	            { onClick: this.clickHandler, value: 'disney' },
	            'disney'
	          ),
	          _react2.default.createElement(
	            'button',
	            { onClick: this.clickHandler, value: 'ford' },
	            'ford'
	          ),
	          _react2.default.createElement(
	            'button',
	            { onClick: this.clickHandler, value: 'genentech' },
	            'genentech'
	          ),
	          _react2.default.createElement(
	            'button',
	            { onClick: this.clickHandler, value: 'negative' },
	            'negative'
	          ),
	          _react2.default.createElement(
	            'button',
	            { onClick: this.clickHandler, value: 'markets' },
	            'markets'
	          ),
	          _react2.default.createElement(
	            'button',
	            { onClick: this.clickHandler, value: 'gold' },
	            'gold'
	          )
	        )
	      );
	    }
	  }]);

	  return TwitterChart;
	}(_react.Component);

	exports.default = TwitterChart;

/***/ },
/* 244 */
/***/ function(module, exports, __webpack_require__) {

	'use strict';

	Object.defineProperty(exports, "__esModule", {
	  value: true
	});

	var _createClass = function () { function defineProperties(target, props) { for (var i = 0; i < props.length; i++) { var descriptor = props[i]; descriptor.enumerable = descriptor.enumerable || false; descriptor.configurable = true; if ("value" in descriptor) descriptor.writable = true; Object.defineProperty(target, descriptor.key, descriptor); } } return function (Constructor, protoProps, staticProps) { if (protoProps) defineProperties(Constructor.prototype, protoProps); if (staticProps) defineProperties(Constructor, staticProps); return Constructor; }; }();

	var _react = __webpack_require__(2);

	var _react2 = _interopRequireDefault(_react);

	var _victory = __webpack_require__(239);

	function _interopRequireDefault(obj) { return obj && obj.__esModule ? obj : { default: obj }; }

	function _classCallCheck(instance, Constructor) { if (!(instance instanceof Constructor)) { throw new TypeError("Cannot call a class as a function"); } }

	function _possibleConstructorReturn(self, call) { if (!self) { throw new ReferenceError("this hasn't been initialised - super() hasn't been called"); } return call && (typeof call === "object" || typeof call === "function") ? call : self; }

	function _inherits(subClass, superClass) { if (typeof superClass !== "function" && superClass !== null) { throw new TypeError("Super expression must either be null or a function, not " + typeof superClass); } subClass.prototype = Object.create(superClass && superClass.prototype, { constructor: { value: subClass, enumerable: false, writable: true, configurable: true } }); if (superClass) Object.setPrototypeOf ? Object.setPrototypeOf(subClass, superClass) : subClass.__proto__ = superClass; }

	var TwitterLiveSummary = function (_Component) {
	  _inherits(TwitterLiveSummary, _Component);

	  function TwitterLiveSummary(props) {
	    _classCallCheck(this, TwitterLiveSummary);

	    var _this = _possibleConstructorReturn(this, Object.getPrototypeOf(TwitterLiveSummary).call(this, props));

	    _this.state = {
	      intervals: -1 // units of time from tail to look back and display, decided by user
	    };

	    _this.clickHandler = _this.clickHandler.bind(_this);
	    return _this;
	  }

	  _createClass(TwitterLiveSummary, [{
	    key: 'clickHandler',
	    value: function clickHandler(event) {
	      this.setState({ intervals: +event.target.value });
	    }
	  }, {
	    key: 'render',
	    value: function render() {

	      if (!this.props.twitterData) {
	        return _react2.default.createElement(
	          'div',
	          null,
	          'Loading Twitter Volume & Sentiment data...'
	        );
	      }
	      // pull sentiment and volume data from x most recent entries, where x = intervals
	      var intervals = this.state.intervals;
	      var data = this.props.twitterData.map(function (obj, index, collection) {
	        return { x: index + 1,

	          volume: +(obj.data.slice(intervals).reduce(function (a, b) {
	            return a + b.numTweets;
	          }, 0) / -intervals) || 0,

	          label: obj.keyword,

	          sentiment: +(obj.data.slice(intervals).reduce(function (a, b) {
	            return a + b.sentimentAverage;
	          }, 0) / -intervals) || 0 };
	      });

	      var volumeChart = _react2.default.createElement(
	        _victory.VictoryChart,
	        {
	          animate: { duration: 5000 } },
	        _react2.default.createElement(_victory.VictoryAxis, {
	          orientation: 'bottom',
	          tickValues: data.map(function (obj) {
	            return '';
	          }),
	          style: {
	            ticks: { stroke: "transparent" }
	          }
	        }),
	        _react2.default.createElement(_victory.VictoryAxis, { dependentAxis: true,
	          label: "Tweets per Minute",
	          style: {
	            grid: {
	              stroke: "grey",
	              strokeWidth: 1
	            },
	            axis: { stroke: "transparent" },
	            ticks: { stroke: "transparent" }
	          } }),
	        _react2.default.createElement(_victory.VictoryBar, {
	          height: 300,
	          style: {
	            labels: { fontSize: 10 }
	          },
	          data: [{ x: 0.5, y: 0 }, { x: 1, y: data[0].volume, fill: "gold", label: data[0].label }, { x: 2, y: data[1].volume, fill: "orange", label: data[1].label }, { x: 3, y: data[2].volume, fill: "tomato", label: data[2].label }, { x: 4, y: data[3].volume, fill: "pink", label: data[3].label }, { x: 5, y: data[4].volume, fill: "magenta", label: data[4].label }, { x: 6, y: data[5].volume, fill: "purple", label: data[5].label }, { x: 7, y: data[6].volume, fill: "blue", label: data[6].label }, { x: 8, y: data[7].volume, fill: "teal", label: data[7].label }, { x: 8.5, y: 0 }]
	        })
	      );

	      var sentimentChart = _react2.default.createElement(
	        _victory.VictoryChart,
	        { animate: { duration: 5000 } },
	        _react2.default.createElement(_victory.VictoryAxis, {
	          orientation: 'bottom',
	          tickValues: data.map(function (obj) {
	            return '';
	          }),
	          style: {
	            axis: { stroke: "transparent" },
	            ticks: { stroke: "transparent" }
	          }
	        }),
	        _react2.default.createElement(_victory.VictoryAxis, { dependentAxis: true,
	          tickValues: [-3, -2, -1, 0, 1, 2, 3],
	          label: "Sentiment Score",
	          style: {
	            grid: {
	              stroke: "grey",
	              strokeWidth: 1
	            },
	            axis: { stroke: "transparent" },
	            ticks: { stroke: "transparent" }
	          } }),
	        _react2.default.createElement(_victory.VictoryBar, {
	          height: 300,
	          style: {
	            labels: { fontSize: 10 }
	          },
	          data: [{ x: .5, y: 0 }, { x: 1, y: data[0].sentiment, fill: "gold", label: data[0].label }, { x: 2, y: data[1].sentiment, fill: "orange", label: data[1].label }, { x: 3, y: data[2].sentiment, fill: "tomato", label: data[2].label }, { x: 4, y: data[3].sentiment, fill: "pink", label: data[3].label }, { x: 5, y: data[4].sentiment, fill: "magenta", label: data[4].label }, { x: 6, y: data[5].sentiment, fill: "purple", label: data[5].label }, { x: 7, y: data[6].sentiment, fill: "blue", label: data[6].label }, { x: 8, y: data[7].sentiment, fill: "teal", label: data[7].label }, { x: 8.5, y: 0 }]
	        })
	      );

	      return _react2.default.createElement(
	        'div',
	        { className: 'twitter-live-summary' },
	        console.log('RENDERING SOME STUFF'),
	        _react2.default.createElement(
	          'h4',
	          null,
	          'TwitterLiveSummary Component (update choices once chron job enabled)'
	        ),
	        volumeChart,
	        _react2.default.createElement(
	          'div',
	          null,
	          _react2.default.createElement(
	            'button',
	            { onClick: this.clickHandler, value: '-1' },
	            '1 Minute'
	          ),
	          _react2.default.createElement(
	            'button',
	            { onClick: this.clickHandler, value: '-3' },
	            '3 Minutes'
	          ),
	          _react2.default.createElement(
	            'button',
	            { onClick: this.clickHandler, value: '-5' },
	            '5 Minutes'
	          ),
	          _react2.default.createElement(
	            'button',
	            { onClick: this.clickHandler, value: '-10' },
	            '10 Minutes'
	          )
	        ),
	        sentimentChart
	      );
	    }
	  }]);

	  return TwitterLiveSummary;
	}(_react.Component);

	exports.default = TwitterLiveSummary;

/***/ },
/* 245 */
/***/ function(module, exports, __webpack_require__) {

	'use strict';

	Object.defineProperty(exports, "__esModule", {
	  value: true
	});

	var _createClass = function () { function defineProperties(target, props) { for (var i = 0; i < props.length; i++) { var descriptor = props[i]; descriptor.enumerable = descriptor.enumerable || false; descriptor.configurable = true; if ("value" in descriptor) descriptor.writable = true; Object.defineProperty(target, descriptor.key, descriptor); } } return function (Constructor, protoProps, staticProps) { if (protoProps) defineProperties(Constructor.prototype, protoProps); if (staticProps) defineProperties(Constructor, staticProps); return Constructor; }; }();

	var _react = __webpack_require__(2);

	var _react2 = _interopRequireDefault(_react);

	function _interopRequireDefault(obj) { return obj && obj.__esModule ? obj : { default: obj }; }

	function _classCallCheck(instance, Constructor) { if (!(instance instanceof Constructor)) { throw new TypeError("Cannot call a class as a function"); } }

	function _possibleConstructorReturn(self, call) { if (!self) { throw new ReferenceError("this hasn't been initialised - super() hasn't been called"); } return call && (typeof call === "object" || typeof call === "function") ? call : self; }

	function _inherits(subClass, superClass) { if (typeof superClass !== "function" && superClass !== null) { throw new TypeError("Super expression must either be null or a function, not " + typeof superClass); } subClass.prototype = Object.create(superClass && superClass.prototype, { constructor: { value: subClass, enumerable: false, writable: true, configurable: true } }); if (superClass) Object.setPrototypeOf ? Object.setPrototypeOf(subClass, superClass) : subClass.__proto__ = superClass; }

	// This component looks at the most recent time interval 
	// and renders an image based on + - neutral sentiment

	// Twitter is feeling 
	//   {image}
	// about {search} right this minute

	var TwitterLive = function (_Component) {
	  _inherits(TwitterLive, _Component);

	  function TwitterLive(props) {
	    _classCallCheck(this, TwitterLive);

	    var _this = _possibleConstructorReturn(this, Object.getPrototypeOf(TwitterLive).call(this, props));

	    _this.state = {
	      data: _this.props.twitterData, // score of most recent interval...use same data as twitter.component,,
	      currentQuery: 'ford' // search query or item chosen from dropdown
	    };

	    _this.clickHandler = _this.clickHandler.bind(_this);
	    return _this;
	  }

	  _createClass(TwitterLive, [{
	    key: 'clickHandler',
	    value: function clickHandler(event) {
	      this.setState({ currentQuery: event.target.value });
	    }
	  }, {
	    key: 'render',
	    value: function render() {
	      if (!this.props.twitterData) {
	        return _react2.default.createElement(
	          'div',
	          null,
	          'Loading Twitter Volume data...for Bullish/Bearish/Neutral component'
	        );
	      }

	      var currentQuery = this.state.currentQuery;
	      var company = this.props.twitterData.filter(function (obj) {
	        return obj.keyword === currentQuery ? true : false;
	      })[0];

	      var sentiment = company.data[company.data.length - 1].sentimentAverage;
	      var numTweets = company.data[company.data.length - 1].numTweets;

	      // Idea: create smaller trailing graphics -- neutral Bullish BULLISH
	      // var sentiment2 = company.data[company.data.length - 2].sentimentAverage;
	      // var numTweets2 = company.data[company.data.length - 2].numTweets;
	      // var sentiment3 = company.data[company.data.length - 3].sentimentAverage;
	      // var numTweets3 = company.data[company.data.length - 3].numTweets;

	      var graphic;
	      if (sentiment > 0.5) {
	        // bullish
	        graphic = _react2.default.createElement('img', { src: 'http://bit.ly/2adciRq', className: 'img-responsive' });
	      } else if (sentiment < -0.5) {
	        // bearish
	        graphic = _react2.default.createElement('img', { src: 'http://bit.ly/2a0Yese', className: 'img-responsive' });
	      } else {
	        // neutral
	        graphic = _react2.default.createElement('img', { src: 'http://bit.ly/2a0hubG', className: 'img-responsive' });
	      }

	      return _react2.default.createElement(
	        'div',
	        { className: 'twitter-live' },
	        _react2.default.createElement(
	          'h2',
	          null,
	          'Twitter Live Snapshot (Style Me and get rid of hard coding)'
	        ),
	        _react2.default.createElement(
	          'h4',
	          null,
	          '--------------------------------------------------------'
	        ),
	        graphic,
	        _react2.default.createElement(
	          'h4',
	          null,
	          '---',
	          numTweets,
	          ' tweets @ ',
	          Math.round(sentiment * 100) / 100,
	          ' average sentiment---'
	        ),
	        _react2.default.createElement(
	          'div',
	          null,
	          _react2.default.createElement(
	            'button',
	            { onClick: this.clickHandler, value: 'nintendo' },
	            'nintendo'
	          ),
	          _react2.default.createElement(
	            'button',
	            { onClick: this.clickHandler, value: 'google' },
	            'google'
	          ),
	          _react2.default.createElement(
	            'button',
	            { onClick: this.clickHandler, value: 'disney' },
	            'disney'
	          ),
	          _react2.default.createElement(
	            'button',
	            { onClick: this.clickHandler, value: 'ford' },
	            'ford'
	          ),
	          _react2.default.createElement(
	            'button',
	            { onClick: this.clickHandler, value: 'genentech' },
	            'genentech'
	          ),
	          _react2.default.createElement(
	            'button',
	            { onClick: this.clickHandler, value: 'negative' },
	            'negative'
	          ),
	          _react2.default.createElement(
	            'button',
	            { onClick: this.clickHandler, value: 'markets' },
	            'markets'
	          ),
	          _react2.default.createElement(
	            'button',
	            { onClick: this.clickHandler, value: 'gold' },
	            'gold'
	          )
	        ),
	        _react2.default.createElement(
	          'h4',
	          null,
	          '--------------FIX/STYLE ME-----------------------------'
	        )
	      );
	    }
	  }]);

	  return TwitterLive;
	}(_react.Component);

	exports.default = TwitterLive;

/***/ },
/* 246 */
/***/ function(module, exports, __webpack_require__) {

	'use strict';

	Object.defineProperty(exports, "__esModule", {
	  value: true
	});

	var _createClass = function () { function defineProperties(target, props) { for (var i = 0; i < props.length; i++) { var descriptor = props[i]; descriptor.enumerable = descriptor.enumerable || false; descriptor.configurable = true; if ("value" in descriptor) descriptor.writable = true; Object.defineProperty(target, descriptor.key, descriptor); } } return function (Constructor, protoProps, staticProps) { if (protoProps) defineProperties(Constructor.prototype, protoProps); if (staticProps) defineProperties(Constructor, staticProps); return Constructor; }; }();

	var _react = __webpack_require__(2);

	var _react2 = _interopRequireDefault(_react);

	var _googletrends = __webpack_require__(237);

	var _googletrends2 = _interopRequireDefault(_googletrends);

	var _sentiment = __webpack_require__(240);

	var _sentiment2 = _interopRequireDefault(_sentiment);

	var _twitter = __webpack_require__(243);

	var _twitter2 = _interopRequireDefault(_twitter);

	function _interopRequireDefault(obj) { return obj && obj.__esModule ? obj : { default: obj }; }

	function _classCallCheck(instance, Constructor) { if (!(instance instanceof Constructor)) { throw new TypeError("Cannot call a class as a function"); } }

	function _possibleConstructorReturn(self, call) { if (!self) { throw new ReferenceError("this hasn't been initialised - super() hasn't been called"); } return call && (typeof call === "object" || typeof call === "function") ? call : self; }

	function _inherits(subClass, superClass) { if (typeof superClass !== "function" && superClass !== null) { throw new TypeError("Super expression must either be null or a function, not " + typeof superClass); } subClass.prototype = Object.create(superClass && superClass.prototype, { constructor: { value: subClass, enumerable: false, writable: true, configurable: true } }); if (superClass) Object.setPrototypeOf ? Object.setPrototypeOf(subClass, superClass) : subClass.__proto__ = superClass; }

	var CompanyComponent = function (_Component) {
	  _inherits(CompanyComponent, _Component);

	  function CompanyComponent(props) {
	    _classCallCheck(this, CompanyComponent);

	    return _possibleConstructorReturn(this, Object.getPrototypeOf(CompanyComponent).call(this, props));
	  }

	  _createClass(CompanyComponent, [{
	    key: 'render',
	    value: function render() {

	      return _react2.default.createElement(
	        'div',
	        { className: 'container' },
	        _react2.default.createElement(
	          'h2',
	          null,
	          ' Company View'
	        ),
	        _react2.default.createElement(
	          'div',
	          { className: 'row' },
	          _react2.default.createElement(
	            'div',
	            { className: 'section-headline col-md-12' },
	            _react2.default.createElement(
	              'h3',
	              { className: 'ta-center' },
	              _react2.default.createElement('i', { className: 'fa fa-twitter', 'aria-hidden': 'true' }),
	              'What\'s Tweeting'
	            )
	          )
	        ),
	        _react2.default.createElement(
	          'div',
	          { className: 'row' },
	          _react2.default.createElement(
	            'div',
	            { className: 'section-headline col-md-12' },
	            _react2.default.createElement(
	              'h3',
	              { className: 'ta-center' },
	              'What\'s Being Searched'
	            )
	          )
	        ),
	        _react2.default.createElement(
	          'div',
	          { className: 'row' },
	          _react2.default.createElement(
	            'div',
	            { className: 'section-headline col-md-12' },
	            _react2.default.createElement(
	              'h3',
	              { className: 'ta-center' },
	              'Market Sentiment'
	            )
	          )
	        )
	      );
	    }
	  }]);

	  return CompanyComponent;
	}(_react.Component);

	exports.default = CompanyComponent;

/***/ },
/* 247 */
/***/ function(module, exports, __webpack_require__) {

	'use strict';

	Object.defineProperty(exports, "__esModule", {
	  value: true
	});

	var _createClass = function () { function defineProperties(target, props) { for (var i = 0; i < props.length; i++) { var descriptor = props[i]; descriptor.enumerable = descriptor.enumerable || false; descriptor.configurable = true; if ("value" in descriptor) descriptor.writable = true; Object.defineProperty(target, descriptor.key, descriptor); } } return function (Constructor, protoProps, staticProps) { if (protoProps) defineProperties(Constructor.prototype, protoProps); if (staticProps) defineProperties(Constructor, staticProps); return Constructor; }; }();

	var _react = __webpack_require__(2);

	var _react2 = _interopRequireDefault(_react);

	var _reactBootstrap = __webpack_require__(248);

	function _interopRequireDefault(obj) { return obj && obj.__esModule ? obj : { default: obj }; }

	function _classCallCheck(instance, Constructor) { if (!(instance instanceof Constructor)) { throw new TypeError("Cannot call a class as a function"); } }

	function _possibleConstructorReturn(self, call) { if (!self) { throw new ReferenceError("this hasn't been initialised - super() hasn't been called"); } return call && (typeof call === "object" || typeof call === "function") ? call : self; }

	function _inherits(subClass, superClass) { if (typeof superClass !== "function" && superClass !== null) { throw new TypeError("Super expression must either be null or a function, not " + typeof superClass); } subClass.prototype = Object.create(superClass && superClass.prototype, { constructor: { value: subClass, enumerable: false, writable: true, configurable: true } }); if (superClass) Object.setPrototypeOf ? Object.setPrototypeOf(subClass, superClass) : subClass.__proto__ = superClass; }

	var NavBar = function (_Component) {
	  _inherits(NavBar, _Component);

	  function NavBar(props) {
	    _classCallCheck(this, NavBar);

	    var _this = _possibleConstructorReturn(this, Object.getPrototypeOf(NavBar).call(this, props));

	    _this.handleClick = _this.handleClick.bind(_this);
	    return _this;
	  }

	  _createClass(NavBar, [{
	    key: 'handleClick',
	    value: function handleClick(company) {
	      this.props.selectCompany(company);
	    }
	  }, {
	    key: 'render',
	    value: function render() {

	      return _react2.default.createElement(
	        'nav',
	        { className: 'navbar navbar-fixed-top navbar-dark red bg-primary' },
	        _react2.default.createElement(
	          'button',
	          { className: 'navbar-toggler hidden-sm-up', type: 'button', 'data-toggle': 'collapse', 'data-target': '#collapseEx2' },
	          _react2.default.createElement('i', { className: 'fa fa-bars' })
	        ),
	        _react2.default.createElement(
	          'div',
	          { className: 'container' },
	          _react2.default.createElement(
	            'div',
	            { className: 'collapse navbar-toggleable-xs', id: 'collapseEx2' },
	            _react2.default.createElement(
	              'a',
	              { className: 'navbar-brand', href: '/' },
	              'MAINSTREET ANALYTICS'
	            ),
	            _react2.default.createElement(
	              'ul',
	              { className: 'nav navbar-nav' },
	              _react2.default.createElement('li', { className: 'nav-item' })
	            ),
	            _react2.default.createElement(
	              'form',
	              { className: 'form-inline' },
	              _react2.default.createElement('input', { className: 'form-control', type: 'text', placeholder: 'Search Company' })
	            ),
	            _react2.default.createElement(
	              _reactBootstrap.ButtonToolbar,
	              null,
	              _react2.default.createElement(
	                _reactBootstrap.DropdownButton,
	                { title: 'Select Company', id: 'dropdown-size-medium' },
	                _react2.default.createElement(
	                  _reactBootstrap.MenuItem,
	                  { onSelect: this.handleClick, eventKey: 'Nintendo' },
	                  'Nintendo'
	                ),
	                _react2.default.createElement(
	                  _reactBootstrap.MenuItem,
	                  { onSelect: this.handleClick, eventKey: 'Disney' },
	                  'Disney'
	                ),
	                _react2.default.createElement(
	                  _reactBootstrap.MenuItem,
	                  { onSelect: this.handleClick, eventKey: 'Ford' },
	                  'Ford'
	                ),
	                _react2.default.createElement(_reactBootstrap.MenuItem, { divider: true }),
	                _react2.default.createElement(
	                  _reactBootstrap.MenuItem,
	                  { onSelect: this.handleClick, eventKey: 'Google' },
	                  'Google'
	                ),
	                _react2.default.createElement(
	                  _reactBootstrap.MenuItem,
	                  { onSelect: this.handleClick, eventKey: 'Genentech' },
	                  'Genentech'
	                )
	              )
	            )
	          )
	        )
	      );
	    }
	  }]);

	  return NavBar;
	}(_react.Component);

	exports.default = NavBar;

/***/ },
/* 248 */
/***/ function(module, exports, __webpack_require__) {

	'use strict';

	var _interopRequireDefault = __webpack_require__(249)['default'];

	var _interopRequireWildcard = __webpack_require__(251)['default'];

	exports.__esModule = true;

	var _Accordion2 = __webpack_require__(253);

	var _Accordion3 = _interopRequireDefault(_Accordion2);

	exports.Accordion = _Accordion3['default'];

	var _Alert2 = __webpack_require__(349);

	var _Alert3 = _interopRequireDefault(_Alert2);

	exports.Alert = _Alert3['default'];

	var _Badge2 = __webpack_require__(353);

	var _Badge3 = _interopRequireDefault(_Badge2);

	exports.Badge = _Badge3['default'];

	var _Breadcrumb2 = __webpack_require__(354);

	var _Breadcrumb3 = _interopRequireDefault(_Breadcrumb2);

	exports.Breadcrumb = _Breadcrumb3['default'];

	var _BreadcrumbItem2 = __webpack_require__(355);

	var _BreadcrumbItem3 = _interopRequireDefault(_BreadcrumbItem2);

	exports.BreadcrumbItem = _BreadcrumbItem3['default'];

	var _Button2 = __webpack_require__(359);

	var _Button3 = _interopRequireDefault(_Button2);

	exports.Button = _Button3['default'];

	var _ButtonGroup2 = __webpack_require__(360);

	var _ButtonGroup3 = _interopRequireDefault(_ButtonGroup2);

	exports.ButtonGroup = _ButtonGroup3['default'];

	var _ButtonToolbar2 = __webpack_require__(362);

	var _ButtonToolbar3 = _interopRequireDefault(_ButtonToolbar2);

	exports.ButtonToolbar = _ButtonToolbar3['default'];

	var _Carousel2 = __webpack_require__(363);

	var _Carousel3 = _interopRequireDefault(_Carousel2);

	exports.Carousel = _Carousel3['default'];

	var _CarouselItem2 = __webpack_require__(365);

	var _CarouselItem3 = _interopRequireDefault(_CarouselItem2);

	exports.CarouselItem = _CarouselItem3['default'];

	var _Checkbox2 = __webpack_require__(368);

	var _Checkbox3 = _interopRequireDefault(_Checkbox2);

	exports.Checkbox = _Checkbox3['default'];

	var _Clearfix2 = __webpack_require__(369);

	var _Clearfix3 = _interopRequireDefault(_Clearfix2);

	exports.Clearfix = _Clearfix3['default'];

	var _ControlLabel2 = __webpack_require__(371);

	var _ControlLabel3 = _interopRequireDefault(_ControlLabel2);

	exports.ControlLabel = _ControlLabel3['default'];

	var _Col2 = __webpack_require__(372);

	var _Col3 = _interopRequireDefault(_Col2);

	exports.Col = _Col3['default'];

	var _Collapse2 = __webpack_require__(373);

	var _Collapse3 = _interopRequireDefault(_Collapse2);

	exports.Collapse = _Collapse3['default'];

	var _Dropdown2 = __webpack_require__(386);

	var _Dropdown3 = _interopRequireDefault(_Dropdown2);

	exports.Dropdown = _Dropdown3['default'];

	var _DropdownButton2 = __webpack_require__(412);

	var _DropdownButton3 = _interopRequireDefault(_DropdownButton2);

	exports.DropdownButton = _DropdownButton3['default'];

	var _Fade2 = __webpack_require__(414);

	var _Fade3 = _interopRequireDefault(_Fade2);

	exports.Fade = _Fade3['default'];

	var _Form2 = __webpack_require__(415);

	var _Form3 = _interopRequireDefault(_Form2);

	exports.Form = _Form3['default'];

	var _FormControl2 = __webpack_require__(416);

	var _FormControl3 = _interopRequireDefault(_FormControl2);

	exports.FormControl = _FormControl3['default'];

	var _FormGroup2 = __webpack_require__(419);

	var _FormGroup3 = _interopRequireDefault(_FormGroup2);

	exports.FormGroup = _FormGroup3['default'];

	var _Glyphicon2 = __webpack_require__(367);

	var _Glyphicon3 = _interopRequireDefault(_Glyphicon2);

	exports.Glyphicon = _Glyphicon3['default'];

	var _Grid2 = __webpack_require__(420);

	var _Grid3 = _interopRequireDefault(_Grid2);

	exports.Grid = _Grid3['default'];

	var _HelpBlock2 = __webpack_require__(421);

	var _HelpBlock3 = _interopRequireDefault(_HelpBlock2);

	exports.HelpBlock = _HelpBlock3['default'];

	var _Image2 = __webpack_require__(422);

	var _Image3 = _interopRequireDefault(_Image2);

	exports.Image = _Image3['default'];

	var _InputGroup2 = __webpack_require__(423);

	var _InputGroup3 = _interopRequireDefault(_InputGroup2);

	exports.InputGroup = _InputGroup3['default'];

	var _Jumbotron2 = __webpack_require__(426);

	var _Jumbotron3 = _interopRequireDefault(_Jumbotron2);

	exports.Jumbotron = _Jumbotron3['default'];

	var _Label2 = __webpack_require__(427);

	var _Label3 = _interopRequireDefault(_Label2);

	exports.Label = _Label3['default'];

	var _ListGroup2 = __webpack_require__(428);

	var _ListGroup3 = _interopRequireDefault(_ListGroup2);

	exports.ListGroup = _ListGroup3['default'];

	var _ListGroupItem2 = __webpack_require__(429);

	var _ListGroupItem3 = _interopRequireDefault(_ListGroupItem2);

	exports.ListGroupItem = _ListGroupItem3['default'];

	var _Media2 = __webpack_require__(430);

	var _Media3 = _interopRequireDefault(_Media2);

	exports.Media = _Media3['default'];

	var _MenuItem2 = __webpack_require__(437);

	var _MenuItem3 = _interopRequireDefault(_MenuItem2);

	exports.MenuItem = _MenuItem3['default'];

	var _Modal2 = __webpack_require__(438);

	var _Modal3 = _interopRequireDefault(_Modal2);

	exports.Modal = _Modal3['default'];

	var _ModalBody2 = __webpack_require__(456);

	var _ModalBody3 = _interopRequireDefault(_ModalBody2);

	exports.ModalBody = _ModalBody3['default'];

	var _ModalFooter2 = __webpack_require__(458);

	var _ModalFooter3 = _interopRequireDefault(_ModalFooter2);

	exports.ModalFooter = _ModalFooter3['default'];

	var _ModalHeader2 = __webpack_require__(459);

	var _ModalHeader3 = _interopRequireDefault(_ModalHeader2);

	exports.ModalHeader = _ModalHeader3['default'];

	var _ModalTitle2 = __webpack_require__(460);

	var _ModalTitle3 = _interopRequireDefault(_ModalTitle2);

	exports.ModalTitle = _ModalTitle3['default'];

	var _Nav2 = __webpack_require__(461);

	var _Nav3 = _interopRequireDefault(_Nav2);

	exports.Nav = _Nav3['default'];

	var _Navbar2 = __webpack_require__(462);

	var _Navbar3 = _interopRequireDefault(_Navbar2);

	exports.Navbar = _Navbar3['default'];

	var _NavbarBrand2 = __webpack_require__(463);

	var _NavbarBrand3 = _interopRequireDefault(_NavbarBrand2);

	exports.NavbarBrand = _NavbarBrand3['default'];

	var _NavDropdown2 = __webpack_require__(467);

	var _NavDropdown3 = _interopRequireDefault(_NavDropdown2);

	exports.NavDropdown = _NavDropdown3['default'];

	var _NavItem2 = __webpack_require__(468);

	var _NavItem3 = _interopRequireDefault(_NavItem2);

	exports.NavItem = _NavItem3['default'];

	var _Overlay2 = __webpack_require__(469);

	var _Overlay3 = _interopRequireDefault(_Overlay2);

	exports.Overlay = _Overlay3['default'];

	var _OverlayTrigger2 = __webpack_require__(478);

	var _OverlayTrigger3 = _interopRequireDefault(_OverlayTrigger2);

	exports.OverlayTrigger = _OverlayTrigger3['default'];

	var _PageHeader2 = __webpack_require__(479);

	var _PageHeader3 = _interopRequireDefault(_PageHeader2);

	exports.PageHeader = _PageHeader3['default'];

	var _PageItem2 = __webpack_require__(480);

	var _PageItem3 = _interopRequireDefault(_PageItem2);

	exports.PageItem = _PageItem3['default'];

	var _Pager2 = __webpack_require__(483);

	var _Pager3 = _interopRequireDefault(_Pager2);

	exports.Pager = _Pager3['default'];

	var _Pagination2 = __webpack_require__(484);

	var _Pagination3 = _interopRequireDefault(_Pagination2);

	exports.Pagination = _Pagination3['default'];

	var _Panel2 = __webpack_require__(486);

	var _Panel3 = _interopRequireDefault(_Panel2);

	exports.Panel = _Panel3['default'];

	var _PanelGroup2 = __webpack_require__(337);

	var _PanelGroup3 = _interopRequireDefault(_PanelGroup2);

	exports.PanelGroup = _PanelGroup3['default'];

	var _Popover2 = __webpack_require__(487);

	var _Popover3 = _interopRequireDefault(_Popover2);

	exports.Popover = _Popover3['default'];

	var _ProgressBar2 = __webpack_require__(488);

	var _ProgressBar3 = _interopRequireDefault(_ProgressBar2);

	exports.ProgressBar = _ProgressBar3['default'];

	var _Radio2 = __webpack_require__(489);

	var _Radio3 = _interopRequireDefault(_Radio2);

	exports.Radio = _Radio3['default'];

	var _ResponsiveEmbed2 = __webpack_require__(490);

	var _ResponsiveEmbed3 = _interopRequireDefault(_ResponsiveEmbed2);

	exports.ResponsiveEmbed = _ResponsiveEmbed3['default'];

	var _Row2 = __webpack_require__(491);

	var _Row3 = _interopRequireDefault(_Row2);

	exports.Row = _Row3['default'];

	var _SafeAnchor2 = __webpack_require__(356);

	var _SafeAnchor3 = _interopRequireDefault(_SafeAnchor2);

	exports.SafeAnchor = _SafeAnchor3['default'];

	var _SplitButton2 = __webpack_require__(492);

	var _SplitButton3 = _interopRequireDefault(_SplitButton2);

	exports.SplitButton = _SplitButton3['default'];

	var _Tab2 = __webpack_require__(494);

	var _Tab3 = _interopRequireDefault(_Tab2);

	exports.Tab = _Tab3['default'];

	var _TabContainer2 = __webpack_require__(495);

	var _TabContainer3 = _interopRequireDefault(_TabContainer2);

	exports.TabContainer = _TabContainer3['default'];

	var _TabContent2 = __webpack_require__(496);

	var _TabContent3 = _interopRequireDefault(_TabContent2);

	exports.TabContent = _TabContent3['default'];

	var _Table2 = __webpack_require__(498);

	var _Table3 = _interopRequireDefault(_Table2);

	exports.Table = _Table3['default'];

	var _TabPane2 = __webpack_require__(497);

	var _TabPane3 = _interopRequireDefault(_TabPane2);

	exports.TabPane = _TabPane3['default'];

	var _Tabs2 = __webpack_require__(499);

	var _Tabs3 = _interopRequireDefault(_Tabs2);

	exports.Tabs = _Tabs3['default'];

	var _Thumbnail2 = __webpack_require__(500);

	var _Thumbnail3 = _interopRequireDefault(_Thumbnail2);

	exports.Thumbnail = _Thumbnail3['default'];

	var _Tooltip2 = __webpack_require__(501);

	var _Tooltip3 = _interopRequireDefault(_Tooltip2);

	exports.Tooltip = _Tooltip3['default'];

	var _Well2 = __webpack_require__(502);

	var _Well3 = _interopRequireDefault(_Well2);

	exports.Well = _Well3['default'];

	var _utils2 = __webpack_require__(503);

	var _utils = _interopRequireWildcard(_utils2);

	exports.utils = _utils;

/***/ },
/* 249 */
/***/ function(module, exports, __webpack_require__) {

	module.exports = __webpack_require__(250);

/***/ },
/* 250 */
/***/ function(module, exports) {

	"use strict";

	exports.__esModule = true;

	exports.default = function (obj) {
	  return obj && obj.__esModule ? obj : {
	    default: obj
	  };
	};

/***/ },
/* 251 */
/***/ function(module, exports, __webpack_require__) {

	module.exports = __webpack_require__(252);

/***/ },
/* 252 */
/***/ function(module, exports) {

	"use strict";

	exports.__esModule = true;

	exports.default = function (obj) {
	  if (obj && obj.__esModule) {
	    return obj;
	  } else {
	    var newObj = {};

	    if (obj != null) {
	      for (var key in obj) {
	        if (Object.prototype.hasOwnProperty.call(obj, key)) newObj[key] = obj[key];
	      }
	    }

	    newObj.default = obj;
	    return newObj;
	  }
	};

/***/ },
/* 253 */
/***/ function(module, exports, __webpack_require__) {

	'use strict';

	var _inherits = __webpack_require__(254)['default'];

	var _classCallCheck = __webpack_require__(330)['default'];

	var _extends = __webpack_require__(332)['default'];

	var _interopRequireDefault = __webpack_require__(249)['default'];

	exports.__esModule = true;

	var _react = __webpack_require__(2);

	var _react2 = _interopRequireDefault(_react);

	var _PanelGroup = __webpack_require__(337);

	var _PanelGroup2 = _interopRequireDefault(_PanelGroup);

	var Accordion = (function (_React$Component) {
	  _inherits(Accordion, _React$Component);

	  function Accordion() {
	    _classCallCheck(this, Accordion);

	    _React$Component.apply(this, arguments);
	  }

	  Accordion.prototype.render = function render() {
	    return _react2['default'].createElement(
	      _PanelGroup2['default'],
	      _extends({}, this.props, { accordion: true }),
	      this.props.children
	    );
	  };

	  return Accordion;
	})(_react2['default'].Component);

	exports['default'] = Accordion;
	module.exports = exports['default'];

/***/ },
/* 254 */
/***/ function(module, exports, __webpack_require__) {

	"use strict";

	exports.__esModule = true;

	var _setPrototypeOf = __webpack_require__(255);

	var _setPrototypeOf2 = _interopRequireDefault(_setPrototypeOf);

	var _create = __webpack_require__(281);

	var _create2 = _interopRequireDefault(_create);

	var _typeof2 = __webpack_require__(297);

	var _typeof3 = _interopRequireDefault(_typeof2);

	function _interopRequireDefault(obj) { return obj && obj.__esModule ? obj : { default: obj }; }

	exports.default = function (subClass, superClass) {
	  if (typeof superClass !== "function" && superClass !== null) {
	    throw new TypeError("Super expression must either be null or a function, not " + (typeof superClass === "undefined" ? "undefined" : (0, _typeof3.default)(superClass)));
	  }

	  subClass.prototype = (0, _create2.default)(superClass && superClass.prototype, {
	    constructor: {
	      value: subClass,
	      enumerable: false,
	      writable: true,
	      configurable: true
	    }
	  });
	  if (superClass) _setPrototypeOf2.default ? (0, _setPrototypeOf2.default)(subClass, superClass) : subClass.__proto__ = superClass;
	};

/***/ },
/* 255 */
/***/ function(module, exports, __webpack_require__) {

	module.exports = { "default": __webpack_require__(256), __esModule: true };

/***/ },
/* 256 */
/***/ function(module, exports, __webpack_require__) {

	__webpack_require__(257);
	module.exports = __webpack_require__(260).Object.setPrototypeOf;

/***/ },
/* 257 */
/***/ function(module, exports, __webpack_require__) {

	// 19.1.3.19 Object.setPrototypeOf(O, proto)
	var $export = __webpack_require__(258);
	$export($export.S, 'Object', {setPrototypeOf: __webpack_require__(273).set});

/***/ },
/* 258 */
/***/ function(module, exports, __webpack_require__) {

	var global    = __webpack_require__(259)
	  , core      = __webpack_require__(260)
	  , ctx       = __webpack_require__(261)
	  , hide      = __webpack_require__(263)
	  , PROTOTYPE = 'prototype';

	var $export = function(type, name, source){
	  var IS_FORCED = type & $export.F
	    , IS_GLOBAL = type & $export.G
	    , IS_STATIC = type & $export.S
	    , IS_PROTO  = type & $export.P
	    , IS_BIND   = type & $export.B
	    , IS_WRAP   = type & $export.W
	    , exports   = IS_GLOBAL ? core : core[name] || (core[name] = {})
	    , expProto  = exports[PROTOTYPE]
	    , target    = IS_GLOBAL ? global : IS_STATIC ? global[name] : (global[name] || {})[PROTOTYPE]
	    , key, own, out;
	  if(IS_GLOBAL)source = name;
	  for(key in source){
	    // contains in native
	    own = !IS_FORCED && target && target[key] !== undefined;
	    if(own && key in exports)continue;
	    // export native or passed
	    out = own ? target[key] : source[key];
	    // prevent global pollution for namespaces
	    exports[key] = IS_GLOBAL && typeof target[key] != 'function' ? source[key]
	    // bind timers to global for call from export context
	    : IS_BIND && own ? ctx(out, global)
	    // wrap global constructors for prevent change them in library
	    : IS_WRAP && target[key] == out ? (function(C){
	      var F = function(a, b, c){
	        if(this instanceof C){
	          switch(arguments.length){
	            case 0: return new C;
	            case 1: return new C(a);
	            case 2: return new C(a, b);
	          } return new C(a, b, c);
	        } return C.apply(this, arguments);
	      };
	      F[PROTOTYPE] = C[PROTOTYPE];
	      return F;
	    // make static versions for prototype methods
	    })(out) : IS_PROTO && typeof out == 'function' ? ctx(Function.call, out) : out;
	    // export proto methods to core.%CONSTRUCTOR%.methods.%NAME%
	    if(IS_PROTO){
	      (exports.virtual || (exports.virtual = {}))[key] = out;
	      // export proto methods to core.%CONSTRUCTOR%.prototype.%NAME%
	      if(type & $export.R && expProto && !expProto[key])hide(expProto, key, out);
	    }
	  }
	};
	// type bitmap
	$export.F = 1;   // forced
	$export.G = 2;   // global
	$export.S = 4;   // static
	$export.P = 8;   // proto
	$export.B = 16;  // bind
	$export.W = 32;  // wrap
	$export.U = 64;  // safe
	$export.R = 128; // real proto method for `library` 
	module.exports = $export;

/***/ },
/* 259 */
/***/ function(module, exports) {

	// https://github.com/zloirock/core-js/issues/86#issuecomment-115759028
	var global = module.exports = typeof window != 'undefined' && window.Math == Math
	  ? window : typeof self != 'undefined' && self.Math == Math ? self : Function('return this')();
	if(typeof __g == 'number')__g = global; // eslint-disable-line no-undef

/***/ },
/* 260 */
/***/ function(module, exports) {

	var core = module.exports = {version: '2.4.0'};
	if(typeof __e == 'number')__e = core; // eslint-disable-line no-undef

/***/ },
/* 261 */
/***/ function(module, exports, __webpack_require__) {

	// optional / simple context binding
	var aFunction = __webpack_require__(262);
	module.exports = function(fn, that, length){
	  aFunction(fn);
	  if(that === undefined)return fn;
	  switch(length){
	    case 1: return function(a){
	      return fn.call(that, a);
	    };
	    case 2: return function(a, b){
	      return fn.call(that, a, b);
	    };
	    case 3: return function(a, b, c){
	      return fn.call(that, a, b, c);
	    };
	  }
	  return function(/* ...args */){
	    return fn.apply(that, arguments);
	  };
	};

/***/ },
/* 262 */
/***/ function(module, exports) {

	module.exports = function(it){
	  if(typeof it != 'function')throw TypeError(it + ' is not a function!');
	  return it;
	};

/***/ },
/* 263 */
/***/ function(module, exports, __webpack_require__) {

	var dP         = __webpack_require__(264)
	  , createDesc = __webpack_require__(272);
	module.exports = __webpack_require__(268) ? function(object, key, value){
	  return dP.f(object, key, createDesc(1, value));
	} : function(object, key, value){
	  object[key] = value;
	  return object;
	};

/***/ },
/* 264 */
/***/ function(module, exports, __webpack_require__) {

	var anObject       = __webpack_require__(265)
	  , IE8_DOM_DEFINE = __webpack_require__(267)
	  , toPrimitive    = __webpack_require__(271)
	  , dP             = Object.defineProperty;

	exports.f = __webpack_require__(268) ? Object.defineProperty : function defineProperty(O, P, Attributes){
	  anObject(O);
	  P = toPrimitive(P, true);
	  anObject(Attributes);
	  if(IE8_DOM_DEFINE)try {
	    return dP(O, P, Attributes);
	  } catch(e){ /* empty */ }
	  if('get' in Attributes || 'set' in Attributes)throw TypeError('Accessors not supported!');
	  if('value' in Attributes)O[P] = Attributes.value;
	  return O;
	};

/***/ },
/* 265 */
/***/ function(module, exports, __webpack_require__) {

	var isObject = __webpack_require__(266);
	module.exports = function(it){
	  if(!isObject(it))throw TypeError(it + ' is not an object!');
	  return it;
	};

/***/ },
/* 266 */
/***/ function(module, exports) {

	module.exports = function(it){
	  return typeof it === 'object' ? it !== null : typeof it === 'function';
	};

/***/ },
/* 267 */
/***/ function(module, exports, __webpack_require__) {

	module.exports = !__webpack_require__(268) && !__webpack_require__(269)(function(){
	  return Object.defineProperty(__webpack_require__(270)('div'), 'a', {get: function(){ return 7; }}).a != 7;
	});

/***/ },
/* 268 */
/***/ function(module, exports, __webpack_require__) {

	// Thank's IE8 for his funny defineProperty
	module.exports = !__webpack_require__(269)(function(){
	  return Object.defineProperty({}, 'a', {get: function(){ return 7; }}).a != 7;
	});

/***/ },
/* 269 */
/***/ function(module, exports) {

	module.exports = function(exec){
	  try {
	    return !!exec();
	  } catch(e){
	    return true;
	  }
	};

/***/ },
/* 270 */
/***/ function(module, exports, __webpack_require__) {

	var isObject = __webpack_require__(266)
	  , document = __webpack_require__(259).document
	  // in old IE typeof document.createElement is 'object'
	  , is = isObject(document) && isObject(document.createElement);
	module.exports = function(it){
	  return is ? document.createElement(it) : {};
	};

/***/ },
/* 271 */
/***/ function(module, exports, __webpack_require__) {

	// 7.1.1 ToPrimitive(input [, PreferredType])
	var isObject = __webpack_require__(266);
	// instead of the ES6 spec version, we didn't implement @@toPrimitive case
	// and the second argument - flag - preferred type is a string
	module.exports = function(it, S){
	  if(!isObject(it))return it;
	  var fn, val;
	  if(S && typeof (fn = it.toString) == 'function' && !isObject(val = fn.call(it)))return val;
	  if(typeof (fn = it.valueOf) == 'function' && !isObject(val = fn.call(it)))return val;
	  if(!S && typeof (fn = it.toString) == 'function' && !isObject(val = fn.call(it)))return val;
	  throw TypeError("Can't convert object to primitive value");
	};

/***/ },
/* 272 */
/***/ function(module, exports) {

	module.exports = function(bitmap, value){
	  return {
	    enumerable  : !(bitmap & 1),
	    configurable: !(bitmap & 2),
	    writable    : !(bitmap & 4),
	    value       : value
	  };
	};

/***/ },
/* 273 */
/***/ function(module, exports, __webpack_require__) {

	// Works with __proto__ only. Old v8 can't work with null proto objects.
	/* eslint-disable no-proto */
	var isObject = __webpack_require__(266)
	  , anObject = __webpack_require__(265);
	var check = function(O, proto){
	  anObject(O);
	  if(!isObject(proto) && proto !== null)throw TypeError(proto + ": can't set as prototype!");
	};
	module.exports = {
	  set: Object.setPrototypeOf || ('__proto__' in {} ? // eslint-disable-line
	    function(test, buggy, set){
	      try {
	        set = __webpack_require__(261)(Function.call, __webpack_require__(274).f(Object.prototype, '__proto__').set, 2);
	        set(test, []);
	        buggy = !(test instanceof Array);
	      } catch(e){ buggy = true; }
	      return function setPrototypeOf(O, proto){
	        check(O, proto);
	        if(buggy)O.__proto__ = proto;
	        else set(O, proto);
	        return O;
	      };
	    }({}, false) : undefined),
	  check: check
	};

/***/ },
/* 274 */
/***/ function(module, exports, __webpack_require__) {

	var pIE            = __webpack_require__(275)
	  , createDesc     = __webpack_require__(272)
	  , toIObject      = __webpack_require__(276)
	  , toPrimitive    = __webpack_require__(271)
	  , has            = __webpack_require__(280)
	  , IE8_DOM_DEFINE = __webpack_require__(267)
	  , gOPD           = Object.getOwnPropertyDescriptor;

	exports.f = __webpack_require__(268) ? gOPD : function getOwnPropertyDescriptor(O, P){
	  O = toIObject(O);
	  P = toPrimitive(P, true);
	  if(IE8_DOM_DEFINE)try {
	    return gOPD(O, P);
	  } catch(e){ /* empty */ }
	  if(has(O, P))return createDesc(!pIE.f.call(O, P), O[P]);
	};

/***/ },
/* 275 */
/***/ function(module, exports) {

	exports.f = {}.propertyIsEnumerable;

/***/ },
/* 276 */
/***/ function(module, exports, __webpack_require__) {

	// to indexed object, toObject with fallback for non-array-like ES3 strings
	var IObject = __webpack_require__(277)
	  , defined = __webpack_require__(279);
	module.exports = function(it){
	  return IObject(defined(it));
	};

/***/ },
/* 277 */
/***/ function(module, exports, __webpack_require__) {

	// fallback for non-array-like ES3 and non-enumerable old V8 strings
	var cof = __webpack_require__(278);
	module.exports = Object('z').propertyIsEnumerable(0) ? Object : function(it){
	  return cof(it) == 'String' ? it.split('') : Object(it);
	};

/***/ },
/* 278 */
/***/ function(module, exports) {

	var toString = {}.toString;

	module.exports = function(it){
	  return toString.call(it).slice(8, -1);
	};

/***/ },
/* 279 */
/***/ function(module, exports) {

	// 7.2.1 RequireObjectCoercible(argument)
	module.exports = function(it){
	  if(it == undefined)throw TypeError("Can't call method on  " + it);
	  return it;
	};

/***/ },
/* 280 */
/***/ function(module, exports) {

	var hasOwnProperty = {}.hasOwnProperty;
	module.exports = function(it, key){
	  return hasOwnProperty.call(it, key);
	};

/***/ },
/* 281 */
/***/ function(module, exports, __webpack_require__) {

	module.exports = { "default": __webpack_require__(282), __esModule: true };

/***/ },
/* 282 */
/***/ function(module, exports, __webpack_require__) {

	__webpack_require__(283);
	var $Object = __webpack_require__(260).Object;
	module.exports = function create(P, D){
	  return $Object.create(P, D);
	};

/***/ },
/* 283 */
/***/ function(module, exports, __webpack_require__) {

	var $export = __webpack_require__(258)
	// 19.1.2.2 / 15.2.3.5 Object.create(O [, Properties])
	$export($export.S, 'Object', {create: __webpack_require__(284)});

/***/ },
/* 284 */
/***/ function(module, exports, __webpack_require__) {

	// 19.1.2.2 / 15.2.3.5 Object.create(O [, Properties])
	var anObject    = __webpack_require__(265)
	  , dPs         = __webpack_require__(285)
	  , enumBugKeys = __webpack_require__(295)
	  , IE_PROTO    = __webpack_require__(292)('IE_PROTO')
	  , Empty       = function(){ /* empty */ }
	  , PROTOTYPE   = 'prototype';

	// Create object with fake `null` prototype: use iframe Object with cleared prototype
	var createDict = function(){
	  // Thrash, waste and sodomy: IE GC bug
	  var iframe = __webpack_require__(270)('iframe')
	    , i      = enumBugKeys.length
	    , lt     = '<'
	    , gt     = '>'
	    , iframeDocument;
	  iframe.style.display = 'none';
	  __webpack_require__(296).appendChild(iframe);
	  iframe.src = 'javascript:'; // eslint-disable-line no-script-url
	  // createDict = iframe.contentWindow.Object;
	  // html.removeChild(iframe);
	  iframeDocument = iframe.contentWindow.document;
	  iframeDocument.open();
	  iframeDocument.write(lt + 'script' + gt + 'document.F=Object' + lt + '/script' + gt);
	  iframeDocument.close();
	  createDict = iframeDocument.F;
	  while(i--)delete createDict[PROTOTYPE][enumBugKeys[i]];
	  return createDict();
	};

	module.exports = Object.create || function create(O, Properties){
	  var result;
	  if(O !== null){
	    Empty[PROTOTYPE] = anObject(O);
	    result = new Empty;
	    Empty[PROTOTYPE] = null;
	    // add "__proto__" for Object.getPrototypeOf polyfill
	    result[IE_PROTO] = O;
	  } else result = createDict();
	  return Properties === undefined ? result : dPs(result, Properties);
	};


/***/ },
/* 285 */
/***/ function(module, exports, __webpack_require__) {

	var dP       = __webpack_require__(264)
	  , anObject = __webpack_require__(265)
	  , getKeys  = __webpack_require__(286);

	module.exports = __webpack_require__(268) ? Object.defineProperties : function defineProperties(O, Properties){
	  anObject(O);
	  var keys   = getKeys(Properties)
	    , length = keys.length
	    , i = 0
	    , P;
	  while(length > i)dP.f(O, P = keys[i++], Properties[P]);
	  return O;
	};

/***/ },
/* 286 */
/***/ function(module, exports, __webpack_require__) {

	// 19.1.2.14 / 15.2.3.14 Object.keys(O)
	var $keys       = __webpack_require__(287)
	  , enumBugKeys = __webpack_require__(295);

	module.exports = Object.keys || function keys(O){
	  return $keys(O, enumBugKeys);
	};

/***/ },
/* 287 */
/***/ function(module, exports, __webpack_require__) {

	var has          = __webpack_require__(280)
	  , toIObject    = __webpack_require__(276)
	  , arrayIndexOf = __webpack_require__(288)(false)
	  , IE_PROTO     = __webpack_require__(292)('IE_PROTO');

	module.exports = function(object, names){
	  var O      = toIObject(object)
	    , i      = 0
	    , result = []
	    , key;
	  for(key in O)if(key != IE_PROTO)has(O, key) && result.push(key);
	  // Don't enum bug & hidden keys
	  while(names.length > i)if(has(O, key = names[i++])){
	    ~arrayIndexOf(result, key) || result.push(key);
	  }
	  return result;
	};

/***/ },
/* 288 */
/***/ function(module, exports, __webpack_require__) {

	// false -> Array#indexOf
	// true  -> Array#includes
	var toIObject = __webpack_require__(276)
	  , toLength  = __webpack_require__(289)
	  , toIndex   = __webpack_require__(291);
	module.exports = function(IS_INCLUDES){
	  return function($this, el, fromIndex){
	    var O      = toIObject($this)
	      , length = toLength(O.length)
	      , index  = toIndex(fromIndex, length)
	      , value;
	    // Array#includes uses SameValueZero equality algorithm
	    if(IS_INCLUDES && el != el)while(length > index){
	      value = O[index++];
	      if(value != value)return true;
	    // Array#toIndex ignores holes, Array#includes - not
	    } else for(;length > index; index++)if(IS_INCLUDES || index in O){
	      if(O[index] === el)return IS_INCLUDES || index || 0;
	    } return !IS_INCLUDES && -1;
	  };
	};

/***/ },
/* 289 */
/***/ function(module, exports, __webpack_require__) {

	// 7.1.15 ToLength
	var toInteger = __webpack_require__(290)
	  , min       = Math.min;
	module.exports = function(it){
	  return it > 0 ? min(toInteger(it), 0x1fffffffffffff) : 0; // pow(2, 53) - 1 == 9007199254740991
	};

/***/ },
/* 290 */
/***/ function(module, exports) {

	// 7.1.4 ToInteger
	var ceil  = Math.ceil
	  , floor = Math.floor;
	module.exports = function(it){
	  return isNaN(it = +it) ? 0 : (it > 0 ? floor : ceil)(it);
	};

/***/ },
/* 291 */
/***/ function(module, exports, __webpack_require__) {

	var toInteger = __webpack_require__(290)
	  , max       = Math.max
	  , min       = Math.min;
	module.exports = function(index, length){
	  index = toInteger(index);
	  return index < 0 ? max(index + length, 0) : min(index, length);
	};

/***/ },
/* 292 */
/***/ function(module, exports, __webpack_require__) {

	var shared = __webpack_require__(293)('keys')
	  , uid    = __webpack_require__(294);
	module.exports = function(key){
	  return shared[key] || (shared[key] = uid(key));
	};

/***/ },
/* 293 */
/***/ function(module, exports, __webpack_require__) {

	var global = __webpack_require__(259)
	  , SHARED = '__core-js_shared__'
	  , store  = global[SHARED] || (global[SHARED] = {});
	module.exports = function(key){
	  return store[key] || (store[key] = {});
	};

/***/ },
/* 294 */
/***/ function(module, exports) {

	var id = 0
	  , px = Math.random();
	module.exports = function(key){
	  return 'Symbol('.concat(key === undefined ? '' : key, ')_', (++id + px).toString(36));
	};

/***/ },
/* 295 */
/***/ function(module, exports) {

	// IE 8- don't enum bug keys
	module.exports = (
	  'constructor,hasOwnProperty,isPrototypeOf,propertyIsEnumerable,toLocaleString,toString,valueOf'
	).split(',');

/***/ },
/* 296 */
/***/ function(module, exports, __webpack_require__) {

	module.exports = __webpack_require__(259).document && document.documentElement;

/***/ },
/* 297 */
/***/ function(module, exports, __webpack_require__) {

	"use strict";

	exports.__esModule = true;

	var _iterator = __webpack_require__(298);

	var _iterator2 = _interopRequireDefault(_iterator);

	var _symbol = __webpack_require__(316);

	var _symbol2 = _interopRequireDefault(_symbol);

	var _typeof = typeof _symbol2.default === "function" && typeof _iterator2.default === "symbol" ? function (obj) { return typeof obj; } : function (obj) { return obj && typeof _symbol2.default === "function" && obj.constructor === _symbol2.default ? "symbol" : typeof obj; };

	function _interopRequireDefault(obj) { return obj && obj.__esModule ? obj : { default: obj }; }

	exports.default = typeof _symbol2.default === "function" && _typeof(_iterator2.default) === "symbol" ? function (obj) {
	  return typeof obj === "undefined" ? "undefined" : _typeof(obj);
	} : function (obj) {
	  return obj && typeof _symbol2.default === "function" && obj.constructor === _symbol2.default ? "symbol" : typeof obj === "undefined" ? "undefined" : _typeof(obj);
	};

/***/ },
/* 298 */
/***/ function(module, exports, __webpack_require__) {

	module.exports = { "default": __webpack_require__(299), __esModule: true };

/***/ },
/* 299 */
/***/ function(module, exports, __webpack_require__) {

	__webpack_require__(300);
	__webpack_require__(311);
	module.exports = __webpack_require__(315).f('iterator');

/***/ },
/* 300 */
/***/ function(module, exports, __webpack_require__) {

	'use strict';
	var $at  = __webpack_require__(301)(true);

	// 21.1.3.27 String.prototype[@@iterator]()
	__webpack_require__(302)(String, 'String', function(iterated){
	  this._t = String(iterated); // target
	  this._i = 0;                // next index
	// 21.1.5.2.1 %StringIteratorPrototype%.next()
	}, function(){
	  var O     = this._t
	    , index = this._i
	    , point;
	  if(index >= O.length)return {value: undefined, done: true};
	  point = $at(O, index);
	  this._i += point.length;
	  return {value: point, done: false};
	});

/***/ },
/* 301 */
/***/ function(module, exports, __webpack_require__) {

	var toInteger = __webpack_require__(290)
	  , defined   = __webpack_require__(279);
	// true  -> String#at
	// false -> String#codePointAt
	module.exports = function(TO_STRING){
	  return function(that, pos){
	    var s = String(defined(that))
	      , i = toInteger(pos)
	      , l = s.length
	      , a, b;
	    if(i < 0 || i >= l)return TO_STRING ? '' : undefined;
	    a = s.charCodeAt(i);
	    return a < 0xd800 || a > 0xdbff || i + 1 === l || (b = s.charCodeAt(i + 1)) < 0xdc00 || b > 0xdfff
	      ? TO_STRING ? s.charAt(i) : a
	      : TO_STRING ? s.slice(i, i + 2) : (a - 0xd800 << 10) + (b - 0xdc00) + 0x10000;
	  };
	};

/***/ },
/* 302 */
/***/ function(module, exports, __webpack_require__) {

	'use strict';
	var LIBRARY        = __webpack_require__(303)
	  , $export        = __webpack_require__(258)
	  , redefine       = __webpack_require__(304)
	  , hide           = __webpack_require__(263)
	  , has            = __webpack_require__(280)
	  , Iterators      = __webpack_require__(305)
	  , $iterCreate    = __webpack_require__(306)
	  , setToStringTag = __webpack_require__(307)
	  , getPrototypeOf = __webpack_require__(309)
	  , ITERATOR       = __webpack_require__(308)('iterator')
	  , BUGGY          = !([].keys && 'next' in [].keys()) // Safari has buggy iterators w/o `next`
	  , FF_ITERATOR    = '@@iterator'
	  , KEYS           = 'keys'
	  , VALUES         = 'values';

	var returnThis = function(){ return this; };

	module.exports = function(Base, NAME, Constructor, next, DEFAULT, IS_SET, FORCED){
	  $iterCreate(Constructor, NAME, next);
	  var getMethod = function(kind){
	    if(!BUGGY && kind in proto)return proto[kind];
	    switch(kind){
	      case KEYS: return function keys(){ return new Constructor(this, kind); };
	      case VALUES: return function values(){ return new Constructor(this, kind); };
	    } return function entries(){ return new Constructor(this, kind); };
	  };
	  var TAG        = NAME + ' Iterator'
	    , DEF_VALUES = DEFAULT == VALUES
	    , VALUES_BUG = false
	    , proto      = Base.prototype
	    , $native    = proto[ITERATOR] || proto[FF_ITERATOR] || DEFAULT && proto[DEFAULT]
	    , $default   = $native || getMethod(DEFAULT)
	    , $entries   = DEFAULT ? !DEF_VALUES ? $default : getMethod('entries') : undefined
	    , $anyNative = NAME == 'Array' ? proto.entries || $native : $native
	    , methods, key, IteratorPrototype;
	  // Fix native
	  if($anyNative){
	    IteratorPrototype = getPrototypeOf($anyNative.call(new Base));
	    if(IteratorPrototype !== Object.prototype){
	      // Set @@toStringTag to native iterators
	      setToStringTag(IteratorPrototype, TAG, true);
	      // fix for some old engines
	      if(!LIBRARY && !has(IteratorPrototype, ITERATOR))hide(IteratorPrototype, ITERATOR, returnThis);
	    }
	  }
	  // fix Array#{values, @@iterator}.name in V8 / FF
	  if(DEF_VALUES && $native && $native.name !== VALUES){
	    VALUES_BUG = true;
	    $default = function values(){ return $native.call(this); };
	  }
	  // Define iterator
	  if((!LIBRARY || FORCED) && (BUGGY || VALUES_BUG || !proto[ITERATOR])){
	    hide(proto, ITERATOR, $default);
	  }
	  // Plug for library
	  Iterators[NAME] = $default;
	  Iterators[TAG]  = returnThis;
	  if(DEFAULT){
	    methods = {
	      values:  DEF_VALUES ? $default : getMethod(VALUES),
	      keys:    IS_SET     ? $default : getMethod(KEYS),
	      entries: $entries
	    };
	    if(FORCED)for(key in methods){
	      if(!(key in proto))redefine(proto, key, methods[key]);
	    } else $export($export.P + $export.F * (BUGGY || VALUES_BUG), NAME, methods);
	  }
	  return methods;
	};

/***/ },
/* 303 */
/***/ function(module, exports) {

	module.exports = true;

/***/ },
/* 304 */
/***/ function(module, exports, __webpack_require__) {

	module.exports = __webpack_require__(263);

/***/ },
/* 305 */
/***/ function(module, exports) {

	module.exports = {};

/***/ },
/* 306 */
/***/ function(module, exports, __webpack_require__) {

	'use strict';
	var create         = __webpack_require__(284)
	  , descriptor     = __webpack_require__(272)
	  , setToStringTag = __webpack_require__(307)
	  , IteratorPrototype = {};

	// 25.1.2.1.1 %IteratorPrototype%[@@iterator]()
	__webpack_require__(263)(IteratorPrototype, __webpack_require__(308)('iterator'), function(){ return this; });

	module.exports = function(Constructor, NAME, next){
	  Constructor.prototype = create(IteratorPrototype, {next: descriptor(1, next)});
	  setToStringTag(Constructor, NAME + ' Iterator');
	};

/***/ },
/* 307 */
/***/ function(module, exports, __webpack_require__) {

	var def = __webpack_require__(264).f
	  , has = __webpack_require__(280)
	  , TAG = __webpack_require__(308)('toStringTag');

	module.exports = function(it, tag, stat){
	  if(it && !has(it = stat ? it : it.prototype, TAG))def(it, TAG, {configurable: true, value: tag});
	};

/***/ },
/* 308 */
/***/ function(module, exports, __webpack_require__) {

	var store      = __webpack_require__(293)('wks')
	  , uid        = __webpack_require__(294)
	  , Symbol     = __webpack_require__(259).Symbol
	  , USE_SYMBOL = typeof Symbol == 'function';

	var $exports = module.exports = function(name){
	  return store[name] || (store[name] =
	    USE_SYMBOL && Symbol[name] || (USE_SYMBOL ? Symbol : uid)('Symbol.' + name));
	};

	$exports.store = store;

/***/ },
/* 309 */
/***/ function(module, exports, __webpack_require__) {

	// 19.1.2.9 / 15.2.3.2 Object.getPrototypeOf(O)
	var has         = __webpack_require__(280)
	  , toObject    = __webpack_require__(310)
	  , IE_PROTO    = __webpack_require__(292)('IE_PROTO')
	  , ObjectProto = Object.prototype;

	module.exports = Object.getPrototypeOf || function(O){
	  O = toObject(O);
	  if(has(O, IE_PROTO))return O[IE_PROTO];
	  if(typeof O.constructor == 'function' && O instanceof O.constructor){
	    return O.constructor.prototype;
	  } return O instanceof Object ? ObjectProto : null;
	};

/***/ },
/* 310 */
/***/ function(module, exports, __webpack_require__) {

	// 7.1.13 ToObject(argument)
	var defined = __webpack_require__(279);
	module.exports = function(it){
	  return Object(defined(it));
	};

/***/ },
/* 311 */
/***/ function(module, exports, __webpack_require__) {

	__webpack_require__(312);
	var global        = __webpack_require__(259)
	  , hide          = __webpack_require__(263)
	  , Iterators     = __webpack_require__(305)
	  , TO_STRING_TAG = __webpack_require__(308)('toStringTag');

	for(var collections = ['NodeList', 'DOMTokenList', 'MediaList', 'StyleSheetList', 'CSSRuleList'], i = 0; i < 5; i++){
	  var NAME       = collections[i]
	    , Collection = global[NAME]
	    , proto      = Collection && Collection.prototype;
	  if(proto && !proto[TO_STRING_TAG])hide(proto, TO_STRING_TAG, NAME);
	  Iterators[NAME] = Iterators.Array;
	}

/***/ },
/* 312 */
/***/ function(module, exports, __webpack_require__) {

	'use strict';
	var addToUnscopables = __webpack_require__(313)
	  , step             = __webpack_require__(314)
	  , Iterators        = __webpack_require__(305)
	  , toIObject        = __webpack_require__(276);

	// 22.1.3.4 Array.prototype.entries()
	// 22.1.3.13 Array.prototype.keys()
	// 22.1.3.29 Array.prototype.values()
	// 22.1.3.30 Array.prototype[@@iterator]()
	module.exports = __webpack_require__(302)(Array, 'Array', function(iterated, kind){
	  this._t = toIObject(iterated); // target
	  this._i = 0;                   // next index
	  this._k = kind;                // kind
	// 22.1.5.2.1 %ArrayIteratorPrototype%.next()
	}, function(){
	  var O     = this._t
	    , kind  = this._k
	    , index = this._i++;
	  if(!O || index >= O.length){
	    this._t = undefined;
	    return step(1);
	  }
	  if(kind == 'keys'  )return step(0, index);
	  if(kind == 'values')return step(0, O[index]);
	  return step(0, [index, O[index]]);
	}, 'values');

	// argumentsList[@@iterator] is %ArrayProto_values% (9.4.4.6, 9.4.4.7)
	Iterators.Arguments = Iterators.Array;

	addToUnscopables('keys');
	addToUnscopables('values');
	addToUnscopables('entries');

/***/ },
/* 313 */
/***/ function(module, exports) {

	module.exports = function(){ /* empty */ };

/***/ },
/* 314 */
/***/ function(module, exports) {

	module.exports = function(done, value){
	  return {value: value, done: !!done};
	};

/***/ },
/* 315 */
/***/ function(module, exports, __webpack_require__) {

	exports.f = __webpack_require__(308);

/***/ },
/* 316 */
/***/ function(module, exports, __webpack_require__) {

	module.exports = { "default": __webpack_require__(317), __esModule: true };

/***/ },
/* 317 */
/***/ function(module, exports, __webpack_require__) {

	__webpack_require__(318);
	__webpack_require__(327);
	__webpack_require__(328);
	__webpack_require__(329);
	module.exports = __webpack_require__(260).Symbol;

/***/ },
/* 318 */
/***/ function(module, exports, __webpack_require__) {

	'use strict';
	// ECMAScript 6 symbols shim
	var global         = __webpack_require__(259)
	  , has            = __webpack_require__(280)
	  , DESCRIPTORS    = __webpack_require__(268)
	  , $export        = __webpack_require__(258)
	  , redefine       = __webpack_require__(304)
	  , META           = __webpack_require__(319).KEY
	  , $fails         = __webpack_require__(269)
	  , shared         = __webpack_require__(293)
	  , setToStringTag = __webpack_require__(307)
	  , uid            = __webpack_require__(294)
	  , wks            = __webpack_require__(308)
	  , wksExt         = __webpack_require__(315)
	  , wksDefine      = __webpack_require__(320)
	  , keyOf          = __webpack_require__(321)
	  , enumKeys       = __webpack_require__(322)
	  , isArray        = __webpack_require__(324)
	  , anObject       = __webpack_require__(265)
	  , toIObject      = __webpack_require__(276)
	  , toPrimitive    = __webpack_require__(271)
	  , createDesc     = __webpack_require__(272)
	  , _create        = __webpack_require__(284)
	  , gOPNExt        = __webpack_require__(325)
	  , $GOPD          = __webpack_require__(274)
	  , $DP            = __webpack_require__(264)
	  , $keys          = __webpack_require__(286)
	  , gOPD           = $GOPD.f
	  , dP             = $DP.f
	  , gOPN           = gOPNExt.f
	  , $Symbol        = global.Symbol
	  , $JSON          = global.JSON
	  , _stringify     = $JSON && $JSON.stringify
	  , PROTOTYPE      = 'prototype'
	  , HIDDEN         = wks('_hidden')
	  , TO_PRIMITIVE   = wks('toPrimitive')
	  , isEnum         = {}.propertyIsEnumerable
	  , SymbolRegistry = shared('symbol-registry')
	  , AllSymbols     = shared('symbols')
	  , OPSymbols      = shared('op-symbols')
	  , ObjectProto    = Object[PROTOTYPE]
	  , USE_NATIVE     = typeof $Symbol == 'function'
	  , QObject        = global.QObject;
	// Don't use setters in Qt Script, https://github.com/zloirock/core-js/issues/173
	var setter = !QObject || !QObject[PROTOTYPE] || !QObject[PROTOTYPE].findChild;

	// fallback for old Android, https://code.google.com/p/v8/issues/detail?id=687
	var setSymbolDesc = DESCRIPTORS && $fails(function(){
	  return _create(dP({}, 'a', {
	    get: function(){ return dP(this, 'a', {value: 7}).a; }
	  })).a != 7;
	}) ? function(it, key, D){
	  var protoDesc = gOPD(ObjectProto, key);
	  if(protoDesc)delete ObjectProto[key];
	  dP(it, key, D);
	  if(protoDesc && it !== ObjectProto)dP(ObjectProto, key, protoDesc);
	} : dP;

	var wrap = function(tag){
	  var sym = AllSymbols[tag] = _create($Symbol[PROTOTYPE]);
	  sym._k = tag;
	  return sym;
	};

	var isSymbol = USE_NATIVE && typeof $Symbol.iterator == 'symbol' ? function(it){
	  return typeof it == 'symbol';
	} : function(it){
	  return it instanceof $Symbol;
	};

	var $defineProperty = function defineProperty(it, key, D){
	  if(it === ObjectProto)$defineProperty(OPSymbols, key, D);
	  anObject(it);
	  key = toPrimitive(key, true);
	  anObject(D);
	  if(has(AllSymbols, key)){
	    if(!D.enumerable){
	      if(!has(it, HIDDEN))dP(it, HIDDEN, createDesc(1, {}));
	      it[HIDDEN][key] = true;
	    } else {
	      if(has(it, HIDDEN) && it[HIDDEN][key])it[HIDDEN][key] = false;
	      D = _create(D, {enumerable: createDesc(0, false)});
	    } return setSymbolDesc(it, key, D);
	  } return dP(it, key, D);
	};
	var $defineProperties = function defineProperties(it, P){
	  anObject(it);
	  var keys = enumKeys(P = toIObject(P))
	    , i    = 0
	    , l = keys.length
	    , key;
	  while(l > i)$defineProperty(it, key = keys[i++], P[key]);
	  return it;
	};
	var $create = function create(it, P){
	  return P === undefined ? _create(it) : $defineProperties(_create(it), P);
	};
	var $propertyIsEnumerable = function propertyIsEnumerable(key){
	  var E = isEnum.call(this, key = toPrimitive(key, true));
	  if(this === ObjectProto && has(AllSymbols, key) && !has(OPSymbols, key))return false;
	  return E || !has(this, key) || !has(AllSymbols, key) || has(this, HIDDEN) && this[HIDDEN][key] ? E : true;
	};
	var $getOwnPropertyDescriptor = function getOwnPropertyDescriptor(it, key){
	  it  = toIObject(it);
	  key = toPrimitive(key, true);
	  if(it === ObjectProto && has(AllSymbols, key) && !has(OPSymbols, key))return;
	  var D = gOPD(it, key);
	  if(D && has(AllSymbols, key) && !(has(it, HIDDEN) && it[HIDDEN][key]))D.enumerable = true;
	  return D;
	};
	var $getOwnPropertyNames = function getOwnPropertyNames(it){
	  var names  = gOPN(toIObject(it))
	    , result = []
	    , i      = 0
	    , key;
	  while(names.length > i){
	    if(!has(AllSymbols, key = names[i++]) && key != HIDDEN && key != META)result.push(key);
	  } return result;
	};
	var $getOwnPropertySymbols = function getOwnPropertySymbols(it){
	  var IS_OP  = it === ObjectProto
	    , names  = gOPN(IS_OP ? OPSymbols : toIObject(it))
	    , result = []
	    , i      = 0
	    , key;
	  while(names.length > i){
	    if(has(AllSymbols, key = names[i++]) && (IS_OP ? has(ObjectProto, key) : true))result.push(AllSymbols[key]);
	  } return result;
	};

	// 19.4.1.1 Symbol([description])
	if(!USE_NATIVE){
	  $Symbol = function Symbol(){
	    if(this instanceof $Symbol)throw TypeError('Symbol is not a constructor!');
	    var tag = uid(arguments.length > 0 ? arguments[0] : undefined);
	    var $set = function(value){
	      if(this === ObjectProto)$set.call(OPSymbols, value);
	      if(has(this, HIDDEN) && has(this[HIDDEN], tag))this[HIDDEN][tag] = false;
	      setSymbolDesc(this, tag, createDesc(1, value));
	    };
	    if(DESCRIPTORS && setter)setSymbolDesc(ObjectProto, tag, {configurable: true, set: $set});
	    return wrap(tag);
	  };
	  redefine($Symbol[PROTOTYPE], 'toString', function toString(){
	    return this._k;
	  });

	  $GOPD.f = $getOwnPropertyDescriptor;
	  $DP.f   = $defineProperty;
	  __webpack_require__(326).f = gOPNExt.f = $getOwnPropertyNames;
	  __webpack_require__(275).f  = $propertyIsEnumerable;
	  __webpack_require__(323).f = $getOwnPropertySymbols;

	  if(DESCRIPTORS && !__webpack_require__(303)){
	    redefine(ObjectProto, 'propertyIsEnumerable', $propertyIsEnumerable, true);
	  }

	  wksExt.f = function(name){
	    return wrap(wks(name));
	  }
	}

	$export($export.G + $export.W + $export.F * !USE_NATIVE, {Symbol: $Symbol});

	for(var symbols = (
	  // 19.4.2.2, 19.4.2.3, 19.4.2.4, 19.4.2.6, 19.4.2.8, 19.4.2.9, 19.4.2.10, 19.4.2.11, 19.4.2.12, 19.4.2.13, 19.4.2.14
	  'hasInstance,isConcatSpreadable,iterator,match,replace,search,species,split,toPrimitive,toStringTag,unscopables'
	).split(','), i = 0; symbols.length > i; )wks(symbols[i++]);

	for(var symbols = $keys(wks.store), i = 0; symbols.length > i; )wksDefine(symbols[i++]);

	$export($export.S + $export.F * !USE_NATIVE, 'Symbol', {
	  // 19.4.2.1 Symbol.for(key)
	  'for': function(key){
	    return has(SymbolRegistry, key += '')
	      ? SymbolRegistry[key]
	      : SymbolRegistry[key] = $Symbol(key);
	  },
	  // 19.4.2.5 Symbol.keyFor(sym)
	  keyFor: function keyFor(key){
	    if(isSymbol(key))return keyOf(SymbolRegistry, key);
	    throw TypeError(key + ' is not a symbol!');
	  },
	  useSetter: function(){ setter = true; },
	  useSimple: function(){ setter = false; }
	});

	$export($export.S + $export.F * !USE_NATIVE, 'Object', {
	  // 19.1.2.2 Object.create(O [, Properties])
	  create: $create,
	  // 19.1.2.4 Object.defineProperty(O, P, Attributes)
	  defineProperty: $defineProperty,
	  // 19.1.2.3 Object.defineProperties(O, Properties)
	  defineProperties: $defineProperties,
	  // 19.1.2.6 Object.getOwnPropertyDescriptor(O, P)
	  getOwnPropertyDescriptor: $getOwnPropertyDescriptor,
	  // 19.1.2.7 Object.getOwnPropertyNames(O)
	  getOwnPropertyNames: $getOwnPropertyNames,
	  // 19.1.2.8 Object.getOwnPropertySymbols(O)
	  getOwnPropertySymbols: $getOwnPropertySymbols
	});

	// 24.3.2 JSON.stringify(value [, replacer [, space]])
	$JSON && $export($export.S + $export.F * (!USE_NATIVE || $fails(function(){
	  var S = $Symbol();
	  // MS Edge converts symbol values to JSON as {}
	  // WebKit converts symbol values to JSON as null
	  // V8 throws on boxed symbols
	  return _stringify([S]) != '[null]' || _stringify({a: S}) != '{}' || _stringify(Object(S)) != '{}';
	})), 'JSON', {
	  stringify: function stringify(it){
	    if(it === undefined || isSymbol(it))return; // IE8 returns string on undefined
	    var args = [it]
	      , i    = 1
	      , replacer, $replacer;
	    while(arguments.length > i)args.push(arguments[i++]);
	    replacer = args[1];
	    if(typeof replacer == 'function')$replacer = replacer;
	    if($replacer || !isArray(replacer))replacer = function(key, value){
	      if($replacer)value = $replacer.call(this, key, value);
	      if(!isSymbol(value))return value;
	    };
	    args[1] = replacer;
	    return _stringify.apply($JSON, args);
	  }
	});

	// 19.4.3.4 Symbol.prototype[@@toPrimitive](hint)
	$Symbol[PROTOTYPE][TO_PRIMITIVE] || __webpack_require__(263)($Symbol[PROTOTYPE], TO_PRIMITIVE, $Symbol[PROTOTYPE].valueOf);
	// 19.4.3.5 Symbol.prototype[@@toStringTag]
	setToStringTag($Symbol, 'Symbol');
	// 20.2.1.9 Math[@@toStringTag]
	setToStringTag(Math, 'Math', true);
	// 24.3.3 JSON[@@toStringTag]
	setToStringTag(global.JSON, 'JSON', true);

/***/ },
/* 319 */
/***/ function(module, exports, __webpack_require__) {

	var META     = __webpack_require__(294)('meta')
	  , isObject = __webpack_require__(266)
	  , has      = __webpack_require__(280)
	  , setDesc  = __webpack_require__(264).f
	  , id       = 0;
	var isExtensible = Object.isExtensible || function(){
	  return true;
	};
	var FREEZE = !__webpack_require__(269)(function(){
	  return isExtensible(Object.preventExtensions({}));
	});
	var setMeta = function(it){
	  setDesc(it, META, {value: {
	    i: 'O' + ++id, // object ID
	    w: {}          // weak collections IDs
	  }});
	};
	var fastKey = function(it, create){
	  // return primitive with prefix
	  if(!isObject(it))return typeof it == 'symbol' ? it : (typeof it == 'string' ? 'S' : 'P') + it;
	  if(!has(it, META)){
	    // can't set metadata to uncaught frozen object
	    if(!isExtensible(it))return 'F';
	    // not necessary to add metadata
	    if(!create)return 'E';
	    // add missing metadata
	    setMeta(it);
	  // return object ID
	  } return it[META].i;
	};
	var getWeak = function(it, create){
	  if(!has(it, META)){
	    // can't set metadata to uncaught frozen object
	    if(!isExtensible(it))return true;
	    // not necessary to add metadata
	    if(!create)return false;
	    // add missing metadata
	    setMeta(it);
	  // return hash weak collections IDs
	  } return it[META].w;
	};
	// add metadata on freeze-family methods calling
	var onFreeze = function(it){
	  if(FREEZE && meta.NEED && isExtensible(it) && !has(it, META))setMeta(it);
	  return it;
	};
	var meta = module.exports = {
	  KEY:      META,
	  NEED:     false,
	  fastKey:  fastKey,
	  getWeak:  getWeak,
	  onFreeze: onFreeze
	};

/***/ },
/* 320 */
/***/ function(module, exports, __webpack_require__) {

	var global         = __webpack_require__(259)
	  , core           = __webpack_require__(260)
	  , LIBRARY        = __webpack_require__(303)
	  , wksExt         = __webpack_require__(315)
	  , defineProperty = __webpack_require__(264).f;
	module.exports = function(name){
	  var $Symbol = core.Symbol || (core.Symbol = LIBRARY ? {} : global.Symbol || {});
	  if(name.charAt(0) != '_' && !(name in $Symbol))defineProperty($Symbol, name, {value: wksExt.f(name)});
	};

/***/ },
/* 321 */
/***/ function(module, exports, __webpack_require__) {

	var getKeys   = __webpack_require__(286)
	  , toIObject = __webpack_require__(276);
	module.exports = function(object, el){
	  var O      = toIObject(object)
	    , keys   = getKeys(O)
	    , length = keys.length
	    , index  = 0
	    , key;
	  while(length > index)if(O[key = keys[index++]] === el)return key;
	};

/***/ },
/* 322 */
/***/ function(module, exports, __webpack_require__) {

	// all enumerable object keys, includes symbols
	var getKeys = __webpack_require__(286)
	  , gOPS    = __webpack_require__(323)
	  , pIE     = __webpack_require__(275);
	module.exports = function(it){
	  var result     = getKeys(it)
	    , getSymbols = gOPS.f;
	  if(getSymbols){
	    var symbols = getSymbols(it)
	      , isEnum  = pIE.f
	      , i       = 0
	      , key;
	    while(symbols.length > i)if(isEnum.call(it, key = symbols[i++]))result.push(key);
	  } return result;
	};

/***/ },
/* 323 */
/***/ function(module, exports) {

	exports.f = Object.getOwnPropertySymbols;

/***/ },
/* 324 */
/***/ function(module, exports, __webpack_require__) {

	// 7.2.2 IsArray(argument)
	var cof = __webpack_require__(278);
	module.exports = Array.isArray || function isArray(arg){
	  return cof(arg) == 'Array';
	};

/***/ },
/* 325 */
/***/ function(module, exports, __webpack_require__) {

	// fallback for IE11 buggy Object.getOwnPropertyNames with iframe and window
	var toIObject = __webpack_require__(276)
	  , gOPN      = __webpack_require__(326).f
	  , toString  = {}.toString;

	var windowNames = typeof window == 'object' && window && Object.getOwnPropertyNames
	  ? Object.getOwnPropertyNames(window) : [];

	var getWindowNames = function(it){
	  try {
	    return gOPN(it);
	  } catch(e){
	    return windowNames.slice();
	  }
	};

	module.exports.f = function getOwnPropertyNames(it){
	  return windowNames && toString.call(it) == '[object Window]' ? getWindowNames(it) : gOPN(toIObject(it));
	};


/***/ },
/* 326 */
/***/ function(module, exports, __webpack_require__) {

	// 19.1.2.7 / 15.2.3.4 Object.getOwnPropertyNames(O)
	var $keys      = __webpack_require__(287)
	  , hiddenKeys = __webpack_require__(295).concat('length', 'prototype');

	exports.f = Object.getOwnPropertyNames || function getOwnPropertyNames(O){
	  return $keys(O, hiddenKeys);
	};

/***/ },
/* 327 */
/***/ function(module, exports) {

	

/***/ },
/* 328 */
/***/ function(module, exports, __webpack_require__) {

	__webpack_require__(320)('asyncIterator');

/***/ },
/* 329 */
/***/ function(module, exports, __webpack_require__) {

	__webpack_require__(320)('observable');

/***/ },
/* 330 */
/***/ function(module, exports, __webpack_require__) {

	module.exports = __webpack_require__(331);

/***/ },
/* 331 */
/***/ function(module, exports) {

	"use strict";

	exports.__esModule = true;

	exports.default = function (instance, Constructor) {
	  if (!(instance instanceof Constructor)) {
	    throw new TypeError("Cannot call a class as a function");
	  }
	};

/***/ },
/* 332 */
/***/ function(module, exports, __webpack_require__) {

	"use strict";

	exports.__esModule = true;

	var _assign = __webpack_require__(333);

	var _assign2 = _interopRequireDefault(_assign);

	function _interopRequireDefault(obj) { return obj && obj.__esModule ? obj : { default: obj }; }

	exports.default = _assign2.default || function (target) {
	  for (var i = 1; i < arguments.length; i++) {
	    var source = arguments[i];

	    for (var key in source) {
	      if (Object.prototype.hasOwnProperty.call(source, key)) {
	        target[key] = source[key];
	      }
	    }
	  }

	  return target;
	};

/***/ },
/* 333 */
/***/ function(module, exports, __webpack_require__) {

	module.exports = { "default": __webpack_require__(334), __esModule: true };

/***/ },
/* 334 */
/***/ function(module, exports, __webpack_require__) {

	__webpack_require__(335);
	module.exports = __webpack_require__(260).Object.assign;

/***/ },
/* 335 */
/***/ function(module, exports, __webpack_require__) {

	// 19.1.3.1 Object.assign(target, source)
	var $export = __webpack_require__(258);

	$export($export.S + $export.F, 'Object', {assign: __webpack_require__(336)});

/***/ },
/* 336 */
/***/ function(module, exports, __webpack_require__) {

	'use strict';
	// 19.1.2.1 Object.assign(target, source, ...)
	var getKeys  = __webpack_require__(286)
	  , gOPS     = __webpack_require__(323)
	  , pIE      = __webpack_require__(275)
	  , toObject = __webpack_require__(310)
	  , IObject  = __webpack_require__(277)
	  , $assign  = Object.assign;

	// should work with symbols and should have deterministic property order (V8 bug)
	module.exports = !$assign || __webpack_require__(269)(function(){
	  var A = {}
	    , B = {}
	    , S = Symbol()
	    , K = 'abcdefghijklmnopqrst';
	  A[S] = 7;
	  K.split('').forEach(function(k){ B[k] = k; });
	  return $assign({}, A)[S] != 7 || Object.keys($assign({}, B)).join('') != K;
	}) ? function assign(target, source){ // eslint-disable-line no-unused-vars
	  var T     = toObject(target)
	    , aLen  = arguments.length
	    , index = 1
	    , getSymbols = gOPS.f
	    , isEnum     = pIE.f;
	  while(aLen > index){
	    var S      = IObject(arguments[index++])
	      , keys   = getSymbols ? getKeys(S).concat(getSymbols(S)) : getKeys(S)
	      , length = keys.length
	      , j      = 0
	      , key;
	    while(length > j)if(isEnum.call(S, key = keys[j++]))T[key] = S[key];
	  } return T;
	} : $assign;

/***/ },
/* 337 */
/***/ function(module, exports, __webpack_require__) {

	'use strict';

	var _inherits = __webpack_require__(254)['default'];

	var _classCallCheck = __webpack_require__(330)['default'];

	var _objectWithoutProperties = __webpack_require__(338)['default'];

	var _extends = __webpack_require__(332)['default'];

	var _Object$assign = __webpack_require__(333)['default'];

	var _interopRequireDefault = __webpack_require__(249)['default'];

	exports.__esModule = true;

	var _classnames = __webpack_require__(340);

	var _classnames2 = _interopRequireDefault(_classnames);

	var _react = __webpack_require__(2);

	var _react2 = _interopRequireDefault(_react);

	var _utilsBootstrapUtils = __webpack_require__(341);

	var _utilsCreateChainedFunction = __webpack_require__(347);

	var _utilsCreateChainedFunction2 = _interopRequireDefault(_utilsCreateChainedFunction);

	var _utilsValidComponentChildren = __webpack_require__(348);

	var _utilsValidComponentChildren2 = _interopRequireDefault(_utilsValidComponentChildren);

	var propTypes = {
	  accordion: _react2['default'].PropTypes.bool,
	  activeKey: _react2['default'].PropTypes.any,
	  defaultActiveKey: _react2['default'].PropTypes.any,
	  onSelect: _react2['default'].PropTypes.func,
	  role: _react2['default'].PropTypes.string
	};

	var defaultProps = {
	  accordion: false
	};

	// TODO: Use uncontrollable.

	var PanelGroup = (function (_React$Component) {
	  _inherits(PanelGroup, _React$Component);

	  function PanelGroup(props, context) {
	    _classCallCheck(this, PanelGroup);

	    _React$Component.call(this, props, context);

	    this.handleSelect = this.handleSelect.bind(this);

	    this.state = {
	      activeKey: props.defaultActiveKey
	    };
	  }

	  PanelGroup.prototype.handleSelect = function handleSelect(key, e) {
	    e.preventDefault();

	    if (this.props.onSelect) {
	      this.props.onSelect(key, e);
	    }

	    if (this.state.activeKey === key) {
	      key = null;
	    }

	    this.setState({ activeKey: key });
	  };

	  PanelGroup.prototype.render = function render() {
	    var _this = this;

	    var _props = this.props;
	    var accordion = _props.accordion;
	    var propsActiveKey = _props.activeKey;
	    var className = _props.className;
	    var children = _props.children;

	    var props = _objectWithoutProperties(_props, ['accordion', 'activeKey', 'className', 'children']);

	    var _splitBsPropsAndOmit = _utilsBootstrapUtils.splitBsPropsAndOmit(props, ['defaultActiveKey', 'onSelect']);

	    var bsProps = _splitBsPropsAndOmit[0];
	    var elementProps = _splitBsPropsAndOmit[1];

	    var activeKey = undefined;
	    if (accordion) {
	      activeKey = propsActiveKey != null ? propsActiveKey : this.state.activeKey;
	      elementProps.role = elementProps.role || 'tablist';
	    }

	    var classes = _utilsBootstrapUtils.getClassSet(bsProps);

	    return _react2['default'].createElement(
	      'div',
	      _extends({}, elementProps, {
	        className: _classnames2['default'](className, classes)
	      }),
	      _utilsValidComponentChildren2['default'].map(children, function (child) {
	        var childProps = {
	          bsStyle: child.props.bsStyle || bsProps.bsStyle
	        };

	        if (accordion) {
	          _Object$assign(childProps, {
	            headerRole: 'tab',
	            panelRole: 'tabpanel',
	            collapsible: true,
	            expanded: child.props.eventKey === activeKey,
	            onSelect: _utilsCreateChainedFunction2['default'](_this.handleSelect, child.props.onSelect)
	          });
	        }

	        return _react.cloneElement(child, childProps);
	      })
	    );
	  };

	  return PanelGroup;
	})(_react2['default'].Component);

	PanelGroup.propTypes = propTypes;
	PanelGroup.defaultProps = defaultProps;

	exports['default'] = _utilsBootstrapUtils.bsClass('panel-group', PanelGroup);
	module.exports = exports['default'];

/***/ },
/* 338 */
/***/ function(module, exports, __webpack_require__) {

	module.exports = __webpack_require__(339);

/***/ },
/* 339 */
/***/ function(module, exports) {

	"use strict";

	exports.__esModule = true;

	exports.default = function (obj, keys) {
	  var target = {};

	  for (var i in obj) {
	    if (keys.indexOf(i) >= 0) continue;
	    if (!Object.prototype.hasOwnProperty.call(obj, i)) continue;
	    target[i] = obj[i];
	  }

	  return target;
	};

/***/ },
/* 340 */
/***/ function(module, exports, __webpack_require__) {

	var __WEBPACK_AMD_DEFINE_ARRAY__, __WEBPACK_AMD_DEFINE_RESULT__;/*!
	  Copyright (c) 2016 Jed Watson.
	  Licensed under the MIT License (MIT), see
	  http://jedwatson.github.io/classnames
	*/
	/* global define */

	(function () {
		'use strict';

		var hasOwn = {}.hasOwnProperty;

		function classNames () {
			var classes = [];

			for (var i = 0; i < arguments.length; i++) {
				var arg = arguments[i];
				if (!arg) continue;

				var argType = typeof arg;

				if (argType === 'string' || argType === 'number') {
					classes.push(arg);
				} else if (Array.isArray(arg)) {
					classes.push(classNames.apply(null, arg));
				} else if (argType === 'object') {
					for (var key in arg) {
						if (hasOwn.call(arg, key) && arg[key]) {
							classes.push(key);
						}
					}
				}
			}

			return classes.join(' ');
		}

		if (typeof module !== 'undefined' && module.exports) {
			module.exports = classNames;
		} else if (true) {
			// register as 'classnames', consistent with npm package name
			!(__WEBPACK_AMD_DEFINE_ARRAY__ = [], __WEBPACK_AMD_DEFINE_RESULT__ = function () {
				return classNames;
			}.apply(exports, __WEBPACK_AMD_DEFINE_ARRAY__), __WEBPACK_AMD_DEFINE_RESULT__ !== undefined && (module.exports = __WEBPACK_AMD_DEFINE_RESULT__));
		} else {
			window.classNames = classNames;
		}
	}());


/***/ },
/* 341 */
/***/ function(module, exports, __webpack_require__) {

	/* WEBPACK VAR INJECTION */(function(process) {// TODO: The publicly exposed parts of this should be in lib/BootstrapUtils.

	'use strict';

	var _extends = __webpack_require__(332)['default'];

	var _Object$entries = __webpack_require__(342)['default'];

	var _interopRequireDefault = __webpack_require__(249)['default'];

	exports.__esModule = true;
	exports.prefix = prefix;
	exports.getClassSet = getClassSet;
	exports.splitBsProps = splitBsProps;
	exports.splitBsPropsAndOmit = splitBsPropsAndOmit;
	exports.addStyle = addStyle;

	var _invariant = __webpack_require__(181);

	var _invariant2 = _interopRequireDefault(_invariant);

	var _react = __webpack_require__(2);

	var _StyleConfig = __webpack_require__(346);

	function curry(fn) {
	  return function () {
	    for (var _len = arguments.length, args = Array(_len), _key = 0; _key < _len; _key++) {
	      args[_key] = arguments[_key];
	    }

	    var last = args[args.length - 1];
	    if (typeof last === 'function') {
	      return fn.apply(undefined, args);
	    }
	    return function (Component) {
	      return fn.apply(undefined, args.concat([Component]));
	    };
	  };
	}

	function prefix(props, variant) {
	  !(props.bsClass != null) ? process.env.NODE_ENV !== 'production' ? _invariant2['default'](false, 'A `bsClass` prop is required for this component') : _invariant2['default'](false) : undefined;
	  return props.bsClass + (variant ? '-' + variant : '');
	}

	var bsClass = curry(function (defaultClass, Component) {
	  var propTypes = Component.propTypes || (Component.propTypes = {});
	  var defaultProps = Component.defaultProps || (Component.defaultProps = {});

	  propTypes.bsClass = _react.PropTypes.string;
	  defaultProps.bsClass = defaultClass;

	  return Component;
	});

	exports.bsClass = bsClass;
	var bsStyles = curry(function (styles, defaultStyle, Component) {
	  if (typeof defaultStyle !== 'string') {
	    Component = defaultStyle;
	    defaultStyle = undefined;
	  }

	  var existing = Component.STYLES || [];
	  var propTypes = Component.propTypes || {};

	  styles.forEach(function (style) {
	    if (existing.indexOf(style) === -1) {
	      existing.push(style);
	    }
	  });

	  var propType = _react.PropTypes.oneOf(existing);

	  // expose the values on the propType function for documentation
	  Component.STYLES = propType._values = existing;

	  Component.propTypes = _extends({}, propTypes, {
	    bsStyle: propType
	  });

	  if (defaultStyle !== undefined) {
	    var defaultProps = Component.defaultProps || (Component.defaultProps = {});
	    defaultProps.bsStyle = defaultStyle;
	  }

	  return Component;
	});

	exports.bsStyles = bsStyles;
	var bsSizes = curry(function (sizes, defaultSize, Component) {
	  if (typeof defaultSize !== 'string') {
	    Component = defaultSize;
	    defaultSize = undefined;
	  }

	  var existing = Component.SIZES || [];
	  var propTypes = Component.propTypes || {};

	  sizes.forEach(function (size) {
	    if (existing.indexOf(size) === -1) {
	      existing.push(size);
	    }
	  });

	  var values = [];
	  existing.forEach(function (size) {
	    var mappedSize = _StyleConfig.SIZE_MAP[size];
	    if (mappedSize && mappedSize !== size) {
	      values.push(mappedSize);
	    }

	    values.push(size);
	  });

	  var propType = _react.PropTypes.oneOf(values);
	  propType._values = values;

	  // expose the values on the propType function for documentation
	  Component.SIZES = existing;

	  Component.propTypes = _extends({}, propTypes, {
	    bsSize: propType
	  });

	  if (defaultSize !== undefined) {
	    if (!Component.defaultProps) {
	      Component.defaultProps = {};
	    }
	    Component.defaultProps.bsSize = defaultSize;
	  }

	  return Component;
	});

	exports.bsSizes = bsSizes;

	function getClassSet(props) {
	  var _classes;

	  var classes = (_classes = {}, _classes[prefix(props)] = true, _classes);

	  if (props.bsSize) {
	    var bsSize = _StyleConfig.SIZE_MAP[props.bsSize] || props.bsSize;
	    classes[prefix(props, bsSize)] = true;
	  }

	  if (props.bsStyle) {
	    classes[prefix(props, props.bsStyle)] = true;
	  }

	  return classes;
	}

	function getBsProps(props) {
	  return {
	    bsClass: props.bsClass,
	    bsSize: props.bsSize,
	    bsStyle: props.bsStyle,
	    bsRole: props.bsRole
	  };
	}

	function isBsProp(propName) {
	  return propName === 'bsClass' || propName === 'bsSize' || propName === 'bsStyle' || propName === 'bsRole';
	}

	function splitBsProps(props) {
	  var elementProps = {};
	  _Object$entries(props).forEach(function (_ref) {
	    var propName = _ref[0];
	    var propValue = _ref[1];

	    if (!isBsProp(propName)) {
	      elementProps[propName] = propValue;
	    }
	  });

	  return [getBsProps(props), elementProps];
	}

	function splitBsPropsAndOmit(props, omittedPropNames) {
	  var isOmittedProp = {};
	  omittedPropNames.forEach(function (propName) {
	    isOmittedProp[propName] = true;
	  });

	  var elementProps = {};
	  _Object$entries(props).forEach(function (_ref2) {
	    var propName = _ref2[0];
	    var propValue = _ref2[1];

	    if (!isBsProp(propName) && !isOmittedProp[propName]) {
	      elementProps[propName] = propValue;
	    }
	  });

	  return [getBsProps(props), elementProps];
	}

	/**
	 * Add a style variant to a Component. Mutates the propTypes of the component
	 * in order to validate the new variant.
	 */

	function addStyle(Component) {
	  for (var _len2 = arguments.length, styleVariant = Array(_len2 > 1 ? _len2 - 1 : 0), _key2 = 1; _key2 < _len2; _key2++) {
	    styleVariant[_key2 - 1] = arguments[_key2];
	  }

	  bsStyles(styleVariant, Component);
	}

	var _curry = curry;
	exports._curry = _curry;
	/* WEBPACK VAR INJECTION */}.call(exports, __webpack_require__(4)))

/***/ },
/* 342 */
/***/ function(module, exports, __webpack_require__) {

	module.exports = { "default": __webpack_require__(343), __esModule: true };

/***/ },
/* 343 */
/***/ function(module, exports, __webpack_require__) {

	__webpack_require__(344);
	module.exports = __webpack_require__(260).Object.entries;

/***/ },
/* 344 */
/***/ function(module, exports, __webpack_require__) {

	// https://github.com/tc39/proposal-object-values-entries
	var $export  = __webpack_require__(258)
	  , $entries = __webpack_require__(345)(true);

	$export($export.S, 'Object', {
	  entries: function entries(it){
	    return $entries(it);
	  }
	});

/***/ },
/* 345 */
/***/ function(module, exports, __webpack_require__) {

	var getKeys   = __webpack_require__(286)
	  , toIObject = __webpack_require__(276)
	  , isEnum    = __webpack_require__(275).f;
	module.exports = function(isEntries){
	  return function(it){
	    var O      = toIObject(it)
	      , keys   = getKeys(O)
	      , length = keys.length
	      , i      = 0
	      , result = []
	      , key;
	    while(length > i)if(isEnum.call(O, key = keys[i++])){
	      result.push(isEntries ? [key, O[key]] : O[key]);
	    } return result;
	  };
	};

/***/ },
/* 346 */
/***/ function(module, exports) {

	'use strict';

	exports.__esModule = true;
	var Size = {
	  LARGE: 'large',
	  SMALL: 'small',
	  XSMALL: 'xsmall'
	};

	exports.Size = Size;
	var SIZE_MAP = {
	  large: 'lg',
	  medium: 'md',
	  small: 'sm',
	  xsmall: 'xs',
	  lg: 'lg',
	  md: 'md',
	  sm: 'sm',
	  xs: 'xs'
	};

	exports.SIZE_MAP = SIZE_MAP;
	var DEVICE_SIZES = ['lg', 'md', 'sm', 'xs'];

	exports.DEVICE_SIZES = DEVICE_SIZES;
	var State = {
	  SUCCESS: 'success',
	  WARNING: 'warning',
	  DANGER: 'danger',
	  INFO: 'info'
	};

	exports.State = State;
	var Style = {
	  DEFAULT: 'default',
	  PRIMARY: 'primary',
	  LINK: 'link',
	  INVERSE: 'inverse'
	};
	exports.Style = Style;

/***/ },
/* 347 */
/***/ function(module, exports) {

	/**
	 * Safe chained function
	 *
	 * Will only create a new function if needed,
	 * otherwise will pass back existing functions or null.
	 *
	 * @param {function} functions to chain
	 * @returns {function|null}
	 */
	'use strict';

	exports.__esModule = true;
	function createChainedFunction() {
	  for (var _len = arguments.length, funcs = Array(_len), _key = 0; _key < _len; _key++) {
	    funcs[_key] = arguments[_key];
	  }

	  return funcs.filter(function (f) {
	    return f != null;
	  }).reduce(function (acc, f) {
	    if (typeof f !== 'function') {
	      throw new Error('Invalid Argument Type, must only provide functions, undefined, or null.');
	    }

	    if (acc === null) {
	      return f;
	    }

	    return function chainedFunction() {
	      for (var _len2 = arguments.length, args = Array(_len2), _key2 = 0; _key2 < _len2; _key2++) {
	        args[_key2] = arguments[_key2];
	      }

	      acc.apply(this, args);
	      f.apply(this, args);
	    };
	  }, null);
	}

	exports['default'] = createChainedFunction;
	module.exports = exports['default'];

/***/ },
/* 348 */
/***/ function(module, exports, __webpack_require__) {

	// TODO: This module should be ElementChildren, and should use named exports.

	'use strict';

	var _interopRequireDefault = __webpack_require__(249)['default'];

	exports.__esModule = true;

	var _react = __webpack_require__(2);

	var _react2 = _interopRequireDefault(_react);

	/**
	 * Iterates through children that are typically specified as `props.children`,
	 * but only maps over children that are "valid components".
	 *
	 * The mapFunction provided index will be normalised to the components mapped,
	 * so an invalid component would not increase the index.
	 *
	 * @param {?*} children Children tree container.
	 * @param {function(*, int)} func.
	 * @param {*} context Context for func.
	 * @return {object} Object containing the ordered map of results.
	 */
	function map(children, func, context) {
	  var index = 0;

	  return _react2['default'].Children.map(children, function (child) {
	    if (!_react2['default'].isValidElement(child)) {
	      return child;
	    }

	    return func.call(context, child, index++);
	  });
	}

	/**
	 * Iterates through children that are "valid components".
	 *
	 * The provided forEachFunc(child, index) will be called for each
	 * leaf child with the index reflecting the position relative to "valid components".
	 *
	 * @param {?*} children Children tree container.
	 * @param {function(*, int)} func.
	 * @param {*} context Context for context.
	 */
	function forEach(children, func, context) {
	  var index = 0;

	  _react2['default'].Children.forEach(children, function (child) {
	    if (!_react2['default'].isValidElement(child)) {
	      return;
	    }

	    func.call(context, child, index++);
	  });
	}

	/**
	 * Count the number of "valid components" in the Children container.
	 *
	 * @param {?*} children Children tree container.
	 * @returns {number}
	 */
	function count(children) {
	  var result = 0;

	  _react2['default'].Children.forEach(children, function (child) {
	    if (!_react2['default'].isValidElement(child)) {
	      return;
	    }

	    ++result;
	  });

	  return result;
	}

	/**
	 * Finds children that are typically specified as `props.children`,
	 * but only iterates over children that are "valid components".
	 *
	 * The provided forEachFunc(child, index) will be called for each
	 * leaf child with the index reflecting the position relative to "valid components".
	 *
	 * @param {?*} children Children tree container.
	 * @param {function(*, int)} func.
	 * @param {*} context Context for func.
	 * @returns {array} of children that meet the func return statement
	 */
	function filter(children, func, context) {
	  var index = 0;
	  var result = [];

	  _react2['default'].Children.forEach(children, function (child) {
	    if (!_react2['default'].isValidElement(child)) {
	      return;
	    }

	    if (func.call(context, child, index++)) {
	      result.push(child);
	    }
	  });

	  return result;
	}

	function find(children, func, context) {
	  var index = 0;
	  var result = undefined;

	  _react2['default'].Children.forEach(children, function (child) {
	    if (result) {
	      return;
	    }
	    if (!_react2['default'].isValidElement(child)) {
	      return;
	    }

	    if (func.call(context, child, index++)) {
	      result = child;
	    }
	  });

	  return result;
	}

	function every(children, func, context) {
	  var index = 0;
	  var result = true;

	  _react2['default'].Children.forEach(children, function (child) {
	    if (!result) {
	      return;
	    }
	    if (!_react2['default'].isValidElement(child)) {
	      return;
	    }

	    if (!func.call(context, child, index++)) {
	      result = false;
	    }
	  });

	  return result;
	}

	function some(children, func, context) {
	  var index = 0;
	  var result = false;

	  _react2['default'].Children.forEach(children, function (child) {
	    if (result) {
	      return;
	    }
	    if (!_react2['default'].isValidElement(child)) {
	      return;
	    }

	    if (func.call(context, child, index++)) {
	      result = true;
	    }
	  });

	  return result;
	}

	function toArray(children) {
	  var result = [];

	  _react2['default'].Children.forEach(children, function (child) {
	    if (!_react2['default'].isValidElement(child)) {
	      return;
	    }

	    result.push(child);
	  });

	  return result;
	}

	exports['default'] = {
	  map: map,
	  forEach: forEach,
	  count: count,
	  find: find,
	  filter: filter,
	  every: every,
	  some: some,
	  toArray: toArray
	};
	module.exports = exports['default'];

/***/ },
/* 349 */
/***/ function(module, exports, __webpack_require__) {

	'use strict';

	var _inherits = __webpack_require__(254)['default'];

	var _classCallCheck = __webpack_require__(330)['default'];

	var _extends = __webpack_require__(332)['default'];

	var _objectWithoutProperties = __webpack_require__(338)['default'];

	var _Object$values = __webpack_require__(350)['default'];

	var _interopRequireDefault = __webpack_require__(249)['default'];

	exports.__esModule = true;

	var _classnames = __webpack_require__(340);

	var _classnames2 = _interopRequireDefault(_classnames);

	var _react = __webpack_require__(2);

	var _react2 = _interopRequireDefault(_react);

	var _utilsBootstrapUtils = __webpack_require__(341);

	var _utilsStyleConfig = __webpack_require__(346);

	var propTypes = {
	  onDismiss: _react2['default'].PropTypes.func,
	  closeLabel: _react2['default'].PropTypes.string
	};

	var defaultProps = {
	  closeLabel: 'Close alert'
	};

	var Alert = (function (_React$Component) {
	  _inherits(Alert, _React$Component);

	  function Alert() {
	    _classCallCheck(this, Alert);

	    _React$Component.apply(this, arguments);
	  }

	  Alert.prototype.renderDismissButton = function renderDismissButton(onDismiss) {
	    return _react2['default'].createElement(
	      'button',
	      {
	        type: 'button',
	        className: 'close',
	        onClick: onDismiss,
	        'aria-hidden': 'true',
	        tabIndex: '-1'
	      },
	      _react2['default'].createElement(
	        'span',
	        null,
	        '×'
	      )
	    );
	  };

	  Alert.prototype.renderSrOnlyDismissButton = function renderSrOnlyDismissButton(onDismiss, closeLabel) {
	    return _react2['default'].createElement(
	      'button',
	      {
	        type: 'button',
	        className: 'close sr-only',
	        onClick: onDismiss
	      },
	      closeLabel
	    );
	  };

	  Alert.prototype.render = function render() {
	    var _extends2;

	    var _props = this.props;
	    var onDismiss = _props.onDismiss;
	    var closeLabel = _props.closeLabel;
	    var className = _props.className;
	    var children = _props.children;

	    var props = _objectWithoutProperties(_props, ['onDismiss', 'closeLabel', 'className', 'children']);

	    var _splitBsProps = _utilsBootstrapUtils.splitBsProps(props);

	    var bsProps = _splitBsProps[0];
	    var elementProps = _splitBsProps[1];

	    var dismissable = !!onDismiss;
	    var classes = _extends({}, _utilsBootstrapUtils.getClassSet(bsProps), (_extends2 = {}, _extends2[_utilsBootstrapUtils.prefix(bsProps, 'dismissable')] = dismissable, _extends2));

	    return _react2['default'].createElement(
	      'div',
	      _extends({}, elementProps, {
	        role: 'alert',
	        className: _classnames2['default'](className, classes)
	      }),
	      dismissable && this.renderDismissButton(onDismiss),
	      children,
	      dismissable && this.renderSrOnlyDismissButton(onDismiss, closeLabel)
	    );
	  };

	  return Alert;
	})(_react2['default'].Component);

	Alert.propTypes = propTypes;
	Alert.defaultProps = defaultProps;

	exports['default'] = _utilsBootstrapUtils.bsStyles(_Object$values(_utilsStyleConfig.State), _utilsStyleConfig.State.INFO, _utilsBootstrapUtils.bsClass('alert', Alert));
	module.exports = exports['default'];

/***/ },
/* 350 */
/***/ function(module, exports, __webpack_require__) {

	module.exports = { "default": __webpack_require__(351), __esModule: true };

/***/ },
/* 351 */
/***/ function(module, exports, __webpack_require__) {

	__webpack_require__(352);
	module.exports = __webpack_require__(260).Object.values;

/***/ },
/* 352 */
/***/ function(module, exports, __webpack_require__) {

	// https://github.com/tc39/proposal-object-values-entries
	var $export = __webpack_require__(258)
	  , $values = __webpack_require__(345)(false);

	$export($export.S, 'Object', {
	  values: function values(it){
	    return $values(it);
	  }
	});

/***/ },
/* 353 */
/***/ function(module, exports, __webpack_require__) {

	'use strict';

	var _inherits = __webpack_require__(254)['default'];

	var _classCallCheck = __webpack_require__(330)['default'];

	var _extends = __webpack_require__(332)['default'];

	var _objectWithoutProperties = __webpack_require__(338)['default'];

	var _interopRequireDefault = __webpack_require__(249)['default'];

	exports.__esModule = true;

	var _classnames = __webpack_require__(340);

	var _classnames2 = _interopRequireDefault(_classnames);

	var _react = __webpack_require__(2);

	var _react2 = _interopRequireDefault(_react);

	var _utilsBootstrapUtils = __webpack_require__(341);

	// TODO: `pullRight` doesn't belong here. There's no special handling here.

	var propTypes = {
	  pullRight: _react2['default'].PropTypes.bool
	};

	var defaultProps = {
	  pullRight: false
	};

	var Badge = (function (_React$Component) {
	  _inherits(Badge, _React$Component);

	  function Badge() {
	    _classCallCheck(this, Badge);

	    _React$Component.apply(this, arguments);
	  }

	  Badge.prototype.hasContent = function hasContent(children) {
	    var result = false;

	    _react2['default'].Children.forEach(children, function (child) {
	      if (result) {
	        return;
	      }

	      if (child || child === 0) {
	        result = true;
	      }
	    });

	    return result;
	  };

	  Badge.prototype.render = function render() {
	    var _props = this.props;
	    var pullRight = _props.pullRight;
	    var className = _props.className;
	    var children = _props.children;

	    var props = _objectWithoutProperties(_props, ['pullRight', 'className', 'children']);

	    var _splitBsProps = _utilsBootstrapUtils.splitBsProps(props);

	    var bsProps = _splitBsProps[0];
	    var elementProps = _splitBsProps[1];

	    var classes = _extends({}, _utilsBootstrapUtils.getClassSet(bsProps), {
	      'pull-right': pullRight,

	      // Hack for collapsing on IE8.
	      hidden: !this.hasContent(children)
	    });

	    return _react2['default'].createElement(
	      'span',
	      _extends({}, elementProps, {
	        className: _classnames2['default'](className, classes)
	      }),
	      children
	    );
	  };

	  return Badge;
	})(_react2['default'].Component);

	Badge.propTypes = propTypes;
	Badge.defaultProps = defaultProps;

	exports['default'] = _utilsBootstrapUtils.bsClass('badge', Badge);
	module.exports = exports['default'];

/***/ },
/* 354 */
/***/ function(module, exports, __webpack_require__) {

	'use strict';

	var _inherits = __webpack_require__(254)['default'];

	var _classCallCheck = __webpack_require__(330)['default'];

	var _objectWithoutProperties = __webpack_require__(338)['default'];

	var _extends = __webpack_require__(332)['default'];

	var _interopRequireDefault = __webpack_require__(249)['default'];

	exports.__esModule = true;

	var _classnames = __webpack_require__(340);

	var _classnames2 = _interopRequireDefault(_classnames);

	var _react = __webpack_require__(2);

	var _react2 = _interopRequireDefault(_react);

	var _BreadcrumbItem = __webpack_require__(355);

	var _BreadcrumbItem2 = _interopRequireDefault(_BreadcrumbItem);

	var _utilsBootstrapUtils = __webpack_require__(341);

	var Breadcrumb = (function (_React$Component) {
	  _inherits(Breadcrumb, _React$Component);

	  function Breadcrumb() {
	    _classCallCheck(this, Breadcrumb);

	    _React$Component.apply(this, arguments);
	  }

	  Breadcrumb.prototype.render = function render() {
	    var _props = this.props;
	    var className = _props.className;

	    var props = _objectWithoutProperties(_props, ['className']);

	    var _splitBsProps = _utilsBootstrapUtils.splitBsProps(props);

	    var bsProps = _splitBsProps[0];
	    var elementProps = _splitBsProps[1];

	    var classes = _utilsBootstrapUtils.getClassSet(bsProps);

	    return _react2['default'].createElement('ol', _extends({}, elementProps, {
	      role: 'navigation',
	      'aria-label': 'breadcrumbs',
	      className: _classnames2['default'](className, classes)
	    }));
	  };

	  return Breadcrumb;
	})(_react2['default'].Component);

	Breadcrumb.Item = _BreadcrumbItem2['default'];

	exports['default'] = _utilsBootstrapUtils.bsClass('breadcrumb', Breadcrumb);
	module.exports = exports['default'];

/***/ },
/* 355 */
/***/ function(module, exports, __webpack_require__) {

	'use strict';

	var _inherits = __webpack_require__(254)['default'];

	var _classCallCheck = __webpack_require__(330)['default'];

	var _objectWithoutProperties = __webpack_require__(338)['default'];

	var _extends = __webpack_require__(332)['default'];

	var _interopRequireDefault = __webpack_require__(249)['default'];

	exports.__esModule = true;

	var _classnames = __webpack_require__(340);

	var _classnames2 = _interopRequireDefault(_classnames);

	var _react = __webpack_require__(2);

	var _react2 = _interopRequireDefault(_react);

	var _SafeAnchor = __webpack_require__(356);

	var _SafeAnchor2 = _interopRequireDefault(_SafeAnchor);

	var propTypes = {
	  /**
	   * If set to true, renders `span` instead of `a`
	   */
	  active: _react2['default'].PropTypes.bool,
	  /**
	   * `href` attribute for the inner `a` element
	   */
	  href: _react2['default'].PropTypes.string,
	  /**
	   * `title` attribute for the inner `a` element
	   */
	  title: _react2['default'].PropTypes.node,
	  /**
	   * `target` attribute for the inner `a` element
	   */
	  target: _react2['default'].PropTypes.string
	};

	var defaultProps = {
	  active: false
	};

	var BreadcrumbItem = (function (_React$Component) {
	  _inherits(BreadcrumbItem, _React$Component);

	  function BreadcrumbItem() {
	    _classCallCheck(this, BreadcrumbItem);

	    _React$Component.apply(this, arguments);
	  }

	  BreadcrumbItem.prototype.render = function render() {
	    var _props = this.props;
	    var active = _props.active;
	    var href = _props.href;
	    var title = _props.title;
	    var target = _props.target;
	    var className = _props.className;

	    var props = _objectWithoutProperties(_props, ['active', 'href', 'title', 'target', 'className']);

	    // Don't try to render these props on non-active <span>.
	    var linkProps = { href: href, title: title, target: target };

	    return _react2['default'].createElement(
	      'li',
	      { className: _classnames2['default'](className, { active: active }) },
	      active ? _react2['default'].createElement('span', props) : _react2['default'].createElement(_SafeAnchor2['default'], _extends({}, props, linkProps))
	    );
	  };

	  return BreadcrumbItem;
	})(_react2['default'].Component);

	BreadcrumbItem.propTypes = propTypes;
	BreadcrumbItem.defaultProps = defaultProps;

	exports['default'] = BreadcrumbItem;
	module.exports = exports['default'];

/***/ },
/* 356 */
/***/ function(module, exports, __webpack_require__) {

	'use strict';

	var _inherits = __webpack_require__(254)['default'];

	var _classCallCheck = __webpack_require__(330)['default'];

	var _extends = __webpack_require__(332)['default'];

	var _objectWithoutProperties = __webpack_require__(338)['default'];

	var _interopRequireDefault = __webpack_require__(249)['default'];

	exports.__esModule = true;

	var _react = __webpack_require__(2);

	var _react2 = _interopRequireDefault(_react);

	var _reactPropTypesLibElementType = __webpack_require__(357);

	var _reactPropTypesLibElementType2 = _interopRequireDefault(_reactPropTypesLibElementType);

	var propTypes = {
	  href: _react2['default'].PropTypes.string,
	  onClick: _react2['default'].PropTypes.func,
	  disabled: _react2['default'].PropTypes.bool,
	  role: _react2['default'].PropTypes.string,
	  tabIndex: _react2['default'].PropTypes.oneOfType([_react2['default'].PropTypes.number, _react2['default'].PropTypes.string]),
	  /**
	   * this is sort of silly but needed for Button
	   */
	  componentClass: _reactPropTypesLibElementType2['default']
	};

	var defaultProps = {
	  componentClass: 'a'
	};

	function isTrivialHref(href) {
	  return !href || href.trim() === '#';
	}

	/**
	 * There are situations due to browser quirks or Bootstrap CSS where
	 * an anchor tag is needed, when semantically a button tag is the
	 * better choice. SafeAnchor ensures that when an anchor is used like a
	 * button its accessible. It also emulates input `disabled` behavior for
	 * links, which is usually desirable for Buttons, NavItems, MenuItems, etc.
	 */

	var SafeAnchor = (function (_React$Component) {
	  _inherits(SafeAnchor, _React$Component);

	  function SafeAnchor(props, context) {
	    _classCallCheck(this, SafeAnchor);

	    _React$Component.call(this, props, context);

	    this.handleClick = this.handleClick.bind(this);
	  }

	  SafeAnchor.prototype.handleClick = function handleClick(event) {
	    var _props = this.props;
	    var disabled = _props.disabled;
	    var href = _props.href;
	    var onClick = _props.onClick;

	    if (disabled || isTrivialHref(href)) {
	      event.preventDefault();
	    }

	    if (disabled) {
	      event.stopPropagation();
	      return;
	    }

	    if (onClick) {
	      onClick(event);
	    }
	  };

	  SafeAnchor.prototype.render = function render() {
	    var _props2 = this.props;
	    var Component = _props2.componentClass;
	    var disabled = _props2.disabled;

	    var props = _objectWithoutProperties(_props2, ['componentClass', 'disabled']);

	    if (isTrivialHref(props.href)) {
	      props.role = props.role || 'button';
	      // we want to make sure there is a href attribute on the node
	      // otherwise, the cursor incorrectly styled (except with role='button')
	      props.href = props.href || '';
	    }

	    if (disabled) {
	      props.tabIndex = -1;
	      props.style = _extends({ pointerEvents: 'none' }, props.style);
	    }

	    return _react2['default'].createElement(Component, _extends({}, props, {
	      onClick: this.handleClick
	    }));
	  };

	  return SafeAnchor;
	})(_react2['default'].Component);

	SafeAnchor.propTypes = propTypes;
	SafeAnchor.defaultProps = defaultProps;

	exports['default'] = SafeAnchor;
	module.exports = exports['default'];

/***/ },
/* 357 */
/***/ function(module, exports, __webpack_require__) {

	'use strict';

	exports.__esModule = true;

	function _interopRequireDefault(obj) { return obj && obj.__esModule ? obj : { 'default': obj }; }

	var _react = __webpack_require__(2);

	var _react2 = _interopRequireDefault(_react);

	var _common = __webpack_require__(358);

	/**
	 * Checks whether a prop provides a type of element.
	 *
	 * The type of element can be provided in two forms:
	 * - tag name (string)
	 * - a return value of React.createClass(...)
	 *
	 * @param props
	 * @param propName
	 * @param componentName
	 * @returns {Error|undefined}
	 */

	function validate(props, propName, componentName) {
	  var errBeginning = _common.errMsg(props, propName, componentName, '. Expected an Element `type`');

	  if (typeof props[propName] !== 'function') {
	    if (_react2['default'].isValidElement(props[propName])) {
	      return new Error(errBeginning + ', not an actual Element');
	    }

	    if (typeof props[propName] !== 'string') {
	      return new Error(errBeginning + ' such as a tag name or return value of React.createClass(...)');
	    }
	  }
	}

	exports['default'] = _common.createChainableTypeChecker(validate);
	module.exports = exports['default'];

/***/ },
/* 358 */
/***/ function(module, exports) {

	'use strict';

	exports.__esModule = true;
	exports.errMsg = errMsg;
	exports.createChainableTypeChecker = createChainableTypeChecker;

	function errMsg(props, propName, componentName, msgContinuation) {
	  return 'Invalid prop \'' + propName + '\' of value \'' + props[propName] + '\'' + (' supplied to \'' + componentName + '\'' + msgContinuation);
	}

	/**
	 * Create chain-able isRequired validator
	 *
	 * Largely copied directly from:
	 *  https://github.com/facebook/react/blob/0.11-stable/src/core/ReactPropTypes.js#L94
	 */

	function createChainableTypeChecker(validate) {
	  function checkType(isRequired, props, propName, componentName) {
	    componentName = componentName || '<<anonymous>>';
	    if (props[propName] == null) {
	      if (isRequired) {
	        return new Error('Required prop \'' + propName + '\' was not specified in \'' + componentName + '\'.');
	      }
	    } else {
	      return validate(props, propName, componentName);
	    }
	  }

	  var chainedCheckType = checkType.bind(null, false);
	  chainedCheckType.isRequired = checkType.bind(null, true);

	  return chainedCheckType;
	}

/***/ },
/* 359 */
/***/ function(module, exports, __webpack_require__) {

	'use strict';

	var _inherits = __webpack_require__(254)['default'];

	var _classCallCheck = __webpack_require__(330)['default'];

	var _extends = __webpack_require__(332)['default'];

	var _objectWithoutProperties = __webpack_require__(338)['default'];

	var _Object$values = __webpack_require__(350)['default'];

	var _interopRequireDefault = __webpack_require__(249)['default'];

	exports.__esModule = true;

	var _classnames = __webpack_require__(340);

	var _classnames2 = _interopRequireDefault(_classnames);

	var _react = __webpack_require__(2);

	var _react2 = _interopRequireDefault(_react);

	var _reactPropTypesLibElementType = __webpack_require__(357);

	var _reactPropTypesLibElementType2 = _interopRequireDefault(_reactPropTypesLibElementType);

	var _utilsBootstrapUtils = __webpack_require__(341);

	var _utilsStyleConfig = __webpack_require__(346);

	var _SafeAnchor = __webpack_require__(356);

	var _SafeAnchor2 = _interopRequireDefault(_SafeAnchor);

	var propTypes = {
	  active: _react2['default'].PropTypes.bool,
	  disabled: _react2['default'].PropTypes.bool,
	  block: _react2['default'].PropTypes.bool,
	  onClick: _react2['default'].PropTypes.func,
	  componentClass: _reactPropTypesLibElementType2['default'],
	  href: _react2['default'].PropTypes.string,
	  /**
	   * Defines HTML button type attribute
	   * @defaultValue 'button'
	   */
	  type: _react2['default'].PropTypes.oneOf(['button', 'reset', 'submit'])
	};

	var defaultProps = {
	  active: false,
	  block: false,
	  disabled: false
	};

	var Button = (function (_React$Component) {
	  _inherits(Button, _React$Component);

	  function Button() {
	    _classCallCheck(this, Button);

	    _React$Component.apply(this, arguments);
	  }

	  Button.prototype.renderAnchor = function renderAnchor(elementProps, className) {
	    return _react2['default'].createElement(_SafeAnchor2['default'], _extends({}, elementProps, {
	      className: _classnames2['default'](className, elementProps.disabled && 'disabled')
	    }));
	  };

	  Button.prototype.renderButton = function renderButton(_ref, className) {
	    var componentClass = _ref.componentClass;

	    var elementProps = _objectWithoutProperties(_ref, ['componentClass']);

	    var Component = componentClass || 'button';

	    return _react2['default'].createElement(Component, _extends({}, elementProps, {
	      type: elementProps.type || 'button',
	      className: className
	    }));
	  };

	  Button.prototype.render = function render() {
	    var _extends2;

	    var _props = this.props;
	    var active = _props.active;
	    var block = _props.block;
	    var className = _props.className;

	    var props = _objectWithoutProperties(_props, ['active', 'block', 'className']);

	    var _splitBsProps = _utilsBootstrapUtils.splitBsProps(props);

	    var bsProps = _splitBsProps[0];
	    var elementProps = _splitBsProps[1];

	    var classes = _extends({}, _utilsBootstrapUtils.getClassSet(bsProps), (_extends2 = {
	      active: active
	    }, _extends2[_utilsBootstrapUtils.prefix(bsProps, 'block')] = block, _extends2));
	    var fullClassName = _classnames2['default'](className, classes);

	    if (elementProps.href) {
	      return this.renderAnchor(elementProps, fullClassName);
	    }

	    return this.renderButton(elementProps, fullClassName);
	  };

	  return Button;
	})(_react2['default'].Component);

	Button.propTypes = propTypes;
	Button.defaultProps = defaultProps;

	exports['default'] = _utilsBootstrapUtils.bsClass('btn', _utilsBootstrapUtils.bsSizes([_utilsStyleConfig.Size.LARGE, _utilsStyleConfig.Size.SMALL, _utilsStyleConfig.Size.XSMALL], _utilsBootstrapUtils.bsStyles([].concat(_Object$values(_utilsStyleConfig.State), [_utilsStyleConfig.Style.DEFAULT, _utilsStyleConfig.Style.PRIMARY, _utilsStyleConfig.Style.LINK]), _utilsStyleConfig.Style.DEFAULT, Button)));
	module.exports = exports['default'];

/***/ },
/* 360 */
/***/ function(module, exports, __webpack_require__) {

	'use strict';

	var _inherits = __webpack_require__(254)['default'];

	var _classCallCheck = __webpack_require__(330)['default'];

	var _extends = __webpack_require__(332)['default'];

	var _objectWithoutProperties = __webpack_require__(338)['default'];

	var _interopRequireDefault = __webpack_require__(249)['default'];

	exports.__esModule = true;

	var _classnames = __webpack_require__(340);

	var _classnames2 = _interopRequireDefault(_classnames);

	var _react = __webpack_require__(2);

	var _react2 = _interopRequireDefault(_react);

	var _reactPropTypesLibAll = __webpack_require__(361);

	var _reactPropTypesLibAll2 = _interopRequireDefault(_reactPropTypesLibAll);

	var _Button = __webpack_require__(359);

	var _Button2 = _interopRequireDefault(_Button);

	var _utilsBootstrapUtils = __webpack_require__(341);

	var propTypes = {
	  vertical: _react2['default'].PropTypes.bool,
	  justified: _react2['default'].PropTypes.bool,

	  /**
	   * Display block buttons; only useful when used with the "vertical" prop.
	   * @type {bool}
	   */
	  block: _reactPropTypesLibAll2['default'](_react2['default'].PropTypes.bool, function (_ref) {
	    var block = _ref.block;
	    var vertical = _ref.vertical;
	    return block && !vertical ? new Error('`block` requires `vertical` to be set to have any effect') : null;
	  })
	};

	var defaultProps = {
	  block: false,
	  justified: false,
	  vertical: false
	};

	var ButtonGroup = (function (_React$Component) {
	  _inherits(ButtonGroup, _React$Component);

	  function ButtonGroup() {
	    _classCallCheck(this, ButtonGroup);

	    _React$Component.apply(this, arguments);
	  }

	  ButtonGroup.prototype.render = function render() {
	    var _extends2;

	    var _props = this.props;
	    var block = _props.block;
	    var justified = _props.justified;
	    var vertical = _props.vertical;
	    var className = _props.className;

	    var props = _objectWithoutProperties(_props, ['block', 'justified', 'vertical', 'className']);

	    var _splitBsProps = _utilsBootstrapUtils.splitBsProps(props);

	    var bsProps = _splitBsProps[0];
	    var elementProps = _splitBsProps[1];

	    var classes = _extends({}, _utilsBootstrapUtils.getClassSet(bsProps), (_extends2 = {}, _extends2[_utilsBootstrapUtils.prefix(bsProps)] = !vertical, _extends2[_utilsBootstrapUtils.prefix(bsProps, 'vertical')] = vertical, _extends2[_utilsBootstrapUtils.prefix(bsProps, 'justified')] = justified, _extends2[_utilsBootstrapUtils.prefix(_Button2['default'].defaultProps, 'block')] = block, _extends2));

	    return _react2['default'].createElement('div', _extends({}, elementProps, {
	      className: _classnames2['default'](className, classes)
	    }));
	  };

	  return ButtonGroup;
	})(_react2['default'].Component);

	ButtonGroup.propTypes = propTypes;
	ButtonGroup.defaultProps = defaultProps;

	exports['default'] = _utilsBootstrapUtils.bsClass('btn-group', ButtonGroup);
	module.exports = exports['default'];

	// this is annoying, since the class is `btn-block` not `btn-group-block`

/***/ },
/* 361 */
/***/ function(module, exports, __webpack_require__) {

	'use strict';

	exports.__esModule = true;
	exports['default'] = all;

	var _common = __webpack_require__(358);

	function all() {
	  for (var _len = arguments.length, propTypes = Array(_len), _key = 0; _key < _len; _key++) {
	    propTypes[_key] = arguments[_key];
	  }

	  if (propTypes === undefined) {
	    throw new Error('No validations provided');
	  }

	  if (propTypes.some(function (propType) {
	    return typeof propType !== 'function';
	  })) {
	    throw new Error('Invalid arguments, must be functions');
	  }

	  if (propTypes.length === 0) {
	    throw new Error('No validations provided');
	  }

	  function validate(props, propName, componentName) {
	    for (var i = 0; i < propTypes.length; i++) {
	      var result = propTypes[i](props, propName, componentName);

	      if (result !== undefined && result !== null) {
	        return result;
	      }
	    }
	  }

	  return _common.createChainableTypeChecker(validate);
	}

	module.exports = exports['default'];

/***/ },
/* 362 */
/***/ function(module, exports, __webpack_require__) {

	'use strict';

	var _inherits = __webpack_require__(254)['default'];

	var _classCallCheck = __webpack_require__(330)['default'];

	var _objectWithoutProperties = __webpack_require__(338)['default'];

	var _extends = __webpack_require__(332)['default'];

	var _interopRequireDefault = __webpack_require__(249)['default'];

	exports.__esModule = true;

	var _classnames = __webpack_require__(340);

	var _classnames2 = _interopRequireDefault(_classnames);

	var _react = __webpack_require__(2);

	var _react2 = _interopRequireDefault(_react);

	var _Button = __webpack_require__(359);

	var _Button2 = _interopRequireDefault(_Button);

	var _utilsBootstrapUtils = __webpack_require__(341);

	var ButtonToolbar = (function (_React$Component) {
	  _inherits(ButtonToolbar, _React$Component);

	  function ButtonToolbar() {
	    _classCallCheck(this, ButtonToolbar);

	    _React$Component.apply(this, arguments);
	  }

	  ButtonToolbar.prototype.render = function render() {
	    var _props = this.props;
	    var className = _props.className;

	    var props = _objectWithoutProperties(_props, ['className']);

	    var _splitBsProps = _utilsBootstrapUtils.splitBsProps(props);

	    var bsProps = _splitBsProps[0];
	    var elementProps = _splitBsProps[1];

	    var classes = _utilsBootstrapUtils.getClassSet(bsProps);

	    return _react2['default'].createElement('div', _extends({}, elementProps, {
	      role: 'toolbar',
	      className: _classnames2['default'](className, classes)
	    }));
	  };

	  return ButtonToolbar;
	})(_react2['default'].Component);

	exports['default'] = _utilsBootstrapUtils.bsClass('btn-toolbar', _utilsBootstrapUtils.bsSizes(_Button2['default'].SIZES, ButtonToolbar));
	module.exports = exports['default'];

/***/ },
/* 363 */
/***/ function(module, exports, __webpack_require__) {

	'use strict';

	var _inherits = __webpack_require__(254)['default'];

	var _classCallCheck = __webpack_require__(330)['default'];

	var _extends = __webpack_require__(332)['default'];

	var _objectWithoutProperties = __webpack_require__(338)['default'];

	var _interopRequireDefault = __webpack_require__(249)['default'];

	exports.__esModule = true;

	var _classnames = __webpack_require__(340);

	var _classnames2 = _interopRequireDefault(_classnames);

	var _react = __webpack_require__(2);

	var _react2 = _interopRequireDefault(_react);

	var _CarouselCaption = __webpack_require__(364);

	var _CarouselCaption2 = _interopRequireDefault(_CarouselCaption);

	var _CarouselItem = __webpack_require__(365);

	var _CarouselItem2 = _interopRequireDefault(_CarouselItem);

	var _Glyphicon = __webpack_require__(367);

	var _Glyphicon2 = _interopRequireDefault(_Glyphicon);

	var _SafeAnchor = __webpack_require__(356);

	var _SafeAnchor2 = _interopRequireDefault(_SafeAnchor);

	var _utilsBootstrapUtils = __webpack_require__(341);

	var _utilsValidComponentChildren = __webpack_require__(348);

	var _utilsValidComponentChildren2 = _interopRequireDefault(_utilsValidComponentChildren);

	// TODO: `slide` should be `animate`.

	// TODO: Use uncontrollable.

	var propTypes = {
	  slide: _react2['default'].PropTypes.bool,
	  indicators: _react2['default'].PropTypes.bool,
	  interval: _react2['default'].PropTypes.number,
	  controls: _react2['default'].PropTypes.bool,
	  pauseOnHover: _react2['default'].PropTypes.bool,
	  wrap: _react2['default'].PropTypes.bool,
	  /**
	   * Callback fired when the active item changes.
	   *
	   * ```js
	   * (eventKey: any) => any | (eventKey: any, event: Object) => any
	   * ```
	   *
	   * If this callback takes two or more arguments, the second argument will
	   * be a persisted event object with `direction` set to the direction of the
	   * transition.
	   */
	  onSelect: _react2['default'].PropTypes.func,
	  onSlideEnd: _react2['default'].PropTypes.func,
	  activeIndex: _react2['default'].PropTypes.number,
	  defaultActiveIndex: _react2['default'].PropTypes.number,
	  direction: _react2['default'].PropTypes.oneOf(['prev', 'next']),
	  prevIcon: _react2['default'].PropTypes.node,
	  nextIcon: _react2['default'].PropTypes.node
	};

	var defaultProps = {
	  slide: true,
	  interval: 5000,
	  pauseOnHover: true,
	  wrap: true,
	  indicators: true,
	  controls: true,
	  prevIcon: _react2['default'].createElement(_Glyphicon2['default'], { glyph: 'chevron-left' }),
	  nextIcon: _react2['default'].createElement(_Glyphicon2['default'], { glyph: 'chevron-right' })
	};

	var Carousel = (function (_React$Component) {
	  _inherits(Carousel, _React$Component);

	  function Carousel(props, context) {
	    _classCallCheck(this, Carousel);

	    _React$Component.call(this, props, context);

	    this.handleMouseOver = this.handleMouseOver.bind(this);
	    this.handleMouseOut = this.handleMouseOut.bind(this);
	    this.handlePrev = this.handlePrev.bind(this);
	    this.handleNext = this.handleNext.bind(this);
	    this.handleItemAnimateOutEnd = this.handleItemAnimateOutEnd.bind(this);

	    var defaultActiveIndex = props.defaultActiveIndex;

	    this.state = {
	      activeIndex: defaultActiveIndex != null ? defaultActiveIndex : 0,
	      previousActiveIndex: null,
	      direction: null
	    };

	    this.isUnmounted = false;
	  }

	  Carousel.prototype.componentWillReceiveProps = function componentWillReceiveProps(nextProps) {
	    var activeIndex = this.getActiveIndex();

	    if (nextProps.activeIndex != null && nextProps.activeIndex !== activeIndex) {
	      clearTimeout(this.timeout);

	      this.setState({
	        previousActiveIndex: activeIndex,
	        direction: nextProps.direction != null ? nextProps.direction : this.getDirection(activeIndex, nextProps.activeIndex)
	      });
	    }
	  };

	  Carousel.prototype.componentDidMount = function componentDidMount() {
	    this.waitForNext();
	  };

	  Carousel.prototype.componentWillUnmount = function componentWillUnmount() {
	    clearTimeout(this.timeout);
	    this.isUnmounted = true;
	  };

	  Carousel.prototype.handleMouseOver = function handleMouseOver() {
	    if (this.props.pauseOnHover) {
	      this.pause();
	    }
	  };

	  Carousel.prototype.handleMouseOut = function handleMouseOut() {
	    if (this.isPaused) {
	      this.play();
	    }
	  };

	  Carousel.prototype.handlePrev = function handlePrev(e) {
	    var index = this.getActiveIndex() - 1;

	    if (index < 0) {
	      if (!this.props.wrap) {
	        return;
	      }
	      index = _utilsValidComponentChildren2['default'].count(this.props.children) - 1;
	    }

	    this.select(index, e, 'prev');
	  };

	  Carousel.prototype.handleNext = function handleNext(e) {
	    var index = this.getActiveIndex() + 1;
	    var count = _utilsValidComponentChildren2['default'].count(this.props.children);

	    if (index > count - 1) {
	      if (!this.props.wrap) {
	        return;
	      }
	      index = 0;
	    }

	    this.select(index, e, 'next');
	  };

	  Carousel.prototype.handleItemAnimateOutEnd = function handleItemAnimateOutEnd() {
	    var _this = this;

	    this.setState({
	      previousActiveIndex: null,
	      direction: null
	    }, function () {
	      _this.waitForNext();

	      if (_this.props.onSlideEnd) {
	        _this.props.onSlideEnd();
	      }
	    });
	  };

	  Carousel.prototype.getActiveIndex = function getActiveIndex() {
	    var activeIndexProp = this.props.activeIndex;
	    return activeIndexProp != null ? activeIndexProp : this.state.activeIndex;
	  };

	  Carousel.prototype.getDirection = function getDirection(prevIndex, index) {
	    if (prevIndex === index) {
	      return null;
	    }

	    return prevIndex > index ? 'prev' : 'next';
	  };

	  Carousel.prototype.select = function select(index, e, direction) {
	    clearTimeout(this.timeout);

	    // TODO: Is this necessary? Seems like the only risk is if the component
	    // unmounts while handleItemAnimateOutEnd fires.
	    if (this.isUnmounted) {
	      return;
	    }

	    var previousActiveIndex = this.getActiveIndex();
	    direction = direction || this.getDirection(previousActiveIndex, index);

	    var onSelect = this.props.onSelect;

	    if (onSelect) {
	      if (onSelect.length > 1) {
	        // React SyntheticEvents are pooled, so we need to remove this event
	        // from the pool to add a custom property. To avoid unnecessarily
	        // removing objects from the pool, only do this when the listener
	        // actually wants the event.
	        if (e) {
	          e.persist();
	          e.direction = direction;
	        } else {
	          e = { direction: direction };
	        }

	        onSelect(index, e);
	      } else {
	        onSelect(index);
	      }
	    }

	    if (this.props.activeIndex == null && index !== previousActiveIndex) {
	      if (this.state.previousActiveIndex != null) {
	        // If currently animating don't activate the new index.
	        // TODO: look into queueing this canceled call and
	        // animating after the current animation has ended.
	        return;
	      }

	      this.setState({
	        activeIndex: index,
	        previousActiveIndex: previousActiveIndex,
	        direction: direction
	      });
	    }
	  };

	  Carousel.prototype.waitForNext = function waitForNext() {
	    var _props = this.props;
	    var slide = _props.slide;
	    var interval = _props.interval;
	    var activeIndexProp = _props.activeIndex;

	    if (!this.isPaused && slide && interval && activeIndexProp == null) {
	      this.timeout = setTimeout(this.handleNext, interval);
	    }
	  };

	  // This might be a public API.

	  Carousel.prototype.pause = function pause() {
	    this.isPaused = true;
	    clearTimeout(this.timeout);
	  };

	  // This might be a public API.

	  Carousel.prototype.play = function play() {
	    this.isPaused = false;
	    this.waitForNext();
	  };

	  Carousel.prototype.renderIndicators = function renderIndicators(children, activeIndex, bsProps) {
	    var _this2 = this;

	    var indicators = [];

	    _utilsValidComponentChildren2['default'].forEach(children, function (child, index) {
	      indicators.push(_react2['default'].createElement('li', {
	        key: index,
	        className: index === activeIndex ? 'active' : null,
	        onClick: function (e) {
	          return _this2.select(index, e);
	        }
	      }),

	      // Force whitespace between indicator elements. Bootstrap requires
	      // this for correct spacing of elements.
	      ' ');
	    });

	    return _react2['default'].createElement(
	      'ol',
	      { className: _utilsBootstrapUtils.prefix(bsProps, 'indicators') },
	      indicators
	    );
	  };

	  Carousel.prototype.renderControls = function renderControls(wrap, children, activeIndex, prevIcon, nextIcon, bsProps) {
	    var controlClassName = _utilsBootstrapUtils.prefix(bsProps, 'control');
	    var count = _utilsValidComponentChildren2['default'].count(children);

	    return [(wrap || activeIndex !== 0) && _react2['default'].createElement(
	      _SafeAnchor2['default'],
	      {
	        key: 'prev',
	        className: _classnames2['default'](controlClassName, 'left'),
	        onClick: this.handlePrev
	      },
	      prevIcon
	    ), (wrap || activeIndex !== count - 1) && _react2['default'].createElement(
	      _SafeAnchor2['default'],
	      {
	        key: 'next',
	        className: _classnames2['default'](controlClassName, 'right'),
	        onClick: this.handleNext
	      },
	      nextIcon
	    )];
	  };

	  Carousel.prototype.render = function render() {
	    var _this3 = this;

	    var _props2 = this.props;
	    var slide = _props2.slide;
	    var indicators = _props2.indicators;
	    var controls = _props2.controls;
	    var wrap = _props2.wrap;
	    var prevIcon = _props2.prevIcon;
	    var nextIcon = _props2.nextIcon;
	    var className = _props2.className;
	    var children = _props2.children;

	    var props = _objectWithoutProperties(_props2, ['slide', 'indicators', 'controls', 'wrap', 'prevIcon', 'nextIcon', 'className', 'children']);

	    var _state = this.state;
	    var previousActiveIndex = _state.previousActiveIndex;
	    var direction = _state.direction;

	    var _splitBsPropsAndOmit = _utilsBootstrapUtils.splitBsPropsAndOmit(props, ['interval', 'pauseOnHover', 'onSelect', 'onSlideEnd', 'activeIndex', // Accessed via this.getActiveIndex().
	    'defaultActiveIndex', 'direction']);

	    var bsProps = _splitBsPropsAndOmit[0];
	    var elementProps = _splitBsPropsAndOmit[1];

	    var activeIndex = this.getActiveIndex();

	    var classes = _extends({}, _utilsBootstrapUtils.getClassSet(bsProps), {
	      slide: slide
	    });

	    return _react2['default'].createElement(
	      'div',
	      _extends({}, elementProps, {
	        className: _classnames2['default'](className, classes),
	        onMouseOver: this.handleMouseOver,
	        onMouseOut: this.handleMouseOut
	      }),
	      indicators && this.renderIndicators(children, activeIndex, bsProps),
	      _react2['default'].createElement(
	        'div',
	        { className: _utilsBootstrapUtils.prefix(bsProps, 'inner') },
	        _utilsValidComponentChildren2['default'].map(children, function (child, index) {
	          var active = index === activeIndex;
	          var previousActive = slide && index === previousActiveIndex;

	          return _react.cloneElement(child, {
	            active: active,
	            index: index,
	            animateOut: previousActive,
	            animateIn: active && previousActiveIndex != null && slide,
	            direction: direction,
	            onAnimateOutEnd: previousActive ? _this3.handleItemAnimateOutEnd : null
	          });
	        })
	      ),
	      controls && this.renderControls(wrap, children, activeIndex, prevIcon, nextIcon, bsProps)
	    );
	  };

	  return Carousel;
	})(_react2['default'].Component);

	Carousel.propTypes = propTypes;
	Carousel.defaultProps = defaultProps;

	Carousel.Caption = _CarouselCaption2['default'];
	Carousel.Item = _CarouselItem2['default'];

	exports['default'] = _utilsBootstrapUtils.bsClass('carousel', Carousel);
	module.exports = exports['default'];

/***/ },
/* 364 */
/***/ function(module, exports, __webpack_require__) {

	'use strict';

	var _inherits = __webpack_require__(254)['default'];

	var _classCallCheck = __webpack_require__(330)['default'];

	var _objectWithoutProperties = __webpack_require__(338)['default'];

	var _extends = __webpack_require__(332)['default'];

	var _interopRequireDefault = __webpack_require__(249)['default'];

	exports.__esModule = true;

	var _classnames = __webpack_require__(340);

	var _classnames2 = _interopRequireDefault(_classnames);

	var _react = __webpack_require__(2);

	var _react2 = _interopRequireDefault(_react);

	var _reactPropTypesLibElementType = __webpack_require__(357);

	var _reactPropTypesLibElementType2 = _interopRequireDefault(_reactPropTypesLibElementType);

	var _utilsBootstrapUtils = __webpack_require__(341);

	var propTypes = {
	  componentClass: _reactPropTypesLibElementType2['default']
	};

	var defaultProps = {
	  componentClass: 'div'
	};

	var CarouselCaption = (function (_React$Component) {
	  _inherits(CarouselCaption, _React$Component);

	  function CarouselCaption() {
	    _classCallCheck(this, CarouselCaption);

	    _React$Component.apply(this, arguments);
	  }

	  CarouselCaption.prototype.render = function render() {
	    var _props = this.props;
	    var Component = _props.componentClass;
	    var className = _props.className;

	    var props = _objectWithoutProperties(_props, ['componentClass', 'className']);

	    var _splitBsProps = _utilsBootstrapUtils.splitBsProps(props);

	    var bsProps = _splitBsProps[0];
	    var elementProps = _splitBsProps[1];

	    var classes = _utilsBootstrapUtils.getClassSet(bsProps);

	    return _react2['default'].createElement(Component, _extends({}, elementProps, {
	      className: _classnames2['default'](className, classes)
	    }));
	  };

	  return CarouselCaption;
	})(_react2['default'].Component);

	CarouselCaption.propTypes = propTypes;
	CarouselCaption.defaultProps = defaultProps;

	exports['default'] = _utilsBootstrapUtils.bsClass('carousel-caption', CarouselCaption);
	module.exports = exports['default'];

/***/ },
/* 365 */
/***/ function(module, exports, __webpack_require__) {

	'use strict';

	var _inherits = __webpack_require__(254)['default'];

	var _classCallCheck = __webpack_require__(330)['default'];

	var _objectWithoutProperties = __webpack_require__(338)['default'];

	var _extends = __webpack_require__(332)['default'];

	var _interopRequireDefault = __webpack_require__(249)['default'];

	exports.__esModule = true;

	var _classnames = __webpack_require__(340);

	var _classnames2 = _interopRequireDefault(_classnames);

	var _react = __webpack_require__(2);

	var _react2 = _interopRequireDefault(_react);

	var _reactDom = __webpack_require__(34);

	var _reactDom2 = _interopRequireDefault(_reactDom);

	var _utilsTransitionEvents = __webpack_require__(366);

	var _utilsTransitionEvents2 = _interopRequireDefault(_utilsTransitionEvents);

	// TODO: This should use a timeout instead of TransitionEvents, or else just
	// not wait until transition end to trigger continuing animations.

	var propTypes = {
	  direction: _react2['default'].PropTypes.oneOf(['prev', 'next']),
	  onAnimateOutEnd: _react2['default'].PropTypes.func,
	  active: _react2['default'].PropTypes.bool,
	  animateIn: _react2['default'].PropTypes.bool,
	  animateOut: _react2['default'].PropTypes.bool,
	  index: _react2['default'].PropTypes.number
	};

	var defaultProps = {
	  active: false,
	  animateIn: false,
	  animateOut: false
	};

	var CarouselItem = (function (_React$Component) {
	  _inherits(CarouselItem, _React$Component);

	  function CarouselItem(props, context) {
	    _classCallCheck(this, CarouselItem);

	    _React$Component.call(this, props, context);

	    this.handleAnimateOutEnd = this.handleAnimateOutEnd.bind(this);

	    this.state = {
	      direction: null
	    };

	    this.isUnmounted = false;
	  }

	  CarouselItem.prototype.componentWillReceiveProps = function componentWillReceiveProps(nextProps) {
	    if (this.props.active !== nextProps.active) {
	      this.setState({ direction: null });
	    }
	  };

	  CarouselItem.prototype.componentDidUpdate = function componentDidUpdate(prevProps) {
	    var _this = this;

	    var active = this.props.active;

	    var prevActive = prevProps.active;

	    if (!active && prevActive) {
	      _utilsTransitionEvents2['default'].addEndEventListener(_reactDom2['default'].findDOMNode(this), this.handleAnimateOutEnd);
	    }

	    if (active !== prevActive) {
	      setTimeout(function () {
	        return _this.startAnimation();
	      }, 20);
	    }
	  };

	  CarouselItem.prototype.componentWillUnmount = function componentWillUnmount() {
	    this.isUnmounted = true;
	  };

	  CarouselItem.prototype.handleAnimateOutEnd = function handleAnimateOutEnd() {
	    if (this.isUnmounted) {
	      return;
	    }

	    if (this.props.onAnimateOutEnd) {
	      this.props.onAnimateOutEnd(this.props.index);
	    }
	  };

	  CarouselItem.prototype.startAnimation = function startAnimation() {
	    if (this.isUnmounted) {
	      return;
	    }

	    this.setState({
	      direction: this.props.direction === 'prev' ? 'right' : 'left'
	    });
	  };

	  CarouselItem.prototype.render = function render() {
	    var _props = this.props;
	    var direction = _props.direction;
	    var active = _props.active;
	    var animateIn = _props.animateIn;
	    var animateOut = _props.animateOut;
	    var className = _props.className;

	    var props = _objectWithoutProperties(_props, ['direction', 'active', 'animateIn', 'animateOut', 'className']);

	    delete props.onAnimateOutEnd;
	    delete props.index;

	    var classes = {
	      item: true,
	      active: active && !animateIn || animateOut
	    };
	    if (direction && active && animateIn) {
	      classes[direction] = true;
	    }
	    if (this.state.direction && (animateIn || animateOut)) {
	      classes[this.state.direction] = true;
	    }

	    return _react2['default'].createElement('div', _extends({}, props, {
	      className: _classnames2['default'](className, classes)
	    }));
	  };

	  return CarouselItem;
	})(_react2['default'].Component);

	CarouselItem.propTypes = propTypes;
	CarouselItem.defaultProps = defaultProps;

	exports['default'] = CarouselItem;
	module.exports = exports['default'];

/***/ },
/* 366 */
/***/ function(module, exports) {

	/**
	 * Copyright 2013-2014, Facebook, Inc.
	 * All rights reserved.
	 *
	 * This file contains a modified version of:
	 * https://github.com/facebook/react/blob/v0.12.0/src/addons/transitions/ReactTransitionEvents.js
	 *
	 * This source code is licensed under the BSD-style license found here:
	 * https://github.com/facebook/react/blob/v0.12.0/LICENSE
	 * An additional grant of patent rights can be found here:
	 * https://github.com/facebook/react/blob/v0.12.0/PATENTS
	 */

	'use strict';

	exports.__esModule = true;
	var canUseDOM = !!(typeof window !== 'undefined' && window.document && window.document.createElement);

	/**
	 * EVENT_NAME_MAP is used to determine which event fired when a
	 * transition/animation ends, based on the style property used to
	 * define that event.
	 */
	var EVENT_NAME_MAP = {
	  transitionend: {
	    'transition': 'transitionend',
	    'WebkitTransition': 'webkitTransitionEnd',
	    'MozTransition': 'mozTransitionEnd',
	    'OTransition': 'oTransitionEnd',
	    'msTransition': 'MSTransitionEnd'
	  },

	  animationend: {
	    'animation': 'animationend',
	    'WebkitAnimation': 'webkitAnimationEnd',
	    'MozAnimation': 'mozAnimationEnd',
	    'OAnimation': 'oAnimationEnd',
	    'msAnimation': 'MSAnimationEnd'
	  }
	};

	var endEvents = [];

	function detectEvents() {
	  var testEl = document.createElement('div');
	  var style = testEl.style;

	  // On some platforms, in particular some releases of Android 4.x,
	  // the un-prefixed "animation" and "transition" properties are defined on the
	  // style object but the events that fire will still be prefixed, so we need
	  // to check if the un-prefixed events are useable, and if not remove them
	  // from the map
	  if (!('AnimationEvent' in window)) {
	    delete EVENT_NAME_MAP.animationend.animation;
	  }

	  if (!('TransitionEvent' in window)) {
	    delete EVENT_NAME_MAP.transitionend.transition;
	  }

	  for (var baseEventName in EVENT_NAME_MAP) {
	    // eslint-disable-line guard-for-in
	    var baseEvents = EVENT_NAME_MAP[baseEventName];
	    for (var styleName in baseEvents) {
	      if (styleName in style) {
	        endEvents.push(baseEvents[styleName]);
	        break;
	      }
	    }
	  }
	}

	if (canUseDOM) {
	  detectEvents();
	}

	// We use the raw {add|remove}EventListener() call because EventListener
	// does not know how to remove event listeners and we really should
	// clean up. Also, these events are not triggered in older browsers
	// so we should be A-OK here.

	function addEventListener(node, eventName, eventListener) {
	  node.addEventListener(eventName, eventListener, false);
	}

	function removeEventListener(node, eventName, eventListener) {
	  node.removeEventListener(eventName, eventListener, false);
	}

	var ReactTransitionEvents = {
	  addEndEventListener: function addEndEventListener(node, eventListener) {
	    if (endEvents.length === 0) {
	      // If CSS transitions are not supported, trigger an "end animation"
	      // event immediately.
	      window.setTimeout(eventListener, 0);
	      return;
	    }
	    endEvents.forEach(function (endEvent) {
	      addEventListener(node, endEvent, eventListener);
	    });
	  },

	  removeEndEventListener: function removeEndEventListener(node, eventListener) {
	    if (endEvents.length === 0) {
	      return;
	    }
	    endEvents.forEach(function (endEvent) {
	      removeEventListener(node, endEvent, eventListener);
	    });
	  }
	};

	exports['default'] = ReactTransitionEvents;
	module.exports = exports['default'];

/***/ },
/* 367 */
/***/ function(module, exports, __webpack_require__) {

	'use strict';

	var _inherits = __webpack_require__(254)['default'];

	var _classCallCheck = __webpack_require__(330)['default'];

	var _extends = __webpack_require__(332)['default'];

	var _objectWithoutProperties = __webpack_require__(338)['default'];

	var _interopRequireDefault = __webpack_require__(249)['default'];

	exports.__esModule = true;

	var _classnames = __webpack_require__(340);

	var _classnames2 = _interopRequireDefault(_classnames);

	var _react = __webpack_require__(2);

	var _react2 = _interopRequireDefault(_react);

	var _utilsBootstrapUtils = __webpack_require__(341);

	var propTypes = {
	  /**
	   * An icon name. See e.g. http://getbootstrap.com/components/#glyphicons
	   */
	  glyph: _react2['default'].PropTypes.string.isRequired
	};

	var Glyphicon = (function (_React$Component) {
	  _inherits(Glyphicon, _React$Component);

	  function Glyphicon() {
	    _classCallCheck(this, Glyphicon);

	    _React$Component.apply(this, arguments);
	  }

	  Glyphicon.prototype.render = function render() {
	    var _extends2;

	    var _props = this.props;
	    var glyph = _props.glyph;
	    var className = _props.className;

	    var props = _objectWithoutProperties(_props, ['glyph', 'className']);

	    var _splitBsProps = _utilsBootstrapUtils.splitBsProps(props);

	    var bsProps = _splitBsProps[0];
	    var elementProps = _splitBsProps[1];

	    var classes = _extends({}, _utilsBootstrapUtils.getClassSet(bsProps), (_extends2 = {}, _extends2[_utilsBootstrapUtils.prefix(bsProps, glyph)] = true, _extends2));

	    return _react2['default'].createElement('span', _extends({}, elementProps, {
	      className: _classnames2['default'](className, classes)
	    }));
	  };

	  return Glyphicon;
	})(_react2['default'].Component);

	Glyphicon.propTypes = propTypes;

	exports['default'] = _utilsBootstrapUtils.bsClass('glyphicon', Glyphicon);
	module.exports = exports['default'];

/***/ },
/* 368 */
/***/ function(module, exports, __webpack_require__) {

	/* WEBPACK VAR INJECTION */(function(process) {'use strict';

	var _inherits = __webpack_require__(254)['default'];

	var _classCallCheck = __webpack_require__(330)['default'];

	var _extends = __webpack_require__(332)['default'];

	var _objectWithoutProperties = __webpack_require__(338)['default'];

	var _interopRequireDefault = __webpack_require__(249)['default'];

	exports.__esModule = true;

	var _classnames = __webpack_require__(340);

	var _classnames2 = _interopRequireDefault(_classnames);

	var _react = __webpack_require__(2);

	var _react2 = _interopRequireDefault(_react);

	var _warning = __webpack_require__(178);

	var _warning2 = _interopRequireDefault(_warning);

	var _utilsBootstrapUtils = __webpack_require__(341);

	var propTypes = {
	  inline: _react2['default'].PropTypes.bool,
	  disabled: _react2['default'].PropTypes.bool,
	  /**
	   * Only valid if `inline` is not set.
	   */
	  validationState: _react2['default'].PropTypes.oneOf(['success', 'warning', 'error']),
	  /**
	   * Attaches a ref to the `<input>` element. Only functions can be used here.
	   *
	   * ```js
	   * <Checkbox inputRef={ref => { this.input = ref; }} />
	   * ```
	   */
	  inputRef: _react2['default'].PropTypes.func
	};

	var defaultProps = {
	  inline: false,
	  disabled: false
	};

	var Checkbox = (function (_React$Component) {
	  _inherits(Checkbox, _React$Component);

	  function Checkbox() {
	    _classCallCheck(this, Checkbox);

	    _React$Component.apply(this, arguments);
	  }

	  Checkbox.prototype.render = function render() {
	    var _props = this.props;
	    var inline = _props.inline;
	    var disabled = _props.disabled;
	    var validationState = _props.validationState;
	    var inputRef = _props.inputRef;
	    var className = _props.className;
	    var style = _props.style;
	    var children = _props.children;

	    var props = _objectWithoutProperties(_props, ['inline', 'disabled', 'validationState', 'inputRef', 'className', 'style', 'children']);

	    var _splitBsProps = _utilsBootstrapUtils.splitBsProps(props);

	    var bsProps = _splitBsProps[0];
	    var elementProps = _splitBsProps[1];

	    var input = _react2['default'].createElement('input', _extends({}, elementProps, {
	      ref: inputRef,
	      type: 'checkbox',
	      disabled: disabled
	    }));

	    if (inline) {
	      var _classes;

	      var _classes2 = (_classes = {}, _classes[_utilsBootstrapUtils.prefix(bsProps, 'inline')] = true, _classes.disabled = disabled, _classes);

	      // Use a warning here instead of in propTypes to get better-looking
	      // generated documentation.
	      process.env.NODE_ENV !== 'production' ? _warning2['default'](!validationState, '`validationState` is ignored on `<Checkbox inline>`. To display ' + 'validation state on an inline checkbox, set `validationState` on a ' + 'parent `<FormGroup>` or other element instead.') : undefined;

	      return _react2['default'].createElement(
	        'label',
	        { className: _classnames2['default'](className, _classes2), style: style },
	        input,
	        children
	      );
	    }

	    var classes = _extends({}, _utilsBootstrapUtils.getClassSet(bsProps), {
	      disabled: disabled
	    });
	    if (validationState) {
	      classes['has-' + validationState] = true;
	    }

	    return _react2['default'].createElement(
	      'div',
	      { className: _classnames2['default'](className, classes), style: style },
	      _react2['default'].createElement(
	        'label',
	        null,
	        input,
	        children
	      )
	    );
	  };

	  return Checkbox;
	})(_react2['default'].Component);

	Checkbox.propTypes = propTypes;
	Checkbox.defaultProps = defaultProps;

	exports['default'] = _utilsBootstrapUtils.bsClass('checkbox', Checkbox);
	module.exports = exports['default'];
	/* WEBPACK VAR INJECTION */}.call(exports, __webpack_require__(4)))

/***/ },
/* 369 */
/***/ function(module, exports, __webpack_require__) {

	'use strict';

	var _inherits = __webpack_require__(254)['default'];

	var _classCallCheck = __webpack_require__(330)['default'];

	var _objectWithoutProperties = __webpack_require__(338)['default'];

	var _extends = __webpack_require__(332)['default'];

	var _interopRequireDefault = __webpack_require__(249)['default'];

	exports.__esModule = true;

	var _classnames = __webpack_require__(340);

	var _classnames2 = _interopRequireDefault(_classnames);

	var _react = __webpack_require__(2);

	var _react2 = _interopRequireDefault(_react);

	var _reactPropTypesLibElementType = __webpack_require__(357);

	var _reactPropTypesLibElementType2 = _interopRequireDefault(_reactPropTypesLibElementType);

	var _utilsBootstrapUtils = __webpack_require__(341);

	var _utilsCapitalize = __webpack_require__(370);

	var _utilsCapitalize2 = _interopRequireDefault(_utilsCapitalize);

	var _utilsStyleConfig = __webpack_require__(346);

	var propTypes = {
	  componentClass: _reactPropTypesLibElementType2['default'],

	  /**
	   * Apply clearfix
	   *
	   * on Extra small devices Phones
	   *
	   * adds class `visible-xs-block`
	   */
	  visibleXsBlock: _react2['default'].PropTypes.bool,
	  /**
	   * Apply clearfix
	   *
	   * on Small devices Tablets
	   *
	   * adds class `visible-sm-block`
	   */
	  visibleSmBlock: _react2['default'].PropTypes.bool,
	  /**
	   * Apply clearfix
	   *
	   * on Medium devices Desktops
	   *
	   * adds class `visible-md-block`
	   */
	  visibleMdBlock: _react2['default'].PropTypes.bool,
	  /**
	   * Apply clearfix
	   *
	   * on Large devices Desktops
	   *
	   * adds class `visible-lg-block`
	   */
	  visibleLgBlock: _react2['default'].PropTypes.bool
	};

	var defaultProps = {
	  componentClass: 'div'
	};

	var Clearfix = (function (_React$Component) {
	  _inherits(Clearfix, _React$Component);

	  function Clearfix() {
	    _classCallCheck(this, Clearfix);

	    _React$Component.apply(this, arguments);
	  }

	  Clearfix.prototype.render = function render() {
	    var _props = this.props;
	    var Component = _props.componentClass;
	    var className = _props.className;

	    var props = _objectWithoutProperties(_props, ['componentClass', 'className']);

	    var _splitBsProps = _utilsBootstrapUtils.splitBsProps(props);

	    var bsProps = _splitBsProps[0];
	    var elementProps = _splitBsProps[1];

	    var classes = _utilsBootstrapUtils.getClassSet(bsProps);

	    _utilsStyleConfig.DEVICE_SIZES.forEach(function (size) {
	      var propName = 'visible' + _utilsCapitalize2['default'](size) + 'Block';
	      if (elementProps[propName]) {
	        classes['visible-' + size + '-block'] = true;
	      }

	      delete elementProps[propName];
	    });

	    return _react2['default'].createElement(Component, _extends({}, elementProps, {
	      className: _classnames2['default'](className, classes)
	    }));
	  };

	  return Clearfix;
	})(_react2['default'].Component);

	Clearfix.propTypes = propTypes;
	Clearfix.defaultProps = defaultProps;

	exports['default'] = _utilsBootstrapUtils.bsClass('clearfix', Clearfix);
	module.exports = exports['default'];

/***/ },
/* 370 */
/***/ function(module, exports) {

	"use strict";

	exports.__esModule = true;
	exports["default"] = capitalize;

	function capitalize(string) {
	  return "" + string.charAt(0).toUpperCase() + string.slice(1);
	}

	module.exports = exports["default"];

/***/ },
/* 371 */
/***/ function(module, exports, __webpack_require__) {

	/* WEBPACK VAR INJECTION */(function(process) {'use strict';

	var _inherits = __webpack_require__(254)['default'];

	var _classCallCheck = __webpack_require__(330)['default'];

	var _extends = __webpack_require__(332)['default'];

	var _objectWithoutProperties = __webpack_require__(338)['default'];

	var _interopRequireDefault = __webpack_require__(249)['default'];

	exports.__esModule = true;

	var _classnames = __webpack_require__(340);

	var _classnames2 = _interopRequireDefault(_classnames);

	var _react = __webpack_require__(2);

	var _react2 = _interopRequireDefault(_react);

	var _warning = __webpack_require__(178);

	var _warning2 = _interopRequireDefault(_warning);

	var _utilsBootstrapUtils = __webpack_require__(341);

	var propTypes = {
	  /**
	   * Uses `controlId` from `<FormGroup>` if not explicitly specified.
	   */
	  htmlFor: _react2['default'].PropTypes.string,
	  srOnly: _react2['default'].PropTypes.bool
	};

	var defaultProps = {
	  srOnly: false
	};

	var contextTypes = {
	  $bs_formGroup: _react2['default'].PropTypes.object
	};

	var ControlLabel = (function (_React$Component) {
	  _inherits(ControlLabel, _React$Component);

	  function ControlLabel() {
	    _classCallCheck(this, ControlLabel);

	    _React$Component.apply(this, arguments);
	  }

	  ControlLabel.prototype.render = function render() {
	    var formGroup = this.context.$bs_formGroup;
	    var controlId = formGroup && formGroup.controlId;

	    var _props = this.props;
	    var _props$htmlFor = _props.htmlFor;
	    var htmlFor = _props$htmlFor === undefined ? controlId : _props$htmlFor;
	    var srOnly = _props.srOnly;
	    var className = _props.className;

	    var props = _objectWithoutProperties(_props, ['htmlFor', 'srOnly', 'className']);

	    var _splitBsProps = _utilsBootstrapUtils.splitBsProps(props);

	    var bsProps = _splitBsProps[0];
	    var elementProps = _splitBsProps[1];

	    process.env.NODE_ENV !== 'production' ? _warning2['default'](controlId == null || htmlFor === controlId, '`controlId` is ignored on `<ControlLabel>` when `htmlFor` is specified.') : undefined;

	    var classes = _extends({}, _utilsBootstrapUtils.getClassSet(bsProps), {
	      'sr-only': srOnly
	    });

	    return _react2['default'].createElement('label', _extends({}, elementProps, {
	      htmlFor: htmlFor,
	      className: _classnames2['default'](className, classes)
	    }));
	  };

	  return ControlLabel;
	})(_react2['default'].Component);

	ControlLabel.propTypes = propTypes;
	ControlLabel.defaultProps = defaultProps;
	ControlLabel.contextTypes = contextTypes;

	exports['default'] = _utilsBootstrapUtils.bsClass('control-label', ControlLabel);
	module.exports = exports['default'];
	/* WEBPACK VAR INJECTION */}.call(exports, __webpack_require__(4)))

/***/ },
/* 372 */
/***/ function(module, exports, __webpack_require__) {

	'use strict';

	var _inherits = __webpack_require__(254)['default'];

	var _classCallCheck = __webpack_require__(330)['default'];

	var _objectWithoutProperties = __webpack_require__(338)['default'];

	var _extends = __webpack_require__(332)['default'];

	var _interopRequireDefault = __webpack_require__(249)['default'];

	exports.__esModule = true;

	var _classnames = __webpack_require__(340);

	var _classnames2 = _interopRequireDefault(_classnames);

	var _react = __webpack_require__(2);

	var _react2 = _interopRequireDefault(_react);

	var _reactPropTypesLibElementType = __webpack_require__(357);

	var _reactPropTypesLibElementType2 = _interopRequireDefault(_reactPropTypesLibElementType);

	var _utilsBootstrapUtils = __webpack_require__(341);

	var _utilsStyleConfig = __webpack_require__(346);

	var propTypes = {
	  componentClass: _reactPropTypesLibElementType2['default'],

	  /**
	   * The number of columns you wish to span
	   *
	   * for Extra small devices Phones (<768px)
	   *
	   * class-prefix `col-xs-`
	   */
	  xs: _react2['default'].PropTypes.number,
	  /**
	   * The number of columns you wish to span
	   *
	   * for Small devices Tablets (≥768px)
	   *
	   * class-prefix `col-sm-`
	   */
	  sm: _react2['default'].PropTypes.number,
	  /**
	   * The number of columns you wish to span
	   *
	   * for Medium devices Desktops (≥992px)
	   *
	   * class-prefix `col-md-`
	   */
	  md: _react2['default'].PropTypes.number,
	  /**
	   * The number of columns you wish to span
	   *
	   * for Large devices Desktops (≥1200px)
	   *
	   * class-prefix `col-lg-`
	   */
	  lg: _react2['default'].PropTypes.number,
	  /**
	   * Hide column
	   *
	   * on Extra small devices Phones
	   *
	   * adds class `hidden-xs`
	   */
	  xsHidden: _react2['default'].PropTypes.bool,
	  /**
	   * Hide column
	   *
	   * on Small devices Tablets
	   *
	   * adds class `hidden-sm`
	   */
	  smHidden: _react2['default'].PropTypes.bool,
	  /**
	   * Hide column
	   *
	   * on Medium devices Desktops
	   *
	   * adds class `hidden-md`
	   */
	  mdHidden: _react2['default'].PropTypes.bool,
	  /**
	   * Hide column
	   *
	   * on Large devices Desktops
	   *
	   * adds class `hidden-lg`
	   */
	  lgHidden: _react2['default'].PropTypes.bool,
	  /**
	   * Move columns to the right
	   *
	   * for Extra small devices Phones
	   *
	   * class-prefix `col-xs-offset-`
	   */
	  xsOffset: _react2['default'].PropTypes.number,
	  /**
	   * Move columns to the right
	   *
	   * for Small devices Tablets
	   *
	   * class-prefix `col-sm-offset-`
	   */
	  smOffset: _react2['default'].PropTypes.number,
	  /**
	   * Move columns to the right
	   *
	   * for Medium devices Desktops
	   *
	   * class-prefix `col-md-offset-`
	   */
	  mdOffset: _react2['default'].PropTypes.number,
	  /**
	   * Move columns to the right
	   *
	   * for Large devices Desktops
	   *
	   * class-prefix `col-lg-offset-`
	   */
	  lgOffset: _react2['default'].PropTypes.number,
	  /**
	   * Change the order of grid columns to the right
	   *
	   * for Extra small devices Phones
	   *
	   * class-prefix `col-xs-push-`
	   */
	  xsPush: _react2['default'].PropTypes.number,
	  /**
	   * Change the order of grid columns to the right
	   *
	   * for Small devices Tablets
	   *
	   * class-prefix `col-sm-push-`
	   */
	  smPush: _react2['default'].PropTypes.number,
	  /**
	   * Change the order of grid columns to the right
	   *
	   * for Medium devices Desktops
	   *
	   * class-prefix `col-md-push-`
	   */
	  mdPush: _react2['default'].PropTypes.number,
	  /**
	   * Change the order of grid columns to the right
	   *
	   * for Large devices Desktops
	   *
	   * class-prefix `col-lg-push-`
	   */
	  lgPush: _react2['default'].PropTypes.number,
	  /**
	   * Change the order of grid columns to the left
	   *
	   * for Extra small devices Phones
	   *
	   * class-prefix `col-xs-pull-`
	   */
	  xsPull: _react2['default'].PropTypes.number,
	  /**
	   * Change the order of grid columns to the left
	   *
	   * for Small devices Tablets
	   *
	   * class-prefix `col-sm-pull-`
	   */
	  smPull: _react2['default'].PropTypes.number,
	  /**
	   * Change the order of grid columns to the left
	   *
	   * for Medium devices Desktops
	   *
	   * class-prefix `col-md-pull-`
	   */
	  mdPull: _react2['default'].PropTypes.number,
	  /**
	   * Change the order of grid columns to the left
	   *
	   * for Large devices Desktops
	   *
	   * class-prefix `col-lg-pull-`
	   */
	  lgPull: _react2['default'].PropTypes.number
	};

	var defaultProps = {
	  componentClass: 'div'
	};

	var Col = (function (_React$Component) {
	  _inherits(Col, _React$Component);

	  function Col() {
	    _classCallCheck(this, Col);

	    _React$Component.apply(this, arguments);
	  }

	  Col.prototype.render = function render() {
	    var _props = this.props;
	    var Component = _props.componentClass;
	    var className = _props.className;

	    var props = _objectWithoutProperties(_props, ['componentClass', 'className']);

	    var _splitBsProps = _utilsBootstrapUtils.splitBsProps(props);

	    var bsProps = _splitBsProps[0];
	    var elementProps = _splitBsProps[1];

	    var classes = [];

	    _utilsStyleConfig.DEVICE_SIZES.forEach(function (size) {
	      function popProp(propSuffix, modifier) {
	        var propName = '' + size + propSuffix;
	        var propValue = elementProps[propName];

	        if (propValue != null) {
	          classes.push(_utilsBootstrapUtils.prefix(bsProps, '' + size + modifier + '-' + propValue));
	        }

	        delete elementProps[propName];
	      }

	      popProp('', '');
	      popProp('Offset', '-offset');
	      popProp('Push', '-push');
	      popProp('Pull', '-pull');

	      var hiddenPropName = size + 'Hidden';
	      if (elementProps[hiddenPropName]) {
	        classes.push('hidden-' + size);
	      }
	      delete elementProps[hiddenPropName];
	    });

	    return _react2['default'].createElement(Component, _extends({}, elementProps, {
	      className: _classnames2['default'](className, classes)
	    }));
	  };

	  return Col;
	})(_react2['default'].Component);

	Col.propTypes = propTypes;
	Col.defaultProps = defaultProps;

	exports['default'] = _utilsBootstrapUtils.bsClass('col', Col);
	module.exports = exports['default'];

/***/ },
/* 373 */
/***/ function(module, exports, __webpack_require__) {

	'use strict';

	var _inherits = __webpack_require__(254)['default'];

	var _classCallCheck = __webpack_require__(330)['default'];

	var _objectWithoutProperties = __webpack_require__(338)['default'];

	var _extends = __webpack_require__(332)['default'];

	var _interopRequireDefault = __webpack_require__(249)['default'];

	exports.__esModule = true;

	var _classnames = __webpack_require__(340);

	var _classnames2 = _interopRequireDefault(_classnames);

	var _domHelpersStyle = __webpack_require__(374);

	var _domHelpersStyle2 = _interopRequireDefault(_domHelpersStyle);

	var _react = __webpack_require__(2);

	var _react2 = _interopRequireDefault(_react);

	var _reactOverlaysLibTransition = __webpack_require__(382);

	var _reactOverlaysLibTransition2 = _interopRequireDefault(_reactOverlaysLibTransition);

	var _utilsCapitalize = __webpack_require__(370);

	var _utilsCapitalize2 = _interopRequireDefault(_utilsCapitalize);

	var _utilsCreateChainedFunction = __webpack_require__(347);

	var _utilsCreateChainedFunction2 = _interopRequireDefault(_utilsCreateChainedFunction);

	var MARGINS = {
	  height: ['marginTop', 'marginBottom'],
	  width: ['marginLeft', 'marginRight']
	};

	// reading a dimension prop will cause the browser to recalculate,
	// which will let our animations work
	function triggerBrowserReflow(node) {
	  node.offsetHeight; // eslint-disable-line no-unused-expressions
	}

	function getDimensionValue(dimension, elem) {
	  var value = elem['offset' + _utilsCapitalize2['default'](dimension)];
	  var margins = MARGINS[dimension];

	  return value + parseInt(_domHelpersStyle2['default'](elem, margins[0]), 10) + parseInt(_domHelpersStyle2['default'](elem, margins[1]), 10);
	}

	var propTypes = {
	  /**
	   * Show the component; triggers the expand or collapse animation
	   */
	  'in': _react2['default'].PropTypes.bool,

	  /**
	   * Unmount the component (remove it from the DOM) when it is collapsed
	   */
	  unmountOnExit: _react2['default'].PropTypes.bool,

	  /**
	   * Run the expand animation when the component mounts, if it is initially
	   * shown
	   */
	  transitionAppear: _react2['default'].PropTypes.bool,

	  /**
	   * Duration of the collapse animation in milliseconds, to ensure that
	   * finishing callbacks are fired even if the original browser transition end
	   * events are canceled
	   */
	  timeout: _react2['default'].PropTypes.number,

	  /**
	   * Callback fired before the component expands
	   */
	  onEnter: _react2['default'].PropTypes.func,
	  /**
	   * Callback fired after the component starts to expand
	   */
	  onEntering: _react2['default'].PropTypes.func,
	  /**
	   * Callback fired after the component has expanded
	   */
	  onEntered: _react2['default'].PropTypes.func,
	  /**
	   * Callback fired before the component collapses
	   */
	  onExit: _react2['default'].PropTypes.func,
	  /**
	   * Callback fired after the component starts to collapse
	   */
	  onExiting: _react2['default'].PropTypes.func,
	  /**
	   * Callback fired after the component has collapsed
	   */
	  onExited: _react2['default'].PropTypes.func,

	  /**
	   * The dimension used when collapsing, or a function that returns the
	   * dimension
	   *
	   * _Note: Bootstrap only partially supports 'width'!
	   * You will need to supply your own CSS animation for the `.width` CSS class._
	   */
	  dimension: _react2['default'].PropTypes.oneOfType([_react2['default'].PropTypes.oneOf(['height', 'width']), _react2['default'].PropTypes.func]),

	  /**
	   * Function that returns the height or width of the animating DOM node
	   *
	   * Allows for providing some custom logic for how much the Collapse component
	   * should animate in its specified dimension. Called with the current
	   * dimension prop value and the DOM node.
	   */
	  getDimensionValue: _react2['default'].PropTypes.func,

	  /**
	   * ARIA role of collapsible element
	   */
	  role: _react2['default'].PropTypes.string
	};

	var defaultProps = {
	  'in': false,
	  timeout: 300,
	  unmountOnExit: false,
	  transitionAppear: false,

	  dimension: 'height',
	  getDimensionValue: getDimensionValue
	};

	var Collapse = (function (_React$Component) {
	  _inherits(Collapse, _React$Component);

	  function Collapse(props, context) {
	    _classCallCheck(this, Collapse);

	    _React$Component.call(this, props, context);

	    this.handleEnter = this.handleEnter.bind(this);
	    this.handleEntering = this.handleEntering.bind(this);
	    this.handleEntered = this.handleEntered.bind(this);
	    this.handleExit = this.handleExit.bind(this);
	    this.handleExiting = this.handleExiting.bind(this);
	  }

	  /* -- Expanding -- */

	  Collapse.prototype.handleEnter = function handleEnter(elem) {
	    var dimension = this._dimension();
	    elem.style[dimension] = '0';
	  };

	  Collapse.prototype.handleEntering = function handleEntering(elem) {
	    var dimension = this._dimension();
	    elem.style[dimension] = this._getScrollDimensionValue(elem, dimension);
	  };

	  Collapse.prototype.handleEntered = function handleEntered(elem) {
	    var dimension = this._dimension();
	    elem.style[dimension] = null;
	  };

	  /* -- Collapsing -- */

	  Collapse.prototype.handleExit = function handleExit(elem) {
	    var dimension = this._dimension();
	    elem.style[dimension] = this.props.getDimensionValue(dimension, elem) + 'px';
	  };

	  Collapse.prototype.handleExiting = function handleExiting(elem) {
	    var dimension = this._dimension();

	    triggerBrowserReflow(elem);
	    elem.style[dimension] = '0';
	  };

	  Collapse.prototype._dimension = function _dimension() {
	    return typeof this.props.dimension === 'function' ? this.props.dimension() : this.props.dimension;
	  };

	  // for testing

	  Collapse.prototype._getScrollDimensionValue = function _getScrollDimensionValue(elem, dimension) {
	    return elem['scroll' + _utilsCapitalize2['default'](dimension)] + 'px';
	  };

	  Collapse.prototype.render = function render() {
	    var _props = this.props;
	    var onEnter = _props.onEnter;
	    var onEntering = _props.onEntering;
	    var onEntered = _props.onEntered;
	    var onExit = _props.onExit;
	    var onExiting = _props.onExiting;
	    var className = _props.className;

	    var props = _objectWithoutProperties(_props, ['onEnter', 'onEntering', 'onEntered', 'onExit', 'onExiting', 'className']);

	    delete props.dimension;
	    delete props.getDimensionValue;

	    var handleEnter = _utilsCreateChainedFunction2['default'](this.handleEnter, onEnter);
	    var handleEntering = _utilsCreateChainedFunction2['default'](this.handleEntering, onEntering);
	    var handleEntered = _utilsCreateChainedFunction2['default'](this.handleEntered, onEntered);
	    var handleExit = _utilsCreateChainedFunction2['default'](this.handleExit, onExit);
	    var handleExiting = _utilsCreateChainedFunction2['default'](this.handleExiting, onExiting);

	    var classes = {
	      width: this._dimension() === 'width'
	    };

	    return _react2['default'].createElement(_reactOverlaysLibTransition2['default'], _extends({}, props, {
	      'aria-expanded': props.role ? props['in'] : null,
	      className: _classnames2['default'](className, classes),
	      exitedClassName: 'collapse',
	      exitingClassName: 'collapsing',
	      enteredClassName: 'collapse in',
	      enteringClassName: 'collapsing',
	      onEnter: handleEnter,
	      onEntering: handleEntering,
	      onEntered: handleEntered,
	      onExit: handleExit,
	      onExiting: handleExiting
	    }));
	  };

	  return Collapse;
	})(_react2['default'].Component);

	Collapse.propTypes = propTypes;
	Collapse.defaultProps = defaultProps;

	exports['default'] = Collapse;
	module.exports = exports['default'];

/***/ },
/* 374 */
/***/ function(module, exports, __webpack_require__) {

	'use strict';

	var camelize = __webpack_require__(375),
	    hyphenate = __webpack_require__(377),
	    _getComputedStyle = __webpack_require__(379),
	    removeStyle = __webpack_require__(381);

	var has = Object.prototype.hasOwnProperty;

	module.exports = function style(node, property, value) {
	  var css = '',
	      props = property;

	  if (typeof property === 'string') {

	    if (value === undefined) return node.style[camelize(property)] || _getComputedStyle(node).getPropertyValue(hyphenate(property));else (props = {})[property] = value;
	  }

	  for (var key in props) if (has.call(props, key)) {
	    !props[key] && props[key] !== 0 ? removeStyle(node, hyphenate(key)) : css += hyphenate(key) + ':' + props[key] + ';';
	  }

	  node.style.cssText += ';' + css;
	};

/***/ },
/* 375 */
/***/ function(module, exports, __webpack_require__) {

	/**
	 * Copyright 2014-2015, Facebook, Inc.
	 * All rights reserved.
	 * https://github.com/facebook/react/blob/2aeb8a2a6beb00617a4217f7f8284924fa2ad819/src/vendor/core/camelizeStyleName.js
	 */

	'use strict';
	var camelize = __webpack_require__(376);
	var msPattern = /^-ms-/;

	module.exports = function camelizeStyleName(string) {
	  return camelize(string.replace(msPattern, 'ms-'));
	};

/***/ },
/* 376 */
/***/ function(module, exports) {

	"use strict";

	var rHyphen = /-(.)/g;

	module.exports = function camelize(string) {
	  return string.replace(rHyphen, function (_, chr) {
	    return chr.toUpperCase();
	  });
	};

/***/ },
/* 377 */
/***/ function(module, exports, __webpack_require__) {

	/**
	 * Copyright 2013-2014, Facebook, Inc.
	 * All rights reserved.
	 * https://github.com/facebook/react/blob/2aeb8a2a6beb00617a4217f7f8284924fa2ad819/src/vendor/core/hyphenateStyleName.js
	 */

	"use strict";

	var hyphenate = __webpack_require__(378);
	var msPattern = /^ms-/;

	module.exports = function hyphenateStyleName(string) {
	  return hyphenate(string).replace(msPattern, "-ms-");
	};

/***/ },
/* 378 */
/***/ function(module, exports) {

	'use strict';

	var rUpper = /([A-Z])/g;

	module.exports = function hyphenate(string) {
	  return string.replace(rUpper, '-$1').toLowerCase();
	};

/***/ },
/* 379 */
/***/ function(module, exports, __webpack_require__) {

	'use strict';

	var babelHelpers = __webpack_require__(380);

	var _utilCamelizeStyle = __webpack_require__(375);

	var _utilCamelizeStyle2 = babelHelpers.interopRequireDefault(_utilCamelizeStyle);

	var rposition = /^(top|right|bottom|left)$/;
	var rnumnonpx = /^([+-]?(?:\d*\.|)\d+(?:[eE][+-]?\d+|))(?!px)[a-z%]+$/i;

	module.exports = function _getComputedStyle(node) {
	  if (!node) throw new TypeError('No Element passed to `getComputedStyle()`');
	  var doc = node.ownerDocument;

	  return 'defaultView' in doc ? doc.defaultView.opener ? node.ownerDocument.defaultView.getComputedStyle(node, null) : window.getComputedStyle(node, null) : { //ie 8 "magic" from: https://github.com/jquery/jquery/blob/1.11-stable/src/css/curCSS.js#L72
	    getPropertyValue: function getPropertyValue(prop) {
	      var style = node.style;

	      prop = (0, _utilCamelizeStyle2['default'])(prop);

	      if (prop == 'float') prop = 'styleFloat';

	      var current = node.currentStyle[prop] || null;

	      if (current == null && style && style[prop]) current = style[prop];

	      if (rnumnonpx.test(current) && !rposition.test(prop)) {
	        // Remember the original values
	        var left = style.left;
	        var runStyle = node.runtimeStyle;
	        var rsLeft = runStyle && runStyle.left;

	        // Put in the new values to get a computed value out
	        if (rsLeft) runStyle.left = node.currentStyle.left;

	        style.left = prop === 'fontSize' ? '1em' : current;
	        current = style.pixelLeft + 'px';

	        // Revert the changed values
	        style.left = left;
	        if (rsLeft) runStyle.left = rsLeft;
	      }

	      return current;
	    }
	  };
	};

/***/ },
/* 380 */
/***/ function(module, exports, __webpack_require__) {

	var __WEBPACK_AMD_DEFINE_FACTORY__, __WEBPACK_AMD_DEFINE_ARRAY__, __WEBPACK_AMD_DEFINE_RESULT__;(function (root, factory) {
	  if (true) {
	    !(__WEBPACK_AMD_DEFINE_ARRAY__ = [exports], __WEBPACK_AMD_DEFINE_FACTORY__ = (factory), __WEBPACK_AMD_DEFINE_RESULT__ = (typeof __WEBPACK_AMD_DEFINE_FACTORY__ === 'function' ? (__WEBPACK_AMD_DEFINE_FACTORY__.apply(exports, __WEBPACK_AMD_DEFINE_ARRAY__)) : __WEBPACK_AMD_DEFINE_FACTORY__), __WEBPACK_AMD_DEFINE_RESULT__ !== undefined && (module.exports = __WEBPACK_AMD_DEFINE_RESULT__));
	  } else if (typeof exports === "object") {
	    factory(exports);
	  } else {
	    factory(root.babelHelpers = {});
	  }
	})(this, function (global) {
	  var babelHelpers = global;

	  babelHelpers.interopRequireDefault = function (obj) {
	    return obj && obj.__esModule ? obj : {
	      "default": obj
	    };
	  };

	  babelHelpers._extends = Object.assign || function (target) {
	    for (var i = 1; i < arguments.length; i++) {
	      var source = arguments[i];

	      for (var key in source) {
	        if (Object.prototype.hasOwnProperty.call(source, key)) {
	          target[key] = source[key];
	        }
	      }
	    }

	    return target;
	  };
	})

/***/ },
/* 381 */
/***/ function(module, exports) {

	'use strict';

	module.exports = function removeStyle(node, key) {
	  return 'removeProperty' in node.style ? node.style.removeProperty(key) : node.style.removeAttribute(key);
	};

/***/ },
/* 382 */
/***/ function(module, exports, __webpack_require__) {

	'use strict';

	Object.defineProperty(exports, "__esModule", {
	  value: true
	});
	exports.EXITING = exports.ENTERED = exports.ENTERING = exports.EXITED = exports.UNMOUNTED = undefined;

	var _extends = Object.assign || function (target) { for (var i = 1; i < arguments.length; i++) { var source = arguments[i]; for (var key in source) { if (Object.prototype.hasOwnProperty.call(source, key)) { target[key] = source[key]; } } } return target; };

	var _createClass = function () { function defineProperties(target, props) { for (var i = 0; i < props.length; i++) { var descriptor = props[i]; descriptor.enumerable = descriptor.enumerable || false; descriptor.configurable = true; if ("value" in descriptor) descriptor.writable = true; Object.defineProperty(target, descriptor.key, descriptor); } } return function (Constructor, protoProps, staticProps) { if (protoProps) defineProperties(Constructor.prototype, protoProps); if (staticProps) defineProperties(Constructor, staticProps); return Constructor; }; }();

	var _react = __webpack_require__(2);

	var _react2 = _interopRequireDefault(_react);

	var _reactDom = __webpack_require__(34);

	var _reactDom2 = _interopRequireDefault(_reactDom);

	var _properties = __webpack_require__(383);

	var _properties2 = _interopRequireDefault(_properties);

	var _on = __webpack_require__(385);

	var _on2 = _interopRequireDefault(_on);

	var _classnames = __webpack_require__(340);

	var _classnames2 = _interopRequireDefault(_classnames);

	function _interopRequireDefault(obj) { return obj && obj.__esModule ? obj : { default: obj }; }

	function _objectWithoutProperties(obj, keys) { var target = {}; for (var i in obj) { if (keys.indexOf(i) >= 0) continue; if (!Object.prototype.hasOwnProperty.call(obj, i)) continue; target[i] = obj[i]; } return target; }

	function _classCallCheck(instance, Constructor) { if (!(instance instanceof Constructor)) { throw new TypeError("Cannot call a class as a function"); } }

	function _possibleConstructorReturn(self, call) { if (!self) { throw new ReferenceError("this hasn't been initialised - super() hasn't been called"); } return call && (typeof call === "object" || typeof call === "function") ? call : self; }

	function _inherits(subClass, superClass) { if (typeof superClass !== "function" && superClass !== null) { throw new TypeError("Super expression must either be null or a function, not " + typeof superClass); } subClass.prototype = Object.create(superClass && superClass.prototype, { constructor: { value: subClass, enumerable: false, writable: true, configurable: true } }); if (superClass) Object.setPrototypeOf ? Object.setPrototypeOf(subClass, superClass) : subClass.__proto__ = superClass; }

	var transitionEndEvent = _properties2.default.end;

	var UNMOUNTED = exports.UNMOUNTED = 0;
	var EXITED = exports.EXITED = 1;
	var ENTERING = exports.ENTERING = 2;
	var ENTERED = exports.ENTERED = 3;
	var EXITING = exports.EXITING = 4;

	/**
	 * The Transition component lets you define and run css transitions with a simple declarative api.
	 * It works similar to React's own [CSSTransitionGroup](http://facebook.github.io/react/docs/animation.html#high-level-api-reactcsstransitiongroup)
	 * but is specifically optimized for transitioning a single child "in" or "out".
	 *
	 * You don't even need to use class based css transitions if you don't want to (but it is easiest).
	 * The extensive set of lifecyle callbacks means you have control over
	 * the transitioning now at each step of the way.
	 */

	var Transition = function (_React$Component) {
	  _inherits(Transition, _React$Component);

	  function Transition(props, context) {
	    _classCallCheck(this, Transition);

	    var _this = _possibleConstructorReturn(this, Object.getPrototypeOf(Transition).call(this, props, context));

	    var initialStatus = void 0;
	    if (props.in) {
	      // Start enter transition in componentDidMount.
	      initialStatus = props.transitionAppear ? EXITED : ENTERED;
	    } else {
	      initialStatus = props.unmountOnExit ? UNMOUNTED : EXITED;
	    }
	    _this.state = { status: initialStatus };

	    _this.nextCallback = null;
	    return _this;
	  }

	  _createClass(Transition, [{
	    key: 'componentDidMount',
	    value: function componentDidMount() {
	      if (this.props.transitionAppear && this.props.in) {
	        this.performEnter(this.props);
	      }
	    }
	  }, {
	    key: 'componentWillReceiveProps',
	    value: function componentWillReceiveProps(nextProps) {
	      if (nextProps.in && this.props.unmountOnExit) {
	        if (this.state.status === UNMOUNTED) {
	          // Start enter transition in componentDidUpdate.
	          this.setState({ status: EXITED });
	        }
	      } else {
	        this._needsUpdate = true;
	      }
	    }
	  }, {
	    key: 'componentDidUpdate',
	    value: function componentDidUpdate() {
	      var status = this.state.status;

	      if (this.props.unmountOnExit && status === EXITED) {
	        // EXITED is always a transitional state to either ENTERING or UNMOUNTED
	        // when using unmountOnExit.
	        if (this.props.in) {
	          this.performEnter(this.props);
	        } else {
	          this.setState({ status: UNMOUNTED });
	        }

	        return;
	      }

	      // guard ensures we are only responding to prop changes
	      if (this._needsUpdate) {
	        this._needsUpdate = false;

	        if (this.props.in) {
	          if (status === EXITING) {
	            this.performEnter(this.props);
	          } else if (status === EXITED) {
	            this.performEnter(this.props);
	          }
	          // Otherwise we're already entering or entered.
	        } else {
	          if (status === ENTERING || status === ENTERED) {
	            this.performExit(this.props);
	          }
	          // Otherwise we're already exited or exiting.
	        }
	      }
	    }
	  }, {
	    key: 'componentWillUnmount',
	    value: function componentWillUnmount() {
	      this.cancelNextCallback();
	    }
	  }, {
	    key: 'performEnter',
	    value: function performEnter(props) {
	      var _this2 = this;

	      this.cancelNextCallback();
	      var node = _reactDom2.default.findDOMNode(this);

	      // Not this.props, because we might be about to receive new props.
	      props.onEnter(node);

	      this.safeSetState({ status: ENTERING }, function () {
	        _this2.props.onEntering(node);

	        _this2.onTransitionEnd(node, function () {
	          _this2.safeSetState({ status: ENTERED }, function () {
	            _this2.props.onEntered(node);
	          });
	        });
	      });
	    }
	  }, {
	    key: 'performExit',
	    value: function performExit(props) {
	      var _this3 = this;

	      this.cancelNextCallback();
	      var node = _reactDom2.default.findDOMNode(this);

	      // Not this.props, because we might be about to receive new props.
	      props.onExit(node);

	      this.safeSetState({ status: EXITING }, function () {
	        _this3.props.onExiting(node);

	        _this3.onTransitionEnd(node, function () {
	          _this3.safeSetState({ status: EXITED }, function () {
	            _this3.props.onExited(node);
	          });
	        });
	      });
	    }
	  }, {
	    key: 'cancelNextCallback',
	    value: function cancelNextCallback() {
	      if (this.nextCallback !== null) {
	        this.nextCallback.cancel();
	        this.nextCallback = null;
	      }
	    }
	  }, {
	    key: 'safeSetState',
	    value: function safeSetState(nextState, callback) {
	      // This shouldn't be necessary, but there are weird race conditions with
	      // setState callbacks and unmounting in testing, so always make sure that
	      // we can cancel any pending setState callbacks after we unmount.
	      this.setState(nextState, this.setNextCallback(callback));
	    }
	  }, {
	    key: 'setNextCallback',
	    value: function setNextCallback(callback) {
	      var _this4 = this;

	      var active = true;

	      this.nextCallback = function (event) {
	        if (active) {
	          active = false;
	          _this4.nextCallback = null;

	          callback(event);
	        }
	      };

	      this.nextCallback.cancel = function () {
	        active = false;
	      };

	      return this.nextCallback;
	    }
	  }, {
	    key: 'onTransitionEnd',
	    value: function onTransitionEnd(node, handler) {
	      this.setNextCallback(handler);

	      if (node) {
	        (0, _on2.default)(node, transitionEndEvent, this.nextCallback);
	        setTimeout(this.nextCallback, this.props.timeout);
	      } else {
	        setTimeout(this.nextCallback, 0);
	      }
	    }
	  }, {
	    key: 'render',
	    value: function render() {
	      var status = this.state.status;
	      if (status === UNMOUNTED) {
	        return null;
	      }

	      var _props = this.props;
	      var children = _props.children;
	      var className = _props.className;

	      var childProps = _objectWithoutProperties(_props, ['children', 'className']);

	      Object.keys(Transition.propTypes).forEach(function (key) {
	        return delete childProps[key];
	      });

	      var transitionClassName = void 0;
	      if (status === EXITED) {
	        transitionClassName = this.props.exitedClassName;
	      } else if (status === ENTERING) {
	        transitionClassName = this.props.enteringClassName;
	      } else if (status === ENTERED) {
	        transitionClassName = this.props.enteredClassName;
	      } else if (status === EXITING) {
	        transitionClassName = this.props.exitingClassName;
	      }

	      var child = _react2.default.Children.only(children);
	      return _react2.default.cloneElement(child, _extends({}, childProps, {
	        className: (0, _classnames2.default)(child.props.className, className, transitionClassName)
	      }));
	    }
	  }]);

	  return Transition;
	}(_react2.default.Component);

	Transition.propTypes = {
	  /**
	   * Show the component; triggers the enter or exit animation
	   */
	  in: _react2.default.PropTypes.bool,

	  /**
	   * Unmount the component (remove it from the DOM) when it is not shown
	   */
	  unmountOnExit: _react2.default.PropTypes.bool,

	  /**
	   * Run the enter animation when the component mounts, if it is initially
	   * shown
	   */
	  transitionAppear: _react2.default.PropTypes.bool,

	  /**
	   * A Timeout for the animation, in milliseconds, to ensure that a node doesn't
	   * transition indefinately if the browser transitionEnd events are
	   * canceled or interrupted.
	   *
	   * By default this is set to a high number (5 seconds) as a failsafe. You should consider
	   * setting this to the duration of your animation (or a bit above it).
	   */
	  timeout: _react2.default.PropTypes.number,

	  /**
	   * CSS class or classes applied when the component is exited
	   */
	  exitedClassName: _react2.default.PropTypes.string,
	  /**
	   * CSS class or classes applied while the component is exiting
	   */
	  exitingClassName: _react2.default.PropTypes.string,
	  /**
	   * CSS class or classes applied when the component is entered
	   */
	  enteredClassName: _react2.default.PropTypes.string,
	  /**
	   * CSS class or classes applied while the component is entering
	   */
	  enteringClassName: _react2.default.PropTypes.string,

	  /**
	   * Callback fired before the "entering" classes are applied
	   */
	  onEnter: _react2.default.PropTypes.func,
	  /**
	   * Callback fired after the "entering" classes are applied
	   */
	  onEntering: _react2.default.PropTypes.func,
	  /**
	   * Callback fired after the "enter" classes are applied
	   */
	  onEntered: _react2.default.PropTypes.func,
	  /**
	   * Callback fired before the "exiting" classes are applied
	   */
	  onExit: _react2.default.PropTypes.func,
	  /**
	   * Callback fired after the "exiting" classes are applied
	   */
	  onExiting: _react2.default.PropTypes.func,
	  /**
	   * Callback fired after the "exited" classes are applied
	   */
	  onExited: _react2.default.PropTypes.func
	};

	// Name the function so it is clearer in the documentation
	function noop() {}

	Transition.displayName = 'Transition';

	Transition.defaultProps = {
	  in: false,
	  unmountOnExit: false,
	  transitionAppear: false,

	  timeout: 5000,

	  onEnter: noop,
	  onEntering: noop,
	  onEntered: noop,

	  onExit: noop,
	  onExiting: noop,
	  onExited: noop
	};

	exports.default = Transition;

/***/ },
/* 383 */
/***/ function(module, exports, __webpack_require__) {

	'use strict';
	var canUseDOM = __webpack_require__(384);

	var has = Object.prototype.hasOwnProperty,
	    transform = 'transform',
	    transition = {},
	    transitionTiming,
	    transitionDuration,
	    transitionProperty,
	    transitionDelay;

	if (canUseDOM) {
	  transition = getTransitionProperties();

	  transform = transition.prefix + transform;

	  transitionProperty = transition.prefix + 'transition-property';
	  transitionDuration = transition.prefix + 'transition-duration';
	  transitionDelay = transition.prefix + 'transition-delay';
	  transitionTiming = transition.prefix + 'transition-timing-function';
	}

	module.exports = {
	  transform: transform,
	  end: transition.end,
	  property: transitionProperty,
	  timing: transitionTiming,
	  delay: transitionDelay,
	  duration: transitionDuration
	};

	function getTransitionProperties() {
	  var endEvent,
	      prefix = '',
	      transitions = {
	    O: 'otransitionend',
	    Moz: 'transitionend',
	    Webkit: 'webkitTransitionEnd',
	    ms: 'MSTransitionEnd'
	  };

	  var element = document.createElement('div');

	  for (var vendor in transitions) if (has.call(transitions, vendor)) {
	    if (element.style[vendor + 'TransitionProperty'] !== undefined) {
	      prefix = '-' + vendor.toLowerCase() + '-';
	      endEvent = transitions[vendor];
	      break;
	    }
	  }

	  if (!endEvent && element.style.transitionProperty !== undefined) endEvent = 'transitionend';

	  return { end: endEvent, prefix: prefix };
	}

/***/ },
/* 384 */
/***/ function(module, exports) {

	'use strict';
	module.exports = !!(typeof window !== 'undefined' && window.document && window.document.createElement);

/***/ },
/* 385 */
/***/ function(module, exports, __webpack_require__) {

	'use strict';
	var canUseDOM = __webpack_require__(384);
	var on = function on() {};

	if (canUseDOM) {
	  on = (function () {

	    if (document.addEventListener) return function (node, eventName, handler, capture) {
	      return node.addEventListener(eventName, handler, capture || false);
	    };else if (document.attachEvent) return function (node, eventName, handler) {
	      return node.attachEvent('on' + eventName, handler);
	    };
	  })();
	}

	module.exports = on;

/***/ },
/* 386 */
/***/ function(module, exports, __webpack_require__) {

	/* WEBPACK VAR INJECTION */(function(process) {'use strict';

	var _inherits = __webpack_require__(254)['default'];

	var _classCallCheck = __webpack_require__(330)['default'];

	var _extends = __webpack_require__(332)['default'];

	var _objectWithoutProperties = __webpack_require__(338)['default'];

	var _interopRequireDefault = __webpack_require__(249)['default'];

	exports.__esModule = true;

	var _classnames = __webpack_require__(340);

	var _classnames2 = _interopRequireDefault(_classnames);

	var _domHelpersActiveElement = __webpack_require__(387);

	var _domHelpersActiveElement2 = _interopRequireDefault(_domHelpersActiveElement);

	var _domHelpersQueryContains = __webpack_require__(389);

	var _domHelpersQueryContains2 = _interopRequireDefault(_domHelpersQueryContains);

	var _keycode = __webpack_require__(390);

	var _keycode2 = _interopRequireDefault(_keycode);

	var _react = __webpack_require__(2);

	var _react2 = _interopRequireDefault(_react);

	var _reactDom = __webpack_require__(34);

	var _reactDom2 = _interopRequireDefault(_reactDom);

	var _reactPropTypesLibAll = __webpack_require__(361);

	var _reactPropTypesLibAll2 = _interopRequireDefault(_reactPropTypesLibAll);

	var _reactPropTypesLibElementType = __webpack_require__(357);

	var _reactPropTypesLibElementType2 = _interopRequireDefault(_reactPropTypesLibElementType);

	var _reactPropTypesLibIsRequiredForA11y = __webpack_require__(391);

	var _reactPropTypesLibIsRequiredForA11y2 = _interopRequireDefault(_reactPropTypesLibIsRequiredForA11y);

	var _uncontrollable = __webpack_require__(392);

	var _uncontrollable2 = _interopRequireDefault(_uncontrollable);

	var _warning = __webpack_require__(178);

	var _warning2 = _interopRequireDefault(_warning);

	var _ButtonGroup = __webpack_require__(360);

	var _ButtonGroup2 = _interopRequireDefault(_ButtonGroup);

	var _DropdownMenu = __webpack_require__(395);

	var _DropdownMenu2 = _interopRequireDefault(_DropdownMenu);

	var _DropdownToggle = __webpack_require__(410);

	var _DropdownToggle2 = _interopRequireDefault(_DropdownToggle);

	var _utilsBootstrapUtils = __webpack_require__(341);

	var _utilsCreateChainedFunction = __webpack_require__(347);

	var _utilsCreateChainedFunction2 = _interopRequireDefault(_utilsCreateChainedFunction);

	var _utilsPropTypes = __webpack_require__(411);

	var _utilsValidComponentChildren = __webpack_require__(348);

	var _utilsValidComponentChildren2 = _interopRequireDefault(_utilsValidComponentChildren);

	var TOGGLE_ROLE = _DropdownToggle2['default'].defaultProps.bsRole;
	var MENU_ROLE = _DropdownMenu2['default'].defaultProps.bsRole;

	var propTypes = {
	  /**
	   * The menu will open above the dropdown button, instead of below it.
	   */
	  dropup: _react2['default'].PropTypes.bool,

	  /**
	   * An html id attribute, necessary for assistive technologies, such as screen readers.
	   * @type {string|number}
	   * @required
	   */
	  id: _reactPropTypesLibIsRequiredForA11y2['default'](_react2['default'].PropTypes.oneOfType([_react2['default'].PropTypes.string, _react2['default'].PropTypes.number])),

	  componentClass: _reactPropTypesLibElementType2['default'],

	  /**
	   * The children of a Dropdown may be a `<Dropdown.Toggle>` or a `<Dropdown.Menu>`.
	   * @type {node}
	   */
	  children: _reactPropTypesLibAll2['default'](_utilsPropTypes.requiredRoles(TOGGLE_ROLE, MENU_ROLE), _utilsPropTypes.exclusiveRoles(MENU_ROLE)),

	  /**
	   * Whether or not component is disabled.
	   */
	  disabled: _react2['default'].PropTypes.bool,

	  /**
	   * Align the menu to the right side of the Dropdown toggle
	   */
	  pullRight: _react2['default'].PropTypes.bool,

	  /**
	   * Whether or not the Dropdown is visible.
	   *
	   * @controllable onToggle
	   */
	  open: _react2['default'].PropTypes.bool,

	  /**
	   * A callback fired when the Dropdown closes.
	   */
	  onClose: _react2['default'].PropTypes.func,

	  /**
	   * A callback fired when the Dropdown wishes to change visibility. Called with the requested
	   * `open` value.
	   *
	   * ```js
	   * function(Boolean isOpen) {}
	   * ```
	   * @controllable open
	   */
	  onToggle: _react2['default'].PropTypes.func,

	  /**
	   * A callback fired when a menu item is selected.
	   *
	   * ```js
	   * (eventKey: any, event: Object) => any
	   * ```
	   */
	  onSelect: _react2['default'].PropTypes.func,

	  /**
	   * If `'menuitem'`, causes the dropdown to behave like a menu item rather than
	   * a menu button.
	   */
	  role: _react2['default'].PropTypes.string
	};

	var defaultProps = {
	  componentClass: _ButtonGroup2['default']
	};

	var Dropdown = (function (_React$Component) {
	  _inherits(Dropdown, _React$Component);

	  function Dropdown(props, context) {
	    _classCallCheck(this, Dropdown);

	    _React$Component.call(this, props, context);

	    this.handleClick = this.handleClick.bind(this);
	    this.handleKeyDown = this.handleKeyDown.bind(this);
	    this.handleClose = this.handleClose.bind(this);

	    this._focusInDropdown = false;
	    this.lastOpenEventType = null;
	  }

	  Dropdown.prototype.componentDidMount = function componentDidMount() {
	    this.focusNextOnOpen();
	  };

	  Dropdown.prototype.componentWillUpdate = function componentWillUpdate(nextProps) {
	    if (!nextProps.open && this.props.open) {
	      this._focusInDropdown = _domHelpersQueryContains2['default'](_reactDom2['default'].findDOMNode(this.menu), _domHelpersActiveElement2['default'](document));
	    }
	  };

	  Dropdown.prototype.componentDidUpdate = function componentDidUpdate(prevProps) {
	    var open = this.props.open;

	    var prevOpen = prevProps.open;

	    if (open && !prevOpen) {
	      this.focusNextOnOpen();
	    }

	    if (!open && prevOpen) {
	      // if focus hasn't already moved from the menu lets return it
	      // to the toggle
	      if (this._focusInDropdown) {
	        this._focusInDropdown = false;
	        this.focus();
	      }
	    }
	  };

	  Dropdown.prototype.handleClick = function handleClick() {
	    if (this.props.disabled) {
	      return;
	    }

	    this.toggleOpen('click');
	  };

	  Dropdown.prototype.handleKeyDown = function handleKeyDown(event) {
	    if (this.props.disabled) {
	      return;
	    }

	    switch (event.keyCode) {
	      case _keycode2['default'].codes.down:
	        if (!this.props.open) {
	          this.toggleOpen('keydown');
	        } else if (this.menu.focusNext) {
	          this.menu.focusNext();
	        }
	        event.preventDefault();
	        break;
	      case _keycode2['default'].codes.esc:
	      case _keycode2['default'].codes.tab:
	        this.handleClose(event);
	        break;
	      default:
	    }
	  };

	  Dropdown.prototype.toggleOpen = function toggleOpen(eventType) {
	    var open = !this.props.open;

	    if (open) {
	      this.lastOpenEventType = eventType;
	    }

	    if (this.props.onToggle) {
	      this.props.onToggle(open);
	    }
	  };

	  Dropdown.prototype.handleClose = function handleClose() {
	    if (!this.props.open) {
	      return;
	    }

	    this.toggleOpen(null);
	  };

	  Dropdown.prototype.focusNextOnOpen = function focusNextOnOpen() {
	    var menu = this.menu;

	    if (!menu.focusNext) {
	      return;
	    }

	    if (this.lastOpenEventType === 'keydown' || this.props.role === 'menuitem') {
	      menu.focusNext();
	    }
	  };

	  Dropdown.prototype.focus = function focus() {
	    var toggle = _reactDom2['default'].findDOMNode(this.toggle);

	    if (toggle && toggle.focus) {
	      toggle.focus();
	    }
	  };

	  Dropdown.prototype.renderToggle = function renderToggle(child, props) {
	    var _this = this;

	    var ref = function ref(c) {
	      _this.toggle = c;
	    };

	    if (typeof child.ref === 'string') {
	      process.env.NODE_ENV !== 'production' ? _warning2['default'](false, 'String refs are not supported on `<Dropdown.Toggle>` components. ' + 'To apply a ref to the component use the callback signature:\n\n ' + 'https://facebook.github.io/react/docs/more-about-refs.html#the-ref-callback-attribute') : undefined;
	    } else {
	      ref = _utilsCreateChainedFunction2['default'](child.ref, ref);
	    }

	    return _react.cloneElement(child, _extends({}, props, {
	      ref: ref,
	      bsClass: _utilsBootstrapUtils.prefix(props, 'toggle'),
	      onClick: _utilsCreateChainedFunction2['default'](child.props.onClick, this.handleClick),
	      onKeyDown: _utilsCreateChainedFunction2['default'](child.props.onKeyDown, this.handleKeyDown)
	    }));
	  };

	  Dropdown.prototype.renderMenu = function renderMenu(child, _ref) {
	    var _this2 = this;

	    var id = _ref.id;
	    var onClose = _ref.onClose;
	    var onSelect = _ref.onSelect;

	    var props = _objectWithoutProperties(_ref, ['id', 'onClose', 'onSelect']);

	    var ref = function ref(c) {
	      _this2.menu = c;
	    };

	    if (typeof child.ref === 'string') {
	      process.env.NODE_ENV !== 'production' ? _warning2['default'](false, 'String refs are not supported on `<Dropdown.Menu>` components. ' + 'To apply a ref to the component use the callback signature:\n\n ' + 'https://facebook.github.io/react/docs/more-about-refs.html#the-ref-callback-attribute') : undefined;
	    } else {
	      ref = _utilsCreateChainedFunction2['default'](child.ref, ref);
	    }

	    return _react.cloneElement(child, _extends({}, props, {
	      ref: ref,
	      labelledBy: id,
	      bsClass: _utilsBootstrapUtils.prefix(props, 'menu'),
	      onClose: _utilsCreateChainedFunction2['default'](child.props.onClose, onClose, this.handleClose),
	      onSelect: _utilsCreateChainedFunction2['default'](child.props.onSelect, onSelect, this.handleClose)
	    }));
	  };

	  Dropdown.prototype.render = function render() {
	    var _classes,
	        _this3 = this;

	    var _props = this.props;
	    var Component = _props.componentClass;
	    var id = _props.id;
	    var dropup = _props.dropup;
	    var disabled = _props.disabled;
	    var pullRight = _props.pullRight;
	    var open = _props.open;
	    var onClose = _props.onClose;
	    var onSelect = _props.onSelect;
	    var role = _props.role;
	    var bsClass = _props.bsClass;
	    var className = _props.className;
	    var children = _props.children;

	    var props = _objectWithoutProperties(_props, ['componentClass', 'id', 'dropup', 'disabled', 'pullRight', 'open', 'onClose', 'onSelect', 'role', 'bsClass', 'className', 'children']);

	    delete props.onToggle;

	    var classes = (_classes = {}, _classes[bsClass] = true, _classes.open = open, _classes.disabled = disabled, _classes);

	    if (dropup) {
	      classes[bsClass] = false;
	      classes.dropup = true;
	    }

	    // This intentionally forwards bsSize and bsStyle (if set) to the
	    // underlying component, to allow it to render size and style variants.

	    return _react2['default'].createElement(
	      Component,
	      _extends({}, props, {
	        className: _classnames2['default'](className, classes)
	      }),
	      _utilsValidComponentChildren2['default'].map(children, function (child) {
	        switch (child.props.bsRole) {
	          case TOGGLE_ROLE:
	            return _this3.renderToggle(child, {
	              id: id, disabled: disabled, open: open, role: role, bsClass: bsClass
	            });
	          case MENU_ROLE:
	            return _this3.renderMenu(child, {
	              id: id, open: open, pullRight: pullRight, bsClass: bsClass, onClose: onClose, onSelect: onSelect
	            });
	          default:
	            return child;
	        }
	      })
	    );
	  };

	  return Dropdown;
	})(_react2['default'].Component);

	Dropdown.propTypes = propTypes;
	Dropdown.defaultProps = defaultProps;

	_utilsBootstrapUtils.bsClass('dropdown', Dropdown);

	var UncontrolledDropdown = _uncontrollable2['default'](Dropdown, { open: 'onToggle' });

	UncontrolledDropdown.Toggle = _DropdownToggle2['default'];
	UncontrolledDropdown.Menu = _DropdownMenu2['default'];

	exports['default'] = UncontrolledDropdown;
	module.exports = exports['default'];
	/* WEBPACK VAR INJECTION */}.call(exports, __webpack_require__(4)))

/***/ },
/* 387 */
/***/ function(module, exports, __webpack_require__) {

	'use strict';

	var babelHelpers = __webpack_require__(380);

	exports.__esModule = true;

	/**
	 * document.activeElement
	 */
	exports['default'] = activeElement;

	var _ownerDocument = __webpack_require__(388);

	var _ownerDocument2 = babelHelpers.interopRequireDefault(_ownerDocument);

	function activeElement() {
	  var doc = arguments[0] === undefined ? document : arguments[0];

	  try {
	    return doc.activeElement;
	  } catch (e) {}
	}

	module.exports = exports['default'];

/***/ },
/* 388 */
/***/ function(module, exports) {

	"use strict";

	exports.__esModule = true;
	exports["default"] = ownerDocument;

	function ownerDocument(node) {
	  return node && node.ownerDocument || document;
	}

	module.exports = exports["default"];

/***/ },
/* 389 */
/***/ function(module, exports, __webpack_require__) {

	'use strict';
	var canUseDOM = __webpack_require__(384);

	var contains = (function () {
	  var root = canUseDOM && document.documentElement;

	  return root && root.contains ? function (context, node) {
	    return context.contains(node);
	  } : root && root.compareDocumentPosition ? function (context, node) {
	    return context === node || !!(context.compareDocumentPosition(node) & 16);
	  } : function (context, node) {
	    if (node) do {
	      if (node === context) return true;
	    } while (node = node.parentNode);

	    return false;
	  };
	})();

	module.exports = contains;

/***/ },
/* 390 */
/***/ function(module, exports) {

	// Source: http://jsfiddle.net/vWx8V/
	// http://stackoverflow.com/questions/5603195/full-list-of-javascript-keycodes

	/**
	 * Conenience method returns corresponding value for given keyName or keyCode.
	 *
	 * @param {Mixed} keyCode {Number} or keyName {String}
	 * @return {Mixed}
	 * @api public
	 */

	exports = module.exports = function(searchInput) {
	  // Keyboard Events
	  if (searchInput && 'object' === typeof searchInput) {
	    var hasKeyCode = searchInput.which || searchInput.keyCode || searchInput.charCode
	    if (hasKeyCode) searchInput = hasKeyCode
	  }

	  // Numbers
	  if ('number' === typeof searchInput) return names[searchInput]

	  // Everything else (cast to string)
	  var search = String(searchInput)

	  // check codes
	  var foundNamedKey = codes[search.toLowerCase()]
	  if (foundNamedKey) return foundNamedKey

	  // check aliases
	  var foundNamedKey = aliases[search.toLowerCase()]
	  if (foundNamedKey) return foundNamedKey

	  // weird character?
	  if (search.length === 1) return search.charCodeAt(0)

	  return undefined
	}

	/**
	 * Get by name
	 *
	 *   exports.code['enter'] // => 13
	 */

	var codes = exports.code = exports.codes = {
	  'backspace': 8,
	  'tab': 9,
	  'enter': 13,
	  'shift': 16,
	  'ctrl': 17,
	  'alt': 18,
	  'pause/break': 19,
	  'caps lock': 20,
	  'esc': 27,
	  'space': 32,
	  'page up': 33,
	  'page down': 34,
	  'end': 35,
	  'home': 36,
	  'left': 37,
	  'up': 38,
	  'right': 39,
	  'down': 40,
	  'insert': 45,
	  'delete': 46,
	  'command': 91,
	  'left command': 91,
	  'right command': 93,
	  'numpad *': 106,
	  'numpad +': 107,
	  'numpad -': 109,
	  'numpad .': 110,
	  'numpad /': 111,
	  'num lock': 144,
	  'scroll lock': 145,
	  'my computer': 182,
	  'my calculator': 183,
	  ';': 186,
	  '=': 187,
	  ',': 188,
	  '-': 189,
	  '.': 190,
	  '/': 191,
	  '`': 192,
	  '[': 219,
	  '\\': 220,
	  ']': 221,
	  "'": 222
	}

	// Helper aliases

	var aliases = exports.aliases = {
	  'windows': 91,
	  '⇧': 16,
	  '⌥': 18,
	  '⌃': 17,
	  '⌘': 91,
	  'ctl': 17,
	  'control': 17,
	  'option': 18,
	  'pause': 19,
	  'break': 19,
	  'caps': 20,
	  'return': 13,
	  'escape': 27,
	  'spc': 32,
	  'pgup': 33,
	  'pgdn': 34,
	  'ins': 45,
	  'del': 46,
	  'cmd': 91
	}


	/*!
	 * Programatically add the following
	 */

	// lower case chars
	for (i = 97; i < 123; i++) codes[String.fromCharCode(i)] = i - 32

	// numbers
	for (var i = 48; i < 58; i++) codes[i - 48] = i

	// function keys
	for (i = 1; i < 13; i++) codes['f'+i] = i + 111

	// numpad keys
	for (i = 0; i < 10; i++) codes['numpad '+i] = i + 96

	/**
	 * Get by code
	 *
	 *   exports.name[13] // => 'Enter'
	 */

	var names = exports.names = exports.title = {} // title for backward compat

	// Create reverse mapping
	for (i in codes) names[codes[i]] = i

	// Add aliases
	for (var alias in aliases) {
	  codes[alias] = aliases[alias]
	}


/***/ },
/* 391 */
/***/ function(module, exports) {

	"use strict";

	exports.__esModule = true;
	exports["default"] = isRequiredForA11y;

	function isRequiredForA11y(propType) {
	  return function validate(props, propName, componentName) {
	    if (props[propName] == null) {
	      return new Error("The prop '" + propName + "' is required to make '" + componentName + "' accessible" + " for users using assistive technologies such as screen readers");
	    }

	    return propType(props, propName, componentName);
	  };
	}

	module.exports = exports["default"];

/***/ },
/* 392 */
/***/ function(module, exports, __webpack_require__) {

	'use strict';

	exports.__esModule = true;

	var _createUncontrollable = __webpack_require__(393);

	var _createUncontrollable2 = _interopRequireDefault(_createUncontrollable);

	function _interopRequireDefault(obj) { return obj && obj.__esModule ? obj : { default: obj }; }

	var mixin = {
	  shouldComponentUpdate: function shouldComponentUpdate() {
	    //let the forceUpdate trigger the update
	    return !this._notifying;
	  }
	};

	function set(component, propName, handler, value, args) {
	  if (handler) {
	    component._notifying = true;
	    handler.call.apply(handler, [component, value].concat(args));
	    component._notifying = false;
	  }

	  component._values[propName] = value;

	  if (component.isMounted()) component.forceUpdate();
	}

	exports.default = (0, _createUncontrollable2.default)([mixin], set);
	module.exports = exports['default'];

/***/ },
/* 393 */
/***/ function(module, exports, __webpack_require__) {

	'use strict';

	exports.__esModule = true;

	var _extends = Object.assign || function (target) { for (var i = 1; i < arguments.length; i++) { var source = arguments[i]; for (var key in source) { if (Object.prototype.hasOwnProperty.call(source, key)) { target[key] = source[key]; } } } return target; };

	exports.default = createUncontrollable;

	var _react = __webpack_require__(2);

	var _react2 = _interopRequireDefault(_react);

	var _invariant = __webpack_require__(181);

	var _invariant2 = _interopRequireDefault(_invariant);

	var _utils = __webpack_require__(394);

	var utils = _interopRequireWildcard(_utils);

	function _interopRequireWildcard(obj) { if (obj && obj.__esModule) { return obj; } else { var newObj = {}; if (obj != null) { for (var key in obj) { if (Object.prototype.hasOwnProperty.call(obj, key)) newObj[key] = obj[key]; } } newObj.default = obj; return newObj; } }

	function _interopRequireDefault(obj) { return obj && obj.__esModule ? obj : { default: obj }; }

	function createUncontrollable(mixins, set) {

	  return uncontrollable;

	  function uncontrollable(Component, controlledValues) {
	    var methods = arguments.length <= 2 || arguments[2] === undefined ? [] : arguments[2];

	    var displayName = Component.displayName || Component.name || 'Component',
	        basePropTypes = utils.getType(Component).propTypes,
	        isCompositeComponent = utils.isReactComponent(Component),
	        controlledProps = Object.keys(controlledValues),
	        propTypes;

	    var OMIT_PROPS = ['valueLink', 'checkedLink'].concat(controlledProps.map(utils.defaultKey));

	    propTypes = utils.uncontrolledPropTypes(controlledValues, basePropTypes, displayName);

	    (0, _invariant2.default)(isCompositeComponent || !methods.length, '[uncontrollable] stateless function components cannot pass through methods ' + 'because they have no associated instances. Check component: ' + displayName + ', ' + 'attempting to pass through methods: ' + methods.join(', '));
	    methods = utils.transform(methods, function (obj, method) {
	      obj[method] = function () {
	        var _refs$inner;

	        return (_refs$inner = this.refs.inner)[method].apply(_refs$inner, arguments);
	      };
	    }, {});

	    var component = _react2.default.createClass(_extends({

	      displayName: 'Uncontrolled(' + displayName + ')',

	      mixins: mixins,

	      propTypes: propTypes

	    }, methods, {
	      componentWillMount: function componentWillMount() {
	        var _this = this;

	        var props = this.props;

	        this._values = {};

	        controlledProps.forEach(function (key) {
	          _this._values[key] = props[utils.defaultKey(key)];
	        });
	      },


	      /**
	       * If a prop switches from controlled to Uncontrolled
	       * reset its value to the defaultValue
	       */
	      componentWillReceiveProps: function componentWillReceiveProps(nextProps) {
	        var _this2 = this;

	        var props = this.props;

	        controlledProps.forEach(function (key) {
	          if (utils.getValue(nextProps, key) === undefined && utils.getValue(props, key) !== undefined) {
	            _this2._values[key] = nextProps[utils.defaultKey(key)];
	          }
	        });
	      },
	      render: function render() {
	        var _this3 = this;

	        var newProps = {},
	            props = omitProps(this.props);

	        utils.each(controlledValues, function (handle, propName) {
	          var linkPropName = utils.getLinkName(propName),
	              prop = _this3.props[propName];

	          if (linkPropName && !isProp(_this3.props, propName) && isProp(_this3.props, linkPropName)) {
	            prop = _this3.props[linkPropName].value;
	          }

	          newProps[propName] = prop !== undefined ? prop : _this3._values[propName];

	          newProps[handle] = setAndNotify.bind(_this3, propName);
	        });

	        newProps = _extends({}, props, newProps, {
	          ref: isCompositeComponent ? 'inner' : null
	        });

	        return _react2.default.createElement(Component, newProps);
	      }
	    }));

	    component.ControlledComponent = Component;

	    /**
	     * useful when wrapping a Component and you want to control
	     * everything
	     */
	    component.deferControlTo = function (newComponent) {
	      var additions = arguments.length <= 1 || arguments[1] === undefined ? {} : arguments[1];
	      var nextMethods = arguments[2];

	      return uncontrollable(newComponent, _extends({}, controlledValues, additions), nextMethods);
	    };

	    return component;

	    function setAndNotify(propName, value) {
	      var linkName = utils.getLinkName(propName),
	          handler = this.props[controlledValues[propName]];

	      if (linkName && isProp(this.props, linkName) && !handler) {
	        handler = this.props[linkName].requestChange;
	      }

	      for (var _len = arguments.length, args = Array(_len > 2 ? _len - 2 : 0), _key = 2; _key < _len; _key++) {
	        args[_key - 2] = arguments[_key];
	      }

	      set(this, propName, handler, value, args);
	    }

	    function isProp(props, prop) {
	      return props[prop] !== undefined;
	    }

	    function omitProps(props) {
	      var result = {};

	      utils.each(props, function (value, key) {
	        if (OMIT_PROPS.indexOf(key) === -1) result[key] = value;
	      });

	      return result;
	    }
	  }
	}
	module.exports = exports['default'];

/***/ },
/* 394 */
/***/ function(module, exports, __webpack_require__) {

	/* WEBPACK VAR INJECTION */(function(process) {'use strict';

	exports.__esModule = true;
	exports.version = undefined;
	exports.customPropType = customPropType;
	exports.uncontrolledPropTypes = uncontrolledPropTypes;
	exports.getType = getType;
	exports.getValue = getValue;
	exports.getLinkName = getLinkName;
	exports.defaultKey = defaultKey;
	exports.chain = chain;
	exports.transform = transform;
	exports.each = each;
	exports.isReactComponent = isReactComponent;
	exports.has = has;

	var _react = __webpack_require__(2);

	var _react2 = _interopRequireDefault(_react);

	var _invariant = __webpack_require__(181);

	var _invariant2 = _interopRequireDefault(_invariant);

	function _interopRequireDefault(obj) { return obj && obj.__esModule ? obj : { default: obj }; }

	function customPropType(handler, propType, name) {

	  return function (props, propName) {

	    if (props[propName] !== undefined) {
	      if (!props[handler]) {
	        return new Error('You have provided a `' + propName + '` prop to ' + '`' + name + '` without an `' + handler + '` handler. This will render a read-only field. ' + 'If the field should be mutable use `' + defaultKey(propName) + '`. Otherwise, set `' + handler + '`');
	      }

	      return propType && propType(props, propName, name);
	    }
	  };
	}

	function uncontrolledPropTypes(controlledValues, basePropTypes, displayName) {
	  var propTypes = {};

	  if (process.env.NODE_ENV !== 'production' && basePropTypes) {
	    transform(controlledValues, function (obj, handler, prop) {
	      var type = basePropTypes[prop];

	      (0, _invariant2.default)(typeof handler === 'string' && handler.trim().length, 'Uncontrollable - [%s]: the prop `%s` needs a valid handler key name in order to make it uncontrollable', displayName, prop);

	      obj[prop] = customPropType(handler, type, displayName);

	      if (type !== undefined) obj[defaultKey(prop)] = type;
	    }, propTypes);
	  }

	  return propTypes;
	}

	var version = exports.version = _react2.default.version.split('.').map(parseFloat);

	function getType(component) {
	  if (version[0] >= 15 || version[0] === 0 && version[1] >= 13) return component;

	  return component.type;
	}

	function getValue(props, name) {
	  var linkPropName = getLinkName(name);

	  if (linkPropName && !isProp(props, name) && isProp(props, linkPropName)) return props[linkPropName].value;

	  return props[name];
	}

	function isProp(props, prop) {
	  return props[prop] !== undefined;
	}

	function getLinkName(name) {
	  return name === 'value' ? 'valueLink' : name === 'checked' ? 'checkedLink' : null;
	}

	function defaultKey(key) {
	  return 'default' + key.charAt(0).toUpperCase() + key.substr(1);
	}

	function chain(thisArg, a, b) {
	  return function chainedFunction() {
	    for (var _len = arguments.length, args = Array(_len), _key = 0; _key < _len; _key++) {
	      args[_key] = arguments[_key];
	    }

	    a && a.call.apply(a, [thisArg].concat(args));
	    b && b.call.apply(b, [thisArg].concat(args));
	  };
	}

	function transform(obj, cb, seed) {
	  each(obj, cb.bind(null, seed = seed || (Array.isArray(obj) ? [] : {})));
	  return seed;
	}

	function each(obj, cb, thisArg) {
	  if (Array.isArray(obj)) return obj.forEach(cb, thisArg);

	  for (var key in obj) {
	    if (has(obj, key)) cb.call(thisArg, obj[key], key, obj);
	  }
	}

	/**
	 * Copyright (c) 2013-present, Facebook, Inc.
	 * All rights reserved.
	 *
	 * This source code is licensed under the BSD-style license found in the
	 * LICENSE file in the root directory of this source tree. An additional grant
	 * of patent rights can be found in the PATENTS file in the same directory.
	 */
	function isReactComponent(component) {
	  return !!(component && component.prototype && component.prototype.isReactComponent);
	}

	function has(o, k) {
	  return o ? Object.prototype.hasOwnProperty.call(o, k) : false;
	}
	/* WEBPACK VAR INJECTION */}.call(exports, __webpack_require__(4)))

/***/ },
/* 395 */
/***/ function(module, exports, __webpack_require__) {

	'use strict';

	var _inherits = __webpack_require__(254)['default'];

	var _classCallCheck = __webpack_require__(330)['default'];

	var _extends = __webpack_require__(332)['default'];

	var _objectWithoutProperties = __webpack_require__(338)['default'];

	var _Array$from = __webpack_require__(396)['default'];

	var _interopRequireDefault = __webpack_require__(249)['default'];

	exports.__esModule = true;

	var _classnames = __webpack_require__(340);

	var _classnames2 = _interopRequireDefault(_classnames);

	var _keycode = __webpack_require__(390);

	var _keycode2 = _interopRequireDefault(_keycode);

	var _react = __webpack_require__(2);

	var _react2 = _interopRequireDefault(_react);

	var _reactDom = __webpack_require__(34);

	var _reactDom2 = _interopRequireDefault(_reactDom);

	var _reactOverlaysLibRootCloseWrapper = __webpack_require__(405);

	var _reactOverlaysLibRootCloseWrapper2 = _interopRequireDefault(_reactOverlaysLibRootCloseWrapper);

	var _utilsBootstrapUtils = __webpack_require__(341);

	var _utilsCreateChainedFunction = __webpack_require__(347);

	var _utilsCreateChainedFunction2 = _interopRequireDefault(_utilsCreateChainedFunction);

	var _utilsValidComponentChildren = __webpack_require__(348);

	var _utilsValidComponentChildren2 = _interopRequireDefault(_utilsValidComponentChildren);

	var propTypes = {
	  open: _react2['default'].PropTypes.bool,
	  pullRight: _react2['default'].PropTypes.bool,
	  onClose: _react2['default'].PropTypes.func,
	  labelledBy: _react2['default'].PropTypes.oneOfType([_react2['default'].PropTypes.string, _react2['default'].PropTypes.number]),
	  onSelect: _react2['default'].PropTypes.func
	};

	var defaultProps = {
	  bsRole: 'menu',
	  pullRight: false
	};

	var DropdownMenu = (function (_React$Component) {
	  _inherits(DropdownMenu, _React$Component);

	  function DropdownMenu(props) {
	    _classCallCheck(this, DropdownMenu);

	    _React$Component.call(this, props);

	    this.handleKeyDown = this.handleKeyDown.bind(this);
	  }

	  DropdownMenu.prototype.handleKeyDown = function handleKeyDown(event) {
	    switch (event.keyCode) {
	      case _keycode2['default'].codes.down:
	        this.focusNext();
	        event.preventDefault();
	        break;
	      case _keycode2['default'].codes.up:
	        this.focusPrevious();
	        event.preventDefault();
	        break;
	      case _keycode2['default'].codes.esc:
	      case _keycode2['default'].codes.tab:
	        this.props.onClose(event);
	        break;
	      default:
	    }
	  };

	  DropdownMenu.prototype.getItemsAndActiveIndex = function getItemsAndActiveIndex() {
	    var items = this.getFocusableMenuItems();
	    var activeIndex = items.indexOf(document.activeElement);

	    return { items: items, activeIndex: activeIndex };
	  };

	  DropdownMenu.prototype.getFocusableMenuItems = function getFocusableMenuItems() {
	    var node = _reactDom2['default'].findDOMNode(this);
	    if (!node) {
	      return [];
	    }

	    return _Array$from(node.querySelectorAll('[tabIndex="-1"]'));
	  };

	  DropdownMenu.prototype.focusNext = function focusNext() {
	    var _getItemsAndActiveIndex = this.getItemsAndActiveIndex();

	    var items = _getItemsAndActiveIndex.items;
	    var activeIndex = _getItemsAndActiveIndex.activeIndex;

	    if (items.length === 0) {
	      return;
	    }

	    var nextIndex = activeIndex === items.length - 1 ? 0 : activeIndex + 1;
	    items[nextIndex].focus();
	  };

	  DropdownMenu.prototype.focusPrevious = function focusPrevious() {
	    var _getItemsAndActiveIndex2 = this.getItemsAndActiveIndex();

	    var items = _getItemsAndActiveIndex2.items;
	    var activeIndex = _getItemsAndActiveIndex2.activeIndex;

	    if (items.length === 0) {
	      return;
	    }

	    var prevIndex = activeIndex === 0 ? items.length - 1 : activeIndex - 1;
	    items[prevIndex].focus();
	  };

	  DropdownMenu.prototype.render = function render() {
	    var _extends2,
	        _this = this;

	    var _props = this.props;
	    var open = _props.open;
	    var pullRight = _props.pullRight;
	    var onClose = _props.onClose;
	    var labelledBy = _props.labelledBy;
	    var onSelect = _props.onSelect;
	    var className = _props.className;
	    var children = _props.children;

	    var props = _objectWithoutProperties(_props, ['open', 'pullRight', 'onClose', 'labelledBy', 'onSelect', 'className', 'children']);

	    var _splitBsProps = _utilsBootstrapUtils.splitBsProps(props);

	    var bsProps = _splitBsProps[0];
	    var elementProps = _splitBsProps[1];

	    var classes = _extends({}, _utilsBootstrapUtils.getClassSet(bsProps), (_extends2 = {}, _extends2[_utilsBootstrapUtils.prefix(bsProps, 'right')] = pullRight, _extends2));

	    var list = _react2['default'].createElement(
	      'ul',
	      _extends({}, elementProps, {
	        role: 'menu',
	        className: _classnames2['default'](className, classes),
	        'aria-labelledby': labelledBy
	      }),
	      _utilsValidComponentChildren2['default'].map(children, function (child) {
	        return _react2['default'].cloneElement(child, {
	          onKeyDown: _utilsCreateChainedFunction2['default'](child.props.onKeyDown, _this.handleKeyDown),
	          onSelect: _utilsCreateChainedFunction2['default'](child.props.onSelect, onSelect)
	        });
	      })
	    );

	    if (open) {
	      return _react2['default'].createElement(
	        _reactOverlaysLibRootCloseWrapper2['default'],
	        { noWrap: true, onRootClose: onClose },
	        list
	      );
	    }

	    return list;
	  };

	  return DropdownMenu;
	})(_react2['default'].Component);

	DropdownMenu.propTypes = propTypes;
	DropdownMenu.defaultProps = defaultProps;

	exports['default'] = _utilsBootstrapUtils.bsClass('dropdown-menu', DropdownMenu);
	module.exports = exports['default'];

/***/ },
/* 396 */
/***/ function(module, exports, __webpack_require__) {

	module.exports = { "default": __webpack_require__(397), __esModule: true };

/***/ },
/* 397 */
/***/ function(module, exports, __webpack_require__) {

	__webpack_require__(300);
	__webpack_require__(398);
	module.exports = __webpack_require__(260).Array.from;

/***/ },
/* 398 */
/***/ function(module, exports, __webpack_require__) {

	'use strict';
	var ctx            = __webpack_require__(261)
	  , $export        = __webpack_require__(258)
	  , toObject       = __webpack_require__(310)
	  , call           = __webpack_require__(399)
	  , isArrayIter    = __webpack_require__(400)
	  , toLength       = __webpack_require__(289)
	  , createProperty = __webpack_require__(401)
	  , getIterFn      = __webpack_require__(402);

	$export($export.S + $export.F * !__webpack_require__(404)(function(iter){ Array.from(iter); }), 'Array', {
	  // 22.1.2.1 Array.from(arrayLike, mapfn = undefined, thisArg = undefined)
	  from: function from(arrayLike/*, mapfn = undefined, thisArg = undefined*/){
	    var O       = toObject(arrayLike)
	      , C       = typeof this == 'function' ? this : Array
	      , aLen    = arguments.length
	      , mapfn   = aLen > 1 ? arguments[1] : undefined
	      , mapping = mapfn !== undefined
	      , index   = 0
	      , iterFn  = getIterFn(O)
	      , length, result, step, iterator;
	    if(mapping)mapfn = ctx(mapfn, aLen > 2 ? arguments[2] : undefined, 2);
	    // if object isn't iterable or it's array with default iterator - use simple case
	    if(iterFn != undefined && !(C == Array && isArrayIter(iterFn))){
	      for(iterator = iterFn.call(O), result = new C; !(step = iterator.next()).done; index++){
	        createProperty(result, index, mapping ? call(iterator, mapfn, [step.value, index], true) : step.value);
	      }
	    } else {
	      length = toLength(O.length);
	      for(result = new C(length); length > index; index++){
	        createProperty(result, index, mapping ? mapfn(O[index], index) : O[index]);
	      }
	    }
	    result.length = index;
	    return result;
	  }
	});


/***/ },
/* 399 */
/***/ function(module, exports, __webpack_require__) {

	// call something on iterator step with safe closing on error
	var anObject = __webpack_require__(265);
	module.exports = function(iterator, fn, value, entries){
	  try {
	    return entries ? fn(anObject(value)[0], value[1]) : fn(value);
	  // 7.4.6 IteratorClose(iterator, completion)
	  } catch(e){
	    var ret = iterator['return'];
	    if(ret !== undefined)anObject(ret.call(iterator));
	    throw e;
	  }
	};

/***/ },
/* 400 */
/***/ function(module, exports, __webpack_require__) {

	// check on default Array iterator
	var Iterators  = __webpack_require__(305)
	  , ITERATOR   = __webpack_require__(308)('iterator')
	  , ArrayProto = Array.prototype;

	module.exports = function(it){
	  return it !== undefined && (Iterators.Array === it || ArrayProto[ITERATOR] === it);
	};

/***/ },
/* 401 */
/***/ function(module, exports, __webpack_require__) {

	'use strict';
	var $defineProperty = __webpack_require__(264)
	  , createDesc      = __webpack_require__(272);

	module.exports = function(object, index, value){
	  if(index in object)$defineProperty.f(object, index, createDesc(0, value));
	  else object[index] = value;
	};

/***/ },
/* 402 */
/***/ function(module, exports, __webpack_require__) {

	var classof   = __webpack_require__(403)
	  , ITERATOR  = __webpack_require__(308)('iterator')
	  , Iterators = __webpack_require__(305);
	module.exports = __webpack_require__(260).getIteratorMethod = function(it){
	  if(it != undefined)return it[ITERATOR]
	    || it['@@iterator']
	    || Iterators[classof(it)];
	};

/***/ },
/* 403 */
/***/ function(module, exports, __webpack_require__) {

	// getting tag from 19.1.3.6 Object.prototype.toString()
	var cof = __webpack_require__(278)
	  , TAG = __webpack_require__(308)('toStringTag')
	  // ES3 wrong here
	  , ARG = cof(function(){ return arguments; }()) == 'Arguments';

	// fallback for IE11 Script Access Denied error
	var tryGet = function(it, key){
	  try {
	    return it[key];
	  } catch(e){ /* empty */ }
	};

	module.exports = function(it){
	  var O, T, B;
	  return it === undefined ? 'Undefined' : it === null ? 'Null'
	    // @@toStringTag case
	    : typeof (T = tryGet(O = Object(it), TAG)) == 'string' ? T
	    // builtinTag case
	    : ARG ? cof(O)
	    // ES3 arguments fallback
	    : (B = cof(O)) == 'Object' && typeof O.callee == 'function' ? 'Arguments' : B;
	};

/***/ },
/* 404 */
/***/ function(module, exports, __webpack_require__) {

	var ITERATOR     = __webpack_require__(308)('iterator')
	  , SAFE_CLOSING = false;

	try {
	  var riter = [7][ITERATOR]();
	  riter['return'] = function(){ SAFE_CLOSING = true; };
	  Array.from(riter, function(){ throw 2; });
	} catch(e){ /* empty */ }

	module.exports = function(exec, skipClosing){
	  if(!skipClosing && !SAFE_CLOSING)return false;
	  var safe = false;
	  try {
	    var arr  = [7]
	      , iter = arr[ITERATOR]();
	    iter.next = function(){ return {done: safe = true}; };
	    arr[ITERATOR] = function(){ return iter; };
	    exec(arr);
	  } catch(e){ /* empty */ }
	  return safe;
	};

/***/ },
/* 405 */
/***/ function(module, exports, __webpack_require__) {

	'use strict';

	Object.defineProperty(exports, "__esModule", {
	  value: true
	});

	var _createClass = function () { function defineProperties(target, props) { for (var i = 0; i < props.length; i++) { var descriptor = props[i]; descriptor.enumerable = descriptor.enumerable || false; descriptor.configurable = true; if ("value" in descriptor) descriptor.writable = true; Object.defineProperty(target, descriptor.key, descriptor); } } return function (Constructor, protoProps, staticProps) { if (protoProps) defineProperties(Constructor.prototype, protoProps); if (staticProps) defineProperties(Constructor, staticProps); return Constructor; }; }();

	var _react = __webpack_require__(2);

	var _react2 = _interopRequireDefault(_react);

	var _reactDom = __webpack_require__(34);

	var _reactDom2 = _interopRequireDefault(_reactDom);

	var _addEventListener = __webpack_require__(406);

	var _addEventListener2 = _interopRequireDefault(_addEventListener);

	var _createChainedFunction = __webpack_require__(408);

	var _createChainedFunction2 = _interopRequireDefault(_createChainedFunction);

	var _ownerDocument = __webpack_require__(409);

	var _ownerDocument2 = _interopRequireDefault(_ownerDocument);

	function _interopRequireDefault(obj) { return obj && obj.__esModule ? obj : { default: obj }; }

	function _defineProperty(obj, key, value) { if (key in obj) { Object.defineProperty(obj, key, { value: value, enumerable: true, configurable: true, writable: true }); } else { obj[key] = value; } return obj; }

	function _classCallCheck(instance, Constructor) { if (!(instance instanceof Constructor)) { throw new TypeError("Cannot call a class as a function"); } }

	function _possibleConstructorReturn(self, call) { if (!self) { throw new ReferenceError("this hasn't been initialised - super() hasn't been called"); } return call && (typeof call === "object" || typeof call === "function") ? call : self; }

	function _inherits(subClass, superClass) { if (typeof superClass !== "function" && superClass !== null) { throw new TypeError("Super expression must either be null or a function, not " + typeof superClass); } subClass.prototype = Object.create(superClass && superClass.prototype, { constructor: { value: subClass, enumerable: false, writable: true, configurable: true } }); if (superClass) Object.setPrototypeOf ? Object.setPrototypeOf(subClass, superClass) : subClass.__proto__ = superClass; }

	// TODO: Consider using an ES6 symbol here, once we use babel-runtime.
	var CLICK_WAS_INSIDE = '__click_was_inside';

	var counter = 0;

	function isLeftClickEvent(event) {
	  return event.button === 0;
	}

	function isModifiedEvent(event) {
	  return !!(event.metaKey || event.altKey || event.ctrlKey || event.shiftKey);
	}

	function getSuppressRootClose() {
	  var id = CLICK_WAS_INSIDE + '_' + counter++;
	  return {
	    id: id,
	    suppressRootClose: function suppressRootClose(event) {
	      // Tag the native event to prevent the root close logic on document click.
	      // This seems safer than using event.nativeEvent.stopImmediatePropagation(),
	      // which is only supported in IE >= 9.
	      event.nativeEvent[id] = true;
	    }
	  };
	}

	var RootCloseWrapper = function (_React$Component) {
	  _inherits(RootCloseWrapper, _React$Component);

	  function RootCloseWrapper(props) {
	    _classCallCheck(this, RootCloseWrapper);

	    var _this = _possibleConstructorReturn(this, Object.getPrototypeOf(RootCloseWrapper).call(this, props));

	    _this.handleDocumentMouse = _this.handleDocumentMouse.bind(_this);
	    _this.handleDocumentKeyUp = _this.handleDocumentKeyUp.bind(_this);

	    var _getSuppressRootClose = getSuppressRootClose();

	    var id = _getSuppressRootClose.id;
	    var suppressRootClose = _getSuppressRootClose.suppressRootClose;


	    _this._suppressRootId = id;

	    _this._suppressRootCloseHandler = suppressRootClose;
	    return _this;
	  }

	  _createClass(RootCloseWrapper, [{
	    key: 'bindRootCloseHandlers',
	    value: function bindRootCloseHandlers() {
	      var doc = (0, _ownerDocument2.default)(this);

	      this._onDocumentMouseListener = (0, _addEventListener2.default)(doc, this.props.event, this.handleDocumentMouse);

	      this._onDocumentKeyupListener = (0, _addEventListener2.default)(doc, 'keyup', this.handleDocumentKeyUp);
	    }
	  }, {
	    key: 'handleDocumentMouse',
	    value: function handleDocumentMouse(e) {
	      // This is now the native event.
	      if (e[this._suppressRootId]) {
	        return;
	      }

	      if (this.props.disabled || isModifiedEvent(e) || !isLeftClickEvent(e)) {
	        return;
	      }

	      this.props.onRootClose && this.props.onRootClose();
	    }
	  }, {
	    key: 'handleDocumentKeyUp',
	    value: function handleDocumentKeyUp(e) {
	      if (e.keyCode === 27 && this.props.onRootClose) {
	        this.props.onRootClose();
	      }
	    }
	  }, {
	    key: 'unbindRootCloseHandlers',
	    value: function unbindRootCloseHandlers() {
	      if (this._onDocumentMouseListener) {
	        this._onDocumentMouseListener.remove();
	      }

	      if (this._onDocumentKeyupListener) {
	        this._onDocumentKeyupListener.remove();
	      }
	    }
	  }, {
	    key: 'componentDidMount',
	    value: function componentDidMount() {
	      this.bindRootCloseHandlers();
	    }
	  }, {
	    key: 'render',
	    value: function render() {
	      var _props = this.props;
	      var event = _props.event;
	      var noWrap = _props.noWrap;
	      var children = _props.children;

	      var child = _react2.default.Children.only(children);

	      var handlerName = event == 'click' ? 'onClick' : 'onMouseDown';

	      if (noWrap) {
	        return _react2.default.cloneElement(child, _defineProperty({}, handlerName, (0, _createChainedFunction2.default)(this._suppressRootCloseHandler, child.props[handlerName])));
	      }

	      // Wrap the child in a new element, so the child won't have to handle
	      // potentially combining multiple onClick listeners.
	      return _react2.default.createElement(
	        'div',
	        _defineProperty({}, handlerName, this._suppressRootCloseHandler),
	        child
	      );
	    }
	  }, {
	    key: 'getWrappedDOMNode',
	    value: function getWrappedDOMNode() {
	      // We can't use a ref to identify the wrapped child, since we might be
	      // stealing the ref from the owner, but we know exactly the DOM structure
	      // that will be rendered, so we can just do this to get the child's DOM
	      // node for doing size calculations in OverlayMixin.
	      var node = _reactDom2.default.findDOMNode(this);
	      return this.props.noWrap ? node : node.firstChild;
	    }
	  }, {
	    key: 'componentWillUnmount',
	    value: function componentWillUnmount() {
	      this.unbindRootCloseHandlers();
	    }
	  }]);

	  return RootCloseWrapper;
	}(_react2.default.Component);

	exports.default = RootCloseWrapper;


	RootCloseWrapper.displayName = 'RootCloseWrapper';

	RootCloseWrapper.propTypes = {
	  onRootClose: _react2.default.PropTypes.func,

	  /**
	   * Disable the the RootCloseWrapper, preventing it from triggering
	   * `onRootClose`.
	   */
	  disabled: _react2.default.PropTypes.bool,
	  /**
	   * Passes the suppress click handler directly to the child component instead
	   * of placing it on a wrapping div. Only use when you can be sure the child
	   * properly handle the click event.
	   */
	  noWrap: _react2.default.PropTypes.bool,
	  /**
	   * Choose which document mouse event to bind to
	   */
	  event: _react2.default.PropTypes.oneOf(['click', 'mousedown'])
	};

	RootCloseWrapper.defaultProps = {
	  event: 'click'
	};
	module.exports = exports['default'];

/***/ },
/* 406 */
/***/ function(module, exports, __webpack_require__) {

	'use strict';

	Object.defineProperty(exports, "__esModule", {
	  value: true
	});

	exports.default = function (node, event, handler) {
	  (0, _on2.default)(node, event, handler);
	  return {
	    remove: function remove() {
	      (0, _off2.default)(node, event, handler);
	    }
	  };
	};

	var _on = __webpack_require__(385);

	var _on2 = _interopRequireDefault(_on);

	var _off = __webpack_require__(407);

	var _off2 = _interopRequireDefault(_off);

	function _interopRequireDefault(obj) { return obj && obj.__esModule ? obj : { default: obj }; }

	module.exports = exports['default'];

/***/ },
/* 407 */
/***/ function(module, exports, __webpack_require__) {

	'use strict';
	var canUseDOM = __webpack_require__(384);
	var off = function off() {};

	if (canUseDOM) {

	  off = (function () {

	    if (document.addEventListener) return function (node, eventName, handler, capture) {
	      return node.removeEventListener(eventName, handler, capture || false);
	    };else if (document.attachEvent) return function (node, eventName, handler) {
	      return node.detachEvent('on' + eventName, handler);
	    };
	  })();
	}

	module.exports = off;

/***/ },
/* 408 */
/***/ function(module, exports) {

	'use strict';

	Object.defineProperty(exports, "__esModule", {
	  value: true
	});
	/**
	 * Safe chained function
	 *
	 * Will only create a new function if needed,
	 * otherwise will pass back existing functions or null.
	 *
	 * @param {function} functions to chain
	 * @returns {function|null}
	 */
	function createChainedFunction() {
	  for (var _len = arguments.length, funcs = Array(_len), _key = 0; _key < _len; _key++) {
	    funcs[_key] = arguments[_key];
	  }

	  return funcs.filter(function (f) {
	    return f != null;
	  }).reduce(function (acc, f) {
	    if (typeof f !== 'function') {
	      throw new Error('Invalid Argument Type, must only provide functions, undefined, or null.');
	    }

	    if (acc === null) {
	      return f;
	    }

	    return function chainedFunction() {
	      for (var _len2 = arguments.length, args = Array(_len2), _key2 = 0; _key2 < _len2; _key2++) {
	        args[_key2] = arguments[_key2];
	      }

	      acc.apply(this, args);
	      f.apply(this, args);
	    };
	  }, null);
	}

	exports.default = createChainedFunction;
	module.exports = exports['default'];

/***/ },
/* 409 */
/***/ function(module, exports, __webpack_require__) {

	'use strict';

	Object.defineProperty(exports, "__esModule", {
	  value: true
	});

	exports.default = function (componentOrElement) {
	  return (0, _ownerDocument2.default)(_reactDom2.default.findDOMNode(componentOrElement));
	};

	var _reactDom = __webpack_require__(34);

	var _reactDom2 = _interopRequireDefault(_reactDom);

	var _ownerDocument = __webpack_require__(388);

	var _ownerDocument2 = _interopRequireDefault(_ownerDocument);

	function _interopRequireDefault(obj) { return obj && obj.__esModule ? obj : { default: obj }; }

	module.exports = exports['default'];

/***/ },
/* 410 */
/***/ function(module, exports, __webpack_require__) {

	'use strict';

	var _inherits = __webpack_require__(254)['default'];

	var _classCallCheck = __webpack_require__(330)['default'];

	var _objectWithoutProperties = __webpack_require__(338)['default'];

	var _extends = __webpack_require__(332)['default'];

	var _interopRequireDefault = __webpack_require__(249)['default'];

	exports.__esModule = true;

	var _react = __webpack_require__(2);

	var _react2 = _interopRequireDefault(_react);

	var _classnames = __webpack_require__(340);

	var _classnames2 = _interopRequireDefault(_classnames);

	var _Button = __webpack_require__(359);

	var _Button2 = _interopRequireDefault(_Button);

	var _SafeAnchor = __webpack_require__(356);

	var _SafeAnchor2 = _interopRequireDefault(_SafeAnchor);

	var _utilsBootstrapUtils = __webpack_require__(341);

	var propTypes = {
	  noCaret: _react2['default'].PropTypes.bool,
	  open: _react2['default'].PropTypes.bool,
	  title: _react2['default'].PropTypes.string,
	  useAnchor: _react2['default'].PropTypes.bool
	};

	var defaultProps = {
	  open: false,
	  useAnchor: false,
	  bsRole: 'toggle'
	};

	var DropdownToggle = (function (_React$Component) {
	  _inherits(DropdownToggle, _React$Component);

	  function DropdownToggle() {
	    _classCallCheck(this, DropdownToggle);

	    _React$Component.apply(this, arguments);
	  }

	  DropdownToggle.prototype.render = function render() {
	    var _props = this.props;
	    var noCaret = _props.noCaret;
	    var open = _props.open;
	    var useAnchor = _props.useAnchor;
	    var bsClass = _props.bsClass;
	    var className = _props.className;
	    var children = _props.children;

	    var props = _objectWithoutProperties(_props, ['noCaret', 'open', 'useAnchor', 'bsClass', 'className', 'children']);

	    delete props.bsRole;

	    var Component = useAnchor ? _SafeAnchor2['default'] : _Button2['default'];
	    var useCaret = !noCaret;

	    // This intentionally forwards bsSize and bsStyle (if set) to the
	    // underlying component, to allow it to render size and style variants.

	    // FIXME: Should this really fall back to `title` as children?

	    return _react2['default'].createElement(
	      Component,
	      _extends({}, props, {
	        role: 'button',
	        className: _classnames2['default'](className, bsClass),
	        'aria-haspopup': true,
	        'aria-expanded': open
	      }),
	      children || props.title,
	      useCaret && ' ',
	      useCaret && _react2['default'].createElement('span', { className: 'caret' })
	    );
	  };

	  return DropdownToggle;
	})(_react2['default'].Component);

	DropdownToggle.propTypes = propTypes;
	DropdownToggle.defaultProps = defaultProps;

	exports['default'] = _utilsBootstrapUtils.bsClass('dropdown-toggle', DropdownToggle);
	module.exports = exports['default'];

/***/ },
/* 411 */
/***/ function(module, exports, __webpack_require__) {

	'use strict';

	var _interopRequireDefault = __webpack_require__(249)['default'];

	exports.__esModule = true;
	exports.requiredRoles = requiredRoles;
	exports.exclusiveRoles = exclusiveRoles;

	var _reactPropTypesLibCommon = __webpack_require__(358);

	var _ValidComponentChildren = __webpack_require__(348);

	var _ValidComponentChildren2 = _interopRequireDefault(_ValidComponentChildren);

	function requiredRoles() {
	  for (var _len = arguments.length, roles = Array(_len), _key = 0; _key < _len; _key++) {
	    roles[_key] = arguments[_key];
	  }

	  return _reactPropTypesLibCommon.createChainableTypeChecker(function (props, propName, component) {
	    var missing = undefined;

	    roles.every(function (role) {
	      if (!_ValidComponentChildren2['default'].some(props.children, function (child) {
	        return child.props.bsRole === role;
	      })) {
	        missing = role;
	        return false;
	      }

	      return true;
	    });

	    if (missing) {
	      return new Error('(children) ' + component + ' - Missing a required child with bsRole: ' + (missing + '. ' + component + ' must have at least one child of each of ') + ('the following bsRoles: ' + roles.join(', ')));
	    }

	    return null;
	  });
	}

	function exclusiveRoles() {
	  for (var _len2 = arguments.length, roles = Array(_len2), _key2 = 0; _key2 < _len2; _key2++) {
	    roles[_key2] = arguments[_key2];
	  }

	  return _reactPropTypesLibCommon.createChainableTypeChecker(function (props, propName, component) {
	    var duplicate = undefined;

	    roles.every(function (role) {
	      var childrenWithRole = _ValidComponentChildren2['default'].filter(props.children, function (child) {
	        return child.props.bsRole === role;
	      });

	      if (childrenWithRole.length > 1) {
	        duplicate = role;
	        return false;
	      }

	      return true;
	    });

	    if (duplicate) {
	      return new Error('(children) ' + component + ' - Duplicate children detected of bsRole: ' + (duplicate + '. Only one child each allowed with the following ') + ('bsRoles: ' + roles.join(', ')));
	    }

	    return null;
	  });
	}

/***/ },
/* 412 */
/***/ function(module, exports, __webpack_require__) {

	'use strict';

	var _extends = __webpack_require__(332)['default'];

	var _inherits = __webpack_require__(254)['default'];

	var _classCallCheck = __webpack_require__(330)['default'];

	var _objectWithoutProperties = __webpack_require__(338)['default'];

	var _interopRequireDefault = __webpack_require__(249)['default'];

	exports.__esModule = true;

	var _react = __webpack_require__(2);

	var _react2 = _interopRequireDefault(_react);

	var _Dropdown = __webpack_require__(386);

	var _Dropdown2 = _interopRequireDefault(_Dropdown);

	var _utilsSplitComponentProps = __webpack_require__(413);

	var _utilsSplitComponentProps2 = _interopRequireDefault(_utilsSplitComponentProps);

	var propTypes = _extends({}, _Dropdown2['default'].propTypes, {

	  // Toggle props.
	  bsStyle: _react2['default'].PropTypes.string,
	  bsSize: _react2['default'].PropTypes.string,
	  title: _react2['default'].PropTypes.node.isRequired,
	  noCaret: _react2['default'].PropTypes.bool,

	  // Override generated docs from <Dropdown>.
	  /**
	   * @private
	   */
	  children: _react2['default'].PropTypes.node
	});

	var DropdownButton = (function (_React$Component) {
	  _inherits(DropdownButton, _React$Component);

	  function DropdownButton() {
	    _classCallCheck(this, DropdownButton);

	    _React$Component.apply(this, arguments);
	  }

	  DropdownButton.prototype.render = function render() {
	    var _props = this.props;
	    var bsSize = _props.bsSize;
	    var bsStyle = _props.bsStyle;
	    var title = _props.title;
	    var children = _props.children;

	    var props = _objectWithoutProperties(_props, ['bsSize', 'bsStyle', 'title', 'children']);

	    var _splitComponentProps = _utilsSplitComponentProps2['default'](props, _Dropdown2['default'].ControlledComponent);

	    var dropdownProps = _splitComponentProps[0];
	    var toggleProps = _splitComponentProps[1];

	    return _react2['default'].createElement(
	      _Dropdown2['default'],
	      _extends({}, dropdownProps, {
	        bsSize: bsSize,
	        bsStyle: bsStyle
	      }),
	      _react2['default'].createElement(
	        _Dropdown2['default'].Toggle,
	        _extends({}, toggleProps, {
	          bsSize: bsSize,
	          bsStyle: bsStyle
	        }),
	        title
	      ),
	      _react2['default'].createElement(
	        _Dropdown2['default'].Menu,
	        null,
	        children
	      )
	    );
	  };

	  return DropdownButton;
	})(_react2['default'].Component);

	DropdownButton.propTypes = propTypes;

	exports['default'] = DropdownButton;
	module.exports = exports['default'];

/***/ },
/* 413 */
/***/ function(module, exports, __webpack_require__) {

	"use strict";

	var _Object$entries = __webpack_require__(342)["default"];

	exports.__esModule = true;
	exports["default"] = splitComponentProps;

	function splitComponentProps(props, Component) {
	  var componentPropTypes = Component.propTypes;

	  var parentProps = {};
	  var childProps = {};

	  _Object$entries(props).forEach(function (_ref) {
	    var propName = _ref[0];
	    var propValue = _ref[1];

	    if (componentPropTypes[propName]) {
	      parentProps[propName] = propValue;
	    } else {
	      childProps[propName] = propValue;
	    }
	  });

	  return [parentProps, childProps];
	}

	module.exports = exports["default"];

/***/ },
/* 414 */
/***/ function(module, exports, __webpack_require__) {

	'use strict';

	var _inherits = __webpack_require__(254)['default'];

	var _classCallCheck = __webpack_require__(330)['default'];

	var _extends = __webpack_require__(332)['default'];

	var _interopRequireDefault = __webpack_require__(249)['default'];

	exports.__esModule = true;

	var _classnames = __webpack_require__(340);

	var _classnames2 = _interopRequireDefault(_classnames);

	var _react = __webpack_require__(2);

	var _react2 = _interopRequireDefault(_react);

	var _reactOverlaysLibTransition = __webpack_require__(382);

	var _reactOverlaysLibTransition2 = _interopRequireDefault(_reactOverlaysLibTransition);

	var propTypes = {
	  /**
	   * Show the component; triggers the fade in or fade out animation
	   */
	  'in': _react2['default'].PropTypes.bool,

	  /**
	   * Unmount the component (remove it from the DOM) when it is faded out
	   */
	  unmountOnExit: _react2['default'].PropTypes.bool,

	  /**
	   * Run the fade in animation when the component mounts, if it is initially
	   * shown
	   */
	  transitionAppear: _react2['default'].PropTypes.bool,

	  /**
	   * Duration of the fade animation in milliseconds, to ensure that finishing
	   * callbacks are fired even if the original browser transition end events are
	   * canceled
	   */
	  timeout: _react2['default'].PropTypes.number,

	  /**
	   * Callback fired before the component fades in
	   */
	  onEnter: _react2['default'].PropTypes.func,
	  /**
	   * Callback fired after the component starts to fade in
	   */
	  onEntering: _react2['default'].PropTypes.func,
	  /**
	   * Callback fired after the has component faded in
	   */
	  onEntered: _react2['default'].PropTypes.func,
	  /**
	   * Callback fired before the component fades out
	   */
	  onExit: _react2['default'].PropTypes.func,
	  /**
	   * Callback fired after the component starts to fade out
	   */
	  onExiting: _react2['default'].PropTypes.func,
	  /**
	   * Callback fired after the component has faded out
	   */
	  onExited: _react2['default'].PropTypes.func
	};

	var defaultProps = {
	  'in': false,
	  timeout: 300,
	  unmountOnExit: false,
	  transitionAppear: false
	};

	var Fade = (function (_React$Component) {
	  _inherits(Fade, _React$Component);

	  function Fade() {
	    _classCallCheck(this, Fade);

	    _React$Component.apply(this, arguments);
	  }

	  Fade.prototype.render = function render() {
	    return _react2['default'].createElement(_reactOverlaysLibTransition2['default'], _extends({}, this.props, {
	      className: _classnames2['default'](this.props.className, 'fade'),
	      enteredClassName: 'in',
	      enteringClassName: 'in'
	    }));
	  };

	  return Fade;
	})(_react2['default'].Component);

	Fade.propTypes = propTypes;
	Fade.defaultProps = defaultProps;

	exports['default'] = Fade;
	module.exports = exports['default'];

/***/ },
/* 415 */
/***/ function(module, exports, __webpack_require__) {

	'use strict';

	var _inherits = __webpack_require__(254)['default'];

	var _classCallCheck = __webpack_require__(330)['default'];

	var _objectWithoutProperties = __webpack_require__(338)['default'];

	var _extends = __webpack_require__(332)['default'];

	var _interopRequireDefault = __webpack_require__(249)['default'];

	exports.__esModule = true;

	var _classnames = __webpack_require__(340);

	var _classnames2 = _interopRequireDefault(_classnames);

	var _react = __webpack_require__(2);

	var _react2 = _interopRequireDefault(_react);

	var _reactPropTypesLibElementType = __webpack_require__(357);

	var _reactPropTypesLibElementType2 = _interopRequireDefault(_reactPropTypesLibElementType);

	var _utilsBootstrapUtils = __webpack_require__(341);

	var propTypes = {
	  horizontal: _react2['default'].PropTypes.bool,
	  inline: _react2['default'].PropTypes.bool,
	  componentClass: _reactPropTypesLibElementType2['default']
	};

	var defaultProps = {
	  horizontal: false,
	  inline: false,
	  componentClass: 'form'
	};

	var Form = (function (_React$Component) {
	  _inherits(Form, _React$Component);

	  function Form() {
	    _classCallCheck(this, Form);

	    _React$Component.apply(this, arguments);
	  }

	  Form.prototype.render = function render() {
	    var _props = this.props;
	    var horizontal = _props.horizontal;
	    var inline = _props.inline;
	    var Component = _props.componentClass;
	    var className = _props.className;

	    var props = _objectWithoutProperties(_props, ['horizontal', 'inline', 'componentClass', 'className']);

	    var _splitBsProps = _utilsBootstrapUtils.splitBsProps(props);

	    var bsProps = _splitBsProps[0];
	    var elementProps = _splitBsProps[1];

	    var classes = [];
	    if (horizontal) {
	      classes.push(_utilsBootstrapUtils.prefix(bsProps, 'horizontal'));
	    }
	    if (inline) {
	      classes.push(_utilsBootstrapUtils.prefix(bsProps, 'inline'));
	    }

	    return _react2['default'].createElement(Component, _extends({}, elementProps, {
	      className: _classnames2['default'](className, classes)
	    }));
	  };

	  return Form;
	})(_react2['default'].Component);

	Form.propTypes = propTypes;
	Form.defaultProps = defaultProps;

	exports['default'] = _utilsBootstrapUtils.bsClass('form', Form);
	module.exports = exports['default'];

/***/ },
/* 416 */
/***/ function(module, exports, __webpack_require__) {

	/* WEBPACK VAR INJECTION */(function(process) {'use strict';

	var _inherits = __webpack_require__(254)['default'];

	var _classCallCheck = __webpack_require__(330)['default'];

	var _objectWithoutProperties = __webpack_require__(338)['default'];

	var _extends = __webpack_require__(332)['default'];

	var _interopRequireDefault = __webpack_require__(249)['default'];

	exports.__esModule = true;

	var _classnames = __webpack_require__(340);

	var _classnames2 = _interopRequireDefault(_classnames);

	var _react = __webpack_require__(2);

	var _react2 = _interopRequireDefault(_react);

	var _reactPropTypesLibElementType = __webpack_require__(357);

	var _reactPropTypesLibElementType2 = _interopRequireDefault(_reactPropTypesLibElementType);

	var _warning = __webpack_require__(178);

	var _warning2 = _interopRequireDefault(_warning);

	var _FormControlFeedback = __webpack_require__(417);

	var _FormControlFeedback2 = _interopRequireDefault(_FormControlFeedback);

	var _FormControlStatic = __webpack_require__(418);

	var _FormControlStatic2 = _interopRequireDefault(_FormControlStatic);

	var _utilsBootstrapUtils = __webpack_require__(341);

	var propTypes = {
	  componentClass: _reactPropTypesLibElementType2['default'],
	  /**
	   * Only relevant if `componentClass` is `'input'`.
	   */
	  type: _react2['default'].PropTypes.string,
	  /**
	   * Uses `controlId` from `<FormGroup>` if not explicitly specified.
	   */
	  id: _react2['default'].PropTypes.string
	};

	var defaultProps = {
	  componentClass: 'input'
	};

	var contextTypes = {
	  $bs_formGroup: _react2['default'].PropTypes.object
	};

	var FormControl = (function (_React$Component) {
	  _inherits(FormControl, _React$Component);

	  function FormControl() {
	    _classCallCheck(this, FormControl);

	    _React$Component.apply(this, arguments);
	  }

	  FormControl.prototype.render = function render() {
	    var formGroup = this.context.$bs_formGroup;
	    var controlId = formGroup && formGroup.controlId;

	    var _props = this.props;
	    var Component = _props.componentClass;
	    var type = _props.type;
	    var _props$id = _props.id;
	    var id = _props$id === undefined ? controlId : _props$id;
	    var className = _props.className;

	    var props = _objectWithoutProperties(_props, ['componentClass', 'type', 'id', 'className']);

	    var _splitBsProps = _utilsBootstrapUtils.splitBsProps(props);

	    var bsProps = _splitBsProps[0];
	    var elementProps = _splitBsProps[1];

	    process.env.NODE_ENV !== 'production' ? _warning2['default'](controlId == null || id === controlId, '`controlId` is ignored on `<FormControl>` when `id` is specified.') : undefined;

	    // input[type="file"] should not have .form-control.
	    var classes = undefined;
	    if (type !== 'file') {
	      classes = _utilsBootstrapUtils.getClassSet(bsProps);
	    }

	    return _react2['default'].createElement(Component, _extends({}, elementProps, {
	      type: type,
	      id: id,
	      className: _classnames2['default'](className, classes)
	    }));
	  };

	  return FormControl;
	})(_react2['default'].Component);

	FormControl.propTypes = propTypes;
	FormControl.defaultProps = defaultProps;
	FormControl.contextTypes = contextTypes;

	FormControl.Feedback = _FormControlFeedback2['default'];
	FormControl.Static = _FormControlStatic2['default'];

	exports['default'] = _utilsBootstrapUtils.bsClass('form-control', FormControl);
	module.exports = exports['default'];
	/* WEBPACK VAR INJECTION */}.call(exports, __webpack_require__(4)))

/***/ },
/* 417 */
/***/ function(module, exports, __webpack_require__) {

	'use strict';

	var _inherits = __webpack_require__(254)['default'];

	var _classCallCheck = __webpack_require__(330)['default'];

	var _extends = __webpack_require__(332)['default'];

	var _objectWithoutProperties = __webpack_require__(338)['default'];

	var _interopRequireDefault = __webpack_require__(249)['default'];

	exports.__esModule = true;

	var _classnames = __webpack_require__(340);

	var _classnames2 = _interopRequireDefault(_classnames);

	var _react = __webpack_require__(2);

	var _react2 = _interopRequireDefault(_react);

	var _Glyphicon = __webpack_require__(367);

	var _Glyphicon2 = _interopRequireDefault(_Glyphicon);

	var _utilsBootstrapUtils = __webpack_require__(341);

	var defaultProps = {
	  bsRole: 'feedback'
	};

	var contextTypes = {
	  $bs_formGroup: _react2['default'].PropTypes.object
	};

	var FormControlFeedback = (function (_React$Component) {
	  _inherits(FormControlFeedback, _React$Component);

	  function FormControlFeedback() {
	    _classCallCheck(this, FormControlFeedback);

	    _React$Component.apply(this, arguments);
	  }

	  FormControlFeedback.prototype.getGlyph = function getGlyph(validationState) {
	    switch (validationState) {
	      case 'success':
	        return 'ok';
	      case 'warning':
	        return 'warning-sign';
	      case 'error':
	        return 'remove';
	      default:
	        return null;
	    }
	  };

	  FormControlFeedback.prototype.renderDefaultFeedback = function renderDefaultFeedback(formGroup, className, classes, elementProps) {
	    var glyph = this.getGlyph(formGroup && formGroup.validationState);
	    if (!glyph) {
	      return null;
	    }

	    return _react2['default'].createElement(_Glyphicon2['default'], _extends({}, elementProps, {
	      glyph: glyph,
	      className: _classnames2['default'](className, classes)
	    }));
	  };

	  FormControlFeedback.prototype.render = function render() {
	    var _props = this.props;
	    var className = _props.className;
	    var children = _props.children;

	    var props = _objectWithoutProperties(_props, ['className', 'children']);

	    var _splitBsProps = _utilsBootstrapUtils.splitBsProps(props);

	    var bsProps = _splitBsProps[0];
	    var elementProps = _splitBsProps[1];

	    var classes = _utilsBootstrapUtils.getClassSet(bsProps);

	    if (!children) {
	      return this.renderDefaultFeedback(this.context.$bs_formGroup, className, classes, elementProps);
	    }

	    var child = _react2['default'].Children.only(children);
	    return _react2['default'].cloneElement(child, _extends({}, elementProps, {
	      className: _classnames2['default'](child.props.className, className, classes)
	    }));
	  };

	  return FormControlFeedback;
	})(_react2['default'].Component);

	FormControlFeedback.defaultProps = defaultProps;
	FormControlFeedback.contextTypes = contextTypes;

	exports['default'] = _utilsBootstrapUtils.bsClass('form-control-feedback', FormControlFeedback);
	module.exports = exports['default'];

/***/ },
/* 418 */
/***/ function(module, exports, __webpack_require__) {

	'use strict';

	var _inherits = __webpack_require__(254)['default'];

	var _classCallCheck = __webpack_require__(330)['default'];

	var _objectWithoutProperties = __webpack_require__(338)['default'];

	var _extends = __webpack_require__(332)['default'];

	var _interopRequireDefault = __webpack_require__(249)['default'];

	exports.__esModule = true;

	var _classnames = __webpack_require__(340);

	var _classnames2 = _interopRequireDefault(_classnames);

	var _react = __webpack_require__(2);

	var _react2 = _interopRequireDefault(_react);

	var _reactPropTypesLibElementType = __webpack_require__(357);

	var _reactPropTypesLibElementType2 = _interopRequireDefault(_reactPropTypesLibElementType);

	var _utilsBootstrapUtils = __webpack_require__(341);

	var propTypes = {
	  componentClass: _reactPropTypesLibElementType2['default']
	};

	var defaultProps = {
	  componentClass: 'p'
	};

	var FormControlStatic = (function (_React$Component) {
	  _inherits(FormControlStatic, _React$Component);

	  function FormControlStatic() {
	    _classCallCheck(this, FormControlStatic);

	    _React$Component.apply(this, arguments);
	  }

	  FormControlStatic.prototype.render = function render() {
	    var _props = this.props;
	    var Component = _props.componentClass;
	    var className = _props.className;

	    var props = _objectWithoutProperties(_props, ['componentClass', 'className']);

	    var _splitBsProps = _utilsBootstrapUtils.splitBsProps(props);

	    var bsProps = _splitBsProps[0];
	    var elementProps = _splitBsProps[1];

	    var classes = _utilsBootstrapUtils.getClassSet(bsProps);

	    return _react2['default'].createElement(Component, _extends({}, elementProps, {
	      className: _classnames2['default'](className, classes)
	    }));
	  };

	  return FormControlStatic;
	})(_react2['default'].Component);

	FormControlStatic.propTypes = propTypes;
	FormControlStatic.defaultProps = defaultProps;

	exports['default'] = _utilsBootstrapUtils.bsClass('form-control-static', FormControlStatic);
	module.exports = exports['default'];

/***/ },
/* 419 */
/***/ function(module, exports, __webpack_require__) {

	'use strict';

	var _inherits = __webpack_require__(254)['default'];

	var _classCallCheck = __webpack_require__(330)['default'];

	var _extends = __webpack_require__(332)['default'];

	var _objectWithoutProperties = __webpack_require__(338)['default'];

	var _interopRequireDefault = __webpack_require__(249)['default'];

	exports.__esModule = true;

	var _classnames = __webpack_require__(340);

	var _classnames2 = _interopRequireDefault(_classnames);

	var _react = __webpack_require__(2);

	var _react2 = _interopRequireDefault(_react);

	var _utilsBootstrapUtils = __webpack_require__(341);

	var _utilsStyleConfig = __webpack_require__(346);

	var _utilsValidComponentChildren = __webpack_require__(348);

	var _utilsValidComponentChildren2 = _interopRequireDefault(_utilsValidComponentChildren);

	var propTypes = {
	  /**
	   * Sets `id` on `<FormControl>` and `htmlFor` on `<FormGroup.Label>`.
	   */
	  controlId: _react2['default'].PropTypes.string,
	  validationState: _react2['default'].PropTypes.oneOf(['success', 'warning', 'error'])
	};

	var childContextTypes = {
	  $bs_formGroup: _react2['default'].PropTypes.object.isRequired
	};

	var FormGroup = (function (_React$Component) {
	  _inherits(FormGroup, _React$Component);

	  function FormGroup() {
	    _classCallCheck(this, FormGroup);

	    _React$Component.apply(this, arguments);
	  }

	  FormGroup.prototype.getChildContext = function getChildContext() {
	    var _props = this.props;
	    var controlId = _props.controlId;
	    var validationState = _props.validationState;

	    return {
	      $bs_formGroup: {
	        controlId: controlId,
	        validationState: validationState
	      }
	    };
	  };

	  FormGroup.prototype.hasFeedback = function hasFeedback(children) {
	    var _this = this;

	    return _utilsValidComponentChildren2['default'].some(children, function (child) {
	      return child.props.bsRole === 'feedback' || child.props.children && _this.hasFeedback(child.props.children);
	    });
	  };

	  FormGroup.prototype.render = function render() {
	    var _props2 = this.props;
	    var validationState = _props2.validationState;
	    var className = _props2.className;
	    var children = _props2.children;

	    var props = _objectWithoutProperties(_props2, ['validationState', 'className', 'children']);

	    var _splitBsPropsAndOmit = _utilsBootstrapUtils.splitBsPropsAndOmit(props, ['controlId']);

	    var bsProps = _splitBsPropsAndOmit[0];
	    var elementProps = _splitBsPropsAndOmit[1];

	    var classes = _extends({}, _utilsBootstrapUtils.getClassSet(bsProps), {
	      'has-feedback': this.hasFeedback(children)
	    });
	    if (validationState) {
	      classes['has-' + validationState] = true;
	    }

	    return _react2['default'].createElement(
	      'div',
	      _extends({}, elementProps, {
	        className: _classnames2['default'](className, classes)
	      }),
	      children
	    );
	  };

	  return FormGroup;
	})(_react2['default'].Component);

	FormGroup.propTypes = propTypes;
	FormGroup.childContextTypes = childContextTypes;

	exports['default'] = _utilsBootstrapUtils.bsClass('form-group', _utilsBootstrapUtils.bsSizes([_utilsStyleConfig.Size.LARGE, _utilsStyleConfig.Size.SMALL], FormGroup));
	module.exports = exports['default'];

/***/ },
/* 420 */
/***/ function(module, exports, __webpack_require__) {

	'use strict';

	var _inherits = __webpack_require__(254)['default'];

	var _classCallCheck = __webpack_require__(330)['default'];

	var _objectWithoutProperties = __webpack_require__(338)['default'];

	var _extends = __webpack_require__(332)['default'];

	var _interopRequireDefault = __webpack_require__(249)['default'];

	exports.__esModule = true;

	var _classnames = __webpack_require__(340);

	var _classnames2 = _interopRequireDefault(_classnames);

	var _react = __webpack_require__(2);

	var _react2 = _interopRequireDefault(_react);

	var _reactPropTypesLibElementType = __webpack_require__(357);

	var _reactPropTypesLibElementType2 = _interopRequireDefault(_reactPropTypesLibElementType);

	var _utilsBootstrapUtils = __webpack_require__(341);

	var propTypes = {
	  /**
	   * Turn any fixed-width grid layout into a full-width layout by this property.
	   *
	   * Adds `container-fluid` class.
	   */
	  fluid: _react2['default'].PropTypes.bool,
	  /**
	   * You can use a custom element for this component
	   */
	  componentClass: _reactPropTypesLibElementType2['default']
	};

	var defaultProps = {
	  componentClass: 'div',
	  fluid: false
	};

	var Grid = (function (_React$Component) {
	  _inherits(Grid, _React$Component);

	  function Grid() {
	    _classCallCheck(this, Grid);

	    _React$Component.apply(this, arguments);
	  }

	  Grid.prototype.render = function render() {
	    var _props = this.props;
	    var fluid = _props.fluid;
	    var Component = _props.componentClass;
	    var className = _props.className;

	    var props = _objectWithoutProperties(_props, ['fluid', 'componentClass', 'className']);

	    var _splitBsProps = _utilsBootstrapUtils.splitBsProps(props);

	    var bsProps = _splitBsProps[0];
	    var elementProps = _splitBsProps[1];

	    var classes = _utilsBootstrapUtils.prefix(bsProps, fluid && 'fluid');

	    return _react2['default'].createElement(Component, _extends({}, elementProps, {
	      className: _classnames2['default'](className, classes)
	    }));
	  };

	  return Grid;
	})(_react2['default'].Component);

	Grid.propTypes = propTypes;
	Grid.defaultProps = defaultProps;

	exports['default'] = _utilsBootstrapUtils.bsClass('container', Grid);
	module.exports = exports['default'];

/***/ },
/* 421 */
/***/ function(module, exports, __webpack_require__) {

	'use strict';

	var _inherits = __webpack_require__(254)['default'];

	var _classCallCheck = __webpack_require__(330)['default'];

	var _objectWithoutProperties = __webpack_require__(338)['default'];

	var _extends = __webpack_require__(332)['default'];

	var _interopRequireDefault = __webpack_require__(249)['default'];

	exports.__esModule = true;

	var _classnames = __webpack_require__(340);

	var _classnames2 = _interopRequireDefault(_classnames);

	var _react = __webpack_require__(2);

	var _react2 = _interopRequireDefault(_react);

	var _utilsBootstrapUtils = __webpack_require__(341);

	var HelpBlock = (function (_React$Component) {
	  _inherits(HelpBlock, _React$Component);

	  function HelpBlock() {
	    _classCallCheck(this, HelpBlock);

	    _React$Component.apply(this, arguments);
	  }

	  HelpBlock.prototype.render = function render() {
	    var _props = this.props;
	    var className = _props.className;

	    var props = _objectWithoutProperties(_props, ['className']);

	    var _splitBsProps = _utilsBootstrapUtils.splitBsProps(props);

	    var bsProps = _splitBsProps[0];
	    var elementProps = _splitBsProps[1];

	    var classes = _utilsBootstrapUtils.getClassSet(bsProps);

	    return _react2['default'].createElement('span', _extends({}, elementProps, {
	      className: _classnames2['default'](className, classes)
	    }));
	  };

	  return HelpBlock;
	})(_react2['default'].Component);

	exports['default'] = _utilsBootstrapUtils.bsClass('help-block', HelpBlock);
	module.exports = exports['default'];

/***/ },
/* 422 */
/***/ function(module, exports, __webpack_require__) {

	'use strict';

	var _inherits = __webpack_require__(254)['default'];

	var _classCallCheck = __webpack_require__(330)['default'];

	var _objectWithoutProperties = __webpack_require__(338)['default'];

	var _extends = __webpack_require__(332)['default'];

	var _interopRequireDefault = __webpack_require__(249)['default'];

	exports.__esModule = true;

	var _classnames = __webpack_require__(340);

	var _classnames2 = _interopRequireDefault(_classnames);

	var _react = __webpack_require__(2);

	var _react2 = _interopRequireDefault(_react);

	var _utilsBootstrapUtils = __webpack_require__(341);

	var propTypes = {
	  /**
	   * Sets image as responsive image
	   */
	  responsive: _react2['default'].PropTypes.bool,

	  /**
	   * Sets image shape as rounded
	   */
	  rounded: _react2['default'].PropTypes.bool,

	  /**
	   * Sets image shape as circle
	   */
	  circle: _react2['default'].PropTypes.bool,

	  /**
	   * Sets image shape as thumbnail
	   */
	  thumbnail: _react2['default'].PropTypes.bool
	};

	var defaultProps = {
	  responsive: false,
	  rounded: false,
	  circle: false,
	  thumbnail: false
	};

	var Image = (function (_React$Component) {
	  _inherits(Image, _React$Component);

	  function Image() {
	    _classCallCheck(this, Image);

	    _React$Component.apply(this, arguments);
	  }

	  Image.prototype.render = function render() {
	    var _classes;

	    var _props = this.props;
	    var responsive = _props.responsive;
	    var rounded = _props.rounded;
	    var circle = _props.circle;
	    var thumbnail = _props.thumbnail;
	    var className = _props.className;

	    var props = _objectWithoutProperties(_props, ['responsive', 'rounded', 'circle', 'thumbnail', 'className']);

	    var _splitBsProps = _utilsBootstrapUtils.splitBsProps(props);

	    var bsProps = _splitBsProps[0];
	    var elementProps = _splitBsProps[1];

	    var classes = (_classes = {}, _classes[_utilsBootstrapUtils.prefix(bsProps, 'responsive')] = responsive, _classes[_utilsBootstrapUtils.prefix(bsProps, 'rounded')] = rounded, _classes[_utilsBootstrapUtils.prefix(bsProps, 'circle')] = circle, _classes[_utilsBootstrapUtils.prefix(bsProps, 'thumbnail')] = thumbnail, _classes);

	    return _react2['default'].createElement('img', _extends({}, elementProps, {
	      className: _classnames2['default'](className, classes)
	    }));
	  };

	  return Image;
	})(_react2['default'].Component);

	Image.propTypes = propTypes;
	Image.defaultProps = defaultProps;

	exports['default'] = _utilsBootstrapUtils.bsClass('img', Image);
	module.exports = exports['default'];

/***/ },
/* 423 */
/***/ function(module, exports, __webpack_require__) {

	'use strict';

	var _inherits = __webpack_require__(254)['default'];

	var _classCallCheck = __webpack_require__(330)['default'];

	var _objectWithoutProperties = __webpack_require__(338)['default'];

	var _extends = __webpack_require__(332)['default'];

	var _interopRequireDefault = __webpack_require__(249)['default'];

	exports.__esModule = true;

	var _classnames = __webpack_require__(340);

	var _classnames2 = _interopRequireDefault(_classnames);

	var _react = __webpack_require__(2);

	var _react2 = _interopRequireDefault(_react);

	var _InputGroupAddon = __webpack_require__(424);

	var _InputGroupAddon2 = _interopRequireDefault(_InputGroupAddon);

	var _InputGroupButton = __webpack_require__(425);

	var _InputGroupButton2 = _interopRequireDefault(_InputGroupButton);

	var _utilsBootstrapUtils = __webpack_require__(341);

	var _utilsStyleConfig = __webpack_require__(346);

	var InputGroup = (function (_React$Component) {
	  _inherits(InputGroup, _React$Component);

	  function InputGroup() {
	    _classCallCheck(this, InputGroup);

	    _React$Component.apply(this, arguments);
	  }

	  InputGroup.prototype.render = function render() {
	    var _props = this.props;
	    var className = _props.className;

	    var props = _objectWithoutProperties(_props, ['className']);

	    var _splitBsProps = _utilsBootstrapUtils.splitBsProps(props);

	    var bsProps = _splitBsProps[0];
	    var elementProps = _splitBsProps[1];

	    var classes = _utilsBootstrapUtils.getClassSet(bsProps);

	    return _react2['default'].createElement('span', _extends({}, elementProps, {
	      className: _classnames2['default'](className, classes)
	    }));
	  };

	  return InputGroup;
	})(_react2['default'].Component);

	InputGroup.Addon = _InputGroupAddon2['default'];
	InputGroup.Button = _InputGroupButton2['default'];

	exports['default'] = _utilsBootstrapUtils.bsClass('input-group', _utilsBootstrapUtils.bsSizes([_utilsStyleConfig.Size.LARGE, _utilsStyleConfig.Size.SMALL], InputGroup));
	module.exports = exports['default'];

/***/ },
/* 424 */
/***/ function(module, exports, __webpack_require__) {

	'use strict';

	var _inherits = __webpack_require__(254)['default'];

	var _classCallCheck = __webpack_require__(330)['default'];

	var _objectWithoutProperties = __webpack_require__(338)['default'];

	var _extends = __webpack_require__(332)['default'];

	var _interopRequireDefault = __webpack_require__(249)['default'];

	exports.__esModule = true;

	var _classnames = __webpack_require__(340);

	var _classnames2 = _interopRequireDefault(_classnames);

	var _react = __webpack_require__(2);

	var _react2 = _interopRequireDefault(_react);

	var _utilsBootstrapUtils = __webpack_require__(341);

	var InputGroupAddon = (function (_React$Component) {
	  _inherits(InputGroupAddon, _React$Component);

	  function InputGroupAddon() {
	    _classCallCheck(this, InputGroupAddon);

	    _React$Component.apply(this, arguments);
	  }

	  InputGroupAddon.prototype.render = function render() {
	    var _props = this.props;
	    var className = _props.className;

	    var props = _objectWithoutProperties(_props, ['className']);

	    var _splitBsProps = _utilsBootstrapUtils.splitBsProps(props);

	    var bsProps = _splitBsProps[0];
	    var elementProps = _splitBsProps[1];

	    var classes = _utilsBootstrapUtils.getClassSet(bsProps);

	    return _react2['default'].createElement('span', _extends({}, elementProps, {
	      className: _classnames2['default'](className, classes)
	    }));
	  };

	  return InputGroupAddon;
	})(_react2['default'].Component);

	exports['default'] = _utilsBootstrapUtils.bsClass('input-group-addon', InputGroupAddon);
	module.exports = exports['default'];

/***/ },
/* 425 */
/***/ function(module, exports, __webpack_require__) {

	'use strict';

	var _inherits = __webpack_require__(254)['default'];

	var _classCallCheck = __webpack_require__(330)['default'];

	var _objectWithoutProperties = __webpack_require__(338)['default'];

	var _extends = __webpack_require__(332)['default'];

	var _interopRequireDefault = __webpack_require__(249)['default'];

	exports.__esModule = true;

	var _classnames = __webpack_require__(340);

	var _classnames2 = _interopRequireDefault(_classnames);

	var _react = __webpack_require__(2);

	var _react2 = _interopRequireDefault(_react);

	var _utilsBootstrapUtils = __webpack_require__(341);

	var InputGroupButton = (function (_React$Component) {
	  _inherits(InputGroupButton, _React$Component);

	  function InputGroupButton() {
	    _classCallCheck(this, InputGroupButton);

	    _React$Component.apply(this, arguments);
	  }

	  InputGroupButton.prototype.render = function render() {
	    var _props = this.props;
	    var className = _props.className;

	    var props = _objectWithoutProperties(_props, ['className']);

	    var _splitBsProps = _utilsBootstrapUtils.splitBsProps(props);

	    var bsProps = _splitBsProps[0];
	    var elementProps = _splitBsProps[1];

	    var classes = _utilsBootstrapUtils.getClassSet(bsProps);

	    return _react2['default'].createElement('span', _extends({}, elementProps, {
	      className: _classnames2['default'](className, classes)
	    }));
	  };

	  return InputGroupButton;
	})(_react2['default'].Component);

	exports['default'] = _utilsBootstrapUtils.bsClass('input-group-btn', InputGroupButton);
	module.exports = exports['default'];

/***/ },
/* 426 */
/***/ function(module, exports, __webpack_require__) {

	'use strict';

	var _inherits = __webpack_require__(254)['default'];

	var _classCallCheck = __webpack_require__(330)['default'];

	var _objectWithoutProperties = __webpack_require__(338)['default'];

	var _extends = __webpack_require__(332)['default'];

	var _interopRequireDefault = __webpack_require__(249)['default'];

	exports.__esModule = true;

	var _react = __webpack_require__(2);

	var _react2 = _interopRequireDefault(_react);

	var _classnames = __webpack_require__(340);

	var _classnames2 = _interopRequireDefault(_classnames);

	var _reactPropTypesLibElementType = __webpack_require__(357);

	var _reactPropTypesLibElementType2 = _interopRequireDefault(_reactPropTypesLibElementType);

	var _utilsBootstrapUtils = __webpack_require__(341);

	var propTypes = {
	  componentClass: _reactPropTypesLibElementType2['default']
	};

	var defaultProps = {
	  componentClass: 'div'
	};

	var Jumbotron = (function (_React$Component) {
	  _inherits(Jumbotron, _React$Component);

	  function Jumbotron() {
	    _classCallCheck(this, Jumbotron);

	    _React$Component.apply(this, arguments);
	  }

	  Jumbotron.prototype.render = function render() {
	    var _props = this.props;
	    var Component = _props.componentClass;
	    var className = _props.className;

	    var props = _objectWithoutProperties(_props, ['componentClass', 'className']);

	    var _splitBsProps = _utilsBootstrapUtils.splitBsProps(props);

	    var bsProps = _splitBsProps[0];
	    var elementProps = _splitBsProps[1];

	    var classes = _utilsBootstrapUtils.getClassSet(bsProps);

	    return _react2['default'].createElement(Component, _extends({}, elementProps, {
	      className: _classnames2['default'](className, classes)
	    }));
	  };

	  return Jumbotron;
	})(_react2['default'].Component);

	Jumbotron.propTypes = propTypes;
	Jumbotron.defaultProps = defaultProps;

	exports['default'] = _utilsBootstrapUtils.bsClass('jumbotron', Jumbotron);
	module.exports = exports['default'];

/***/ },
/* 427 */
/***/ function(module, exports, __webpack_require__) {

	'use strict';

	var _inherits = __webpack_require__(254)['default'];

	var _classCallCheck = __webpack_require__(330)['default'];

	var _extends = __webpack_require__(332)['default'];

	var _objectWithoutProperties = __webpack_require__(338)['default'];

	var _Object$values = __webpack_require__(350)['default'];

	var _interopRequireDefault = __webpack_require__(249)['default'];

	exports.__esModule = true;

	var _classnames = __webpack_require__(340);

	var _classnames2 = _interopRequireDefault(_classnames);

	var _react = __webpack_require__(2);

	var _react2 = _interopRequireDefault(_react);

	var _utilsBootstrapUtils = __webpack_require__(341);

	var _utilsStyleConfig = __webpack_require__(346);

	var Label = (function (_React$Component) {
	  _inherits(Label, _React$Component);

	  function Label() {
	    _classCallCheck(this, Label);

	    _React$Component.apply(this, arguments);
	  }

	  Label.prototype.hasContent = function hasContent(children) {
	    var result = false;

	    _react2['default'].Children.forEach(children, function (child) {
	      if (result) {
	        return;
	      }

	      if (child || child === 0) {
	        result = true;
	      }
	    });

	    return result;
	  };

	  Label.prototype.render = function render() {
	    var _props = this.props;
	    var className = _props.className;
	    var children = _props.children;

	    var props = _objectWithoutProperties(_props, ['className', 'children']);

	    var _splitBsProps = _utilsBootstrapUtils.splitBsProps(props);

	    var bsProps = _splitBsProps[0];
	    var elementProps = _splitBsProps[1];

	    var classes = _extends({}, _utilsBootstrapUtils.getClassSet(bsProps), {

	      // Hack for collapsing on IE8.
	      hidden: !this.hasContent(children)
	    });

	    return _react2['default'].createElement(
	      'span',
	      _extends({}, elementProps, {
	        className: _classnames2['default'](className, classes)
	      }),
	      children
	    );
	  };

	  return Label;
	})(_react2['default'].Component);

	exports['default'] = _utilsBootstrapUtils.bsClass('label', _utilsBootstrapUtils.bsStyles([].concat(_Object$values(_utilsStyleConfig.State), [_utilsStyleConfig.Style.DEFAULT, _utilsStyleConfig.Style.PRIMARY]), _utilsStyleConfig.Style.DEFAULT, Label));
	module.exports = exports['default'];

/***/ },
/* 428 */
/***/ function(module, exports, __webpack_require__) {

	'use strict';

	var _inherits = __webpack_require__(254)['default'];

	var _classCallCheck = __webpack_require__(330)['default'];

	var _objectWithoutProperties = __webpack_require__(338)['default'];

	var _extends = __webpack_require__(332)['default'];

	var _interopRequireDefault = __webpack_require__(249)['default'];

	exports.__esModule = true;

	var _classnames = __webpack_require__(340);

	var _classnames2 = _interopRequireDefault(_classnames);

	var _react = __webpack_require__(2);

	var _react2 = _interopRequireDefault(_react);

	var _reactPropTypesLibElementType = __webpack_require__(357);

	var _reactPropTypesLibElementType2 = _interopRequireDefault(_reactPropTypesLibElementType);

	var _ListGroupItem = __webpack_require__(429);

	var _ListGroupItem2 = _interopRequireDefault(_ListGroupItem);

	var _utilsBootstrapUtils = __webpack_require__(341);

	var _utilsValidComponentChildren = __webpack_require__(348);

	var _utilsValidComponentChildren2 = _interopRequireDefault(_utilsValidComponentChildren);

	var propTypes = {
	  /**
	   * You can use a custom element type for this component.
	   *
	   * If not specified, it will be treated as `'li'` if every child is a
	   * non-actionable `<ListGroupItem>`, and `'div'` otherwise.
	   */
	  componentClass: _reactPropTypesLibElementType2['default']
	};

	function getDefaultComponent(children) {
	  if (!children) {
	    // FIXME: This is the old behavior. Is this right?
	    return 'div';
	  }

	  if (_utilsValidComponentChildren2['default'].some(children, function (child) {
	    return child.type !== _ListGroupItem2['default'] || child.props.href || child.props.onClick;
	  })) {
	    return 'div';
	  }

	  return 'ul';
	}

	var ListGroup = (function (_React$Component) {
	  _inherits(ListGroup, _React$Component);

	  function ListGroup() {
	    _classCallCheck(this, ListGroup);

	    _React$Component.apply(this, arguments);
	  }

	  ListGroup.prototype.render = function render() {
	    var _props = this.props;
	    var children = _props.children;
	    var _props$componentClass = _props.componentClass;
	    var Component = _props$componentClass === undefined ? getDefaultComponent(children) : _props$componentClass;
	    var className = _props.className;

	    var props = _objectWithoutProperties(_props, ['children', 'componentClass', 'className']);

	    var _splitBsProps = _utilsBootstrapUtils.splitBsProps(props);

	    var bsProps = _splitBsProps[0];
	    var elementProps = _splitBsProps[1];

	    var classes = _utilsBootstrapUtils.getClassSet(bsProps);

	    var useListItem = Component === 'ul' && _utilsValidComponentChildren2['default'].every(children, function (child) {
	      return child.type === _ListGroupItem2['default'];
	    });

	    return _react2['default'].createElement(
	      Component,
	      _extends({}, elementProps, {
	        className: _classnames2['default'](className, classes)
	      }),
	      useListItem ? _utilsValidComponentChildren2['default'].map(children, function (child) {
	        return _react.cloneElement(child, { listItem: true });
	      }) : children
	    );
	  };

	  return ListGroup;
	})(_react2['default'].Component);

	ListGroup.propTypes = propTypes;

	exports['default'] = _utilsBootstrapUtils.bsClass('list-group', ListGroup);
	module.exports = exports['default'];

/***/ },
/* 429 */
/***/ function(module, exports, __webpack_require__) {

	'use strict';

	var _inherits = __webpack_require__(254)['default'];

	var _classCallCheck = __webpack_require__(330)['default'];

	var _extends = __webpack_require__(332)['default'];

	var _objectWithoutProperties = __webpack_require__(338)['default'];

	var _Object$values = __webpack_require__(350)['default'];

	var _interopRequireDefault = __webpack_require__(249)['default'];

	exports.__esModule = true;

	var _classnames = __webpack_require__(340);

	var _classnames2 = _interopRequireDefault(_classnames);

	var _react = __webpack_require__(2);

	var _react2 = _interopRequireDefault(_react);

	var _utilsBootstrapUtils = __webpack_require__(341);

	var _utilsStyleConfig = __webpack_require__(346);

	var propTypes = {
	  active: _react2['default'].PropTypes.any,
	  disabled: _react2['default'].PropTypes.any,
	  header: _react2['default'].PropTypes.node,
	  listItem: _react2['default'].PropTypes.bool,
	  onClick: _react2['default'].PropTypes.func,
	  href: _react2['default'].PropTypes.string,
	  type: _react2['default'].PropTypes.string
	};

	var defaultProps = {
	  listItem: false
	};

	var ListGroupItem = (function (_React$Component) {
	  _inherits(ListGroupItem, _React$Component);

	  function ListGroupItem() {
	    _classCallCheck(this, ListGroupItem);

	    _React$Component.apply(this, arguments);
	  }

	  ListGroupItem.prototype.renderHeader = function renderHeader(header, headingClassName) {
	    if (_react2['default'].isValidElement(header)) {
	      return _react.cloneElement(header, {
	        className: _classnames2['default'](header.props.className, headingClassName)
	      });
	    }

	    return _react2['default'].createElement(
	      'h4',
	      { className: headingClassName },
	      header
	    );
	  };

	  ListGroupItem.prototype.render = function render() {
	    var _props = this.props;
	    var active = _props.active;
	    var disabled = _props.disabled;
	    var className = _props.className;
	    var header = _props.header;
	    var listItem = _props.listItem;
	    var children = _props.children;

	    var props = _objectWithoutProperties(_props, ['active', 'disabled', 'className', 'header', 'listItem', 'children']);

	    var _splitBsProps = _utilsBootstrapUtils.splitBsProps(props);

	    var bsProps = _splitBsProps[0];
	    var elementProps = _splitBsProps[1];

	    var classes = _extends({}, _utilsBootstrapUtils.getClassSet(bsProps), {
	      active: active,
	      disabled: disabled
	    });

	    var Component = undefined;

	    if (elementProps.href) {
	      Component = 'a';
	    } else if (elementProps.onClick) {
	      Component = 'button';
	      elementProps.type = elementProps.type || 'button';
	    } else if (listItem) {
	      Component = 'li';
	    } else {
	      Component = 'span';
	    }

	    elementProps.className = _classnames2['default'](className, classes);

	    // TODO: Deprecate `header` prop.
	    if (header) {
	      return _react2['default'].createElement(
	        Component,
	        elementProps,
	        this.renderHeader(header, _utilsBootstrapUtils.prefix(bsProps, 'heading')),
	        _react2['default'].createElement(
	          'p',
	          { className: _utilsBootstrapUtils.prefix(bsProps, 'text') },
	          children
	        )
	      );
	    }

	    return _react2['default'].createElement(
	      Component,
	      elementProps,
	      children
	    );
	  };

	  return ListGroupItem;
	})(_react2['default'].Component);

	ListGroupItem.propTypes = propTypes;
	ListGroupItem.defaultProps = defaultProps;

	exports['default'] = _utilsBootstrapUtils.bsClass('list-group-item', _utilsBootstrapUtils.bsStyles(_Object$values(_utilsStyleConfig.State), ListGroupItem));
	module.exports = exports['default'];

/***/ },
/* 430 */
/***/ function(module, exports, __webpack_require__) {

	'use strict';

	var _inherits = __webpack_require__(254)['default'];

	var _classCallCheck = __webpack_require__(330)['default'];

	var _objectWithoutProperties = __webpack_require__(338)['default'];

	var _extends = __webpack_require__(332)['default'];

	var _interopRequireDefault = __webpack_require__(249)['default'];

	exports.__esModule = true;

	var _classnames = __webpack_require__(340);

	var _classnames2 = _interopRequireDefault(_classnames);

	var _react = __webpack_require__(2);

	var _react2 = _interopRequireDefault(_react);

	var _reactPropTypesLibElementType = __webpack_require__(357);

	var _reactPropTypesLibElementType2 = _interopRequireDefault(_reactPropTypesLibElementType);

	var _MediaBody = __webpack_require__(431);

	var _MediaBody2 = _interopRequireDefault(_MediaBody);

	var _MediaHeading = __webpack_require__(432);

	var _MediaHeading2 = _interopRequireDefault(_MediaHeading);

	var _MediaLeft = __webpack_require__(433);

	var _MediaLeft2 = _interopRequireDefault(_MediaLeft);

	var _MediaList = __webpack_require__(434);

	var _MediaList2 = _interopRequireDefault(_MediaList);

	var _MediaListItem = __webpack_require__(435);

	var _MediaListItem2 = _interopRequireDefault(_MediaListItem);

	var _MediaRight = __webpack_require__(436);

	var _MediaRight2 = _interopRequireDefault(_MediaRight);

	var _utilsBootstrapUtils = __webpack_require__(341);

	var propTypes = {
	  componentClass: _reactPropTypesLibElementType2['default']
	};

	var defaultProps = {
	  componentClass: 'div'
	};

	var Media = (function (_React$Component) {
	  _inherits(Media, _React$Component);

	  function Media() {
	    _classCallCheck(this, Media);

	    _React$Component.apply(this, arguments);
	  }

	  Media.prototype.render = function render() {
	    var _props = this.props;
	    var Component = _props.componentClass;
	    var className = _props.className;

	    var props = _objectWithoutProperties(_props, ['componentClass', 'className']);

	    var _splitBsProps = _utilsBootstrapUtils.splitBsProps(props);

	    var bsProps = _splitBsProps[0];
	    var elementProps = _splitBsProps[1];

	    var classes = _utilsBootstrapUtils.getClassSet(bsProps);

	    return _react2['default'].createElement(Component, _extends({}, elementProps, {
	      className: _classnames2['default'](className, classes)
	    }));
	  };

	  return Media;
	})(_react2['default'].Component);

	Media.propTypes = propTypes;
	Media.defaultProps = defaultProps;

	Media.Heading = _MediaHeading2['default'];
	Media.Body = _MediaBody2['default'];
	Media.Left = _MediaLeft2['default'];
	Media.Right = _MediaRight2['default'];
	Media.List = _MediaList2['default'];
	Media.ListItem = _MediaListItem2['default'];

	exports['default'] = _utilsBootstrapUtils.bsClass('media', Media);
	module.exports = exports['default'];

/***/ },
/* 431 */
/***/ function(module, exports, __webpack_require__) {

	'use strict';

	var _inherits = __webpack_require__(254)['default'];

	var _classCallCheck = __webpack_require__(330)['default'];

	var _objectWithoutProperties = __webpack_require__(338)['default'];

	var _extends = __webpack_require__(332)['default'];

	var _interopRequireDefault = __webpack_require__(249)['default'];

	exports.__esModule = true;

	var _classnames = __webpack_require__(340);

	var _classnames2 = _interopRequireDefault(_classnames);

	var _react = __webpack_require__(2);

	var _react2 = _interopRequireDefault(_react);

	var _reactPropTypesLibElementType = __webpack_require__(357);

	var _reactPropTypesLibElementType2 = _interopRequireDefault(_reactPropTypesLibElementType);

	var _utilsBootstrapUtils = __webpack_require__(341);

	var propTypes = {
	  componentClass: _reactPropTypesLibElementType2['default']
	};

	var defaultProps = {
	  componentClass: 'div'
	};

	var MediaBody = (function (_React$Component) {
	  _inherits(MediaBody, _React$Component);

	  function MediaBody() {
	    _classCallCheck(this, MediaBody);

	    _React$Component.apply(this, arguments);
	  }

	  MediaBody.prototype.render = function render() {
	    var _props = this.props;
	    var Component = _props.componentClass;
	    var className = _props.className;

	    var props = _objectWithoutProperties(_props, ['componentClass', 'className']);

	    var _splitBsProps = _utilsBootstrapUtils.splitBsProps(props);

	    var bsProps = _splitBsProps[0];
	    var elementProps = _splitBsProps[1];

	    var classes = _utilsBootstrapUtils.getClassSet(bsProps);

	    return _react2['default'].createElement(Component, _extends({}, elementProps, {
	      className: _classnames2['default'](className, classes)
	    }));
	  };

	  return MediaBody;
	})(_react2['default'].Component);

	MediaBody.propTypes = propTypes;
	MediaBody.defaultProps = defaultProps;

	exports['default'] = _utilsBootstrapUtils.bsClass('media-body', MediaBody);
	module.exports = exports['default'];

/***/ },
/* 432 */
/***/ function(module, exports, __webpack_require__) {

	'use strict';

	var _inherits = __webpack_require__(254)['default'];

	var _classCallCheck = __webpack_require__(330)['default'];

	var _objectWithoutProperties = __webpack_require__(338)['default'];

	var _extends = __webpack_require__(332)['default'];

	var _interopRequireDefault = __webpack_require__(249)['default'];

	exports.__esModule = true;

	var _classnames = __webpack_require__(340);

	var _classnames2 = _interopRequireDefault(_classnames);

	var _react = __webpack_require__(2);

	var _react2 = _interopRequireDefault(_react);

	var _reactPropTypesLibElementType = __webpack_require__(357);

	var _reactPropTypesLibElementType2 = _interopRequireDefault(_reactPropTypesLibElementType);

	var _utilsBootstrapUtils = __webpack_require__(341);

	var propTypes = {
	  componentClass: _reactPropTypesLibElementType2['default']
	};

	var defaultProps = {
	  componentClass: 'h4'
	};

	var MediaHeading = (function (_React$Component) {
	  _inherits(MediaHeading, _React$Component);

	  function MediaHeading() {
	    _classCallCheck(this, MediaHeading);

	    _React$Component.apply(this, arguments);
	  }

	  MediaHeading.prototype.render = function render() {
	    var _props = this.props;
	    var Component = _props.componentClass;
	    var className = _props.className;

	    var props = _objectWithoutProperties(_props, ['componentClass', 'className']);

	    var _splitBsProps = _utilsBootstrapUtils.splitBsProps(props);

	    var bsProps = _splitBsProps[0];
	    var elementProps = _splitBsProps[1];

	    var classes = _utilsBootstrapUtils.getClassSet(bsProps);

	    return _react2['default'].createElement(Component, _extends({}, elementProps, {
	      className: _classnames2['default'](className, classes)
	    }));
	  };

	  return MediaHeading;
	})(_react2['default'].Component);

	MediaHeading.propTypes = propTypes;
	MediaHeading.defaultProps = defaultProps;

	exports['default'] = _utilsBootstrapUtils.bsClass('media-heading', MediaHeading);
	module.exports = exports['default'];

/***/ },
/* 433 */
/***/ function(module, exports, __webpack_require__) {

	'use strict';

	var _inherits = __webpack_require__(254)['default'];

	var _classCallCheck = __webpack_require__(330)['default'];

	var _objectWithoutProperties = __webpack_require__(338)['default'];

	var _extends = __webpack_require__(332)['default'];

	var _interopRequireDefault = __webpack_require__(249)['default'];

	exports.__esModule = true;

	var _classnames = __webpack_require__(340);

	var _classnames2 = _interopRequireDefault(_classnames);

	var _react = __webpack_require__(2);

	var _react2 = _interopRequireDefault(_react);

	var _Media = __webpack_require__(430);

	var _Media2 = _interopRequireDefault(_Media);

	var _utilsBootstrapUtils = __webpack_require__(341);

	var propTypes = {
	  /**
	   * Align the media to the top, middle, or bottom of the media object.
	   */
	  align: _react2['default'].PropTypes.oneOf(['top', 'middle', 'bottom'])
	};

	var MediaLeft = (function (_React$Component) {
	  _inherits(MediaLeft, _React$Component);

	  function MediaLeft() {
	    _classCallCheck(this, MediaLeft);

	    _React$Component.apply(this, arguments);
	  }

	  MediaLeft.prototype.render = function render() {
	    var _props = this.props;
	    var align = _props.align;
	    var className = _props.className;

	    var props = _objectWithoutProperties(_props, ['align', 'className']);

	    var _splitBsProps = _utilsBootstrapUtils.splitBsProps(props);

	    var bsProps = _splitBsProps[0];
	    var elementProps = _splitBsProps[1];

	    var classes = _utilsBootstrapUtils.getClassSet(bsProps);

	    if (align) {
	      // The class is e.g. `media-top`, not `media-left-top`.
	      classes[_utilsBootstrapUtils.prefix(_Media2['default'].defaultProps, align)] = true;
	    }

	    return _react2['default'].createElement('div', _extends({}, elementProps, {
	      className: _classnames2['default'](className, classes)
	    }));
	  };

	  return MediaLeft;
	})(_react2['default'].Component);

	MediaLeft.propTypes = propTypes;

	exports['default'] = _utilsBootstrapUtils.bsClass('media-left', MediaLeft);
	module.exports = exports['default'];

/***/ },
/* 434 */
/***/ function(module, exports, __webpack_require__) {

	'use strict';

	var _inherits = __webpack_require__(254)['default'];

	var _classCallCheck = __webpack_require__(330)['default'];

	var _objectWithoutProperties = __webpack_require__(338)['default'];

	var _extends = __webpack_require__(332)['default'];

	var _interopRequireDefault = __webpack_require__(249)['default'];

	exports.__esModule = true;

	var _classnames = __webpack_require__(340);

	var _classnames2 = _interopRequireDefault(_classnames);

	var _react = __webpack_require__(2);

	var _react2 = _interopRequireDefault(_react);

	var _utilsBootstrapUtils = __webpack_require__(341);

	var MediaList = (function (_React$Component) {
	  _inherits(MediaList, _React$Component);

	  function MediaList() {
	    _classCallCheck(this, MediaList);

	    _React$Component.apply(this, arguments);
	  }

	  MediaList.prototype.render = function render() {
	    var _props = this.props;
	    var className = _props.className;

	    var props = _objectWithoutProperties(_props, ['className']);

	    var _splitBsProps = _utilsBootstrapUtils.splitBsProps(props);

	    var bsProps = _splitBsProps[0];
	    var elementProps = _splitBsProps[1];

	    var classes = _utilsBootstrapUtils.getClassSet(bsProps);

	    return _react2['default'].createElement('ul', _extends({}, elementProps, {
	      className: _classnames2['default'](className, classes)
	    }));
	  };

	  return MediaList;
	})(_react2['default'].Component);

	exports['default'] = _utilsBootstrapUtils.bsClass('media-list', MediaList);
	module.exports = exports['default'];

/***/ },
/* 435 */
/***/ function(module, exports, __webpack_require__) {

	'use strict';

	var _inherits = __webpack_require__(254)['default'];

	var _classCallCheck = __webpack_require__(330)['default'];

	var _objectWithoutProperties = __webpack_require__(338)['default'];

	var _extends = __webpack_require__(332)['default'];

	var _interopRequireDefault = __webpack_require__(249)['default'];

	exports.__esModule = true;

	var _classnames = __webpack_require__(340);

	var _classnames2 = _interopRequireDefault(_classnames);

	var _react = __webpack_require__(2);

	var _react2 = _interopRequireDefault(_react);

	var _utilsBootstrapUtils = __webpack_require__(341);

	var MediaListItem = (function (_React$Component) {
	  _inherits(MediaListItem, _React$Component);

	  function MediaListItem() {
	    _classCallCheck(this, MediaListItem);

	    _React$Component.apply(this, arguments);
	  }

	  MediaListItem.prototype.render = function render() {
	    var _props = this.props;
	    var className = _props.className;

	    var props = _objectWithoutProperties(_props, ['className']);

	    var _splitBsProps = _utilsBootstrapUtils.splitBsProps(props);

	    var bsProps = _splitBsProps[0];
	    var elementProps = _splitBsProps[1];

	    var classes = _utilsBootstrapUtils.getClassSet(bsProps);

	    return _react2['default'].createElement('li', _extends({}, elementProps, {
	      className: _classnames2['default'](className, classes)
	    }));
	  };

	  return MediaListItem;
	})(_react2['default'].Component);

	exports['default'] = _utilsBootstrapUtils.bsClass('media', MediaListItem);
	module.exports = exports['default'];

/***/ },
/* 436 */
/***/ function(module, exports, __webpack_require__) {

	'use strict';

	var _inherits = __webpack_require__(254)['default'];

	var _classCallCheck = __webpack_require__(330)['default'];

	var _objectWithoutProperties = __webpack_require__(338)['default'];

	var _extends = __webpack_require__(332)['default'];

	var _interopRequireDefault = __webpack_require__(249)['default'];

	exports.__esModule = true;

	var _classnames = __webpack_require__(340);

	var _classnames2 = _interopRequireDefault(_classnames);

	var _react = __webpack_require__(2);

	var _react2 = _interopRequireDefault(_react);

	var _Media = __webpack_require__(430);

	var _Media2 = _interopRequireDefault(_Media);

	var _utilsBootstrapUtils = __webpack_require__(341);

	var propTypes = {
	  /**
	   * Align the media to the top, middle, or bottom of the media object.
	   */
	  align: _react2['default'].PropTypes.oneOf(['top', 'middle', 'bottom'])
	};

	var MediaRight = (function (_React$Component) {
	  _inherits(MediaRight, _React$Component);

	  function MediaRight() {
	    _classCallCheck(this, MediaRight);

	    _React$Component.apply(this, arguments);
	  }

	  MediaRight.prototype.render = function render() {
	    var _props = this.props;
	    var align = _props.align;
	    var className = _props.className;

	    var props = _objectWithoutProperties(_props, ['align', 'className']);

	    var _splitBsProps = _utilsBootstrapUtils.splitBsProps(props);

	    var bsProps = _splitBsProps[0];
	    var elementProps = _splitBsProps[1];

	    var classes = _utilsBootstrapUtils.getClassSet(bsProps);

	    if (align) {
	      // The class is e.g. `media-top`, not `media-right-top`.
	      classes[_utilsBootstrapUtils.prefix(_Media2['default'].defaultProps, align)] = true;
	    }

	    return _react2['default'].createElement('div', _extends({}, elementProps, {
	      className: _classnames2['default'](className, classes)
	    }));
	  };

	  return MediaRight;
	})(_react2['default'].Component);

	MediaRight.propTypes = propTypes;

	exports['default'] = _utilsBootstrapUtils.bsClass('media-right', MediaRight);
	module.exports = exports['default'];

/***/ },
/* 437 */
/***/ function(module, exports, __webpack_require__) {

	'use strict';

	var _inherits = __webpack_require__(254)['default'];

	var _classCallCheck = __webpack_require__(330)['default'];

	var _objectWithoutProperties = __webpack_require__(338)['default'];

	var _extends = __webpack_require__(332)['default'];

	var _interopRequireDefault = __webpack_require__(249)['default'];

	exports.__esModule = true;

	var _classnames = __webpack_require__(340);

	var _classnames2 = _interopRequireDefault(_classnames);

	var _react = __webpack_require__(2);

	var _react2 = _interopRequireDefault(_react);

	var _reactPropTypesLibAll = __webpack_require__(361);

	var _reactPropTypesLibAll2 = _interopRequireDefault(_reactPropTypesLibAll);

	var _SafeAnchor = __webpack_require__(356);

	var _SafeAnchor2 = _interopRequireDefault(_SafeAnchor);

	var _utilsBootstrapUtils = __webpack_require__(341);

	var _utilsCreateChainedFunction = __webpack_require__(347);

	var _utilsCreateChainedFunction2 = _interopRequireDefault(_utilsCreateChainedFunction);

	var propTypes = {
	  /**
	   * Highlight the menu item as active.
	   */
	  active: _react2['default'].PropTypes.bool,

	  /**
	   * Disable the menu item, making it unselectable.
	   */
	  disabled: _react2['default'].PropTypes.bool,

	  /**
	   * Styles the menu item as a horizontal rule, providing visual separation between
	   * groups of menu items.
	   */
	  divider: _reactPropTypesLibAll2['default'](_react2['default'].PropTypes.bool, function (_ref) {
	    var divider = _ref.divider;
	    var children = _ref.children;
	    return divider && children ? new Error('Children will not be rendered for dividers') : null;
	  }),

	  /**
	   * Value passed to the `onSelect` handler, useful for identifying the selected menu item.
	   */
	  eventKey: _react2['default'].PropTypes.any,

	  /**
	   * Styles the menu item as a header label, useful for describing a group of menu items.
	   */
	  header: _react2['default'].PropTypes.bool,

	  /**
	   * HTML `href` attribute corresponding to `a.href`.
	   */
	  href: _react2['default'].PropTypes.string,

	  /**
	   * Callback fired when the menu item is clicked.
	   */
	  onClick: _react2['default'].PropTypes.func,

	  /**
	   * Callback fired when the menu item is selected.
	   *
	   * ```js
	   * (eventKey: any, event: Object) => any
	   * ```
	   */
	  onSelect: _react2['default'].PropTypes.func
	};

	var defaultProps = {
	  divider: false,
	  disabled: false,
	  header: false
	};

	var MenuItem = (function (_React$Component) {
	  _inherits(MenuItem, _React$Component);

	  function MenuItem(props, context) {
	    _classCallCheck(this, MenuItem);

	    _React$Component.call(this, props, context);

	    this.handleClick = this.handleClick.bind(this);
	  }

	  MenuItem.prototype.handleClick = function handleClick(event) {
	    var _props = this.props;
	    var href = _props.href;
	    var disabled = _props.disabled;
	    var onSelect = _props.onSelect;
	    var eventKey = _props.eventKey;

	    if (!href || disabled) {
	      event.preventDefault();
	    }

	    if (disabled) {
	      return;
	    }

	    if (onSelect) {
	      onSelect(eventKey, event);
	    }
	  };

	  MenuItem.prototype.render = function render() {
	    var _props2 = this.props;
	    var active = _props2.active;
	    var disabled = _props2.disabled;
	    var divider = _props2.divider;
	    var header = _props2.header;
	    var onClick = _props2.onClick;
	    var className = _props2.className;
	    var style = _props2.style;

	    var props = _objectWithoutProperties(_props2, ['active', 'disabled', 'divider', 'header', 'onClick', 'className', 'style']);

	    var _splitBsPropsAndOmit = _utilsBootstrapUtils.splitBsPropsAndOmit(props, ['eventKey', 'onSelect']);

	    var bsProps = _splitBsPropsAndOmit[0];
	    var elementProps = _splitBsPropsAndOmit[1];

	    if (divider) {
	      // Forcibly blank out the children; separators shouldn't render any.
	      elementProps.children = undefined;

	      return _react2['default'].createElement('li', _extends({}, elementProps, {
	        role: 'separator',
	        className: _classnames2['default'](className, 'divider'),
	        style: style
	      }));
	    }

	    if (header) {
	      return _react2['default'].createElement('li', _extends({}, elementProps, {
	        role: 'heading',
	        className: _classnames2['default'](className, _utilsBootstrapUtils.prefix(bsProps, 'header')),
	        style: style
	      }));
	    }

	    return _react2['default'].createElement(
	      'li',
	      {
	        role: 'presentation',
	        className: _classnames2['default'](className, { active: active, disabled: disabled }),
	        style: style
	      },
	      _react2['default'].createElement(_SafeAnchor2['default'], _extends({}, elementProps, {
	        role: 'menuitem',
	        tabIndex: '-1',
	        onClick: _utilsCreateChainedFunction2['default'](onClick, this.handleClick)
	      }))
	    );
	  };

	  return MenuItem;
	})(_react2['default'].Component);

	MenuItem.propTypes = propTypes;
	MenuItem.defaultProps = defaultProps;

	exports['default'] = _utilsBootstrapUtils.bsClass('dropdown', MenuItem);
	module.exports = exports['default'];

/***/ },
/* 438 */
/***/ function(module, exports, __webpack_require__) {

	'use strict';

	var _extends = __webpack_require__(332)['default'];

	var _inherits = __webpack_require__(254)['default'];

	var _classCallCheck = __webpack_require__(330)['default'];

	var _objectWithoutProperties = __webpack_require__(338)['default'];

	var _interopRequireDefault = __webpack_require__(249)['default'];

	exports.__esModule = true;

	var _classnames = __webpack_require__(340);

	var _classnames2 = _interopRequireDefault(_classnames);

	var _domHelpersEvents = __webpack_require__(439);

	var _domHelpersEvents2 = _interopRequireDefault(_domHelpersEvents);

	var _domHelpersOwnerDocument = __webpack_require__(388);

	var _domHelpersOwnerDocument2 = _interopRequireDefault(_domHelpersOwnerDocument);

	var _domHelpersUtilInDOM = __webpack_require__(384);

	var _domHelpersUtilInDOM2 = _interopRequireDefault(_domHelpersUtilInDOM);

	var _domHelpersUtilScrollbarSize = __webpack_require__(442);

	var _domHelpersUtilScrollbarSize2 = _interopRequireDefault(_domHelpersUtilScrollbarSize);

	var _react = __webpack_require__(2);

	var _react2 = _interopRequireDefault(_react);

	var _reactDom = __webpack_require__(34);

	var _reactDom2 = _interopRequireDefault(_reactDom);

	var _reactOverlaysLibModal = __webpack_require__(443);

	var _reactOverlaysLibModal2 = _interopRequireDefault(_reactOverlaysLibModal);

	var _reactOverlaysLibUtilsIsOverflowing = __webpack_require__(452);

	var _reactOverlaysLibUtilsIsOverflowing2 = _interopRequireDefault(_reactOverlaysLibUtilsIsOverflowing);

	var _reactPropTypesLibElementType = __webpack_require__(357);

	var _reactPropTypesLibElementType2 = _interopRequireDefault(_reactPropTypesLibElementType);

	var _Fade = __webpack_require__(414);

	var _Fade2 = _interopRequireDefault(_Fade);

	var _ModalBody = __webpack_require__(456);

	var _ModalBody2 = _interopRequireDefault(_ModalBody);

	var _ModalDialog = __webpack_require__(457);

	var _ModalDialog2 = _interopRequireDefault(_ModalDialog);

	var _ModalFooter = __webpack_require__(458);

	var _ModalFooter2 = _interopRequireDefault(_ModalFooter);

	var _ModalHeader = __webpack_require__(459);

	var _ModalHeader2 = _interopRequireDefault(_ModalHeader);

	var _ModalTitle = __webpack_require__(460);

	var _ModalTitle2 = _interopRequireDefault(_ModalTitle);

	var _utilsBootstrapUtils = __webpack_require__(341);

	var _utilsCreateChainedFunction = __webpack_require__(347);

	var _utilsCreateChainedFunction2 = _interopRequireDefault(_utilsCreateChainedFunction);

	var _utilsSplitComponentProps = __webpack_require__(413);

	var _utilsSplitComponentProps2 = _interopRequireDefault(_utilsSplitComponentProps);

	var _utilsStyleConfig = __webpack_require__(346);

	var propTypes = _extends({}, _reactOverlaysLibModal2['default'].propTypes, _ModalDialog2['default'].propTypes, {

	  /**
	   * Include a backdrop component. Specify 'static' for a backdrop that doesn't
	   * trigger an "onHide" when clicked.
	   */
	  backdrop: _react2['default'].PropTypes.oneOf(['static', true, false]),

	  /**
	   * Close the modal when escape key is pressed
	   */
	  keyboard: _react2['default'].PropTypes.bool,

	  /**
	   * Open and close the Modal with a slide and fade animation.
	   */
	  animation: _react2['default'].PropTypes.bool,

	  /**
	   * A Component type that provides the modal content Markup. This is a useful
	   * prop when you want to use your own styles and markup to create a custom
	   * modal component.
	   */
	  dialogComponentClass: _reactPropTypesLibElementType2['default'],

	  /**
	   * When `true` The modal will automatically shift focus to itself when it
	   * opens, and replace it to the last focused element when it closes.
	   * Generally this should never be set to false as it makes the Modal less
	   * accessible to assistive technologies, like screen-readers.
	   */
	  autoFocus: _react2['default'].PropTypes.bool,

	  /**
	   * When `true` The modal will prevent focus from leaving the Modal while
	   * open. Consider leaving the default value here, as it is necessary to make
	   * the Modal work well with assistive technologies, such as screen readers.
	   */
	  enforceFocus: _react2['default'].PropTypes.bool,

	  /**
	   * When `true` The modal will show itself.
	   */
	  show: _react2['default'].PropTypes.bool,

	  /**
	   * A callback fired when the header closeButton or non-static backdrop is
	   * clicked. Required if either are specified.
	   */
	  onHide: _react2['default'].PropTypes.func,

	  /**
	   * Callback fired before the Modal transitions in
	   */
	  onEnter: _react2['default'].PropTypes.func,

	  /**
	   * Callback fired as the Modal begins to transition in
	   */
	  onEntering: _react2['default'].PropTypes.func,

	  /**
	   * Callback fired after the Modal finishes transitioning in
	   */
	  onEntered: _react2['default'].PropTypes.func,

	  /**
	   * Callback fired right before the Modal transitions out
	   */
	  onExit: _react2['default'].PropTypes.func,

	  /**
	   * Callback fired as the Modal begins to transition out
	   */
	  onExiting: _react2['default'].PropTypes.func,

	  /**
	   * Callback fired after the Modal finishes transitioning out
	   */
	  onExited: _react2['default'].PropTypes.func,

	  /**
	   * @private
	   */
	  container: _reactOverlaysLibModal2['default'].propTypes.container
	});

	var defaultProps = _extends({}, _reactOverlaysLibModal2['default'].defaultProps, {
	  animation: true,
	  dialogComponentClass: _ModalDialog2['default']
	});

	var childContextTypes = {
	  $bs_modal: _react2['default'].PropTypes.shape({
	    onHide: _react2['default'].PropTypes.func
	  })
	};

	var Modal = (function (_React$Component) {
	  _inherits(Modal, _React$Component);

	  function Modal(props, context) {
	    _classCallCheck(this, Modal);

	    _React$Component.call(this, props, context);

	    this.handleEntering = this.handleEntering.bind(this);
	    this.handleExited = this.handleExited.bind(this);
	    this.handleWindowResize = this.handleWindowResize.bind(this);
	    this.handleDialogClick = this.handleDialogClick.bind(this);

	    this.state = {
	      style: {}
	    };
	  }

	  Modal.prototype.getChildContext = function getChildContext() {
	    return {
	      $bs_modal: {
	        onHide: this.props.onHide
	      }
	    };
	  };

	  Modal.prototype.componentWillUnmount = function componentWillUnmount() {
	    // Clean up the listener if we need to.
	    this.handleExited();
	  };

	  Modal.prototype.handleEntering = function handleEntering() {
	    // FIXME: This should work even when animation is disabled.
	    _domHelpersEvents2['default'].on(window, 'resize', this.handleWindowResize);
	    this.updateStyle();
	  };

	  Modal.prototype.handleExited = function handleExited() {
	    // FIXME: This should work even when animation is disabled.
	    _domHelpersEvents2['default'].off(window, 'resize', this.handleWindowResize);
	  };

	  Modal.prototype.handleWindowResize = function handleWindowResize() {
	    this.updateStyle();
	  };

	  Modal.prototype.handleDialogClick = function handleDialogClick(e) {
	    if (e.target !== e.currentTarget) {
	      return;
	    }

	    this.props.onHide();
	  };

	  Modal.prototype.updateStyle = function updateStyle() {
	    if (!_domHelpersUtilInDOM2['default']) {
	      return;
	    }

	    var dialogNode = this._modal.getDialogElement();
	    var dialogHeight = dialogNode.scrollHeight;

	    var document = _domHelpersOwnerDocument2['default'](dialogNode);
	    var bodyIsOverflowing = _reactOverlaysLibUtilsIsOverflowing2['default'](_reactDom2['default'].findDOMNode(this.props.container || document.body));
	    var modalIsOverflowing = dialogHeight > document.documentElement.clientHeight;

	    this.setState({
	      style: {
	        paddingRight: bodyIsOverflowing && !modalIsOverflowing ? _domHelpersUtilScrollbarSize2['default']() : undefined,
	        paddingLeft: !bodyIsOverflowing && modalIsOverflowing ? _domHelpersUtilScrollbarSize2['default']() : undefined
	      }
	    });
	  };

	  Modal.prototype.render = function render() {
	    var _this = this;

	    var _props = this.props;
	    var backdrop = _props.backdrop;
	    var animation = _props.animation;
	    var show = _props.show;
	    var Dialog = _props.dialogComponentClass;
	    var className = _props.className;
	    var style = _props.style;
	    var children = _props.children;
	    var // Just in case this get added to BaseModal propTypes.
	    onEntering = _props.onEntering;
	    var onExited = _props.onExited;

	    var props = _objectWithoutProperties(_props, ['backdrop', 'animation', 'show', 'dialogComponentClass', 'className', 'style', 'children', 'onEntering', 'onExited']);

	    var _splitComponentProps = _utilsSplitComponentProps2['default'](props, _reactOverlaysLibModal2['default']);

	    var baseModalProps = _splitComponentProps[0];
	    var dialogProps = _splitComponentProps[1];

	    var inClassName = show && !animation && 'in';

	    return _react2['default'].createElement(
	      _reactOverlaysLibModal2['default'],
	      _extends({}, baseModalProps, {
	        ref: function (c) {
	          _this._modal = c;
	        },
	        show: show,
	        onEntering: _utilsCreateChainedFunction2['default'](onEntering, this.handleEntering),
	        onExited: _utilsCreateChainedFunction2['default'](onExited, this.handleExited),
	        backdrop: backdrop,
	        backdropClassName: _classnames2['default'](_utilsBootstrapUtils.prefix(props, 'backdrop'), inClassName),
	        containerClassName: _utilsBootstrapUtils.prefix(props, 'open'),
	        transition: animation ? _Fade2['default'] : undefined,
	        dialogTransitionTimeout: Modal.TRANSITION_DURATION,
	        backdropTransitionTimeout: Modal.BACKDROP_TRANSITION_DURATION
	      }),
	      _react2['default'].createElement(
	        Dialog,
	        _extends({}, dialogProps, {
	          style: _extends({}, this.state.style, style),
	          className: _classnames2['default'](className, inClassName),
	          onClick: backdrop === true ? this.handleDialogClick : null
	        }),
	        children
	      )
	    );
	  };

	  return Modal;
	})(_react2['default'].Component);

	Modal.propTypes = propTypes;
	Modal.defaultProps = defaultProps;
	Modal.childContextTypes = childContextTypes;

	Modal.Body = _ModalBody2['default'];
	Modal.Header = _ModalHeader2['default'];
	Modal.Title = _ModalTitle2['default'];
	Modal.Footer = _ModalFooter2['default'];

	Modal.Dialog = _ModalDialog2['default'];

	Modal.TRANSITION_DURATION = 300;
	Modal.BACKDROP_TRANSITION_DURATION = 150;

	exports['default'] = _utilsBootstrapUtils.bsClass('modal', _utilsBootstrapUtils.bsSizes([_utilsStyleConfig.Size.LARGE, _utilsStyleConfig.Size.SMALL], Modal));
	module.exports = exports['default'];

/***/ },
/* 439 */
/***/ function(module, exports, __webpack_require__) {

	'use strict';
	var on = __webpack_require__(385),
	    off = __webpack_require__(407),
	    filter = __webpack_require__(440);

	module.exports = { on: on, off: off, filter: filter };

/***/ },
/* 440 */
/***/ function(module, exports, __webpack_require__) {

	'use strict';

	var contains = __webpack_require__(389),
	    qsa = __webpack_require__(441);

	module.exports = function (selector, handler) {
	  return function (e) {
	    var top = e.currentTarget,
	        target = e.target,
	        matches = qsa(top, selector);

	    if (matches.some(function (match) {
	      return contains(match, target);
	    })) handler.call(this, e);
	  };
	};

/***/ },
/* 441 */
/***/ function(module, exports) {

	'use strict';
	//     Zepto.js
	//     (c) 2010-2015 Thomas Fuchs
	//     Zepto.js may be freely distributed under the MIT license.
	var simpleSelectorRE = /^[\w-]*$/,
	    toArray = Function.prototype.bind.call(Function.prototype.call, [].slice);

	module.exports = function qsa(element, selector) {
	  var maybeID = selector[0] === '#',
	      maybeClass = selector[0] === '.',
	      nameOnly = maybeID || maybeClass ? selector.slice(1) : selector,
	      isSimple = simpleSelectorRE.test(nameOnly),
	      found;

	  if (isSimple) {
	    if (maybeID) {
	      element = element.getElementById ? element : document;
	      return (found = element.getElementById(nameOnly)) ? [found] : [];
	    }

	    if (element.getElementsByClassName && maybeClass) return toArray(element.getElementsByClassName(nameOnly));

	    return toArray(element.getElementsByTagName(selector));
	  }

	  return toArray(element.querySelectorAll(selector));
	};

/***/ },
/* 442 */
/***/ function(module, exports, __webpack_require__) {

	'use strict';

	var canUseDOM = __webpack_require__(384);

	var size;

	module.exports = function (recalc) {
	  if (!size || recalc) {
	    if (canUseDOM) {
	      var scrollDiv = document.createElement('div');

	      scrollDiv.style.position = 'absolute';
	      scrollDiv.style.top = '-9999px';
	      scrollDiv.style.width = '50px';
	      scrollDiv.style.height = '50px';
	      scrollDiv.style.overflow = 'scroll';

	      document.body.appendChild(scrollDiv);
	      size = scrollDiv.offsetWidth - scrollDiv.clientWidth;
	      document.body.removeChild(scrollDiv);
	    }
	  }

	  return size;
	};

/***/ },
/* 443 */
/***/ function(module, exports, __webpack_require__) {

	'use strict';

	Object.defineProperty(exports, "__esModule", {
	  value: true
	});

	var _extends = Object.assign || function (target) { for (var i = 1; i < arguments.length; i++) { var source = arguments[i]; for (var key in source) { if (Object.prototype.hasOwnProperty.call(source, key)) { target[key] = source[key]; } } } return target; }; /*eslint-disable react/prop-types */


	var _react = __webpack_require__(2);

	var _react2 = _interopRequireDefault(_react);

	var _warning = __webpack_require__(178);

	var _warning2 = _interopRequireDefault(_warning);

	var _mountable = __webpack_require__(444);

	var _mountable2 = _interopRequireDefault(_mountable);

	var _elementType = __webpack_require__(357);

	var _elementType2 = _interopRequireDefault(_elementType);

	var _Portal = __webpack_require__(445);

	var _Portal2 = _interopRequireDefault(_Portal);

	var _ModalManager = __webpack_require__(447);

	var _ModalManager2 = _interopRequireDefault(_ModalManager);

	var _ownerDocument = __webpack_require__(409);

	var _ownerDocument2 = _interopRequireDefault(_ownerDocument);

	var _addEventListener = __webpack_require__(406);

	var _addEventListener2 = _interopRequireDefault(_addEventListener);

	var _addFocusListener = __webpack_require__(455);

	var _addFocusListener2 = _interopRequireDefault(_addFocusListener);

	var _inDOM = __webpack_require__(384);

	var _inDOM2 = _interopRequireDefault(_inDOM);

	var _activeElement = __webpack_require__(387);

	var _activeElement2 = _interopRequireDefault(_activeElement);

	var _contains = __webpack_require__(389);

	var _contains2 = _interopRequireDefault(_contains);

	var _getContainer = __webpack_require__(446);

	var _getContainer2 = _interopRequireDefault(_getContainer);

	function _interopRequireDefault(obj) { return obj && obj.__esModule ? obj : { default: obj }; }

	var modalManager = new _ModalManager2.default();

	/**
	 * Love them or hate them, `<Modal/>` provides a solid foundation for creating dialogs, lightboxes, or whatever else.
	 * The Modal component renders its `children` node in front of a backdrop component.
	 *
	 * The Modal offers a few helpful features over using just a `<Portal/>` component and some styles:
	 *
	 * - Manages dialog stacking when one-at-a-time just isn't enough.
	 * - Creates a backdrop, for disabling interaction below the modal.
	 * - It properly manages focus; moving to the modal content, and keeping it there until the modal is closed.
	 * - It disables scrolling of the page content while open.
	 * - Adds the appropriate ARIA roles are automatically.
	 * - Easily pluggable animations via a `<Transition/>` component.
	 *
	 * Note that, in the same way the backdrop element prevents users from clicking or interacting
	 * with the page content underneath the Modal, Screen readers also need to be signaled to not to
	 * interact with page content while the Modal is open. To do this, we use a common technique of applying
	 * the `aria-hidden='true'` attribute to the non-Modal elements in the Modal `container`. This means that for
	 * a Modal to be truly modal, it should have a `container` that is _outside_ your app's
	 * React hierarchy (such as the default: document.body).
	 */
	var Modal = _react2.default.createClass({
	  displayName: 'Modal',


	  propTypes: _extends({}, _Portal2.default.propTypes, {

	    /**
	     * Set the visibility of the Modal
	     */
	    show: _react2.default.PropTypes.bool,

	    /**
	     * A Node, Component instance, or function that returns either. The Modal is appended to it's container element.
	     *
	     * For the sake of assistive technologies, the container should usually be the document body, so that the rest of the
	     * page content can be placed behind a virtual backdrop as well as a visual one.
	     */
	    container: _react2.default.PropTypes.oneOfType([_mountable2.default, _react2.default.PropTypes.func]),

	    /**
	     * A callback fired when the Modal is opening.
	     */
	    onShow: _react2.default.PropTypes.func,

	    /**
	     * A callback fired when either the backdrop is clicked, or the escape key is pressed.
	     *
	     * The `onHide` callback only signals intent from the Modal,
	     * you must actually set the `show` prop to `false` for the Modal to close.
	     */
	    onHide: _react2.default.PropTypes.func,

	    /**
	     * Include a backdrop component.
	     */
	    backdrop: _react2.default.PropTypes.oneOfType([_react2.default.PropTypes.bool, _react2.default.PropTypes.oneOf(['static'])]),

	    /**
	     * A callback fired when the escape key, if specified in `keyboard`, is pressed.
	     */
	    onEscapeKeyUp: _react2.default.PropTypes.func,

	    /**
	     * A callback fired when the backdrop, if specified, is clicked.
	     */
	    onBackdropClick: _react2.default.PropTypes.func,

	    /**
	     * A style object for the backdrop component.
	     */
	    backdropStyle: _react2.default.PropTypes.object,

	    /**
	     * A css class or classes for the backdrop component.
	     */
	    backdropClassName: _react2.default.PropTypes.string,

	    /**
	     * A css class or set of classes applied to the modal container when the modal is open,
	     * and removed when it is closed.
	     */
	    containerClassName: _react2.default.PropTypes.string,

	    /**
	     * Close the modal when escape key is pressed
	     */
	    keyboard: _react2.default.PropTypes.bool,

	    /**
	     * A `<Transition/>` component to use for the dialog and backdrop components.
	     */
	    transition: _elementType2.default,

	    /**
	     * The `timeout` of the dialog transition if specified. This number is used to ensure that
	     * transition callbacks are always fired, even if browser transition events are canceled.
	     *
	     * See the Transition `timeout` prop for more infomation.
	     */
	    dialogTransitionTimeout: _react2.default.PropTypes.number,

	    /**
	     * The `timeout` of the backdrop transition if specified. This number is used to
	     * ensure that transition callbacks are always fired, even if browser transition events are canceled.
	     *
	     * See the Transition `timeout` prop for more infomation.
	     */
	    backdropTransitionTimeout: _react2.default.PropTypes.number,

	    /**
	     * When `true` The modal will automatically shift focus to itself when it opens, and
	     * replace it to the last focused element when it closes. This also
	     * works correctly with any Modal children that have the `autoFocus` prop.
	     *
	     * Generally this should never be set to `false` as it makes the Modal less
	     * accessible to assistive technologies, like screen readers.
	     */
	    autoFocus: _react2.default.PropTypes.bool,

	    /**
	     * When `true` The modal will prevent focus from leaving the Modal while open.
	     *
	     * Generally this should never be set to `false` as it makes the Modal less
	     * accessible to assistive technologies, like screen readers.
	     */
	    enforceFocus: _react2.default.PropTypes.bool,

	    /**
	     * Callback fired before the Modal transitions in
	     */
	    onEnter: _react2.default.PropTypes.func,

	    /**
	     * Callback fired as the Modal begins to transition in
	     */
	    onEntering: _react2.default.PropTypes.func,

	    /**
	     * Callback fired after the Modal finishes transitioning in
	     */
	    onEntered: _react2.default.PropTypes.func,

	    /**
	     * Callback fired right before the Modal transitions out
	     */
	    onExit: _react2.default.PropTypes.func,

	    /**
	     * Callback fired as the Modal begins to transition out
	     */
	    onExiting: _react2.default.PropTypes.func,

	    /**
	     * Callback fired after the Modal finishes transitioning out
	     */
	    onExited: _react2.default.PropTypes.func

	  }),

	  getDefaultProps: function getDefaultProps() {
	    var noop = function noop() {};

	    return {
	      show: false,
	      backdrop: true,
	      keyboard: true,
	      autoFocus: true,
	      enforceFocus: true,
	      onHide: noop
	    };
	  },
	  getInitialState: function getInitialState() {
	    return { exited: !this.props.show };
	  },
	  render: function render() {
	    var _props = this.props;
	    var show = _props.show;
	    var container = _props.container;
	    var children = _props.children;
	    var Transition = _props.transition;
	    var backdrop = _props.backdrop;
	    var dialogTransitionTimeout = _props.dialogTransitionTimeout;
	    var className = _props.className;
	    var style = _props.style;
	    var onExit = _props.onExit;
	    var onExiting = _props.onExiting;
	    var onEnter = _props.onEnter;
	    var onEntering = _props.onEntering;
	    var onEntered = _props.onEntered;


	    var dialog = _react2.default.Children.only(children);

	    var mountModal = show || Transition && !this.state.exited;
	    if (!mountModal) {
	      return null;
	    }

	    var _dialog$props = dialog.props;
	    var role = _dialog$props.role;
	    var tabIndex = _dialog$props.tabIndex;


	    if (role === undefined || tabIndex === undefined) {
	      dialog = (0, _react.cloneElement)(dialog, {
	        role: role === undefined ? 'document' : role,
	        tabIndex: tabIndex == null ? '-1' : tabIndex
	      });
	    }

	    if (Transition) {
	      dialog = _react2.default.createElement(
	        Transition,
	        {
	          transitionAppear: true,
	          unmountOnExit: true,
	          'in': show,
	          timeout: dialogTransitionTimeout,
	          onExit: onExit,
	          onExiting: onExiting,
	          onExited: this.handleHidden,
	          onEnter: onEnter,
	          onEntering: onEntering,
	          onEntered: onEntered
	        },
	        dialog
	      );
	    }

	    return _react2.default.createElement(
	      _Portal2.default,
	      {
	        ref: this.setMountNode,
	        container: container
	      },
	      _react2.default.createElement(
	        'div',
	        {
	          ref: 'modal',
	          role: role || 'dialog',
	          style: style,
	          className: className
	        },
	        backdrop && this.renderBackdrop(),
	        dialog
	      )
	    );
	  },
	  renderBackdrop: function renderBackdrop() {
	    var _props2 = this.props;
	    var Transition = _props2.transition;
	    var backdropTransitionTimeout = _props2.backdropTransitionTimeout;


	    var backdrop = _react2.default.createElement('div', { ref: 'backdrop',
	      style: this.props.backdropStyle,
	      className: this.props.backdropClassName,
	      onClick: this.handleBackdropClick
	    });

	    if (Transition) {
	      backdrop = _react2.default.createElement(
	        Transition,
	        { transitionAppear: true,
	          'in': this.props.show,
	          timeout: backdropTransitionTimeout
	        },
	        backdrop
	      );
	    }

	    return backdrop;
	  },
	  componentWillReceiveProps: function componentWillReceiveProps(nextProps) {
	    if (nextProps.show) {
	      this.setState({ exited: false });
	    } else if (!nextProps.transition) {
	      // Otherwise let handleHidden take care of marking exited.
	      this.setState({ exited: true });
	    }
	  },
	  componentWillUpdate: function componentWillUpdate(nextProps) {
	    if (!this.props.show && nextProps.show) {
	      this.checkForFocus();
	    }
	  },
	  componentDidMount: function componentDidMount() {
	    if (this.props.show) {
	      this.onShow();
	    }
	  },
	  componentDidUpdate: function componentDidUpdate(prevProps) {
	    var transition = this.props.transition;


	    if (prevProps.show && !this.props.show && !transition) {
	      // Otherwise handleHidden will call this.
	      this.onHide();
	    } else if (!prevProps.show && this.props.show) {
	      this.onShow();
	    }
	  },
	  componentWillUnmount: function componentWillUnmount() {
	    var _props3 = this.props;
	    var show = _props3.show;
	    var transition = _props3.transition;


	    if (show || transition && !this.state.exited) {
	      this.onHide();
	    }
	  },
	  onShow: function onShow() {
	    var doc = (0, _ownerDocument2.default)(this);
	    var container = (0, _getContainer2.default)(this.props.container, doc.body);

	    modalManager.add(this, container, this.props.containerClassName);

	    this._onDocumentKeyupListener = (0, _addEventListener2.default)(doc, 'keyup', this.handleDocumentKeyUp);

	    this._onFocusinListener = (0, _addFocusListener2.default)(this.enforceFocus);

	    this.focus();

	    if (this.props.onShow) {
	      this.props.onShow();
	    }
	  },
	  onHide: function onHide() {
	    modalManager.remove(this);

	    this._onDocumentKeyupListener.remove();

	    this._onFocusinListener.remove();

	    this.restoreLastFocus();
	  },
	  setMountNode: function setMountNode(ref) {
	    this.mountNode = ref ? ref.getMountNode() : ref;
	  },
	  handleHidden: function handleHidden() {
	    this.setState({ exited: true });
	    this.onHide();

	    if (this.props.onExited) {
	      var _props4;

	      (_props4 = this.props).onExited.apply(_props4, arguments);
	    }
	  },
	  handleBackdropClick: function handleBackdropClick(e) {
	    if (e.target !== e.currentTarget) {
	      return;
	    }

	    if (this.props.onBackdropClick) {
	      this.props.onBackdropClick(e);
	    }

	    if (this.props.backdrop === true) {
	      this.props.onHide();
	    }
	  },
	  handleDocumentKeyUp: function handleDocumentKeyUp(e) {
	    if (this.props.keyboard && e.keyCode === 27 && this.isTopModal()) {
	      if (this.props.onEscapeKeyUp) {
	        this.props.onEscapeKeyUp(e);
	      }
	      this.props.onHide();
	    }
	  },
	  checkForFocus: function checkForFocus() {
	    if (_inDOM2.default) {
	      this.lastFocus = (0, _activeElement2.default)();
	    }
	  },
	  focus: function focus() {
	    var autoFocus = this.props.autoFocus;
	    var modalContent = this.getDialogElement();
	    var current = (0, _activeElement2.default)((0, _ownerDocument2.default)(this));
	    var focusInModal = current && (0, _contains2.default)(modalContent, current);

	    if (modalContent && autoFocus && !focusInModal) {
	      this.lastFocus = current;

	      if (!modalContent.hasAttribute('tabIndex')) {
	        modalContent.setAttribute('tabIndex', -1);
	        (0, _warning2.default)(false, 'The modal content node does not accept focus. ' + 'For the benefit of assistive technologies, the tabIndex of the node is being set to "-1".');
	      }

	      modalContent.focus();
	    }
	  },
	  restoreLastFocus: function restoreLastFocus() {
	    // Support: <=IE11 doesn't support `focus()` on svg elements (RB: #917)
	    if (this.lastFocus && this.lastFocus.focus) {
	      this.lastFocus.focus();
	      this.lastFocus = null;
	    }
	  },
	  enforceFocus: function enforceFocus() {
	    var enforceFocus = this.props.enforceFocus;


	    if (!enforceFocus || !this.isMounted() || !this.isTopModal()) {
	      return;
	    }

	    var active = (0, _activeElement2.default)((0, _ownerDocument2.default)(this));
	    var modal = this.getDialogElement();

	    if (modal && modal !== active && !(0, _contains2.default)(modal, active)) {
	      modal.focus();
	    }
	  },


	  //instead of a ref, which might conflict with one the parent applied.
	  getDialogElement: function getDialogElement() {
	    var node = this.refs.modal;
	    return node && node.lastChild;
	  },
	  isTopModal: function isTopModal() {
	    return modalManager.isTopModal(this);
	  }
	});

	Modal.manager = modalManager;

	exports.default = Modal;
	module.exports = exports['default'];

/***/ },
/* 444 */
/***/ function(module, exports, __webpack_require__) {

	'use strict';

	exports.__esModule = true;

	var _common = __webpack_require__(358);

	/**
	 * Checks whether a prop provides a DOM element
	 *
	 * The element can be provided in two forms:
	 * - Directly passed
	 * - Or passed an object that has a `render` method
	 *
	 * @param props
	 * @param propName
	 * @param componentName
	 * @returns {Error|undefined}
	 */

	function validate(props, propName, componentName) {
	  if (typeof props[propName] !== 'object' || typeof props[propName].render !== 'function' && props[propName].nodeType !== 1) {
	    return new Error(_common.errMsg(props, propName, componentName, ', expected a DOM element or an object that has a `render` method'));
	  }
	}

	exports['default'] = _common.createChainableTypeChecker(validate);
	module.exports = exports['default'];

/***/ },
/* 445 */
/***/ function(module, exports, __webpack_require__) {

	'use strict';

	Object.defineProperty(exports, "__esModule", {
	  value: true
	});

	var _react = __webpack_require__(2);

	var _react2 = _interopRequireDefault(_react);

	var _reactDom = __webpack_require__(34);

	var _reactDom2 = _interopRequireDefault(_reactDom);

	var _mountable = __webpack_require__(444);

	var _mountable2 = _interopRequireDefault(_mountable);

	var _ownerDocument = __webpack_require__(409);

	var _ownerDocument2 = _interopRequireDefault(_ownerDocument);

	var _getContainer = __webpack_require__(446);

	var _getContainer2 = _interopRequireDefault(_getContainer);

	function _interopRequireDefault(obj) { return obj && obj.__esModule ? obj : { default: obj }; }

	/**
	 * The `<Portal/>` component renders its children into a new "subtree" outside of current component hierarchy.
	 * You can think of it as a declarative `appendChild()`, or jQuery's `$.fn.appendTo()`.
	 * The children of `<Portal/>` component will be appended to the `container` specified.
	 */
	var Portal = _react2.default.createClass({

	  displayName: 'Portal',

	  propTypes: {
	    /**
	     * A Node, Component instance, or function that returns either. The `container` will have the Portal children
	     * appended to it.
	     */
	    container: _react2.default.PropTypes.oneOfType([_mountable2.default, _react2.default.PropTypes.func])
	  },

	  componentDidMount: function componentDidMount() {
	    this._renderOverlay();
	  },
	  componentDidUpdate: function componentDidUpdate() {
	    this._renderOverlay();
	  },
	  componentWillReceiveProps: function componentWillReceiveProps(nextProps) {
	    if (this._overlayTarget && nextProps.container !== this.props.container) {
	      this._portalContainerNode.removeChild(this._overlayTarget);
	      this._portalContainerNode = (0, _getContainer2.default)(nextProps.container, (0, _ownerDocument2.default)(this).body);
	      this._portalContainerNode.appendChild(this._overlayTarget);
	    }
	  },
	  componentWillUnmount: function componentWillUnmount() {
	    this._unrenderOverlay();
	    this._unmountOverlayTarget();
	  },
	  _mountOverlayTarget: function _mountOverlayTarget() {
	    if (!this._overlayTarget) {
	      this._overlayTarget = document.createElement('div');
	      this._portalContainerNode = (0, _getContainer2.default)(this.props.container, (0, _ownerDocument2.default)(this).body);
	      this._portalContainerNode.appendChild(this._overlayTarget);
	    }
	  },
	  _unmountOverlayTarget: function _unmountOverlayTarget() {
	    if (this._overlayTarget) {
	      this._portalContainerNode.removeChild(this._overlayTarget);
	      this._overlayTarget = null;
	    }
	    this._portalContainerNode = null;
	  },
	  _renderOverlay: function _renderOverlay() {

	    var overlay = !this.props.children ? null : _react2.default.Children.only(this.props.children);

	    // Save reference for future access.
	    if (overlay !== null) {
	      this._mountOverlayTarget();
	      this._overlayInstance = _reactDom2.default.unstable_renderSubtreeIntoContainer(this, overlay, this._overlayTarget);
	    } else {
	      // Unrender if the component is null for transitions to null
	      this._unrenderOverlay();
	      this._unmountOverlayTarget();
	    }
	  },
	  _unrenderOverlay: function _unrenderOverlay() {
	    if (this._overlayTarget) {
	      _reactDom2.default.unmountComponentAtNode(this._overlayTarget);
	      this._overlayInstance = null;
	    }
	  },
	  render: function render() {
	    return null;
	  },
	  getMountNode: function getMountNode() {
	    return this._overlayTarget;
	  },
	  getOverlayDOMNode: function getOverlayDOMNode() {
	    if (!this.isMounted()) {
	      throw new Error('getOverlayDOMNode(): A component must be mounted to have a DOM node.');
	    }

	    if (this._overlayInstance) {
	      if (this._overlayInstance.getWrappedDOMNode) {
	        return this._overlayInstance.getWrappedDOMNode();
	      } else {
	        return _reactDom2.default.findDOMNode(this._overlayInstance);
	      }
	    }

	    return null;
	  }
	});

	exports.default = Portal;
	module.exports = exports['default'];

/***/ },
/* 446 */
/***/ function(module, exports, __webpack_require__) {

	'use strict';

	Object.defineProperty(exports, "__esModule", {
	  value: true
	});
	exports.default = getContainer;

	var _reactDom = __webpack_require__(34);

	var _reactDom2 = _interopRequireDefault(_reactDom);

	function _interopRequireDefault(obj) { return obj && obj.__esModule ? obj : { default: obj }; }

	function getContainer(container, defaultContainer) {
	  container = typeof container === 'function' ? container() : container;
	  return _reactDom2.default.findDOMNode(container) || defaultContainer;
	}
	module.exports = exports['default'];

/***/ },
/* 447 */
/***/ function(module, exports, __webpack_require__) {

	'use strict';

	Object.defineProperty(exports, "__esModule", {
	  value: true
	});

	var _createClass = function () { function defineProperties(target, props) { for (var i = 0; i < props.length; i++) { var descriptor = props[i]; descriptor.enumerable = descriptor.enumerable || false; descriptor.configurable = true; if ("value" in descriptor) descriptor.writable = true; Object.defineProperty(target, descriptor.key, descriptor); } } return function (Constructor, protoProps, staticProps) { if (protoProps) defineProperties(Constructor.prototype, protoProps); if (staticProps) defineProperties(Constructor, staticProps); return Constructor; }; }();

	var _style = __webpack_require__(374);

	var _style2 = _interopRequireDefault(_style);

	var _class = __webpack_require__(448);

	var _class2 = _interopRequireDefault(_class);

	var _scrollbarSize = __webpack_require__(442);

	var _scrollbarSize2 = _interopRequireDefault(_scrollbarSize);

	var _isOverflowing = __webpack_require__(452);

	var _isOverflowing2 = _interopRequireDefault(_isOverflowing);

	var _manageAriaHidden = __webpack_require__(454);

	function _interopRequireDefault(obj) { return obj && obj.__esModule ? obj : { default: obj }; }

	function _classCallCheck(instance, Constructor) { if (!(instance instanceof Constructor)) { throw new TypeError("Cannot call a class as a function"); } }

	function findIndexOf(arr, cb) {
	  var idx = -1;
	  arr.some(function (d, i) {
	    if (cb(d, i)) {
	      idx = i;
	      return true;
	    }
	  });
	  return idx;
	}

	function findContainer(data, modal) {
	  return findIndexOf(data, function (d) {
	    return d.modals.indexOf(modal) !== -1;
	  });
	}

	/**
	 * Proper state managment for containers and the modals in those containers.
	 *
	 * @internal Used by the Modal to ensure proper styling of containers.
	 */

	var ModalManager = function () {
	  function ModalManager() {
	    var hideSiblingNodes = arguments.length <= 0 || arguments[0] === undefined ? true : arguments[0];

	    _classCallCheck(this, ModalManager);

	    this.hideSiblingNodes = hideSiblingNodes;
	    this.modals = [];
	    this.containers = [];
	    this.data = [];
	  }

	  _createClass(ModalManager, [{
	    key: 'add',
	    value: function add(modal, container, className) {
	      var modalIdx = this.modals.indexOf(modal);
	      var containerIdx = this.containers.indexOf(container);

	      if (modalIdx !== -1) {
	        return modalIdx;
	      }

	      modalIdx = this.modals.length;
	      this.modals.push(modal);

	      if (this.hideSiblingNodes) {
	        (0, _manageAriaHidden.hideSiblings)(container, modal.mountNode);
	      }

	      if (containerIdx !== -1) {
	        this.data[containerIdx].modals.push(modal);
	        return modalIdx;
	      }

	      var data = {
	        modals: [modal],
	        //right now only the first modal of a container will have its classes applied
	        classes: className ? className.split(/\s+/) : [],
	        //we are only interested in the actual `style` here becasue we will override it
	        style: {
	          overflow: container.style.overflow,
	          paddingRight: container.style.paddingRight
	        }
	      };

	      var style = { overflow: 'hidden' };

	      data.overflowing = (0, _isOverflowing2.default)(container);

	      if (data.overflowing) {
	        // use computed style, here to get the real padding
	        // to add our scrollbar width
	        style.paddingRight = parseInt((0, _style2.default)(container, 'paddingRight') || 0, 10) + (0, _scrollbarSize2.default)() + 'px';
	      }

	      (0, _style2.default)(container, style);

	      data.classes.forEach(_class2.default.addClass.bind(null, container));

	      this.containers.push(container);
	      this.data.push(data);

	      return modalIdx;
	    }
	  }, {
	    key: 'remove',
	    value: function remove(modal) {
	      var modalIdx = this.modals.indexOf(modal);

	      if (modalIdx === -1) {
	        return;
	      }

	      var containerIdx = findContainer(this.data, modal);
	      var data = this.data[containerIdx];
	      var container = this.containers[containerIdx];

	      data.modals.splice(data.modals.indexOf(modal), 1);

	      this.modals.splice(modalIdx, 1);

	      // if that was the last modal in a container,
	      // clean up the container stylinhg.
	      if (data.modals.length === 0) {
	        Object.keys(data.style).forEach(function (key) {
	          return container.style[key] = data.style[key];
	        });

	        data.classes.forEach(_class2.default.removeClass.bind(null, container));

	        if (this.hideSiblingNodes) {
	          (0, _manageAriaHidden.showSiblings)(container, modal.mountNode);
	        }
	        this.containers.splice(containerIdx, 1);
	        this.data.splice(containerIdx, 1);
	      } else if (this.hideSiblingNodes) {
	        //otherwise make sure the next top modal is visible to a SR
	        (0, _manageAriaHidden.ariaHidden)(false, data.modals[data.modals.length - 1].mountNode);
	      }
	    }
	  }, {
	    key: 'isTopModal',
	    value: function isTopModal(modal) {
	      return !!this.modals.length && this.modals[this.modals.length - 1] === modal;
	    }
	  }]);

	  return ModalManager;
	}();

	exports.default = ModalManager;
	module.exports = exports['default'];

/***/ },
/* 448 */
/***/ function(module, exports, __webpack_require__) {

	'use strict';

	module.exports = {
	  addClass: __webpack_require__(449),
	  removeClass: __webpack_require__(451),
	  hasClass: __webpack_require__(450)
	};

/***/ },
/* 449 */
/***/ function(module, exports, __webpack_require__) {

	'use strict';
	var hasClass = __webpack_require__(450);

	module.exports = function addClass(element, className) {
	  if (element.classList) element.classList.add(className);else if (!hasClass(element)) element.className = element.className + ' ' + className;
	};

/***/ },
/* 450 */
/***/ function(module, exports) {

	'use strict';
	module.exports = function hasClass(element, className) {
	  if (element.classList) return !!className && element.classList.contains(className);else return (' ' + element.className + ' ').indexOf(' ' + className + ' ') !== -1;
	};

/***/ },
/* 451 */
/***/ function(module, exports) {

	'use strict';

	module.exports = function removeClass(element, className) {
	  if (element.classList) element.classList.remove(className);else element.className = element.className.replace(new RegExp('(^|\\s)' + className + '(?:\\s|$)', 'g'), '$1').replace(/\s+/g, ' ').replace(/^\s*|\s*$/g, '');
	};

/***/ },
/* 452 */
/***/ function(module, exports, __webpack_require__) {

	'use strict';

	Object.defineProperty(exports, "__esModule", {
	  value: true
	});
	exports.default = isOverflowing;

	var _isWindow = __webpack_require__(453);

	var _isWindow2 = _interopRequireDefault(_isWindow);

	var _ownerDocument = __webpack_require__(388);

	var _ownerDocument2 = _interopRequireDefault(_ownerDocument);

	function _interopRequireDefault(obj) { return obj && obj.__esModule ? obj : { default: obj }; }

	function isBody(node) {
	  return node && node.tagName.toLowerCase() === 'body';
	}

	function bodyIsOverflowing(node) {
	  var doc = (0, _ownerDocument2.default)(node);
	  var win = (0, _isWindow2.default)(doc);
	  var fullWidth = win.innerWidth;

	  // Support: ie8, no innerWidth
	  if (!fullWidth) {
	    var documentElementRect = doc.documentElement.getBoundingClientRect();
	    fullWidth = documentElementRect.right - Math.abs(documentElementRect.left);
	  }

	  return doc.body.clientWidth < fullWidth;
	}

	function isOverflowing(container) {
	  var win = (0, _isWindow2.default)(container);

	  return win || isBody(container) ? bodyIsOverflowing(container) : container.scrollHeight > container.clientHeight;
	}
	module.exports = exports['default'];

/***/ },
/* 453 */
/***/ function(module, exports) {

	'use strict';

	module.exports = function getWindow(node) {
	  return node === node.window ? node : node.nodeType === 9 ? node.defaultView || node.parentWindow : false;
	};

/***/ },
/* 454 */
/***/ function(module, exports) {

	'use strict';

	Object.defineProperty(exports, "__esModule", {
	  value: true
	});
	exports.ariaHidden = ariaHidden;
	exports.hideSiblings = hideSiblings;
	exports.showSiblings = showSiblings;

	var BLACKLIST = ['template', 'script', 'style'];

	var isHidable = function isHidable(_ref) {
	  var nodeType = _ref.nodeType;
	  var tagName = _ref.tagName;
	  return nodeType === 1 && BLACKLIST.indexOf(tagName.toLowerCase()) === -1;
	};

	var siblings = function siblings(container, mount, cb) {
	  mount = [].concat(mount);

	  [].forEach.call(container.children, function (node) {
	    if (mount.indexOf(node) === -1 && isHidable(node)) {
	      cb(node);
	    }
	  });
	};

	function ariaHidden(show, node) {
	  if (!node) {
	    return;
	  }
	  if (show) {
	    node.setAttribute('aria-hidden', 'true');
	  } else {
	    node.removeAttribute('aria-hidden');
	  }
	}

	function hideSiblings(container, mountNode) {
	  siblings(container, mountNode, function (node) {
	    return ariaHidden(true, node);
	  });
	}

	function showSiblings(container, mountNode) {
	  siblings(container, mountNode, function (node) {
	    return ariaHidden(false, node);
	  });
	}

/***/ },
/* 455 */
/***/ function(module, exports) {

	'use strict';

	Object.defineProperty(exports, "__esModule", {
	  value: true
	});
	exports.default = addFocusListener;
	/**
	 * Firefox doesn't have a focusin event so using capture is easiest way to get bubbling
	 * IE8 can't do addEventListener, but does have onfocusin, so we use that in ie8
	 *
	 * We only allow one Listener at a time to avoid stack overflows
	 */
	function addFocusListener(handler) {
	  var useFocusin = !document.addEventListener;
	  var remove = void 0;

	  if (useFocusin) {
	    document.attachEvent('onfocusin', handler);
	    remove = function remove() {
	      return document.detachEvent('onfocusin', handler);
	    };
	  } else {
	    document.addEventListener('focus', handler, true);
	    remove = function remove() {
	      return document.removeEventListener('focus', handler, true);
	    };
	  }

	  return { remove: remove };
	}
	module.exports = exports['default'];

/***/ },
/* 456 */
/***/ function(module, exports, __webpack_require__) {

	'use strict';

	var _inherits = __webpack_require__(254)['default'];

	var _classCallCheck = __webpack_require__(330)['default'];

	var _objectWithoutProperties = __webpack_require__(338)['default'];

	var _extends = __webpack_require__(332)['default'];

	var _interopRequireDefault = __webpack_require__(249)['default'];

	exports.__esModule = true;

	var _classnames = __webpack_require__(340);

	var _classnames2 = _interopRequireDefault(_classnames);

	var _react = __webpack_require__(2);

	var _react2 = _interopRequireDefault(_react);

	var _utilsBootstrapUtils = __webpack_require__(341);

	var ModalBody = (function (_React$Component) {
	  _inherits(ModalBody, _React$Component);

	  function ModalBody() {
	    _classCallCheck(this, ModalBody);

	    _React$Component.apply(this, arguments);
	  }

	  ModalBody.prototype.render = function render() {
	    var _props = this.props;
	    var className = _props.className;

	    var props = _objectWithoutProperties(_props, ['className']);

	    var _splitBsProps = _utilsBootstrapUtils.splitBsProps(props);

	    var bsProps = _splitBsProps[0];
	    var elementProps = _splitBsProps[1];

	    var classes = _utilsBootstrapUtils.getClassSet(bsProps);

	    return _react2['default'].createElement('div', _extends({}, elementProps, {
	      className: _classnames2['default'](className, classes)
	    }));
	  };

	  return ModalBody;
	})(_react2['default'].Component);

	exports['default'] = _utilsBootstrapUtils.bsClass('modal-body', ModalBody);
	module.exports = exports['default'];

/***/ },
/* 457 */
/***/ function(module, exports, __webpack_require__) {

	'use strict';

	var _inherits = __webpack_require__(254)['default'];

	var _classCallCheck = __webpack_require__(330)['default'];

	var _extends = __webpack_require__(332)['default'];

	var _objectWithoutProperties = __webpack_require__(338)['default'];

	var _interopRequireDefault = __webpack_require__(249)['default'];

	exports.__esModule = true;

	var _classnames = __webpack_require__(340);

	var _classnames2 = _interopRequireDefault(_classnames);

	var _react = __webpack_require__(2);

	var _react2 = _interopRequireDefault(_react);

	var _utilsBootstrapUtils = __webpack_require__(341);

	var _utilsStyleConfig = __webpack_require__(346);

	var propTypes = {
	  /**
	   * A css class to apply to the Modal dialog DOM node.
	   */
	  dialogClassName: _react2['default'].PropTypes.string
	};

	var ModalDialog = (function (_React$Component) {
	  _inherits(ModalDialog, _React$Component);

	  function ModalDialog() {
	    _classCallCheck(this, ModalDialog);

	    _React$Component.apply(this, arguments);
	  }

	  ModalDialog.prototype.render = function render() {
	    var _extends2;

	    var _props = this.props;
	    var dialogClassName = _props.dialogClassName;
	    var className = _props.className;
	    var style = _props.style;
	    var children = _props.children;

	    var props = _objectWithoutProperties(_props, ['dialogClassName', 'className', 'style', 'children']);

	    var _splitBsProps = _utilsBootstrapUtils.splitBsProps(props);

	    var bsProps = _splitBsProps[0];
	    var elementProps = _splitBsProps[1];

	    var bsClassName = _utilsBootstrapUtils.prefix(bsProps);

	    var modalStyle = _extends({ display: 'block' }, style);

	    var dialogClasses = _extends({}, _utilsBootstrapUtils.getClassSet(bsProps), (_extends2 = {}, _extends2[bsClassName] = false, _extends2[_utilsBootstrapUtils.prefix(bsProps, 'dialog')] = true, _extends2));

	    return _react2['default'].createElement(
	      'div',
	      _extends({}, elementProps, {
	        tabIndex: '-1',
	        role: 'dialog',
	        style: modalStyle,
	        className: _classnames2['default'](className, bsClassName)
	      }),
	      _react2['default'].createElement(
	        'div',
	        { className: _classnames2['default'](dialogClassName, dialogClasses) },
	        _react2['default'].createElement(
	          'div',
	          { className: _utilsBootstrapUtils.prefix(bsProps, 'content'), role: 'document' },
	          children
	        )
	      )
	    );
	  };

	  return ModalDialog;
	})(_react2['default'].Component);

	ModalDialog.propTypes = propTypes;

	exports['default'] = _utilsBootstrapUtils.bsClass('modal', _utilsBootstrapUtils.bsSizes([_utilsStyleConfig.Size.LARGE, _utilsStyleConfig.Size.SMALL], ModalDialog));
	module.exports = exports['default'];

/***/ },
/* 458 */
/***/ function(module, exports, __webpack_require__) {

	'use strict';

	var _inherits = __webpack_require__(254)['default'];

	var _classCallCheck = __webpack_require__(330)['default'];

	var _objectWithoutProperties = __webpack_require__(338)['default'];

	var _extends = __webpack_require__(332)['default'];

	var _interopRequireDefault = __webpack_require__(249)['default'];

	exports.__esModule = true;

	var _classnames = __webpack_require__(340);

	var _classnames2 = _interopRequireDefault(_classnames);

	var _react = __webpack_require__(2);

	var _react2 = _interopRequireDefault(_react);

	var _utilsBootstrapUtils = __webpack_require__(341);

	var ModalFooter = (function (_React$Component) {
	  _inherits(ModalFooter, _React$Component);

	  function ModalFooter() {
	    _classCallCheck(this, ModalFooter);

	    _React$Component.apply(this, arguments);
	  }

	  ModalFooter.prototype.render = function render() {
	    var _props = this.props;
	    var className = _props.className;

	    var props = _objectWithoutProperties(_props, ['className']);

	    var _splitBsProps = _utilsBootstrapUtils.splitBsProps(props);

	    var bsProps = _splitBsProps[0];
	    var elementProps = _splitBsProps[1];

	    var classes = _utilsBootstrapUtils.getClassSet(bsProps);

	    return _react2['default'].createElement('div', _extends({}, elementProps, {
	      className: _classnames2['default'](className, classes)
	    }));
	  };

	  return ModalFooter;
	})(_react2['default'].Component);

	exports['default'] = _utilsBootstrapUtils.bsClass('modal-footer', ModalFooter);
	module.exports = exports['default'];

/***/ },
/* 459 */
/***/ function(module, exports, __webpack_require__) {

	'use strict';

	var _inherits = __webpack_require__(254)['default'];

	var _classCallCheck = __webpack_require__(330)['default'];

	var _objectWithoutProperties = __webpack_require__(338)['default'];

	var _extends = __webpack_require__(332)['default'];

	var _interopRequireDefault = __webpack_require__(249)['default'];

	exports.__esModule = true;

	var _classnames = __webpack_require__(340);

	var _classnames2 = _interopRequireDefault(_classnames);

	var _react = __webpack_require__(2);

	var _react2 = _interopRequireDefault(_react);

	var _utilsBootstrapUtils = __webpack_require__(341);

	var _utilsCreateChainedFunction = __webpack_require__(347);

	var _utilsCreateChainedFunction2 = _interopRequireDefault(_utilsCreateChainedFunction);

	// TODO: `aria-label` should be `closeLabel`.

	var propTypes = {
	  /**
	   * The 'aria-label' attribute provides an accessible label for the close
	   * button. It is used for Assistive Technology when the label text is not
	   * readable.
	   */
	  'aria-label': _react2['default'].PropTypes.string,

	  /**
	   * Specify whether the Component should contain a close button
	   */
	  closeButton: _react2['default'].PropTypes.bool,

	  /**
	   * A Callback fired when the close button is clicked. If used directly inside
	   * a Modal component, the onHide will automatically be propagated up to the
	   * parent Modal `onHide`.
	   */
	  onHide: _react2['default'].PropTypes.func
	};

	var defaultProps = {
	  'aria-label': 'Close',
	  closeButton: false
	};

	var contextTypes = {
	  $bs_modal: _react2['default'].PropTypes.shape({
	    onHide: _react2['default'].PropTypes.func
	  })
	};

	var ModalHeader = (function (_React$Component) {
	  _inherits(ModalHeader, _React$Component);

	  function ModalHeader() {
	    _classCallCheck(this, ModalHeader);

	    _React$Component.apply(this, arguments);
	  }

	  ModalHeader.prototype.render = function render() {
	    var _props = this.props;
	    var label = _props['aria-label'];
	    var closeButton = _props.closeButton;
	    var onHide = _props.onHide;
	    var className = _props.className;
	    var children = _props.children;

	    var props = _objectWithoutProperties(_props, ['aria-label', 'closeButton', 'onHide', 'className', 'children']);

	    var modal = this.context.$bs_modal;

	    var _splitBsProps = _utilsBootstrapUtils.splitBsProps(props);

	    var bsProps = _splitBsProps[0];
	    var elementProps = _splitBsProps[1];

	    var classes = _utilsBootstrapUtils.getClassSet(bsProps);

	    return _react2['default'].createElement(
	      'div',
	      _extends({}, elementProps, {
	        className: _classnames2['default'](className, classes)
	      }),
	      closeButton && _react2['default'].createElement(
	        'button',
	        {
	          type: 'button',
	          className: 'close',
	          'aria-label': label,
	          onClick: _utilsCreateChainedFunction2['default'](modal.onHide, onHide)
	        },
	        _react2['default'].createElement(
	          'span',
	          { 'aria-hidden': 'true' },
	          '×'
	        )
	      ),
	      children
	    );
	  };

	  return ModalHeader;
	})(_react2['default'].Component);

	ModalHeader.propTypes = propTypes;
	ModalHeader.defaultProps = defaultProps;
	ModalHeader.contextTypes = contextTypes;

	exports['default'] = _utilsBootstrapUtils.bsClass('modal-header', ModalHeader);
	module.exports = exports['default'];

/***/ },
/* 460 */
/***/ function(module, exports, __webpack_require__) {

	'use strict';

	var _inherits = __webpack_require__(254)['default'];

	var _classCallCheck = __webpack_require__(330)['default'];

	var _objectWithoutProperties = __webpack_require__(338)['default'];

	var _extends = __webpack_require__(332)['default'];

	var _interopRequireDefault = __webpack_require__(249)['default'];

	exports.__esModule = true;

	var _classnames = __webpack_require__(340);

	var _classnames2 = _interopRequireDefault(_classnames);

	var _react = __webpack_require__(2);

	var _react2 = _interopRequireDefault(_react);

	var _utilsBootstrapUtils = __webpack_require__(341);

	var ModalTitle = (function (_React$Component) {
	  _inherits(ModalTitle, _React$Component);

	  function ModalTitle() {
	    _classCallCheck(this, ModalTitle);

	    _React$Component.apply(this, arguments);
	  }

	  ModalTitle.prototype.render = function render() {
	    var _props = this.props;
	    var className = _props.className;

	    var props = _objectWithoutProperties(_props, ['className']);

	    var _splitBsProps = _utilsBootstrapUtils.splitBsProps(props);

	    var bsProps = _splitBsProps[0];
	    var elementProps = _splitBsProps[1];

	    var classes = _utilsBootstrapUtils.getClassSet(bsProps);

	    return _react2['default'].createElement('h4', _extends({}, elementProps, {
	      className: _classnames2['default'](className, classes)
	    }));
	  };

	  return ModalTitle;
	})(_react2['default'].Component);

	exports['default'] = _utilsBootstrapUtils.bsClass('modal-title', ModalTitle);
	module.exports = exports['default'];

/***/ },
/* 461 */
/***/ function(module, exports, __webpack_require__) {

	/* WEBPACK VAR INJECTION */(function(process) {'use strict';

	var _inherits = __webpack_require__(254)['default'];

	var _classCallCheck = __webpack_require__(330)['default'];

	var _extends = __webpack_require__(332)['default'];

	var _objectWithoutProperties = __webpack_require__(338)['default'];

	var _interopRequireDefault = __webpack_require__(249)['default'];

	exports.__esModule = true;

	var _classnames = __webpack_require__(340);

	var _classnames2 = _interopRequireDefault(_classnames);

	var _keycode = __webpack_require__(390);

	var _keycode2 = _interopRequireDefault(_keycode);

	var _react = __webpack_require__(2);

	var _react2 = _interopRequireDefault(_react);

	var _reactDom = __webpack_require__(34);

	var _reactDom2 = _interopRequireDefault(_reactDom);

	var _reactPropTypesLibAll = __webpack_require__(361);

	var _reactPropTypesLibAll2 = _interopRequireDefault(_reactPropTypesLibAll);

	var _warning = __webpack_require__(178);

	var _warning2 = _interopRequireDefault(_warning);

	var _utilsBootstrapUtils = __webpack_require__(341);

	var _utilsCreateChainedFunction = __webpack_require__(347);

	var _utilsCreateChainedFunction2 = _interopRequireDefault(_utilsCreateChainedFunction);

	var _utilsValidComponentChildren = __webpack_require__(348);

	var _utilsValidComponentChildren2 = _interopRequireDefault(_utilsValidComponentChildren);

	// TODO: Should we expose `<NavItem>` as `<Nav.Item>`?

	// TODO: This `bsStyle` is very unlike the others. Should we rename it?

	// TODO: `pullRight` and `pullLeft` don't render right outside of `navbar`.
	// Consider renaming or replacing them.

	var propTypes = {
	  /**
	   * Marks the NavItem with a matching `eventKey` as active. Has a
	   * higher precedence over `activeHref`.
	   */
	  activeKey: _react2['default'].PropTypes.any,

	  /**
	   * Marks the child NavItem with a matching `href` prop as active.
	   */
	  activeHref: _react2['default'].PropTypes.string,

	  /**
	   * NavItems are be positioned vertically.
	   */
	  stacked: _react2['default'].PropTypes.bool,

	  justified: _reactPropTypesLibAll2['default'](_react2['default'].PropTypes.bool, function (_ref) {
	    var justified = _ref.justified;
	    var navbar = _ref.navbar;
	    return justified && navbar ? Error('justified navbar `Nav`s are not supported') : null;
	  }),

	  /**
	   * A callback fired when a NavItem is selected.
	   *
	   * ```js
	   * function (
	   * 	Any eventKey,
	   * 	SyntheticEvent event?
	   * )
	   * ```
	   */
	  onSelect: _react2['default'].PropTypes.func,

	  /**
	   * ARIA role for the Nav, in the context of a TabContainer, the default will
	   * be set to "tablist", but can be overridden by the Nav when set explicitly.
	   *
	   * When the role is set to "tablist" NavItem focus is managed according to
	   * the ARIA authoring practices for tabs:
	   * https://www.w3.org/TR/2013/WD-wai-aria-practices-20130307/#tabpanel
	   */
	  role: _react2['default'].PropTypes.string,

	  /**
	   * Apply styling an alignment for use in a Navbar. This prop will be set
	   * automatically when the Nav is used inside a Navbar.
	   */
	  navbar: _react2['default'].PropTypes.bool,

	  /**
	   * Float the Nav to the right. When `navbar` is `true` the appropriate
	   * contextual classes are added as well.
	   */
	  pullRight: _react2['default'].PropTypes.bool,

	  /**
	   * Float the Nav to the left. When `navbar` is `true` the appropriate
	   * contextual classes are added as well.
	   */
	  pullLeft: _react2['default'].PropTypes.bool
	};

	var defaultProps = {
	  justified: false,
	  pullRight: false,
	  pullLeft: false,
	  stacked: false
	};

	var contextTypes = {
	  $bs_navbar: _react2['default'].PropTypes.shape({
	    bsClass: _react2['default'].PropTypes.string
	  }),

	  $bs_tabContainer: _react2['default'].PropTypes.shape({
	    activeKey: _react2['default'].PropTypes.any,
	    onSelect: _react2['default'].PropTypes.func.isRequired,
	    getTabId: _react2['default'].PropTypes.func.isRequired,
	    getPaneId: _react2['default'].PropTypes.func.isRequired
	  })
	};

	var Nav = (function (_React$Component) {
	  _inherits(Nav, _React$Component);

	  function Nav() {
	    _classCallCheck(this, Nav);

	    _React$Component.apply(this, arguments);
	  }

	  Nav.prototype.componentDidUpdate = function componentDidUpdate() {
	    var _this = this;

	    if (!this._needsRefocus) {
	      return;
	    }

	    this._needsRefocus = false;

	    var children = this.props.children;

	    var activeChild = _utilsValidComponentChildren2['default'].find(children, function (child) {
	      return _this.isChildActive(child);
	    });

	    var childrenArray = _utilsValidComponentChildren2['default'].toArray(children);
	    var activeChildIndex = childrenArray.indexOf(activeChild);

	    var childNodes = _reactDom2['default'].findDOMNode(this).children;
	    var activeNode = childNodes && childNodes[activeChildIndex];

	    if (!activeNode || !activeNode.firstChild) {
	      return;
	    }

	    activeNode.firstChild.focus();
	  };

	  Nav.prototype.handleTabKeyDown = function handleTabKeyDown(onSelect, event) {
	    var nextActiveChild = undefined;

	    switch (event.keyCode) {
	      case _keycode2['default'].codes.left:
	      case _keycode2['default'].codes.up:
	        nextActiveChild = this.getNextActiveChild(-1);
	        break;
	      case _keycode2['default'].codes.right:
	      case _keycode2['default'].codes.down:
	        nextActiveChild = this.getNextActiveChild(1);
	        break;
	      default:
	        // It was a different key; don't handle this keypress.
	        return;
	    }

	    event.preventDefault();

	    if (onSelect && nextActiveChild && nextActiveChild.props.eventKey) {
	      onSelect(nextActiveChild.props.eventKey);
	    }

	    this._needsRefocus = true;
	  };

	  Nav.prototype.getNextActiveChild = function getNextActiveChild(offset) {
	    var _this2 = this;

	    var children = this.props.children;

	    var validChildren = children.filter(function (child) {
	      return child.props.eventKey && !child.props.disabled;
	    });

	    var activeChild = _utilsValidComponentChildren2['default'].find(children, function (child) {
	      return _this2.isChildActive(child);
	    });

	    // This assumes the active child is not disabled.
	    var activeChildIndex = validChildren.indexOf(activeChild);
	    if (activeChildIndex === -1) {
	      // Something has gone wrong. Select the first valid child we can find.
	      return validChildren[0];
	    }

	    var nextIndex = activeChildIndex + offset;
	    var numValidChildren = validChildren.length;

	    if (nextIndex >= numValidChildren) {
	      nextIndex = 0;
	    } else if (nextIndex < 0) {
	      nextIndex = numValidChildren - 1;
	    }

	    return validChildren[nextIndex];
	  };

	  Nav.prototype.isChildActive = function isChildActive(child) {
	    var _props = this.props;
	    var activeKey = _props.activeKey;
	    var activeHref = _props.activeHref;

	    var tabContainer = this.context.$bs_tabContainer;

	    if (tabContainer) {
	      var childKey = child.props.eventKey;

	      process.env.NODE_ENV !== 'production' ? _warning2['default'](!child.props.active, 'Specifying a `<NavItem>` `active` prop in the context of a ' + '`<TabContainer>` is not supported. Instead use `<TabContainer ' + ('activeKey={' + childKey + '} />`')) : undefined;

	      var active = childKey === tabContainer.activeKey;

	      // Only warn on the active child to avoid spamming the console.
	      process.env.NODE_ENV !== 'production' ? _warning2['default'](!active || activeKey == null && !activeHref, 'Specifying a `<Nav>` `activeKey` or `activeHref` in the context of ' + 'a `<TabContainer>` is not supported. Instead use `<TabContainer ' + ('activeKey={' + childKey + '} />`')) : undefined;

	      return active;
	    }

	    if (child.props.active) {
	      return true;
	    }

	    if (activeKey != null && child.props.eventKey === activeKey) {
	      return true;
	    }

	    if (activeHref && child.props.href === activeHref) {
	      return true;
	    }

	    return child.props.active;
	  };

	  Nav.prototype.getTabProps = function getTabProps(child, tabContainer, navRole, active, onSelect) {
	    var _this3 = this;

	    if (!tabContainer && navRole !== 'tablist') {
	      // No tab props here.
	      return null;
	    }

	    var _child$props = child.props;
	    var id = _child$props.id;
	    var controls = _child$props['aria-controls'];
	    var eventKey = _child$props.eventKey;
	    var role = _child$props.role;
	    var onKeyDown = _child$props.onKeyDown;
	    var tabIndex = _child$props.tabIndex;

	    if (tabContainer) {
	      process.env.NODE_ENV !== 'production' ? _warning2['default'](!id && !controls, 'In the context of a `<TabContainer>`, `<NavItem>`s are given ' + 'generated `id` and `aria-controls` attributes for the sake of ' + 'proper component accessibility. Any provided ones will be ignored. ' + 'To control these attributes directly, provide a `generateChildId` ' + 'prop to the parent `<TabContainer>`.') : undefined;

	      id = tabContainer.getTabId(eventKey);
	      controls = tabContainer.getPaneId(eventKey);
	    }

	    if (navRole === 'tablist') {
	      role = role || 'tab';
	      onKeyDown = _utilsCreateChainedFunction2['default'](function (event) {
	        return _this3.handleTabKeyDown(onSelect, event);
	      }, onKeyDown);
	      tabIndex = active ? tabIndex : -1;
	    }

	    return {
	      id: id,
	      role: role,
	      onKeyDown: onKeyDown,
	      'aria-controls': controls,
	      tabIndex: tabIndex
	    };
	  };

	  Nav.prototype.render = function render() {
	    var _extends2,
	        _this4 = this;

	    var _props2 = this.props;
	    var activeKey = _props2.activeKey;
	    var activeHref = _props2.activeHref;
	    var stacked = _props2.stacked;
	    var justified = _props2.justified;
	    var onSelect = _props2.onSelect;
	    var propsRole = _props2.role;
	    var propsNavbar = _props2.navbar;
	    var pullRight = _props2.pullRight;
	    var pullLeft = _props2.pullLeft;
	    var className = _props2.className;
	    var children = _props2.children;

	    var props = _objectWithoutProperties(_props2, ['activeKey', 'activeHref', 'stacked', 'justified', 'onSelect', 'role', 'navbar', 'pullRight', 'pullLeft', 'className', 'children']);

	    var tabContainer = this.context.$bs_tabContainer;
	    var role = propsRole || (tabContainer ? 'tablist' : null);

	    var _splitBsProps = _utilsBootstrapUtils.splitBsProps(props);

	    var bsProps = _splitBsProps[0];
	    var elementProps = _splitBsProps[1];

	    var classes = _extends({}, _utilsBootstrapUtils.getClassSet(bsProps), (_extends2 = {}, _extends2[_utilsBootstrapUtils.prefix(bsProps, 'stacked')] = stacked, _extends2[_utilsBootstrapUtils.prefix(bsProps, 'justified')] = justified, _extends2));

	    var navbar = propsNavbar != null ? propsNavbar : this.context.$bs_navbar;
	    var pullLeftClassName = undefined;
	    var pullRightClassName = undefined;

	    if (navbar) {
	      var navbarProps = this.context.$bs_navbar || { bsClass: 'navbar' };

	      classes[_utilsBootstrapUtils.prefix(navbarProps, 'nav')] = true;

	      pullRightClassName = _utilsBootstrapUtils.prefix(navbarProps, 'right');
	      pullLeftClassName = _utilsBootstrapUtils.prefix(navbarProps, 'left');
	    } else {
	      pullRightClassName = 'pull-right';
	      pullLeftClassName = 'pull-left';
	    }

	    classes[pullRightClassName] = pullRight;
	    classes[pullLeftClassName] = pullLeft;

	    return _react2['default'].createElement(
	      'ul',
	      _extends({}, elementProps, {
	        role: role,
	        className: _classnames2['default'](className, classes)
	      }),
	      _utilsValidComponentChildren2['default'].map(children, function (child) {
	        var active = _this4.isChildActive(child);
	        var childOnSelect = _utilsCreateChainedFunction2['default'](child.props.onSelect, onSelect, tabContainer && tabContainer.onSelect);

	        return _react.cloneElement(child, _extends({}, _this4.getTabProps(child, tabContainer, role, active, childOnSelect), {
	          active: active,
	          activeKey: activeKey,
	          activeHref: activeHref,
	          onSelect: childOnSelect
	        }));
	      })
	    );
	  };

	  return Nav;
	})(_react2['default'].Component);

	Nav.propTypes = propTypes;
	Nav.defaultProps = defaultProps;
	Nav.contextTypes = contextTypes;

	exports['default'] = _utilsBootstrapUtils.bsClass('nav', _utilsBootstrapUtils.bsStyles(['tabs', 'pills'], Nav));
	module.exports = exports['default'];
	/* WEBPACK VAR INJECTION */}.call(exports, __webpack_require__(4)))

/***/ },
/* 462 */
/***/ function(module, exports, __webpack_require__) {

	// TODO: Remove this pragma once we upgrade eslint-config-airbnb.
	/* eslint-disable react/no-multi-comp */

	'use strict';

	var _inherits = __webpack_require__(254)['default'];

	var _classCallCheck = __webpack_require__(330)['default'];

	var _extends = __webpack_require__(332)['default'];

	var _objectWithoutProperties = __webpack_require__(338)['default'];

	var _interopRequireDefault = __webpack_require__(249)['default'];

	exports.__esModule = true;

	var _classnames = __webpack_require__(340);

	var _classnames2 = _interopRequireDefault(_classnames);

	var _react = __webpack_require__(2);

	var _react2 = _interopRequireDefault(_react);

	var _reactPropTypesLibElementType = __webpack_require__(357);

	var _reactPropTypesLibElementType2 = _interopRequireDefault(_reactPropTypesLibElementType);

	var _uncontrollable = __webpack_require__(392);

	var _uncontrollable2 = _interopRequireDefault(_uncontrollable);

	var _Grid = __webpack_require__(420);

	var _Grid2 = _interopRequireDefault(_Grid);

	var _NavbarBrand = __webpack_require__(463);

	var _NavbarBrand2 = _interopRequireDefault(_NavbarBrand);

	var _NavbarCollapse = __webpack_require__(464);

	var _NavbarCollapse2 = _interopRequireDefault(_NavbarCollapse);

	var _NavbarHeader = __webpack_require__(465);

	var _NavbarHeader2 = _interopRequireDefault(_NavbarHeader);

	var _NavbarToggle = __webpack_require__(466);

	var _NavbarToggle2 = _interopRequireDefault(_NavbarToggle);

	var _utilsBootstrapUtils = __webpack_require__(341);

	var _utilsStyleConfig = __webpack_require__(346);

	var propTypes = {
	  /**
	   * Create a fixed navbar along the top of the screen, that scrolls with the
	   * page
	   */
	  fixedTop: _react2['default'].PropTypes.bool,
	  /**
	   * Create a fixed navbar along the bottom of the screen, that scrolls with
	   * the page
	   */
	  fixedBottom: _react2['default'].PropTypes.bool,
	  /**
	   * Create a full-width navbar that scrolls away with the page
	   */
	  staticTop: _react2['default'].PropTypes.bool,
	  /**
	   * An alternative dark visual style for the Navbar
	   */
	  inverse: _react2['default'].PropTypes.bool,
	  /**
	   * Allow the Navbar to fluidly adjust to the page or container width, instead
	   * of at the predefined screen breakpoints
	   */
	  fluid: _react2['default'].PropTypes.bool,

	  /**
	   * Set a custom element for this component.
	   */
	  componentClass: _reactPropTypesLibElementType2['default'],
	  /**
	   * A callback fired when the `<Navbar>` body collapses or expands. Fired when
	   * a `<Navbar.Toggle>` is clicked and called with the new `navExpanded`
	   * boolean value.
	   *
	   * @controllable navExpanded
	   */
	  onToggle: _react2['default'].PropTypes.func,

	  /**
	   * Explicitly set the visiblity of the navbar body
	   *
	   * @controllable onToggle
	   */
	  expanded: _react2['default'].PropTypes.bool,

	  role: _react2['default'].PropTypes.string
	};

	var defaultProps = {
	  componentClass: 'nav',
	  fixedTop: false,
	  fixedBottom: false,
	  staticTop: false,
	  inverse: false,
	  fluid: false
	};

	var childContextTypes = {
	  $bs_navbar: _react.PropTypes.shape({
	    bsClass: _react.PropTypes.string,
	    expanded: _react.PropTypes.bool,
	    onToggle: _react.PropTypes.func.isRequired
	  })
	};

	var Navbar = (function (_React$Component) {
	  _inherits(Navbar, _React$Component);

	  function Navbar(props, context) {
	    _classCallCheck(this, Navbar);

	    _React$Component.call(this, props, context);

	    this.handleToggle = this.handleToggle.bind(this);
	  }

	  Navbar.prototype.getChildContext = function getChildContext() {
	    var _props = this.props;
	    var bsClass = _props.bsClass;
	    var expanded = _props.expanded;

	    return {
	      $bs_navbar: {
	        bsClass: bsClass,
	        expanded: expanded,
	        onToggle: this.handleToggle
	      }
	    };
	  };

	  Navbar.prototype.handleToggle = function handleToggle() {
	    var _props2 = this.props;
	    var onToggle = _props2.onToggle;
	    var expanded = _props2.expanded;

	    onToggle(!expanded);
	  };

	  Navbar.prototype.render = function render() {
	    var _extends2;

	    var _props3 = this.props;
	    var Component = _props3.componentClass;
	    var fixedTop = _props3.fixedTop;
	    var fixedBottom = _props3.fixedBottom;
	    var staticTop = _props3.staticTop;
	    var inverse = _props3.inverse;
	    var fluid = _props3.fluid;
	    var className = _props3.className;
	    var children = _props3.children;

	    var props = _objectWithoutProperties(_props3, ['componentClass', 'fixedTop', 'fixedBottom', 'staticTop', 'inverse', 'fluid', 'className', 'children']);

	    var _splitBsPropsAndOmit = _utilsBootstrapUtils.splitBsPropsAndOmit(props, ['expanded', 'onToggle']);

	    var bsProps = _splitBsPropsAndOmit[0];
	    var elementProps = _splitBsPropsAndOmit[1];

	    // will result in some false positives but that seems better
	    // than false negatives. strict `undefined` check allows explicit
	    // "nulling" of the role if the user really doesn't want one
	    if (elementProps.role === undefined && Component !== 'nav') {
	      elementProps.role = 'navigation';
	    }

	    if (inverse) {
	      bsProps.bsStyle = _utilsStyleConfig.Style.INVERSE;
	    }

	    var classes = _extends({}, _utilsBootstrapUtils.getClassSet(bsProps), (_extends2 = {}, _extends2[_utilsBootstrapUtils.prefix(bsProps, 'fixed-top')] = fixedTop, _extends2[_utilsBootstrapUtils.prefix(bsProps, 'fixed-bottom')] = fixedBottom, _extends2[_utilsBootstrapUtils.prefix(bsProps, 'static-top')] = staticTop, _extends2));

	    return _react2['default'].createElement(
	      Component,
	      _extends({}, elementProps, {
	        className: _classnames2['default'](className, classes)
	      }),
	      _react2['default'].createElement(
	        _Grid2['default'],
	        { fluid: fluid },
	        children
	      )
	    );
	  };

	  return Navbar;
	})(_react2['default'].Component);

	Navbar.propTypes = propTypes;
	Navbar.defaultProps = defaultProps;
	Navbar.childContextTypes = childContextTypes;

	_utilsBootstrapUtils.bsClass('navbar', Navbar);

	var UncontrollableNavbar = _uncontrollable2['default'](Navbar, { expanded: 'onToggle' });

	function createSimpleWrapper(tag, suffix, displayName) {
	  var Wrapper = function Wrapper(_ref, _ref2) {
	    var Component = _ref.componentClass;
	    var className = _ref.className;
	    var pullRight = _ref.pullRight;
	    var pullLeft = _ref.pullLeft;

	    var props = _objectWithoutProperties(_ref, ['componentClass', 'className', 'pullRight', 'pullLeft']);

	    var _ref2$$bs_navbar = _ref2.$bs_navbar;
	    var navbarProps = _ref2$$bs_navbar === undefined ? { bsClass: 'navbar' } : _ref2$$bs_navbar;
	    return _react2['default'].createElement(Component, _extends({}, props, {
	      className: _classnames2['default'](className, _utilsBootstrapUtils.prefix(navbarProps, suffix), pullRight && _utilsBootstrapUtils.prefix(navbarProps, 'right'), pullLeft && _utilsBootstrapUtils.prefix(navbarProps, 'left'))
	    }));
	  };

	  Wrapper.displayName = displayName;

	  Wrapper.propTypes = {
	    componentClass: _reactPropTypesLibElementType2['default'],
	    pullRight: _react2['default'].PropTypes.bool,
	    pullLeft: _react2['default'].PropTypes.bool
	  };

	  Wrapper.defaultProps = {
	    componentClass: tag,
	    pullRight: false,
	    pullLeft: false
	  };

	  Wrapper.contextTypes = {
	    $bs_navbar: _react.PropTypes.shape({
	      bsClass: _react.PropTypes.string
	    })
	  };

	  return Wrapper;
	}

	UncontrollableNavbar.Brand = _NavbarBrand2['default'];
	UncontrollableNavbar.Header = _NavbarHeader2['default'];
	UncontrollableNavbar.Toggle = _NavbarToggle2['default'];
	UncontrollableNavbar.Collapse = _NavbarCollapse2['default'];

	UncontrollableNavbar.Form = createSimpleWrapper('div', 'form', 'NavbarForm');
	UncontrollableNavbar.Text = createSimpleWrapper('p', 'text', 'NavbarText');
	UncontrollableNavbar.Link = createSimpleWrapper('a', 'link', 'NavbarLink');

	// Set bsStyles here so they can be overridden.
	exports['default'] = _utilsBootstrapUtils.bsStyles([_utilsStyleConfig.Style.DEFAULT, _utilsStyleConfig.Style.INVERSE], _utilsStyleConfig.Style.DEFAULT, UncontrollableNavbar);
	module.exports = exports['default'];

/***/ },
/* 463 */
/***/ function(module, exports, __webpack_require__) {

	'use strict';

	var _inherits = __webpack_require__(254)['default'];

	var _classCallCheck = __webpack_require__(330)['default'];

	var _objectWithoutProperties = __webpack_require__(338)['default'];

	var _extends = __webpack_require__(332)['default'];

	var _interopRequireDefault = __webpack_require__(249)['default'];

	exports.__esModule = true;

	var _classnames = __webpack_require__(340);

	var _classnames2 = _interopRequireDefault(_classnames);

	var _react = __webpack_require__(2);

	var _react2 = _interopRequireDefault(_react);

	var _utilsBootstrapUtils = __webpack_require__(341);

	var contextTypes = {
	  $bs_navbar: _react2['default'].PropTypes.shape({
	    bsClass: _react2['default'].PropTypes.string
	  })
	};

	var NavbarBrand = (function (_React$Component) {
	  _inherits(NavbarBrand, _React$Component);

	  function NavbarBrand() {
	    _classCallCheck(this, NavbarBrand);

	    _React$Component.apply(this, arguments);
	  }

	  NavbarBrand.prototype.render = function render() {
	    var _props = this.props;
	    var className = _props.className;
	    var children = _props.children;

	    var props = _objectWithoutProperties(_props, ['className', 'children']);

	    var navbarProps = this.context.$bs_navbar || { bsClass: 'navbar' };

	    var bsClassName = _utilsBootstrapUtils.prefix(navbarProps, 'brand');

	    if (_react2['default'].isValidElement(children)) {
	      return _react2['default'].cloneElement(children, {
	        className: _classnames2['default'](children.props.className, className, bsClassName)
	      });
	    }

	    return _react2['default'].createElement(
	      'span',
	      _extends({}, props, { className: _classnames2['default'](className, bsClassName) }),
	      children
	    );
	  };

	  return NavbarBrand;
	})(_react2['default'].Component);

	NavbarBrand.contextTypes = contextTypes;

	exports['default'] = NavbarBrand;
	module.exports = exports['default'];

/***/ },
/* 464 */
/***/ function(module, exports, __webpack_require__) {

	'use strict';

	var _inherits = __webpack_require__(254)['default'];

	var _classCallCheck = __webpack_require__(330)['default'];

	var _objectWithoutProperties = __webpack_require__(338)['default'];

	var _extends = __webpack_require__(332)['default'];

	var _interopRequireDefault = __webpack_require__(249)['default'];

	exports.__esModule = true;

	var _react = __webpack_require__(2);

	var _react2 = _interopRequireDefault(_react);

	var _Collapse = __webpack_require__(373);

	var _Collapse2 = _interopRequireDefault(_Collapse);

	var _utilsBootstrapUtils = __webpack_require__(341);

	var contextTypes = {
	  $bs_navbar: _react.PropTypes.shape({
	    bsClass: _react.PropTypes.string,
	    expanded: _react.PropTypes.bool
	  })
	};

	var NavbarCollapse = (function (_React$Component) {
	  _inherits(NavbarCollapse, _React$Component);

	  function NavbarCollapse() {
	    _classCallCheck(this, NavbarCollapse);

	    _React$Component.apply(this, arguments);
	  }

	  NavbarCollapse.prototype.render = function render() {
	    var _props = this.props;
	    var children = _props.children;

	    var props = _objectWithoutProperties(_props, ['children']);

	    var navbarProps = this.context.$bs_navbar || { bsClass: 'navbar' };

	    var bsClassName = _utilsBootstrapUtils.prefix(navbarProps, 'collapse');

	    return _react2['default'].createElement(
	      _Collapse2['default'],
	      _extends({ 'in': navbarProps.expanded }, props),
	      _react2['default'].createElement(
	        'div',
	        { className: bsClassName },
	        children
	      )
	    );
	  };

	  return NavbarCollapse;
	})(_react2['default'].Component);

	NavbarCollapse.contextTypes = contextTypes;

	exports['default'] = NavbarCollapse;
	module.exports = exports['default'];

/***/ },
/* 465 */
/***/ function(module, exports, __webpack_require__) {

	'use strict';

	var _inherits = __webpack_require__(254)['default'];

	var _classCallCheck = __webpack_require__(330)['default'];

	var _objectWithoutProperties = __webpack_require__(338)['default'];

	var _extends = __webpack_require__(332)['default'];

	var _interopRequireDefault = __webpack_require__(249)['default'];

	exports.__esModule = true;

	var _classnames = __webpack_require__(340);

	var _classnames2 = _interopRequireDefault(_classnames);

	var _react = __webpack_require__(2);

	var _react2 = _interopRequireDefault(_react);

	var _utilsBootstrapUtils = __webpack_require__(341);

	var contextTypes = {
	  $bs_navbar: _react2['default'].PropTypes.shape({
	    bsClass: _react2['default'].PropTypes.string
	  })
	};

	var NavbarHeader = (function (_React$Component) {
	  _inherits(NavbarHeader, _React$Component);

	  function NavbarHeader() {
	    _classCallCheck(this, NavbarHeader);

	    _React$Component.apply(this, arguments);
	  }

	  NavbarHeader.prototype.render = function render() {
	    var _props = this.props;
	    var className = _props.className;

	    var props = _objectWithoutProperties(_props, ['className']);

	    var navbarProps = this.context.$bs_navbar || { bsClass: 'navbar' };

	    var bsClassName = _utilsBootstrapUtils.prefix(navbarProps, 'header');

	    return _react2['default'].createElement('div', _extends({}, props, { className: _classnames2['default'](className, bsClassName) }));
	  };

	  return NavbarHeader;
	})(_react2['default'].Component);

	NavbarHeader.contextTypes = contextTypes;

	exports['default'] = NavbarHeader;
	module.exports = exports['default'];

/***/ },
/* 466 */
/***/ function(module, exports, __webpack_require__) {

	'use strict';

	var _inherits = __webpack_require__(254)['default'];

	var _classCallCheck = __webpack_require__(330)['default'];

	var _extends = __webpack_require__(332)['default'];

	var _objectWithoutProperties = __webpack_require__(338)['default'];

	var _interopRequireDefault = __webpack_require__(249)['default'];

	exports.__esModule = true;

	var _classnames = __webpack_require__(340);

	var _classnames2 = _interopRequireDefault(_classnames);

	var _react = __webpack_require__(2);

	var _react2 = _interopRequireDefault(_react);

	var _utilsBootstrapUtils = __webpack_require__(341);

	var _utilsCreateChainedFunction = __webpack_require__(347);

	var _utilsCreateChainedFunction2 = _interopRequireDefault(_utilsCreateChainedFunction);

	var propTypes = {
	  onClick: _react.PropTypes.func,
	  /**
	   * The toggle content, if left empty it will render the default toggle (seen above).
	   */
	  children: _react.PropTypes.node
	};

	var contextTypes = {
	  $bs_navbar: _react.PropTypes.shape({
	    bsClass: _react.PropTypes.string,
	    expanded: _react.PropTypes.bool,
	    onToggle: _react.PropTypes.func.isRequired
	  })
	};

	var NavbarToggle = (function (_React$Component) {
	  _inherits(NavbarToggle, _React$Component);

	  function NavbarToggle() {
	    _classCallCheck(this, NavbarToggle);

	    _React$Component.apply(this, arguments);
	  }

	  NavbarToggle.prototype.render = function render() {
	    var _props = this.props;
	    var onClick = _props.onClick;
	    var className = _props.className;
	    var children = _props.children;

	    var props = _objectWithoutProperties(_props, ['onClick', 'className', 'children']);

	    var navbarProps = this.context.$bs_navbar || { bsClass: 'navbar' };

	    var buttonProps = _extends({
	      type: 'button'
	    }, props, {
	      onClick: _utilsCreateChainedFunction2['default'](onClick, navbarProps.onToggle),
	      className: _classnames2['default'](className, _utilsBootstrapUtils.prefix(navbarProps, 'toggle'), !navbarProps.expanded && 'collapsed')
	    });

	    if (children) {
	      return _react2['default'].createElement(
	        'button',
	        buttonProps,
	        children
	      );
	    }

	    return _react2['default'].createElement(
	      'button',
	      buttonProps,
	      _react2['default'].createElement(
	        'span',
	        { className: 'sr-only' },
	        'Toggle navigation'
	      ),
	      _react2['default'].createElement('span', { className: 'icon-bar' }),
	      _react2['default'].createElement('span', { className: 'icon-bar' }),
	      _react2['default'].createElement('span', { className: 'icon-bar' })
	    );
	  };

	  return NavbarToggle;
	})(_react2['default'].Component);

	NavbarToggle.propTypes = propTypes;
	NavbarToggle.contextTypes = contextTypes;

	exports['default'] = NavbarToggle;
	module.exports = exports['default'];

/***/ },
/* 467 */
/***/ function(module, exports, __webpack_require__) {

	'use strict';

	var _extends = __webpack_require__(332)['default'];

	var _inherits = __webpack_require__(254)['default'];

	var _classCallCheck = __webpack_require__(330)['default'];

	var _objectWithoutProperties = __webpack_require__(338)['default'];

	var _interopRequireDefault = __webpack_require__(249)['default'];

	exports.__esModule = true;

	var _classnames = __webpack_require__(340);

	var _classnames2 = _interopRequireDefault(_classnames);

	var _react = __webpack_require__(2);

	var _react2 = _interopRequireDefault(_react);

	var _Dropdown = __webpack_require__(386);

	var _Dropdown2 = _interopRequireDefault(_Dropdown);

	var _utilsSplitComponentProps = __webpack_require__(413);

	var _utilsSplitComponentProps2 = _interopRequireDefault(_utilsSplitComponentProps);

	var propTypes = _extends({}, _Dropdown2['default'].propTypes, {

	  // Toggle props.
	  title: _react2['default'].PropTypes.node.isRequired,
	  noCaret: _react2['default'].PropTypes.bool,
	  active: _react2['default'].PropTypes.bool,

	  // Override generated docs from <Dropdown>.
	  /**
	   * @private
	   */
	  children: _react2['default'].PropTypes.node
	});

	var NavDropdown = (function (_React$Component) {
	  _inherits(NavDropdown, _React$Component);

	  function NavDropdown() {
	    _classCallCheck(this, NavDropdown);

	    _React$Component.apply(this, arguments);
	  }

	  NavDropdown.prototype.render = function render() {
	    var _props = this.props;
	    var title = _props.title;
	    var active = _props.active;
	    var className = _props.className;
	    var style = _props.style;
	    var children = _props.children;

	    var props = _objectWithoutProperties(_props, ['title', 'active', 'className', 'style', 'children']);

	    delete props.eventKey;

	    // These are injected down by `<Nav>` for building `<SubNav>`s.
	    delete props.activeKey;
	    delete props.activeHref;

	    var _splitComponentProps = _utilsSplitComponentProps2['default'](props, _Dropdown2['default'].ControlledComponent);

	    var dropdownProps = _splitComponentProps[0];
	    var toggleProps = _splitComponentProps[1];

	    // Unlike for the other dropdowns, styling needs to go to the `<Dropdown>`
	    // rather than the `<Dropdown.Toggle>`.

	    return _react2['default'].createElement(
	      _Dropdown2['default'],
	      _extends({}, dropdownProps, {
	        componentClass: 'li',
	        className: _classnames2['default'](className, { active: active }),
	        style: style
	      }),
	      _react2['default'].createElement(
	        _Dropdown2['default'].Toggle,
	        _extends({}, toggleProps, { useAnchor: true }),
	        title
	      ),
	      _react2['default'].createElement(
	        _Dropdown2['default'].Menu,
	        null,
	        children
	      )
	    );
	  };

	  return NavDropdown;
	})(_react2['default'].Component);

	NavDropdown.propTypes = propTypes;

	exports['default'] = NavDropdown;
	module.exports = exports['default'];

/***/ },
/* 468 */
/***/ function(module, exports, __webpack_require__) {

	'use strict';

	var _inherits = __webpack_require__(254)['default'];

	var _classCallCheck = __webpack_require__(330)['default'];

	var _objectWithoutProperties = __webpack_require__(338)['default'];

	var _extends = __webpack_require__(332)['default'];

	var _interopRequireDefault = __webpack_require__(249)['default'];

	exports.__esModule = true;

	var _classnames = __webpack_require__(340);

	var _classnames2 = _interopRequireDefault(_classnames);

	var _react = __webpack_require__(2);

	var _react2 = _interopRequireDefault(_react);

	var _SafeAnchor = __webpack_require__(356);

	var _SafeAnchor2 = _interopRequireDefault(_SafeAnchor);

	var _utilsCreateChainedFunction = __webpack_require__(347);

	var _utilsCreateChainedFunction2 = _interopRequireDefault(_utilsCreateChainedFunction);

	var propTypes = {
	  active: _react2['default'].PropTypes.bool,
	  disabled: _react2['default'].PropTypes.bool,
	  role: _react2['default'].PropTypes.string,
	  href: _react2['default'].PropTypes.string,
	  onClick: _react2['default'].PropTypes.func,
	  onSelect: _react2['default'].PropTypes.func,
	  eventKey: _react2['default'].PropTypes.any
	};

	var defaultProps = {
	  active: false,
	  disabled: false
	};

	var NavItem = (function (_React$Component) {
	  _inherits(NavItem, _React$Component);

	  function NavItem(props, context) {
	    _classCallCheck(this, NavItem);

	    _React$Component.call(this, props, context);

	    this.handleClick = this.handleClick.bind(this);
	  }

	  NavItem.prototype.handleClick = function handleClick(e) {
	    if (this.props.onSelect) {
	      e.preventDefault();

	      if (!this.props.disabled) {
	        this.props.onSelect(this.props.eventKey, e);
	      }
	    }
	  };

	  NavItem.prototype.render = function render() {
	    var _props = this.props;
	    var active = _props.active;
	    var disabled = _props.disabled;
	    var onClick = _props.onClick;
	    var className = _props.className;
	    var style = _props.style;

	    var props = _objectWithoutProperties(_props, ['active', 'disabled', 'onClick', 'className', 'style']);

	    delete props.onSelect;
	    delete props.eventKey;

	    // These are injected down by `<Nav>` for building `<SubNav>`s.
	    delete props.activeKey;
	    delete props.activeHref;

	    if (!props.role) {
	      if (props.href === '#') {
	        props.role = 'button';
	      }
	    } else if (props.role === 'tab') {
	      props['aria-selected'] = active;
	    }

	    return _react2['default'].createElement(
	      'li',
	      {
	        role: 'presentation',
	        className: _classnames2['default'](className, { active: active, disabled: disabled }),
	        style: style
	      },
	      _react2['default'].createElement(_SafeAnchor2['default'], _extends({}, props, {
	        disabled: disabled,
	        onClick: _utilsCreateChainedFunction2['default'](onClick, this.handleClick)
	      }))
	    );
	  };

	  return NavItem;
	})(_react2['default'].Component);

	NavItem.propTypes = propTypes;
	NavItem.defaultProps = defaultProps;

	exports['default'] = NavItem;
	module.exports = exports['default'];

/***/ },
/* 469 */
/***/ function(module, exports, __webpack_require__) {

	'use strict';

	var _extends = __webpack_require__(332)['default'];

	var _inherits = __webpack_require__(254)['default'];

	var _classCallCheck = __webpack_require__(330)['default'];

	var _objectWithoutProperties = __webpack_require__(338)['default'];

	var _interopRequireDefault = __webpack_require__(249)['default'];

	exports.__esModule = true;

	var _classnames = __webpack_require__(340);

	var _classnames2 = _interopRequireDefault(_classnames);

	var _react = __webpack_require__(2);

	var _react2 = _interopRequireDefault(_react);

	var _reactOverlaysLibOverlay = __webpack_require__(470);

	var _reactOverlaysLibOverlay2 = _interopRequireDefault(_reactOverlaysLibOverlay);

	var _reactPropTypesLibElementType = __webpack_require__(357);

	var _reactPropTypesLibElementType2 = _interopRequireDefault(_reactPropTypesLibElementType);

	var _Fade = __webpack_require__(414);

	var _Fade2 = _interopRequireDefault(_Fade);

	var propTypes = _extends({}, _reactOverlaysLibOverlay2['default'].propTypes, {

	  /**
	   * Set the visibility of the Overlay
	   */
	  show: _react2['default'].PropTypes.bool,
	  /**
	   * Specify whether the overlay should trigger onHide when the user clicks outside the overlay
	   */
	  rootClose: _react2['default'].PropTypes.bool,
	  /**
	   * A callback invoked by the overlay when it wishes to be hidden. Required if
	   * `rootClose` is specified.
	   */
	  onHide: _react2['default'].PropTypes.func,

	  /**
	   * Use animation
	   */
	  animation: _react2['default'].PropTypes.oneOfType([_react2['default'].PropTypes.bool, _reactPropTypesLibElementType2['default']]),

	  /**
	   * Callback fired before the Overlay transitions in
	   */
	  onEnter: _react2['default'].PropTypes.func,

	  /**
	   * Callback fired as the Overlay begins to transition in
	   */
	  onEntering: _react2['default'].PropTypes.func,

	  /**
	   * Callback fired after the Overlay finishes transitioning in
	   */
	  onEntered: _react2['default'].PropTypes.func,

	  /**
	   * Callback fired right before the Overlay transitions out
	   */
	  onExit: _react2['default'].PropTypes.func,

	  /**
	   * Callback fired as the Overlay begins to transition out
	   */
	  onExiting: _react2['default'].PropTypes.func,

	  /**
	   * Callback fired after the Overlay finishes transitioning out
	   */
	  onExited: _react2['default'].PropTypes.func
	});

	var defaultProps = {
	  animation: _Fade2['default'],
	  rootClose: false,
	  show: false
	};

	var Overlay = (function (_React$Component) {
	  _inherits(Overlay, _React$Component);

	  function Overlay() {
	    _classCallCheck(this, Overlay);

	    _React$Component.apply(this, arguments);
	  }

	  Overlay.prototype.render = function render() {
	    var _props = this.props;
	    var animation = _props.animation;
	    var children = _props.children;

	    var props = _objectWithoutProperties(_props, ['animation', 'children']);

	    var transition = animation === true ? _Fade2['default'] : animation || null;

	    var child = undefined;

	    if (!transition) {
	      child = _react.cloneElement(children, {
	        className: _classnames2['default'](children.props.className, 'in')
	      });
	    } else {
	      child = children;
	    }

	    return _react2['default'].createElement(
	      _reactOverlaysLibOverlay2['default'],
	      _extends({}, props, {
	        transition: transition
	      }),
	      child
	    );
	  };

	  return Overlay;
	})(_react2['default'].Component);

	Overlay.propTypes = propTypes;
	Overlay.defaultProps = defaultProps;

	exports['default'] = Overlay;
	module.exports = exports['default'];

/***/ },
/* 470 */
/***/ function(module, exports, __webpack_require__) {

	'use strict';

	Object.defineProperty(exports, "__esModule", {
	  value: true
	});

	var _extends = Object.assign || function (target) { for (var i = 1; i < arguments.length; i++) { var source = arguments[i]; for (var key in source) { if (Object.prototype.hasOwnProperty.call(source, key)) { target[key] = source[key]; } } } return target; };

	var _createClass = function () { function defineProperties(target, props) { for (var i = 0; i < props.length; i++) { var descriptor = props[i]; descriptor.enumerable = descriptor.enumerable || false; descriptor.configurable = true; if ("value" in descriptor) descriptor.writable = true; Object.defineProperty(target, descriptor.key, descriptor); } } return function (Constructor, protoProps, staticProps) { if (protoProps) defineProperties(Constructor.prototype, protoProps); if (staticProps) defineProperties(Constructor, staticProps); return Constructor; }; }();

	var _react = __webpack_require__(2);

	var _react2 = _interopRequireDefault(_react);

	var _Portal = __webpack_require__(445);

	var _Portal2 = _interopRequireDefault(_Portal);

	var _Position = __webpack_require__(471);

	var _Position2 = _interopRequireDefault(_Position);

	var _RootCloseWrapper = __webpack_require__(405);

	var _RootCloseWrapper2 = _interopRequireDefault(_RootCloseWrapper);

	var _elementType = __webpack_require__(357);

	var _elementType2 = _interopRequireDefault(_elementType);

	function _interopRequireDefault(obj) { return obj && obj.__esModule ? obj : { default: obj }; }

	function _objectWithoutProperties(obj, keys) { var target = {}; for (var i in obj) { if (keys.indexOf(i) >= 0) continue; if (!Object.prototype.hasOwnProperty.call(obj, i)) continue; target[i] = obj[i]; } return target; }

	function _classCallCheck(instance, Constructor) { if (!(instance instanceof Constructor)) { throw new TypeError("Cannot call a class as a function"); } }

	function _possibleConstructorReturn(self, call) { if (!self) { throw new ReferenceError("this hasn't been initialised - super() hasn't been called"); } return call && (typeof call === "object" || typeof call === "function") ? call : self; }

	function _inherits(subClass, superClass) { if (typeof superClass !== "function" && superClass !== null) { throw new TypeError("Super expression must either be null or a function, not " + typeof superClass); } subClass.prototype = Object.create(superClass && superClass.prototype, { constructor: { value: subClass, enumerable: false, writable: true, configurable: true } }); if (superClass) Object.setPrototypeOf ? Object.setPrototypeOf(subClass, superClass) : subClass.__proto__ = superClass; }

	/**
	 * Built on top of `<Position/>` and `<Portal/>`, the overlay component is great for custom tooltip overlays.
	 */

	var Overlay = function (_React$Component) {
	  _inherits(Overlay, _React$Component);

	  function Overlay(props, context) {
	    _classCallCheck(this, Overlay);

	    var _this = _possibleConstructorReturn(this, Object.getPrototypeOf(Overlay).call(this, props, context));

	    _this.state = { exited: !props.show };
	    _this.onHiddenListener = _this.handleHidden.bind(_this);
	    return _this;
	  }

	  _createClass(Overlay, [{
	    key: 'componentWillReceiveProps',
	    value: function componentWillReceiveProps(nextProps) {
	      if (nextProps.show) {
	        this.setState({ exited: false });
	      } else if (!nextProps.transition) {
	        // Otherwise let handleHidden take care of marking exited.
	        this.setState({ exited: true });
	      }
	    }
	  }, {
	    key: 'render',
	    value: function render() {
	      var _props = this.props;
	      var container = _props.container;
	      var containerPadding = _props.containerPadding;
	      var target = _props.target;
	      var placement = _props.placement;
	      var shouldUpdatePosition = _props.shouldUpdatePosition;
	      var rootClose = _props.rootClose;
	      var children = _props.children;
	      var Transition = _props.transition;

	      var props = _objectWithoutProperties(_props, ['container', 'containerPadding', 'target', 'placement', 'shouldUpdatePosition', 'rootClose', 'children', 'transition']);

	      // Don't un-render the overlay while it's transitioning out.


	      var mountOverlay = props.show || Transition && !this.state.exited;
	      if (!mountOverlay) {
	        // Don't bother showing anything if we don't have to.
	        return null;
	      }

	      var child = children;

	      // Position is be inner-most because it adds inline styles into the child,
	      // which the other wrappers don't forward correctly.
	      child = _react2.default.createElement(
	        _Position2.default,
	        { container: container, containerPadding: containerPadding, target: target, placement: placement, shouldUpdatePosition: shouldUpdatePosition },
	        child
	      );

	      if (Transition) {
	        var onExit = props.onExit;
	        var onExiting = props.onExiting;
	        var onEnter = props.onEnter;
	        var onEntering = props.onEntering;
	        var onEntered = props.onEntered;

	        // This animates the child node by injecting props, so it must precede
	        // anything that adds a wrapping div.

	        child = _react2.default.createElement(
	          Transition,
	          {
	            'in': props.show,
	            transitionAppear: true,
	            onExit: onExit,
	            onExiting: onExiting,
	            onExited: this.onHiddenListener,
	            onEnter: onEnter,
	            onEntering: onEntering,
	            onEntered: onEntered
	          },
	          child
	        );
	      }

	      // This goes after everything else because it adds a wrapping div.
	      if (rootClose) {
	        child = _react2.default.createElement(
	          _RootCloseWrapper2.default,
	          { onRootClose: props.onHide },
	          child
	        );
	      }

	      return _react2.default.createElement(
	        _Portal2.default,
	        { container: container },
	        child
	      );
	    }
	  }, {
	    key: 'handleHidden',
	    value: function handleHidden() {
	      this.setState({ exited: true });

	      if (this.props.onExited) {
	        var _props2;

	        (_props2 = this.props).onExited.apply(_props2, arguments);
	      }
	    }
	  }]);

	  return Overlay;
	}(_react2.default.Component);

	Overlay.propTypes = _extends({}, _Portal2.default.propTypes, _Position2.default.propTypes, {

	  /**
	   * Set the visibility of the Overlay
	   */
	  show: _react2.default.PropTypes.bool,

	  /**
	   * Specify whether the overlay should trigger `onHide` when the user clicks outside the overlay
	   */
	  rootClose: _react2.default.PropTypes.bool,

	  /**
	   * A Callback fired by the Overlay when it wishes to be hidden.
	   *
	   * __required__ when `rootClose` is `true`.
	   *
	   * @type func
	   */
	  onHide: function onHide(props, name, cname) {
	    var pt = _react2.default.PropTypes.func;

	    if (props.rootClose) pt = pt.isRequired;
	    return pt(props, name, cname);
	  },


	  /**
	   * A `<Transition/>` component used to animate the overlay changes visibility.
	   */
	  transition: _elementType2.default,

	  /**
	   * Callback fired before the Overlay transitions in
	   */
	  onEnter: _react2.default.PropTypes.func,

	  /**
	   * Callback fired as the Overlay begins to transition in
	   */
	  onEntering: _react2.default.PropTypes.func,

	  /**
	   * Callback fired after the Overlay finishes transitioning in
	   */
	  onEntered: _react2.default.PropTypes.func,

	  /**
	   * Callback fired right before the Overlay transitions out
	   */
	  onExit: _react2.default.PropTypes.func,

	  /**
	   * Callback fired as the Overlay begins to transition out
	   */
	  onExiting: _react2.default.PropTypes.func,

	  /**
	   * Callback fired after the Overlay finishes transitioning out
	   */
	  onExited: _react2.default.PropTypes.func
	});

	exports.default = Overlay;
	module.exports = exports['default'];

/***/ },
/* 471 */
/***/ function(module, exports, __webpack_require__) {

	'use strict';

	Object.defineProperty(exports, "__esModule", {
	  value: true
	});

	var _extends = Object.assign || function (target) { for (var i = 1; i < arguments.length; i++) { var source = arguments[i]; for (var key in source) { if (Object.prototype.hasOwnProperty.call(source, key)) { target[key] = source[key]; } } } return target; };

	var _createClass = function () { function defineProperties(target, props) { for (var i = 0; i < props.length; i++) { var descriptor = props[i]; descriptor.enumerable = descriptor.enumerable || false; descriptor.configurable = true; if ("value" in descriptor) descriptor.writable = true; Object.defineProperty(target, descriptor.key, descriptor); } } return function (Constructor, protoProps, staticProps) { if (protoProps) defineProperties(Constructor.prototype, protoProps); if (staticProps) defineProperties(Constructor, staticProps); return Constructor; }; }();

	var _classnames = __webpack_require__(340);

	var _classnames2 = _interopRequireDefault(_classnames);

	var _react = __webpack_require__(2);

	var _react2 = _interopRequireDefault(_react);

	var _reactDom = __webpack_require__(34);

	var _reactDom2 = _interopRequireDefault(_reactDom);

	var _mountable = __webpack_require__(444);

	var _mountable2 = _interopRequireDefault(_mountable);

	var _calculatePosition = __webpack_require__(472);

	var _calculatePosition2 = _interopRequireDefault(_calculatePosition);

	var _getContainer = __webpack_require__(446);

	var _getContainer2 = _interopRequireDefault(_getContainer);

	var _ownerDocument = __webpack_require__(409);

	var _ownerDocument2 = _interopRequireDefault(_ownerDocument);

	function _interopRequireDefault(obj) { return obj && obj.__esModule ? obj : { default: obj }; }

	function _objectWithoutProperties(obj, keys) { var target = {}; for (var i in obj) { if (keys.indexOf(i) >= 0) continue; if (!Object.prototype.hasOwnProperty.call(obj, i)) continue; target[i] = obj[i]; } return target; }

	function _classCallCheck(instance, Constructor) { if (!(instance instanceof Constructor)) { throw new TypeError("Cannot call a class as a function"); } }

	function _possibleConstructorReturn(self, call) { if (!self) { throw new ReferenceError("this hasn't been initialised - super() hasn't been called"); } return call && (typeof call === "object" || typeof call === "function") ? call : self; }

	function _inherits(subClass, superClass) { if (typeof superClass !== "function" && superClass !== null) { throw new TypeError("Super expression must either be null or a function, not " + typeof superClass); } subClass.prototype = Object.create(superClass && superClass.prototype, { constructor: { value: subClass, enumerable: false, writable: true, configurable: true } }); if (superClass) Object.setPrototypeOf ? Object.setPrototypeOf(subClass, superClass) : subClass.__proto__ = superClass; }

	/**
	 * The Position component calculates the coordinates for its child, to position
	 * it relative to a `target` component or node. Useful for creating callouts
	 * and tooltips, the Position component injects a `style` props with `left` and
	 * `top` values for positioning your component.
	 *
	 * It also injects "arrow" `left`, and `top` values for styling callout arrows
	 * for giving your components a sense of directionality.
	 */

	var Position = function (_React$Component) {
	  _inherits(Position, _React$Component);

	  function Position(props, context) {
	    _classCallCheck(this, Position);

	    var _this = _possibleConstructorReturn(this, Object.getPrototypeOf(Position).call(this, props, context));

	    _this.state = {
	      positionLeft: 0,
	      positionTop: 0,
	      arrowOffsetLeft: null,
	      arrowOffsetTop: null
	    };

	    _this._needsFlush = false;
	    _this._lastTarget = null;
	    return _this;
	  }

	  _createClass(Position, [{
	    key: 'componentDidMount',
	    value: function componentDidMount() {
	      this.updatePosition(this.getTarget());
	    }
	  }, {
	    key: 'componentWillReceiveProps',
	    value: function componentWillReceiveProps() {
	      this._needsFlush = true;
	    }
	  }, {
	    key: 'componentDidUpdate',
	    value: function componentDidUpdate(prevProps) {
	      if (this._needsFlush) {
	        this._needsFlush = false;
	        this.maybeUpdatePosition(this.props.placement !== prevProps.placement);
	      }
	    }
	  }, {
	    key: 'render',
	    value: function render() {
	      var _props = this.props;
	      var children = _props.children;
	      var className = _props.className;

	      var props = _objectWithoutProperties(_props, ['children', 'className']);

	      var _state = this.state;
	      var positionLeft = _state.positionLeft;
	      var positionTop = _state.positionTop;

	      var arrowPosition = _objectWithoutProperties(_state, ['positionLeft', 'positionTop']);

	      // These should not be forwarded to the child.


	      delete props.target;
	      delete props.container;
	      delete props.containerPadding;
	      delete props.shouldUpdatePosition;

	      var child = _react2.default.Children.only(children);
	      return (0, _react.cloneElement)(child, _extends({}, props, arrowPosition, {
	        // FIXME: Don't forward `positionLeft` and `positionTop` via both props
	        // and `props.style`.
	        positionLeft: positionLeft,
	        positionTop: positionTop,
	        className: (0, _classnames2.default)(className, child.props.className),
	        style: _extends({}, child.props.style, {
	          left: positionLeft,
	          top: positionTop
	        })
	      }));
	    }
	  }, {
	    key: 'getTarget',
	    value: function getTarget() {
	      var target = this.props.target;

	      var targetElement = typeof target === 'function' ? target() : target;
	      return targetElement && _reactDom2.default.findDOMNode(targetElement) || null;
	    }
	  }, {
	    key: 'maybeUpdatePosition',
	    value: function maybeUpdatePosition(placementChanged) {
	      var target = this.getTarget();

	      if (!this.props.shouldUpdatePosition && target === this._lastTarget && !placementChanged) {
	        return;
	      }

	      this.updatePosition(target);
	    }
	  }, {
	    key: 'updatePosition',
	    value: function updatePosition(target) {
	      this._lastTarget = target;

	      if (!target) {
	        this.setState({
	          positionLeft: 0,
	          positionTop: 0,
	          arrowOffsetLeft: null,
	          arrowOffsetTop: null
	        });

	        return;
	      }

	      var overlay = _reactDom2.default.findDOMNode(this);
	      var container = (0, _getContainer2.default)(this.props.container, (0, _ownerDocument2.default)(this).body);

	      this.setState((0, _calculatePosition2.default)(this.props.placement, overlay, target, container, this.props.containerPadding));
	    }
	  }]);

	  return Position;
	}(_react2.default.Component);

	Position.propTypes = {
	  /**
	   * A node, element, or function that returns either. The child will be
	   * be positioned next to the `target` specified.
	   */
	  target: _react2.default.PropTypes.oneOfType([_mountable2.default, _react2.default.PropTypes.func]),

	  /**
	   * "offsetParent" of the component
	   */
	  container: _react2.default.PropTypes.oneOfType([_mountable2.default, _react2.default.PropTypes.func]),
	  /**
	   * Minimum spacing in pixels between container border and component border
	   */
	  containerPadding: _react2.default.PropTypes.number,
	  /**
	   * How to position the component relative to the target
	   */
	  placement: _react2.default.PropTypes.oneOf(['top', 'right', 'bottom', 'left']),
	  /**
	   * Whether the position should be changed on each update
	   */
	  shouldUpdatePosition: _react2.default.PropTypes.bool
	};

	Position.displayName = 'Position';

	Position.defaultProps = {
	  containerPadding: 0,
	  placement: 'right',
	  shouldUpdatePosition: false
	};

	exports.default = Position;
	module.exports = exports['default'];

/***/ },
/* 472 */
/***/ function(module, exports, __webpack_require__) {

	'use strict';

	Object.defineProperty(exports, "__esModule", {
	  value: true
	});
	exports.default = calculatePosition;

	var _offset = __webpack_require__(473);

	var _offset2 = _interopRequireDefault(_offset);

	var _position = __webpack_require__(474);

	var _position2 = _interopRequireDefault(_position);

	var _scrollTop = __webpack_require__(476);

	var _scrollTop2 = _interopRequireDefault(_scrollTop);

	var _ownerDocument = __webpack_require__(409);

	var _ownerDocument2 = _interopRequireDefault(_ownerDocument);

	function _interopRequireDefault(obj) { return obj && obj.__esModule ? obj : { default: obj }; }

	function getContainerDimensions(containerNode) {
	  var width = void 0,
	      height = void 0,
	      scroll = void 0;

	  if (containerNode.tagName === 'BODY') {
	    width = window.innerWidth;
	    height = window.innerHeight;

	    scroll = (0, _scrollTop2.default)((0, _ownerDocument2.default)(containerNode).documentElement) || (0, _scrollTop2.default)(containerNode);
	  } else {
	    var _getOffset = (0, _offset2.default)(containerNode);

	    width = _getOffset.width;
	    height = _getOffset.height;

	    scroll = (0, _scrollTop2.default)(containerNode);
	  }

	  return { width: width, height: height, scroll: scroll };
	}

	function getTopDelta(top, overlayHeight, container, padding) {
	  var containerDimensions = getContainerDimensions(container);
	  var containerScroll = containerDimensions.scroll;
	  var containerHeight = containerDimensions.height;

	  var topEdgeOffset = top - padding - containerScroll;
	  var bottomEdgeOffset = top + padding - containerScroll + overlayHeight;

	  if (topEdgeOffset < 0) {
	    return -topEdgeOffset;
	  } else if (bottomEdgeOffset > containerHeight) {
	    return containerHeight - bottomEdgeOffset;
	  } else {
	    return 0;
	  }
	}

	function getLeftDelta(left, overlayWidth, container, padding) {
	  var containerDimensions = getContainerDimensions(container);
	  var containerWidth = containerDimensions.width;

	  var leftEdgeOffset = left - padding;
	  var rightEdgeOffset = left + padding + overlayWidth;

	  if (leftEdgeOffset < 0) {
	    return -leftEdgeOffset;
	  } else if (rightEdgeOffset > containerWidth) {
	    return containerWidth - rightEdgeOffset;
	  }

	  return 0;
	}

	function calculatePosition(placement, overlayNode, target, container, padding) {
	  var childOffset = container.tagName === 'BODY' ? (0, _offset2.default)(target) : (0, _position2.default)(target, container);

	  var _getOffset2 = (0, _offset2.default)(overlayNode);

	  var overlayHeight = _getOffset2.height;
	  var overlayWidth = _getOffset2.width;


	  var positionLeft = void 0,
	      positionTop = void 0,
	      arrowOffsetLeft = void 0,
	      arrowOffsetTop = void 0;

	  if (placement === 'left' || placement === 'right') {
	    positionTop = childOffset.top + (childOffset.height - overlayHeight) / 2;

	    if (placement === 'left') {
	      positionLeft = childOffset.left - overlayWidth;
	    } else {
	      positionLeft = childOffset.left + childOffset.width;
	    }

	    var topDelta = getTopDelta(positionTop, overlayHeight, container, padding);

	    positionTop += topDelta;
	    arrowOffsetTop = 50 * (1 - 2 * topDelta / overlayHeight) + '%';
	    arrowOffsetLeft = void 0;
	  } else if (placement === 'top' || placement === 'bottom') {
	    positionLeft = childOffset.left + (childOffset.width - overlayWidth) / 2;

	    if (placement === 'top') {
	      positionTop = childOffset.top - overlayHeight;
	    } else {
	      positionTop = childOffset.top + childOffset.height;
	    }

	    var leftDelta = getLeftDelta(positionLeft, overlayWidth, container, padding);

	    positionLeft += leftDelta;
	    arrowOffsetLeft = 50 * (1 - 2 * leftDelta / overlayWidth) + '%';
	    arrowOffsetTop = void 0;
	  } else {
	    throw new Error('calcOverlayPosition(): No such placement of "' + placement + '" found.');
	  }

	  return { positionLeft: positionLeft, positionTop: positionTop, arrowOffsetLeft: arrowOffsetLeft, arrowOffsetTop: arrowOffsetTop };
	}
	module.exports = exports['default'];

/***/ },
/* 473 */
/***/ function(module, exports, __webpack_require__) {

	'use strict';
	var contains = __webpack_require__(389),
	    getWindow = __webpack_require__(453),
	    ownerDocument = __webpack_require__(388);

	module.exports = function offset(node) {
	  var doc = ownerDocument(node),
	      win = getWindow(doc),
	      docElem = doc && doc.documentElement,
	      box = { top: 0, left: 0, height: 0, width: 0 };

	  if (!doc) return;

	  // Make sure it's not a disconnected DOM node
	  if (!contains(docElem, node)) return box;

	  if (node.getBoundingClientRect !== undefined) box = node.getBoundingClientRect();

	  if (box.width || box.height) {

	    box = {
	      top: box.top + (win.pageYOffset || docElem.scrollTop) - (docElem.clientTop || 0),
	      left: box.left + (win.pageXOffset || docElem.scrollLeft) - (docElem.clientLeft || 0),
	      width: (box.width == null ? node.offsetWidth : box.width) || 0,
	      height: (box.height == null ? node.offsetHeight : box.height) || 0
	    };
	  }

	  return box;
	};

/***/ },
/* 474 */
/***/ function(module, exports, __webpack_require__) {

	'use strict';

	var babelHelpers = __webpack_require__(380);

	exports.__esModule = true;
	exports['default'] = position;

	var _offset = __webpack_require__(473);

	var _offset2 = babelHelpers.interopRequireDefault(_offset);

	var _offsetParent = __webpack_require__(475);

	var _offsetParent2 = babelHelpers.interopRequireDefault(_offsetParent);

	var _scrollTop = __webpack_require__(476);

	var _scrollTop2 = babelHelpers.interopRequireDefault(_scrollTop);

	var _scrollLeft = __webpack_require__(477);

	var _scrollLeft2 = babelHelpers.interopRequireDefault(_scrollLeft);

	var _style = __webpack_require__(374);

	var _style2 = babelHelpers.interopRequireDefault(_style);

	function nodeName(node) {
	  return node.nodeName && node.nodeName.toLowerCase();
	}

	function position(node, offsetParent) {
	  var parentOffset = { top: 0, left: 0 },
	      offset;

	  // Fixed elements are offset from window (parentOffset = {top:0, left: 0},
	  // because it is its only offset parent
	  if ((0, _style2['default'])(node, 'position') === 'fixed') {
	    offset = node.getBoundingClientRect();
	  } else {
	    offsetParent = offsetParent || (0, _offsetParent2['default'])(node);
	    offset = (0, _offset2['default'])(node);

	    if (nodeName(offsetParent) !== 'html') parentOffset = (0, _offset2['default'])(offsetParent);

	    parentOffset.top += parseInt((0, _style2['default'])(offsetParent, 'borderTopWidth'), 10) - (0, _scrollTop2['default'])(offsetParent) || 0;
	    parentOffset.left += parseInt((0, _style2['default'])(offsetParent, 'borderLeftWidth'), 10) - (0, _scrollLeft2['default'])(offsetParent) || 0;
	  }

	  // Subtract parent offsets and node margins
	  return babelHelpers._extends({}, offset, {
	    top: offset.top - parentOffset.top - (parseInt((0, _style2['default'])(node, 'marginTop'), 10) || 0),
	    left: offset.left - parentOffset.left - (parseInt((0, _style2['default'])(node, 'marginLeft'), 10) || 0)
	  });
	}

	module.exports = exports['default'];

/***/ },
/* 475 */
/***/ function(module, exports, __webpack_require__) {

	'use strict';

	var babelHelpers = __webpack_require__(380);

	exports.__esModule = true;
	exports['default'] = offsetParent;

	var _ownerDocument = __webpack_require__(388);

	var _ownerDocument2 = babelHelpers.interopRequireDefault(_ownerDocument);

	var _style = __webpack_require__(374);

	var _style2 = babelHelpers.interopRequireDefault(_style);

	function nodeName(node) {
	  return node.nodeName && node.nodeName.toLowerCase();
	}

	function offsetParent(node) {
	  var doc = (0, _ownerDocument2['default'])(node),
	      offsetParent = node && node.offsetParent;

	  while (offsetParent && nodeName(node) !== 'html' && (0, _style2['default'])(offsetParent, 'position') === 'static') {
	    offsetParent = offsetParent.offsetParent;
	  }

	  return offsetParent || doc.documentElement;
	}

	module.exports = exports['default'];

/***/ },
/* 476 */
/***/ function(module, exports, __webpack_require__) {

	'use strict';
	var getWindow = __webpack_require__(453);

	module.exports = function scrollTop(node, val) {
	  var win = getWindow(node);

	  if (val === undefined) return win ? 'pageYOffset' in win ? win.pageYOffset : win.document.documentElement.scrollTop : node.scrollTop;

	  if (win) win.scrollTo('pageXOffset' in win ? win.pageXOffset : win.document.documentElement.scrollLeft, val);else node.scrollTop = val;
	};

/***/ },
/* 477 */
/***/ function(module, exports, __webpack_require__) {

	'use strict';
	var getWindow = __webpack_require__(453);

	module.exports = function scrollTop(node, val) {
	  var win = getWindow(node);

	  if (val === undefined) return win ? 'pageXOffset' in win ? win.pageXOffset : win.document.documentElement.scrollLeft : node.scrollLeft;

	  if (win) win.scrollTo(val, 'pageYOffset' in win ? win.pageYOffset : win.document.documentElement.scrollTop);else node.scrollLeft = val;
	};

/***/ },
/* 478 */
/***/ function(module, exports, __webpack_require__) {

	/* WEBPACK VAR INJECTION */(function(process) {'use strict';

	var _extends = __webpack_require__(332)['default'];

	var _inherits = __webpack_require__(254)['default'];

	var _classCallCheck = __webpack_require__(330)['default'];

	var _objectWithoutProperties = __webpack_require__(338)['default'];

	var _interopRequireDefault = __webpack_require__(249)['default'];

	exports.__esModule = true;

	var _domHelpersQueryContains = __webpack_require__(389);

	var _domHelpersQueryContains2 = _interopRequireDefault(_domHelpersQueryContains);

	var _react = __webpack_require__(2);

	var _react2 = _interopRequireDefault(_react);

	var _reactDom = __webpack_require__(34);

	var _reactDom2 = _interopRequireDefault(_reactDom);

	var _warning = __webpack_require__(178);

	var _warning2 = _interopRequireDefault(_warning);

	var _Overlay = __webpack_require__(469);

	var _Overlay2 = _interopRequireDefault(_Overlay);

	var _utilsCreateChainedFunction = __webpack_require__(347);

	var _utilsCreateChainedFunction2 = _interopRequireDefault(_utilsCreateChainedFunction);

	/**
	 * Check if value one is inside or equal to the of value
	 *
	 * @param {string} one
	 * @param {string|array} of
	 * @returns {boolean}
	 */
	function isOneOf(one, of) {
	  if (Array.isArray(of)) {
	    return of.indexOf(one) >= 0;
	  }
	  return one === of;
	}

	var triggerType = _react2['default'].PropTypes.oneOf(['click', 'hover', 'focus']);

	var propTypes = _extends({}, _Overlay2['default'].propTypes, {

	  /**
	  * Specify which action or actions trigger Overlay visibility
	  */
	  trigger: _react2['default'].PropTypes.oneOfType([triggerType, _react2['default'].PropTypes.arrayOf(triggerType)]),

	  /**
	   * A millisecond delay amount to show and hide the Overlay once triggered
	   */
	  delay: _react2['default'].PropTypes.number,
	  /**
	   * A millisecond delay amount before showing the Overlay once triggered.
	   */
	  delayShow: _react2['default'].PropTypes.number,
	  /**
	   * A millisecond delay amount before hiding the Overlay once triggered.
	   */
	  delayHide: _react2['default'].PropTypes.number,

	  // FIXME: This should be `defaultShow`.
	  /**
	   * The initial visibility state of the Overlay. For more nuanced visibility
	   * control, consider using the Overlay component directly.
	   */
	  defaultOverlayShown: _react2['default'].PropTypes.bool,

	  /**
	   * An element or text to overlay next to the target.
	   */
	  overlay: _react2['default'].PropTypes.node.isRequired,

	  /**
	   * @private
	   */
	  onBlur: _react2['default'].PropTypes.func,
	  /**
	   * @private
	   */
	  onClick: _react2['default'].PropTypes.func,
	  /**
	   * @private
	   */
	  onFocus: _react2['default'].PropTypes.func,
	  /**
	   * @private
	   */
	  onMouseOut: _react2['default'].PropTypes.func,
	  /**
	   * @private
	   */
	  onMouseOver: _react2['default'].PropTypes.func,

	  // Overridden props from `<Overlay>`.
	  /**
	   * @private
	   */
	  target: _react2['default'].PropTypes.oneOf([null]),
	  /**
	  * @private
	  */
	  onHide: _react2['default'].PropTypes.oneOf([null]),
	  /**
	   * @private
	   */
	  show: _react2['default'].PropTypes.oneOf([null])
	});

	var defaultProps = {
	  defaultOverlayShown: false,
	  trigger: ['hover', 'focus']
	};

	var OverlayTrigger = (function (_React$Component) {
	  _inherits(OverlayTrigger, _React$Component);

	  function OverlayTrigger(props, context) {
	    var _this = this;

	    _classCallCheck(this, OverlayTrigger);

	    _React$Component.call(this, props, context);

	    this.handleToggle = this.handleToggle.bind(this);
	    this.handleDelayedShow = this.handleDelayedShow.bind(this);
	    this.handleDelayedHide = this.handleDelayedHide.bind(this);

	    this.handleMouseOver = function (e) {
	      return _this.handleMouseOverOut(_this.handleDelayedShow, e);
	    };
	    this.handleMouseOut = function (e) {
	      return _this.handleMouseOverOut(_this.handleDelayedHide, e);
	    };

	    this._mountNode = null;

	    this.state = {
	      show: props.defaultOverlayShown
	    };
	  }

	  OverlayTrigger.prototype.componentDidMount = function componentDidMount() {
	    this._mountNode = document.createElement('div');
	    this.renderOverlay();
	  };

	  OverlayTrigger.prototype.componentDidUpdate = function componentDidUpdate() {
	    this.renderOverlay();
	  };

	  OverlayTrigger.prototype.componentWillUnmount = function componentWillUnmount() {
	    _reactDom2['default'].unmountComponentAtNode(this._mountNode);
	    this._mountNode = null;

	    clearTimeout(this._hoverShowDelay);
	    clearTimeout(this._hoverHideDelay);
	  };

	  OverlayTrigger.prototype.handleToggle = function handleToggle() {
	    if (this.state.show) {
	      this.hide();
	    } else {
	      this.show();
	    }
	  };

	  OverlayTrigger.prototype.handleDelayedShow = function handleDelayedShow() {
	    var _this2 = this;

	    if (this._hoverHideDelay != null) {
	      clearTimeout(this._hoverHideDelay);
	      this._hoverHideDelay = null;
	      return;
	    }

	    if (this.state.show || this._hoverShowDelay != null) {
	      return;
	    }

	    var delay = this.props.delayShow != null ? this.props.delayShow : this.props.delay;

	    if (!delay) {
	      this.show();
	      return;
	    }

	    this._hoverShowDelay = setTimeout(function () {
	      _this2._hoverShowDelay = null;
	      _this2.show();
	    }, delay);
	  };

	  OverlayTrigger.prototype.handleDelayedHide = function handleDelayedHide() {
	    var _this3 = this;

	    if (this._hoverShowDelay != null) {
	      clearTimeout(this._hoverShowDelay);
	      this._hoverShowDelay = null;
	      return;
	    }

	    if (!this.state.show || this._hoverHideDelay != null) {
	      return;
	    }

	    var delay = this.props.delayHide != null ? this.props.delayHide : this.props.delay;

	    if (!delay) {
	      this.hide();
	      return;
	    }

	    this._hoverHideDelay = setTimeout(function () {
	      _this3._hoverHideDelay = null;
	      _this3.hide();
	    }, delay);
	  };

	  // Simple implementation of mouseEnter and mouseLeave.
	  // React's built version is broken: https://github.com/facebook/react/issues/4251
	  // for cases when the trigger is disabled and mouseOut/Over can cause flicker
	  // moving from one child element to another.

	  OverlayTrigger.prototype.handleMouseOverOut = function handleMouseOverOut(handler, e) {
	    var target = e.currentTarget;
	    var related = e.relatedTarget || e.nativeEvent.toElement;

	    if (!related || related !== target && !_domHelpersQueryContains2['default'](target, related)) {
	      handler(e);
	    }
	  };

	  OverlayTrigger.prototype.show = function show() {
	    this.setState({ show: true });
	  };

	  OverlayTrigger.prototype.hide = function hide() {
	    this.setState({ show: false });
	  };

	  OverlayTrigger.prototype.makeOverlay = function makeOverlay(overlay, props) {
	    return _react2['default'].createElement(
	      _Overlay2['default'],
	      _extends({}, props, {
	        show: this.state.show,
	        onHide: this.handleToggle,
	        target: this
	      }),
	      overlay
	    );
	  };

	  OverlayTrigger.prototype.renderOverlay = function renderOverlay() {
	    _reactDom2['default'].unstable_renderSubtreeIntoContainer(this, this._overlay, this._mountNode);
	  };

	  OverlayTrigger.prototype.render = function render() {
	    var _props = this.props;
	    var trigger = _props.trigger;
	    var overlay = _props.overlay;
	    var children = _props.children;
	    var onBlur = _props.onBlur;
	    var onClick = _props.onClick;
	    var onFocus = _props.onFocus;
	    var onMouseOut = _props.onMouseOut;
	    var onMouseOver = _props.onMouseOver;

	    var props = _objectWithoutProperties(_props, ['trigger', 'overlay', 'children', 'onBlur', 'onClick', 'onFocus', 'onMouseOut', 'onMouseOver']);

	    delete props.delay;
	    delete props.delayShow;
	    delete props.delayHide;
	    delete props.defaultOverlayShown;

	    var child = _react2['default'].Children.only(children);
	    var childProps = child.props;

	    var triggerProps = {
	      'aria-describedby': overlay.props.id
	    };

	    // FIXME: The logic here for passing through handlers on this component is
	    // inconsistent. We shouldn't be passing any of these props through.

	    triggerProps.onClick = _utilsCreateChainedFunction2['default'](childProps.onClick, onClick);

	    if (isOneOf('click', trigger)) {
	      triggerProps.onClick = _utilsCreateChainedFunction2['default'](triggerProps.onClick, this.handleToggle);
	    }

	    if (isOneOf('hover', trigger)) {
	      process.env.NODE_ENV !== 'production' ? _warning2['default'](!(trigger === 'hover'), '[react-bootstrap] Specifying only the `"hover"` trigger limits the ' + 'visibility of the overlay to just mouse users. Consider also ' + 'including the `"focus"` trigger so that touch and keyboard only ' + 'users can see the overlay as well.') : undefined;

	      triggerProps.onMouseOver = _utilsCreateChainedFunction2['default'](childProps.onMouseOver, onMouseOver, this.handleMouseOver);
	      triggerProps.onMouseOut = _utilsCreateChainedFunction2['default'](childProps.onMouseOut, onMouseOut, this.handleMouseOut);
	    }

	    if (isOneOf('focus', trigger)) {
	      triggerProps.onFocus = _utilsCreateChainedFunction2['default'](childProps.onFocus, onFocus, this.handleDelayedShow);
	      triggerProps.onBlur = _utilsCreateChainedFunction2['default'](childProps.onBlur, onBlur, this.handleDelayedHide);
	    }

	    this._overlay = this.makeOverlay(overlay, props);

	    return _react.cloneElement(child, triggerProps);
	  };

	  return OverlayTrigger;
	})(_react2['default'].Component);

	OverlayTrigger.propTypes = propTypes;
	OverlayTrigger.defaultProps = defaultProps;

	exports['default'] = OverlayTrigger;
	module.exports = exports['default'];
	/* WEBPACK VAR INJECTION */}.call(exports, __webpack_require__(4)))

/***/ },
/* 479 */
/***/ function(module, exports, __webpack_require__) {

	'use strict';

	var _inherits = __webpack_require__(254)['default'];

	var _classCallCheck = __webpack_require__(330)['default'];

	var _objectWithoutProperties = __webpack_require__(338)['default'];

	var _extends = __webpack_require__(332)['default'];

	var _interopRequireDefault = __webpack_require__(249)['default'];

	exports.__esModule = true;

	var _classnames = __webpack_require__(340);

	var _classnames2 = _interopRequireDefault(_classnames);

	var _react = __webpack_require__(2);

	var _react2 = _interopRequireDefault(_react);

	var _utilsBootstrapUtils = __webpack_require__(341);

	var PageHeader = (function (_React$Component) {
	  _inherits(PageHeader, _React$Component);

	  function PageHeader() {
	    _classCallCheck(this, PageHeader);

	    _React$Component.apply(this, arguments);
	  }

	  PageHeader.prototype.render = function render() {
	    var _props = this.props;
	    var className = _props.className;
	    var children = _props.children;

	    var props = _objectWithoutProperties(_props, ['className', 'children']);

	    var _splitBsProps = _utilsBootstrapUtils.splitBsProps(props);

	    var bsProps = _splitBsProps[0];
	    var elementProps = _splitBsProps[1];

	    var classes = _utilsBootstrapUtils.getClassSet(bsProps);

	    return _react2['default'].createElement(
	      'div',
	      _extends({}, elementProps, {
	        className: _classnames2['default'](className, classes)
	      }),
	      _react2['default'].createElement(
	        'h1',
	        null,
	        children
	      )
	    );
	  };

	  return PageHeader;
	})(_react2['default'].Component);

	exports['default'] = _utilsBootstrapUtils.bsClass('page-header', PageHeader);
	module.exports = exports['default'];

/***/ },
/* 480 */
/***/ function(module, exports, __webpack_require__) {

	'use strict';

	var _interopRequireDefault = __webpack_require__(249)['default'];

	exports.__esModule = true;

	var _PagerItem = __webpack_require__(481);

	var _PagerItem2 = _interopRequireDefault(_PagerItem);

	var _utilsDeprecationWarning = __webpack_require__(482);

	var _utilsDeprecationWarning2 = _interopRequireDefault(_utilsDeprecationWarning);

	exports['default'] = _utilsDeprecationWarning2['default'].wrapper(_PagerItem2['default'], '`<PageItem>`', '`<Pager.Item>`');
	module.exports = exports['default'];

/***/ },
/* 481 */
/***/ function(module, exports, __webpack_require__) {

	'use strict';

	var _inherits = __webpack_require__(254)['default'];

	var _classCallCheck = __webpack_require__(330)['default'];

	var _objectWithoutProperties = __webpack_require__(338)['default'];

	var _extends = __webpack_require__(332)['default'];

	var _interopRequireDefault = __webpack_require__(249)['default'];

	exports.__esModule = true;

	var _classnames = __webpack_require__(340);

	var _classnames2 = _interopRequireDefault(_classnames);

	var _react = __webpack_require__(2);

	var _react2 = _interopRequireDefault(_react);

	var _SafeAnchor = __webpack_require__(356);

	var _SafeAnchor2 = _interopRequireDefault(_SafeAnchor);

	var _utilsCreateChainedFunction = __webpack_require__(347);

	var _utilsCreateChainedFunction2 = _interopRequireDefault(_utilsCreateChainedFunction);

	var propTypes = {
	  disabled: _react2['default'].PropTypes.bool,
	  previous: _react2['default'].PropTypes.bool,
	  next: _react2['default'].PropTypes.bool,
	  onClick: _react2['default'].PropTypes.func,
	  onSelect: _react2['default'].PropTypes.func,
	  eventKey: _react2['default'].PropTypes.any
	};

	var defaultProps = {
	  disabled: false,
	  previous: false,
	  next: false
	};

	var PagerItem = (function (_React$Component) {
	  _inherits(PagerItem, _React$Component);

	  function PagerItem(props, context) {
	    _classCallCheck(this, PagerItem);

	    _React$Component.call(this, props, context);

	    this.handleSelect = this.handleSelect.bind(this);
	  }

	  PagerItem.prototype.handleSelect = function handleSelect(e) {
	    var _props = this.props;
	    var disabled = _props.disabled;
	    var onSelect = _props.onSelect;
	    var eventKey = _props.eventKey;

	    if (onSelect || disabled) {
	      e.preventDefault();
	    }

	    if (disabled) {
	      return;
	    }

	    if (onSelect) {
	      onSelect(eventKey, e);
	    }
	  };

	  PagerItem.prototype.render = function render() {
	    var _props2 = this.props;
	    var disabled = _props2.disabled;
	    var previous = _props2.previous;
	    var next = _props2.next;
	    var onClick = _props2.onClick;
	    var className = _props2.className;
	    var style = _props2.style;

	    var props = _objectWithoutProperties(_props2, ['disabled', 'previous', 'next', 'onClick', 'className', 'style']);

	    delete props.onSelect;
	    delete props.eventKey;

	    return _react2['default'].createElement(
	      'li',
	      {
	        className: _classnames2['default'](className, { disabled: disabled, previous: previous, next: next }),
	        style: style
	      },
	      _react2['default'].createElement(_SafeAnchor2['default'], _extends({}, props, {
	        disabled: disabled,
	        onClick: _utilsCreateChainedFunction2['default'](onClick, this.handleSelect)
	      }))
	    );
	  };

	  return PagerItem;
	})(_react2['default'].Component);

	PagerItem.propTypes = propTypes;
	PagerItem.defaultProps = defaultProps;

	exports['default'] = PagerItem;
	module.exports = exports['default'];

/***/ },
/* 482 */
/***/ function(module, exports, __webpack_require__) {

	/* WEBPACK VAR INJECTION */(function(process) {'use strict';

	var _inherits = __webpack_require__(254)['default'];

	var _classCallCheck = __webpack_require__(330)['default'];

	var _interopRequireDefault = __webpack_require__(249)['default'];

	exports.__esModule = true;
	exports._resetWarned = _resetWarned;

	var _warning = __webpack_require__(178);

	var _warning2 = _interopRequireDefault(_warning);

	var warned = {};

	function deprecationWarning(oldname, newname, link) {
	  var message = undefined;

	  if (typeof oldname === 'object') {
	    message = oldname.message;
	  } else {
	    message = oldname + ' is deprecated. Use ' + newname + ' instead.';

	    if (link) {
	      message += '\nYou can read more about it at ' + link;
	    }
	  }

	  if (warned[message]) {
	    return;
	  }

	  process.env.NODE_ENV !== 'production' ? _warning2['default'](false, message) : undefined;
	  warned[message] = true;
	}

	deprecationWarning.wrapper = function (Component) {
	  for (var _len = arguments.length, args = Array(_len > 1 ? _len - 1 : 0), _key = 1; _key < _len; _key++) {
	    args[_key - 1] = arguments[_key];
	  }

	  return (function (_Component) {
	    _inherits(DeprecatedComponent, _Component);

	    function DeprecatedComponent() {
	      _classCallCheck(this, DeprecatedComponent);

	      _Component.apply(this, arguments);
	    }

	    DeprecatedComponent.prototype.componentWillMount = function componentWillMount() {
	      deprecationWarning.apply(undefined, args);

	      if (_Component.prototype.componentWillMount) {
	        var _Component$prototype$componentWillMount;

	        for (var _len2 = arguments.length, methodArgs = Array(_len2), _key2 = 0; _key2 < _len2; _key2++) {
	          methodArgs[_key2] = arguments[_key2];
	        }

	        (_Component$prototype$componentWillMount = _Component.prototype.componentWillMount).call.apply(_Component$prototype$componentWillMount, [this].concat(methodArgs));
	      }
	    };

	    return DeprecatedComponent;
	  })(Component);
	};

	exports['default'] = deprecationWarning;

	function _resetWarned() {
	  warned = {};
	}
	/* WEBPACK VAR INJECTION */}.call(exports, __webpack_require__(4)))

/***/ },
/* 483 */
/***/ function(module, exports, __webpack_require__) {

	'use strict';

	var _inherits = __webpack_require__(254)['default'];

	var _classCallCheck = __webpack_require__(330)['default'];

	var _objectWithoutProperties = __webpack_require__(338)['default'];

	var _extends = __webpack_require__(332)['default'];

	var _interopRequireDefault = __webpack_require__(249)['default'];

	exports.__esModule = true;

	var _classnames = __webpack_require__(340);

	var _classnames2 = _interopRequireDefault(_classnames);

	var _react = __webpack_require__(2);

	var _react2 = _interopRequireDefault(_react);

	var _PagerItem = __webpack_require__(481);

	var _PagerItem2 = _interopRequireDefault(_PagerItem);

	var _utilsBootstrapUtils = __webpack_require__(341);

	var _utilsCreateChainedFunction = __webpack_require__(347);

	var _utilsCreateChainedFunction2 = _interopRequireDefault(_utilsCreateChainedFunction);

	var _utilsValidComponentChildren = __webpack_require__(348);

	var _utilsValidComponentChildren2 = _interopRequireDefault(_utilsValidComponentChildren);

	var propTypes = {
	  onSelect: _react2['default'].PropTypes.func
	};

	var Pager = (function (_React$Component) {
	  _inherits(Pager, _React$Component);

	  function Pager() {
	    _classCallCheck(this, Pager);

	    _React$Component.apply(this, arguments);
	  }

	  Pager.prototype.render = function render() {
	    var _props = this.props;
	    var onSelect = _props.onSelect;
	    var className = _props.className;
	    var children = _props.children;

	    var props = _objectWithoutProperties(_props, ['onSelect', 'className', 'children']);

	    var _splitBsProps = _utilsBootstrapUtils.splitBsProps(props);

	    var bsProps = _splitBsProps[0];
	    var elementProps = _splitBsProps[1];

	    var classes = _utilsBootstrapUtils.getClassSet(bsProps);

	    return _react2['default'].createElement(
	      'ul',
	      _extends({}, elementProps, {
	        className: _classnames2['default'](className, classes)
	      }),
	      _utilsValidComponentChildren2['default'].map(children, function (child) {
	        return _react.cloneElement(child, {
	          onSelect: _utilsCreateChainedFunction2['default'](child.props.onSelect, onSelect)
	        });
	      })
	    );
	  };

	  return Pager;
	})(_react2['default'].Component);

	Pager.propTypes = propTypes;

	Pager.Item = _PagerItem2['default'];

	exports['default'] = _utilsBootstrapUtils.bsClass('pager', Pager);
	module.exports = exports['default'];

/***/ },
/* 484 */
/***/ function(module, exports, __webpack_require__) {

	'use strict';

	var _inherits = __webpack_require__(254)['default'];

	var _classCallCheck = __webpack_require__(330)['default'];

	var _extends = __webpack_require__(332)['default'];

	var _objectWithoutProperties = __webpack_require__(338)['default'];

	var _interopRequireDefault = __webpack_require__(249)['default'];

	exports.__esModule = true;

	var _classnames = __webpack_require__(340);

	var _classnames2 = _interopRequireDefault(_classnames);

	var _react = __webpack_require__(2);

	var _react2 = _interopRequireDefault(_react);

	var _reactPropTypesLibElementType = __webpack_require__(357);

	var _reactPropTypesLibElementType2 = _interopRequireDefault(_reactPropTypesLibElementType);

	var _PaginationButton = __webpack_require__(485);

	var _PaginationButton2 = _interopRequireDefault(_PaginationButton);

	var _utilsBootstrapUtils = __webpack_require__(341);

	var propTypes = {
	  activePage: _react2['default'].PropTypes.number,
	  items: _react2['default'].PropTypes.number,
	  maxButtons: _react2['default'].PropTypes.number,

	  /**
	   * When `true`, will display the first and the last button page
	   */
	  boundaryLinks: _react2['default'].PropTypes.bool,

	  /**
	   * When `true`, will display the default node value ('&hellip;').
	   * Otherwise, will display provided node (when specified).
	   */
	  ellipsis: _react2['default'].PropTypes.oneOfType([_react2['default'].PropTypes.bool, _react2['default'].PropTypes.node]),

	  /**
	   * When `true`, will display the default node value ('&laquo;').
	   * Otherwise, will display provided node (when specified).
	   */
	  first: _react2['default'].PropTypes.oneOfType([_react2['default'].PropTypes.bool, _react2['default'].PropTypes.node]),

	  /**
	   * When `true`, will display the default node value ('&raquo;').
	   * Otherwise, will display provided node (when specified).
	   */
	  last: _react2['default'].PropTypes.oneOfType([_react2['default'].PropTypes.bool, _react2['default'].PropTypes.node]),

	  /**
	   * When `true`, will display the default node value ('&lsaquo;').
	   * Otherwise, will display provided node (when specified).
	   */
	  prev: _react2['default'].PropTypes.oneOfType([_react2['default'].PropTypes.bool, _react2['default'].PropTypes.node]),

	  /**
	   * When `true`, will display the default node value ('&rsaquo;').
	   * Otherwise, will display provided node (when specified).
	   */
	  next: _react2['default'].PropTypes.oneOfType([_react2['default'].PropTypes.bool, _react2['default'].PropTypes.node]),

	  onSelect: _react2['default'].PropTypes.func,

	  /**
	   * You can use a custom element for the buttons
	   */
	  buttonComponentClass: _reactPropTypesLibElementType2['default']
	};

	var defaultProps = {
	  activePage: 1,
	  items: 1,
	  maxButtons: 0,
	  first: false,
	  last: false,
	  prev: false,
	  next: false,
	  ellipsis: true,
	  boundaryLinks: false
	};

	var Pagination = (function (_React$Component) {
	  _inherits(Pagination, _React$Component);

	  function Pagination() {
	    _classCallCheck(this, Pagination);

	    _React$Component.apply(this, arguments);
	  }

	  Pagination.prototype.renderPageButtons = function renderPageButtons(activePage, items, maxButtons, boundaryLinks, ellipsis, buttonProps) {
	    var pageButtons = [];

	    var startPage = undefined;
	    var endPage = undefined;
	    var hasHiddenPagesAfter = undefined;

	    if (maxButtons) {
	      var hiddenPagesBefore = activePage - parseInt(maxButtons / 2, 10);
	      startPage = hiddenPagesBefore > 1 ? hiddenPagesBefore : 1;
	      hasHiddenPagesAfter = startPage + maxButtons <= items;

	      if (!hasHiddenPagesAfter) {
	        endPage = items;
	        startPage = items - maxButtons + 1;
	        if (startPage < 1) {
	          startPage = 1;
	        }
	      } else {
	        endPage = startPage + maxButtons - 1;
	      }
	    } else {
	      startPage = 1;
	      endPage = items;
	    }

	    for (var pagenumber = startPage; pagenumber <= endPage; pagenumber++) {
	      pageButtons.push(_react2['default'].createElement(
	        _PaginationButton2['default'],
	        _extends({}, buttonProps, {
	          key: pagenumber,
	          eventKey: pagenumber,
	          active: pagenumber === activePage
	        }),
	        pagenumber
	      ));
	    }

	    if (boundaryLinks && ellipsis && startPage !== 1) {
	      pageButtons.unshift(_react2['default'].createElement(
	        _PaginationButton2['default'],
	        {
	          key: 'ellipsisFirst',
	          disabled: true,
	          componentClass: buttonProps.componentClass
	        },
	        _react2['default'].createElement(
	          'span',
	          { 'aria-label': 'More' },
	          ellipsis === true ? '…' : ellipsis
	        )
	      ));

	      pageButtons.unshift(_react2['default'].createElement(
	        _PaginationButton2['default'],
	        _extends({}, buttonProps, {
	          key: 1,
	          eventKey: 1,
	          active: false
	        }),
	        '1'
	      ));
	    }

	    if (maxButtons && hasHiddenPagesAfter && ellipsis) {
	      pageButtons.push(_react2['default'].createElement(
	        _PaginationButton2['default'],
	        {
	          key: 'ellipsis',
	          disabled: true,
	          componentClass: buttonProps.componentClass
	        },
	        _react2['default'].createElement(
	          'span',
	          { 'aria-label': 'More' },
	          ellipsis === true ? '…' : ellipsis
	        )
	      ));

	      if (boundaryLinks && endPage !== items) {
	        pageButtons.push(_react2['default'].createElement(
	          _PaginationButton2['default'],
	          _extends({}, buttonProps, {
	            key: items,
	            eventKey: items,
	            active: false
	          }),
	          items
	        ));
	      }
	    }

	    return pageButtons;
	  };

	  Pagination.prototype.render = function render() {
	    var _props = this.props;
	    var activePage = _props.activePage;
	    var items = _props.items;
	    var maxButtons = _props.maxButtons;
	    var boundaryLinks = _props.boundaryLinks;
	    var ellipsis = _props.ellipsis;
	    var first = _props.first;
	    var last = _props.last;
	    var prev = _props.prev;
	    var next = _props.next;
	    var onSelect = _props.onSelect;
	    var buttonComponentClass = _props.buttonComponentClass;
	    var className = _props.className;

	    var props = _objectWithoutProperties(_props, ['activePage', 'items', 'maxButtons', 'boundaryLinks', 'ellipsis', 'first', 'last', 'prev', 'next', 'onSelect', 'buttonComponentClass', 'className']);

	    var _splitBsProps = _utilsBootstrapUtils.splitBsProps(props);

	    var bsProps = _splitBsProps[0];
	    var elementProps = _splitBsProps[1];

	    var classes = _utilsBootstrapUtils.getClassSet(bsProps);

	    var buttonProps = {
	      onSelect: onSelect,
	      componentClass: buttonComponentClass
	    };

	    return _react2['default'].createElement(
	      'ul',
	      _extends({}, elementProps, {
	        className: _classnames2['default'](className, classes)
	      }),
	      first && _react2['default'].createElement(
	        _PaginationButton2['default'],
	        _extends({}, buttonProps, {
	          eventKey: 1,
	          disabled: activePage === 1
	        }),
	        _react2['default'].createElement(
	          'span',
	          { 'aria-label': 'First' },
	          first === true ? '«' : first
	        )
	      ),
	      prev && _react2['default'].createElement(
	        _PaginationButton2['default'],
	        _extends({}, buttonProps, {
	          eventKey: activePage - 1,
	          disabled: activePage === 1
	        }),
	        _react2['default'].createElement(
	          'span',
	          { 'aria-label': 'Previous' },
	          prev === true ? '‹' : prev
	        )
	      ),
	      this.renderPageButtons(activePage, items, maxButtons, boundaryLinks, ellipsis, buttonProps),
	      next && _react2['default'].createElement(
	        _PaginationButton2['default'],
	        _extends({}, buttonProps, {
	          eventKey: activePage + 1,
	          disabled: activePage >= items
	        }),
	        _react2['default'].createElement(
	          'span',
	          { 'aria-label': 'Next' },
	          next === true ? '›' : next
	        )
	      ),
	      last && _react2['default'].createElement(
	        _PaginationButton2['default'],
	        _extends({}, buttonProps, {
	          eventKey: items,
	          disabled: activePage >= items
	        }),
	        _react2['default'].createElement(
	          'span',
	          { 'aria-label': 'Last' },
	          last === true ? '»' : last
	        )
	      )
	    );
	  };

	  return Pagination;
	})(_react2['default'].Component);

	Pagination.propTypes = propTypes;
	Pagination.defaultProps = defaultProps;

	exports['default'] = _utilsBootstrapUtils.bsClass('pagination', Pagination);
	module.exports = exports['default'];

/***/ },
/* 485 */
/***/ function(module, exports, __webpack_require__) {

	'use strict';

	var _inherits = __webpack_require__(254)['default'];

	var _classCallCheck = __webpack_require__(330)['default'];

	var _objectWithoutProperties = __webpack_require__(338)['default'];

	var _extends = __webpack_require__(332)['default'];

	var _interopRequireDefault = __webpack_require__(249)['default'];

	exports.__esModule = true;

	var _classnames = __webpack_require__(340);

	var _classnames2 = _interopRequireDefault(_classnames);

	var _react = __webpack_require__(2);

	var _react2 = _interopRequireDefault(_react);

	var _reactPropTypesLibElementType = __webpack_require__(357);

	var _reactPropTypesLibElementType2 = _interopRequireDefault(_reactPropTypesLibElementType);

	var _SafeAnchor = __webpack_require__(356);

	var _SafeAnchor2 = _interopRequireDefault(_SafeAnchor);

	var _utilsCreateChainedFunction = __webpack_require__(347);

	var _utilsCreateChainedFunction2 = _interopRequireDefault(_utilsCreateChainedFunction);

	// TODO: This should be `<Pagination.Item>`.

	// TODO: This should use `componentClass` like other components.

	var propTypes = {
	  componentClass: _reactPropTypesLibElementType2['default'],
	  className: _react2['default'].PropTypes.string,
	  eventKey: _react2['default'].PropTypes.any,
	  onSelect: _react2['default'].PropTypes.func,
	  disabled: _react2['default'].PropTypes.bool,
	  active: _react2['default'].PropTypes.bool,
	  onClick: _react2['default'].PropTypes.func
	};

	var defaultProps = {
	  componentClass: _SafeAnchor2['default'],
	  active: false,
	  disabled: false
	};

	var PaginationButton = (function (_React$Component) {
	  _inherits(PaginationButton, _React$Component);

	  function PaginationButton(props, context) {
	    _classCallCheck(this, PaginationButton);

	    _React$Component.call(this, props, context);

	    this.handleClick = this.handleClick.bind(this);
	  }

	  PaginationButton.prototype.handleClick = function handleClick(event) {
	    var _props = this.props;
	    var disabled = _props.disabled;
	    var onSelect = _props.onSelect;
	    var eventKey = _props.eventKey;

	    if (disabled) {
	      return;
	    }

	    if (onSelect) {
	      onSelect(eventKey, event);
	    }
	  };

	  PaginationButton.prototype.render = function render() {
	    var _props2 = this.props;
	    var Component = _props2.componentClass;
	    var active = _props2.active;
	    var disabled = _props2.disabled;
	    var onClick = _props2.onClick;
	    var className = _props2.className;
	    var style = _props2.style;

	    var props = _objectWithoutProperties(_props2, ['componentClass', 'active', 'disabled', 'onClick', 'className', 'style']);

	    if (Component === _SafeAnchor2['default']) {
	      // Assume that custom components want `eventKey`.
	      delete props.eventKey;
	    }

	    delete props.onSelect;

	    return _react2['default'].createElement(
	      'li',
	      {
	        className: _classnames2['default'](className, { active: active, disabled: disabled }),
	        style: style
	      },
	      _react2['default'].createElement(Component, _extends({}, props, {
	        disabled: disabled,
	        onClick: _utilsCreateChainedFunction2['default'](onClick, this.handleClick)
	      }))
	    );
	  };

	  return PaginationButton;
	})(_react2['default'].Component);

	PaginationButton.propTypes = propTypes;
	PaginationButton.defaultProps = defaultProps;

	exports['default'] = PaginationButton;
	module.exports = exports['default'];

/***/ },
/* 486 */
/***/ function(module, exports, __webpack_require__) {

	'use strict';

	var _inherits = __webpack_require__(254)['default'];

	var _classCallCheck = __webpack_require__(330)['default'];

	var _extends = __webpack_require__(332)['default'];

	var _objectWithoutProperties = __webpack_require__(338)['default'];

	var _Object$values = __webpack_require__(350)['default'];

	var _interopRequireDefault = __webpack_require__(249)['default'];

	exports.__esModule = true;

	var _classnames = __webpack_require__(340);

	var _classnames2 = _interopRequireDefault(_classnames);

	var _react = __webpack_require__(2);

	var _react2 = _interopRequireDefault(_react);

	var _Collapse = __webpack_require__(373);

	var _Collapse2 = _interopRequireDefault(_Collapse);

	var _utilsBootstrapUtils = __webpack_require__(341);

	var _utilsStyleConfig = __webpack_require__(346);

	// TODO: Use uncontrollable.

	var propTypes = {
	  collapsible: _react2['default'].PropTypes.bool,
	  onSelect: _react2['default'].PropTypes.func,
	  header: _react2['default'].PropTypes.node,
	  id: _react2['default'].PropTypes.oneOfType([_react2['default'].PropTypes.string, _react2['default'].PropTypes.number]),
	  footer: _react2['default'].PropTypes.node,
	  defaultExpanded: _react2['default'].PropTypes.bool,
	  expanded: _react2['default'].PropTypes.bool,
	  eventKey: _react2['default'].PropTypes.any,
	  headerRole: _react2['default'].PropTypes.string,
	  panelRole: _react2['default'].PropTypes.string,

	  // From Collapse.
	  onEnter: _react2['default'].PropTypes.func,
	  onEntering: _react2['default'].PropTypes.func,
	  onEntered: _react2['default'].PropTypes.func,
	  onExit: _react2['default'].PropTypes.func,
	  onExiting: _react2['default'].PropTypes.func,
	  onExited: _react2['default'].PropTypes.func
	};

	var defaultProps = {
	  defaultExpanded: false
	};

	var Panel = (function (_React$Component) {
	  _inherits(Panel, _React$Component);

	  function Panel(props, context) {
	    _classCallCheck(this, Panel);

	    _React$Component.call(this, props, context);

	    this.handleClickTitle = this.handleClickTitle.bind(this);

	    this.state = {
	      expanded: this.props.defaultExpanded
	    };
	  }

	  Panel.prototype.handleClickTitle = function handleClickTitle(e) {
	    // FIXME: What the heck? This API is horrible. This needs to go away!
	    e.persist();
	    e.selected = true;

	    if (this.props.onSelect) {
	      this.props.onSelect(this.props.eventKey, e);
	    } else {
	      e.preventDefault();
	    }

	    if (e.selected) {
	      this.setState({ expanded: !this.state.expanded });
	    }
	  };

	  Panel.prototype.shouldRenderFill = function shouldRenderFill(child) {
	    return _react2['default'].isValidElement(child) && child.props.fill != null;
	  };

	  Panel.prototype.renderHeader = function renderHeader(collapsible, header, id, role, expanded, bsProps) {
	    var titleClassName = _utilsBootstrapUtils.prefix(bsProps, 'title');

	    if (!collapsible) {
	      if (!_react2['default'].isValidElement(header)) {
	        return header;
	      }

	      return _react.cloneElement(header, {
	        className: _classnames2['default'](header.props.className, titleClassName)
	      });
	    }

	    if (!_react2['default'].isValidElement(header)) {
	      return _react2['default'].createElement(
	        'h4',
	        { role: 'presentation', className: titleClassName },
	        this.renderAnchor(header, id, role, expanded)
	      );
	    }

	    return _react.cloneElement(header, {
	      className: _classnames2['default'](header.props.className, titleClassName),
	      children: this.renderAnchor(header.props.children, role)
	    });
	  };

	  Panel.prototype.renderAnchor = function renderAnchor(header, id, role, expanded) {
	    return _react2['default'].createElement(
	      'a',
	      {
	        role: role,
	        href: id && '#' + id,
	        onClick: this.handleClickTitle,
	        'aria-controls': id,
	        'aria-expanded': expanded,
	        'aria-selected': expanded
	      },
	      header
	    );
	  };

	  Panel.prototype.renderCollapsibleBody = function renderCollapsibleBody(id, expanded, role, children, bsProps, animationHooks) {
	    return _react2['default'].createElement(
	      _Collapse2['default'],
	      _extends({ 'in': expanded }, animationHooks),
	      _react2['default'].createElement(
	        'div',
	        {
	          id: id,
	          role: role,
	          className: _utilsBootstrapUtils.prefix(bsProps, 'collapse'),
	          'aria-hidden': !expanded
	        },
	        this.renderBody(children, bsProps)
	      )
	    );
	  };

	  Panel.prototype.renderBody = function renderBody(rawChildren, bsProps) {
	    var children = [];
	    var bodyChildren = [];

	    var bodyClassName = _utilsBootstrapUtils.prefix(bsProps, 'body');

	    function maybeAddBody() {
	      if (!bodyChildren.length) {
	        return;
	      }

	      // Derive the key from the index here, since we need to make one up.
	      children.push(_react2['default'].createElement(
	        'div',
	        { key: children.length, className: bodyClassName },
	        bodyChildren
	      ));

	      bodyChildren = [];
	    }

	    // Convert to array so we can re-use keys.
	    _react2['default'].Children.toArray(rawChildren).forEach(function (child) {
	      if (_react2['default'].isValidElement(child) && child.props.fill) {
	        maybeAddBody();

	        // Remove the child's unknown `fill` prop.
	        children.push(_react.cloneElement(child, { fill: undefined }));

	        return;
	      }

	      bodyChildren.push(child);
	    });

	    maybeAddBody();

	    return children;
	  };

	  Panel.prototype.render = function render() {
	    var _props = this.props;
	    var collapsible = _props.collapsible;
	    var header = _props.header;
	    var id = _props.id;
	    var footer = _props.footer;
	    var propsExpanded = _props.expanded;
	    var headerRole = _props.headerRole;
	    var panelRole = _props.panelRole;
	    var className = _props.className;
	    var children = _props.children;
	    var onEnter = _props.onEnter;
	    var onEntering = _props.onEntering;
	    var onEntered = _props.onEntered;
	    var onExit = _props.onExit;
	    var onExiting = _props.onExiting;
	    var onExited = _props.onExited;

	    var props = _objectWithoutProperties(_props, ['collapsible', 'header', 'id', 'footer', 'expanded', 'headerRole', 'panelRole', 'className', 'children', 'onEnter', 'onEntering', 'onEntered', 'onExit', 'onExiting', 'onExited']);

	    var _splitBsPropsAndOmit = _utilsBootstrapUtils.splitBsPropsAndOmit(props, ['defaultExpanded', 'eventKey', 'onSelect']);

	    var bsProps = _splitBsPropsAndOmit[0];
	    var elementProps = _splitBsPropsAndOmit[1];

	    var expanded = propsExpanded != null ? propsExpanded : this.state.expanded;

	    var classes = _utilsBootstrapUtils.getClassSet(bsProps);

	    return _react2['default'].createElement(
	      'div',
	      _extends({}, elementProps, {
	        className: _classnames2['default'](className, classes),
	        id: collapsible ? null : id
	      }),
	      header && _react2['default'].createElement(
	        'div',
	        { className: _utilsBootstrapUtils.prefix(bsProps, 'heading') },
	        this.renderHeader(collapsible, header, id, headerRole, expanded, bsProps)
	      ),
	      collapsible ? this.renderCollapsibleBody(id, expanded, panelRole, children, bsProps, { onEnter: onEnter, onEntering: onEntering, onEntered: onEntered, onExit: onExit, onExiting: onExiting, onExited: onExited }) : this.renderBody(children, bsProps),
	      footer && _react2['default'].createElement(
	        'div',
	        { className: _utilsBootstrapUtils.prefix(bsProps, 'footer') },
	        footer
	      )
	    );
	  };

	  return Panel;
	})(_react2['default'].Component);

	Panel.propTypes = propTypes;
	Panel.defaultProps = defaultProps;

	exports['default'] = _utilsBootstrapUtils.bsClass('panel', _utilsBootstrapUtils.bsStyles([].concat(_Object$values(_utilsStyleConfig.State), [_utilsStyleConfig.Style.DEFAULT, _utilsStyleConfig.Style.PRIMARY]), _utilsStyleConfig.Style.DEFAULT, Panel));
	module.exports = exports['default'];

/***/ },
/* 487 */
/***/ function(module, exports, __webpack_require__) {

	'use strict';

	var _inherits = __webpack_require__(254)['default'];

	var _classCallCheck = __webpack_require__(330)['default'];

	var _extends = __webpack_require__(332)['default'];

	var _objectWithoutProperties = __webpack_require__(338)['default'];

	var _interopRequireDefault = __webpack_require__(249)['default'];

	exports.__esModule = true;

	var _classnames = __webpack_require__(340);

	var _classnames2 = _interopRequireDefault(_classnames);

	var _react = __webpack_require__(2);

	var _react2 = _interopRequireDefault(_react);

	var _reactPropTypesLibIsRequiredForA11y = __webpack_require__(391);

	var _reactPropTypesLibIsRequiredForA11y2 = _interopRequireDefault(_reactPropTypesLibIsRequiredForA11y);

	var _utilsBootstrapUtils = __webpack_require__(341);

	var propTypes = {
	  /**
	   * An html id attribute, necessary for accessibility
	   * @type {string}
	   * @required
	   */
	  id: _reactPropTypesLibIsRequiredForA11y2['default'](_react2['default'].PropTypes.oneOfType([_react2['default'].PropTypes.string, _react2['default'].PropTypes.number])),

	  /**
	   * Sets the direction the Popover is positioned towards.
	   */
	  placement: _react2['default'].PropTypes.oneOf(['top', 'right', 'bottom', 'left']),

	  /**
	   * The "top" position value for the Popover.
	   */
	  positionTop: _react2['default'].PropTypes.oneOfType([_react2['default'].PropTypes.number, _react2['default'].PropTypes.string]),
	  /**
	   * The "left" position value for the Popover.
	   */
	  positionLeft: _react2['default'].PropTypes.oneOfType([_react2['default'].PropTypes.number, _react2['default'].PropTypes.string]),

	  /**
	   * The "top" position value for the Popover arrow.
	   */
	  arrowOffsetTop: _react2['default'].PropTypes.oneOfType([_react2['default'].PropTypes.number, _react2['default'].PropTypes.string]),
	  /**
	   * The "left" position value for the Popover arrow.
	   */
	  arrowOffsetLeft: _react2['default'].PropTypes.oneOfType([_react2['default'].PropTypes.number, _react2['default'].PropTypes.string]),

	  /**
	   * Title content
	   */
	  title: _react2['default'].PropTypes.node
	};

	var defaultProps = {
	  placement: 'right'
	};

	var Popover = (function (_React$Component) {
	  _inherits(Popover, _React$Component);

	  function Popover() {
	    _classCallCheck(this, Popover);

	    _React$Component.apply(this, arguments);
	  }

	  Popover.prototype.render = function render() {
	    var _extends2;

	    var _props = this.props;
	    var placement = _props.placement;
	    var positionTop = _props.positionTop;
	    var positionLeft = _props.positionLeft;
	    var arrowOffsetTop = _props.arrowOffsetTop;
	    var arrowOffsetLeft = _props.arrowOffsetLeft;
	    var title = _props.title;
	    var className = _props.className;
	    var style = _props.style;
	    var children = _props.children;

	    var props = _objectWithoutProperties(_props, ['placement', 'positionTop', 'positionLeft', 'arrowOffsetTop', 'arrowOffsetLeft', 'title', 'className', 'style', 'children']);

	    var _splitBsProps = _utilsBootstrapUtils.splitBsProps(props);

	    var bsProps = _splitBsProps[0];
	    var elementProps = _splitBsProps[1];

	    var classes = _extends({}, _utilsBootstrapUtils.getClassSet(bsProps), (_extends2 = {}, _extends2[placement] = true, _extends2));

	    var outerStyle = _extends({
	      display: 'block',
	      top: positionTop,
	      left: positionLeft
	    }, style);

	    var arrowStyle = {
	      top: arrowOffsetTop,
	      left: arrowOffsetLeft
	    };

	    return _react2['default'].createElement(
	      'div',
	      _extends({}, elementProps, {
	        role: 'tooltip',
	        className: _classnames2['default'](className, classes),
	        style: outerStyle
	      }),
	      _react2['default'].createElement('div', { className: 'arrow', style: arrowStyle }),
	      title && _react2['default'].createElement(
	        'h3',
	        { className: _utilsBootstrapUtils.prefix(bsProps, 'title') },
	        title
	      ),
	      _react2['default'].createElement(
	        'div',
	        { className: _utilsBootstrapUtils.prefix(bsProps, 'content') },
	        children
	      )
	    );
	  };

	  return Popover;
	})(_react2['default'].Component);

	Popover.propTypes = propTypes;
	Popover.defaultProps = defaultProps;

	exports['default'] = _utilsBootstrapUtils.bsClass('popover', Popover);
	module.exports = exports['default'];

/***/ },
/* 488 */
/***/ function(module, exports, __webpack_require__) {

	'use strict';

	var _inherits = __webpack_require__(254)['default'];

	var _classCallCheck = __webpack_require__(330)['default'];

	var _extends = __webpack_require__(332)['default'];

	var _objectWithoutProperties = __webpack_require__(338)['default'];

	var _Object$values = __webpack_require__(350)['default'];

	var _interopRequireDefault = __webpack_require__(249)['default'];

	exports.__esModule = true;

	var _classnames = __webpack_require__(340);

	var _classnames2 = _interopRequireDefault(_classnames);

	var _react = __webpack_require__(2);

	var _react2 = _interopRequireDefault(_react);

	var _utilsBootstrapUtils = __webpack_require__(341);

	var _utilsStyleConfig = __webpack_require__(346);

	var _utilsValidComponentChildren = __webpack_require__(348);

	var _utilsValidComponentChildren2 = _interopRequireDefault(_utilsValidComponentChildren);

	var ROUND_PRECISION = 1000;

	/**
	 * Validate that children, if any, are instances of `<ProgressBar>`.
	 */
	function onlyProgressBar(props, propName, componentName) {
	  var children = props[propName];
	  if (!children) {
	    return null;
	  }

	  var error = null;

	  _react2['default'].Children.forEach(children, function (child) {
	    if (error) {
	      return;
	    }

	    if (child.type === ProgressBar) {
	      // eslint-disable-line no-use-before-define
	      return;
	    }

	    var childIdentifier = _react2['default'].isValidElement(child) ? child.type.displayName || child.type.name || child.type : child;
	    error = new Error('Children of ' + componentName + ' can contain only ProgressBar ' + ('components. Found ' + childIdentifier + '.'));
	  });

	  return error;
	}

	var propTypes = {
	  min: _react.PropTypes.number,
	  now: _react.PropTypes.number,
	  max: _react.PropTypes.number,
	  label: _react.PropTypes.node,
	  srOnly: _react.PropTypes.bool,
	  striped: _react.PropTypes.bool,
	  active: _react.PropTypes.bool,
	  children: onlyProgressBar,

	  /**
	   * @private
	   */
	  isChild: _react.PropTypes.bool
	};

	var defaultProps = {
	  min: 0,
	  max: 100,
	  active: false,
	  isChild: false,
	  srOnly: false,
	  striped: false
	};

	function getPercentage(now, min, max) {
	  var percentage = (now - min) / (max - min) * 100;
	  return Math.round(percentage * ROUND_PRECISION) / ROUND_PRECISION;
	}

	var ProgressBar = (function (_React$Component) {
	  _inherits(ProgressBar, _React$Component);

	  function ProgressBar() {
	    _classCallCheck(this, ProgressBar);

	    _React$Component.apply(this, arguments);
	  }

	  ProgressBar.prototype.renderProgressBar = function renderProgressBar(_ref) {
	    var _extends2;

	    var min = _ref.min;
	    var now = _ref.now;
	    var max = _ref.max;
	    var label = _ref.label;
	    var srOnly = _ref.srOnly;
	    var striped = _ref.striped;
	    var active = _ref.active;
	    var className = _ref.className;
	    var style = _ref.style;

	    var props = _objectWithoutProperties(_ref, ['min', 'now', 'max', 'label', 'srOnly', 'striped', 'active', 'className', 'style']);

	    var _splitBsProps = _utilsBootstrapUtils.splitBsProps(props);

	    var bsProps = _splitBsProps[0];
	    var elementProps = _splitBsProps[1];

	    var classes = _extends({}, _utilsBootstrapUtils.getClassSet(bsProps), (_extends2 = {
	      active: active
	    }, _extends2[_utilsBootstrapUtils.prefix(bsProps, 'striped')] = active || striped, _extends2));

	    return _react2['default'].createElement(
	      'div',
	      _extends({}, elementProps, {
	        role: 'progressbar',
	        className: _classnames2['default'](className, classes),
	        style: _extends({ width: getPercentage(now, min, max) + '%' }, style),
	        'aria-valuenow': now,
	        'aria-valuemin': min,
	        'aria-valuemax': max
	      }),
	      srOnly ? _react2['default'].createElement(
	        'span',
	        { className: 'sr-only' },
	        label
	      ) : label
	    );
	  };

	  ProgressBar.prototype.render = function render() {
	    var _props = this.props;
	    var isChild = _props.isChild;

	    var props = _objectWithoutProperties(_props, ['isChild']);

	    if (isChild) {
	      return this.renderProgressBar(props);
	    }

	    var min = props.min;
	    var now = props.now;
	    var max = props.max;
	    var label = props.label;
	    var srOnly = props.srOnly;
	    var striped = props.striped;
	    var active = props.active;
	    var bsClass = props.bsClass;
	    var bsStyle = props.bsStyle;
	    var className = props.className;
	    var children = props.children;

	    var wrapperProps = _objectWithoutProperties(props, ['min', 'now', 'max', 'label', 'srOnly', 'striped', 'active', 'bsClass', 'bsStyle', 'className', 'children']);

	    return _react2['default'].createElement(
	      'div',
	      _extends({}, wrapperProps, {
	        className: _classnames2['default'](className, 'progress')
	      }),
	      children ? _utilsValidComponentChildren2['default'].map(children, function (child) {
	        return _react.cloneElement(child, { isChild: true });
	      }) : this.renderProgressBar({
	        min: min, now: now, max: max, label: label, srOnly: srOnly, striped: striped, active: active, bsClass: bsClass, bsStyle: bsStyle
	      })
	    );
	  };

	  return ProgressBar;
	})(_react2['default'].Component);

	ProgressBar.propTypes = propTypes;
	ProgressBar.defaultProps = defaultProps;

	exports['default'] = _utilsBootstrapUtils.bsClass('progress-bar', _utilsBootstrapUtils.bsStyles(_Object$values(_utilsStyleConfig.State), ProgressBar));
	module.exports = exports['default'];

/***/ },
/* 489 */
/***/ function(module, exports, __webpack_require__) {

	/* WEBPACK VAR INJECTION */(function(process) {'use strict';

	var _inherits = __webpack_require__(254)['default'];

	var _classCallCheck = __webpack_require__(330)['default'];

	var _extends = __webpack_require__(332)['default'];

	var _objectWithoutProperties = __webpack_require__(338)['default'];

	var _interopRequireDefault = __webpack_require__(249)['default'];

	exports.__esModule = true;

	var _classnames = __webpack_require__(340);

	var _classnames2 = _interopRequireDefault(_classnames);

	var _react = __webpack_require__(2);

	var _react2 = _interopRequireDefault(_react);

	var _warning = __webpack_require__(178);

	var _warning2 = _interopRequireDefault(_warning);

	var _utilsBootstrapUtils = __webpack_require__(341);

	var propTypes = {
	  inline: _react2['default'].PropTypes.bool,
	  disabled: _react2['default'].PropTypes.bool,
	  /**
	   * Only valid if `inline` is not set.
	   */
	  validationState: _react2['default'].PropTypes.oneOf(['success', 'warning', 'error']),
	  /**
	   * Attaches a ref to the `<input>` element. Only functions can be used here.
	   *
	   * ```js
	   * <Radio inputRef={ref => { this.input = ref; }} />
	   * ```
	   */
	  inputRef: _react2['default'].PropTypes.func
	};

	var defaultProps = {
	  inline: false,
	  disabled: false
	};

	var Radio = (function (_React$Component) {
	  _inherits(Radio, _React$Component);

	  function Radio() {
	    _classCallCheck(this, Radio);

	    _React$Component.apply(this, arguments);
	  }

	  Radio.prototype.render = function render() {
	    var _props = this.props;
	    var inline = _props.inline;
	    var disabled = _props.disabled;
	    var validationState = _props.validationState;
	    var inputRef = _props.inputRef;
	    var className = _props.className;
	    var style = _props.style;
	    var children = _props.children;

	    var props = _objectWithoutProperties(_props, ['inline', 'disabled', 'validationState', 'inputRef', 'className', 'style', 'children']);

	    var _splitBsProps = _utilsBootstrapUtils.splitBsProps(props);

	    var bsProps = _splitBsProps[0];
	    var elementProps = _splitBsProps[1];

	    var input = _react2['default'].createElement('input', _extends({}, elementProps, {
	      ref: inputRef,
	      type: 'radio',
	      disabled: disabled
	    }));

	    if (inline) {
	      var _classes;

	      var _classes2 = (_classes = {}, _classes[_utilsBootstrapUtils.prefix(bsProps, 'inline')] = true, _classes.disabled = disabled, _classes);

	      // Use a warning here instead of in propTypes to get better-looking
	      // generated documentation.
	      process.env.NODE_ENV !== 'production' ? _warning2['default'](!validationState, '`validationState` is ignored on `<Radio inline>`. To display ' + 'validation state on an inline radio, set `validationState` on a ' + 'parent `<FormGroup>` or other element instead.') : undefined;

	      return _react2['default'].createElement(
	        'label',
	        { className: _classnames2['default'](className, _classes2), style: style },
	        input,
	        children
	      );
	    }

	    var classes = _extends({}, _utilsBootstrapUtils.getClassSet(bsProps), {
	      disabled: disabled
	    });
	    if (validationState) {
	      classes['has-' + validationState] = true;
	    }

	    return _react2['default'].createElement(
	      'div',
	      { className: _classnames2['default'](className, classes), style: style },
	      _react2['default'].createElement(
	        'label',
	        null,
	        input,
	        children
	      )
	    );
	  };

	  return Radio;
	})(_react2['default'].Component);

	Radio.propTypes = propTypes;
	Radio.defaultProps = defaultProps;

	exports['default'] = _utilsBootstrapUtils.bsClass('radio', Radio);
	module.exports = exports['default'];
	/* WEBPACK VAR INJECTION */}.call(exports, __webpack_require__(4)))

/***/ },
/* 490 */
/***/ function(module, exports, __webpack_require__) {

	/* WEBPACK VAR INJECTION */(function(process) {'use strict';

	var _inherits = __webpack_require__(254)['default'];

	var _classCallCheck = __webpack_require__(330)['default'];

	var _extends = __webpack_require__(332)['default'];

	var _objectWithoutProperties = __webpack_require__(338)['default'];

	var _interopRequireDefault = __webpack_require__(249)['default'];

	exports.__esModule = true;

	var _classnames = __webpack_require__(340);

	var _classnames2 = _interopRequireDefault(_classnames);

	var _react = __webpack_require__(2);

	var _react2 = _interopRequireDefault(_react);

	var _warning = __webpack_require__(178);

	var _warning2 = _interopRequireDefault(_warning);

	var _utilsBootstrapUtils = __webpack_require__(341);

	// TODO: This should probably take a single `aspectRatio` prop.

	var propTypes = {
	  /**
	   * This component requires a single child element
	   */
	  children: _react.PropTypes.element.isRequired,
	  /**
	   * 16by9 aspect ratio
	   */
	  a16by9: _react.PropTypes.bool,
	  /**
	   * 4by3 aspect ratio
	   */
	  a4by3: _react.PropTypes.bool
	};

	var defaultProps = {
	  a16by9: false,
	  a4by3: false
	};

	var ResponsiveEmbed = (function (_React$Component) {
	  _inherits(ResponsiveEmbed, _React$Component);

	  function ResponsiveEmbed() {
	    _classCallCheck(this, ResponsiveEmbed);

	    _React$Component.apply(this, arguments);
	  }

	  ResponsiveEmbed.prototype.render = function render() {
	    var _extends2;

	    var _props = this.props;
	    var a16by9 = _props.a16by9;
	    var a4by3 = _props.a4by3;
	    var className = _props.className;
	    var children = _props.children;

	    var props = _objectWithoutProperties(_props, ['a16by9', 'a4by3', 'className', 'children']);

	    var _splitBsProps = _utilsBootstrapUtils.splitBsProps(props);

	    var bsProps = _splitBsProps[0];
	    var elementProps = _splitBsProps[1];

	    process.env.NODE_ENV !== 'production' ? _warning2['default'](a16by9 || a4by3, 'Either `a16by9` or `a4by3` must be set.') : undefined;
	    process.env.NODE_ENV !== 'production' ? _warning2['default'](!(a16by9 && a4by3), 'Only one of `a16by9` or `a4by3` can be set.') : undefined;

	    var classes = _extends({}, _utilsBootstrapUtils.getClassSet(bsProps), (_extends2 = {}, _extends2[_utilsBootstrapUtils.prefix(bsProps, '16by9')] = a16by9, _extends2[_utilsBootstrapUtils.prefix(bsProps, '4by3')] = a4by3, _extends2));

	    return _react2['default'].createElement(
	      'div',
	      { className: _classnames2['default'](classes) },
	      _react.cloneElement(children, _extends({}, elementProps, {
	        className: _classnames2['default'](className, _utilsBootstrapUtils.prefix(bsProps, 'item'))
	      }))
	    );
	  };

	  return ResponsiveEmbed;
	})(_react2['default'].Component);

	ResponsiveEmbed.propTypes = propTypes;
	ResponsiveEmbed.defaultProps = defaultProps;

	exports['default'] = _utilsBootstrapUtils.bsClass('embed-responsive', ResponsiveEmbed);
	module.exports = exports['default'];
	/* WEBPACK VAR INJECTION */}.call(exports, __webpack_require__(4)))

/***/ },
/* 491 */
/***/ function(module, exports, __webpack_require__) {

	'use strict';

	var _inherits = __webpack_require__(254)['default'];

	var _classCallCheck = __webpack_require__(330)['default'];

	var _objectWithoutProperties = __webpack_require__(338)['default'];

	var _extends = __webpack_require__(332)['default'];

	var _interopRequireDefault = __webpack_require__(249)['default'];

	exports.__esModule = true;

	var _classnames = __webpack_require__(340);

	var _classnames2 = _interopRequireDefault(_classnames);

	var _react = __webpack_require__(2);

	var _react2 = _interopRequireDefault(_react);

	var _reactPropTypesLibElementType = __webpack_require__(357);

	var _reactPropTypesLibElementType2 = _interopRequireDefault(_reactPropTypesLibElementType);

	var _utilsBootstrapUtils = __webpack_require__(341);

	var propTypes = {
	  componentClass: _reactPropTypesLibElementType2['default']
	};

	var defaultProps = {
	  componentClass: 'div'
	};

	var Row = (function (_React$Component) {
	  _inherits(Row, _React$Component);

	  function Row() {
	    _classCallCheck(this, Row);

	    _React$Component.apply(this, arguments);
	  }

	  Row.prototype.render = function render() {
	    var _props = this.props;
	    var Component = _props.componentClass;
	    var className = _props.className;

	    var props = _objectWithoutProperties(_props, ['componentClass', 'className']);

	    var _splitBsProps = _utilsBootstrapUtils.splitBsProps(props);

	    var bsProps = _splitBsProps[0];
	    var elementProps = _splitBsProps[1];

	    var classes = _utilsBootstrapUtils.getClassSet(bsProps);

	    return _react2['default'].createElement(Component, _extends({}, elementProps, {
	      className: _classnames2['default'](className, classes)
	    }));
	  };

	  return Row;
	})(_react2['default'].Component);

	Row.propTypes = propTypes;
	Row.defaultProps = defaultProps;

	exports['default'] = _utilsBootstrapUtils.bsClass('row', Row);
	module.exports = exports['default'];

/***/ },
/* 492 */
/***/ function(module, exports, __webpack_require__) {

	'use strict';

	var _extends = __webpack_require__(332)['default'];

	var _inherits = __webpack_require__(254)['default'];

	var _classCallCheck = __webpack_require__(330)['default'];

	var _objectWithoutProperties = __webpack_require__(338)['default'];

	var _interopRequireDefault = __webpack_require__(249)['default'];

	exports.__esModule = true;

	var _react = __webpack_require__(2);

	var _react2 = _interopRequireDefault(_react);

	var _Button = __webpack_require__(359);

	var _Button2 = _interopRequireDefault(_Button);

	var _Dropdown = __webpack_require__(386);

	var _Dropdown2 = _interopRequireDefault(_Dropdown);

	var _SplitToggle = __webpack_require__(493);

	var _SplitToggle2 = _interopRequireDefault(_SplitToggle);

	var _utilsSplitComponentProps = __webpack_require__(413);

	var _utilsSplitComponentProps2 = _interopRequireDefault(_utilsSplitComponentProps);

	var propTypes = _extends({}, _Dropdown2['default'].propTypes, {

	  // Toggle props.
	  bsStyle: _react2['default'].PropTypes.string,
	  bsSize: _react2['default'].PropTypes.string,
	  href: _react2['default'].PropTypes.string,
	  onClick: _react2['default'].PropTypes.func,
	  /**
	   * The content of the split button.
	   */
	  title: _react2['default'].PropTypes.node.isRequired,
	  /**
	   * Accessible label for the toggle; the value of `title` if not specified.
	   */
	  toggleLabel: _react2['default'].PropTypes.string,

	  // Override generated docs from <Dropdown>.
	  /**
	   * @private
	   */
	  children: _react2['default'].PropTypes.node
	});

	var SplitButton = (function (_React$Component) {
	  _inherits(SplitButton, _React$Component);

	  function SplitButton() {
	    _classCallCheck(this, SplitButton);

	    _React$Component.apply(this, arguments);
	  }

	  SplitButton.prototype.render = function render() {
	    var _props = this.props;
	    var bsSize = _props.bsSize;
	    var bsStyle = _props.bsStyle;
	    var title = _props.title;
	    var toggleLabel = _props.toggleLabel;
	    var children = _props.children;

	    var props = _objectWithoutProperties(_props, ['bsSize', 'bsStyle', 'title', 'toggleLabel', 'children']);

	    var _splitComponentProps = _utilsSplitComponentProps2['default'](props, _Dropdown2['default'].ControlledComponent);

	    var dropdownProps = _splitComponentProps[0];
	    var buttonProps = _splitComponentProps[1];

	    return _react2['default'].createElement(
	      _Dropdown2['default'],
	      _extends({}, dropdownProps, {
	        bsSize: bsSize,
	        bsStyle: bsStyle
	      }),
	      _react2['default'].createElement(
	        _Button2['default'],
	        _extends({}, buttonProps, {
	          disabled: props.disabled,
	          bsSize: bsSize,
	          bsStyle: bsStyle
	        }),
	        title
	      ),
	      _react2['default'].createElement(_SplitToggle2['default'], {
	        'aria-label': toggleLabel || title,
	        bsSize: bsSize,
	        bsStyle: bsStyle
	      }),
	      _react2['default'].createElement(
	        _Dropdown2['default'].Menu,
	        null,
	        children
	      )
	    );
	  };

	  return SplitButton;
	})(_react2['default'].Component);

	SplitButton.propTypes = propTypes;

	SplitButton.Toggle = _SplitToggle2['default'];

	exports['default'] = SplitButton;
	module.exports = exports['default'];

/***/ },
/* 493 */
/***/ function(module, exports, __webpack_require__) {

	'use strict';

	var _inherits = __webpack_require__(254)['default'];

	var _classCallCheck = __webpack_require__(330)['default'];

	var _extends = __webpack_require__(332)['default'];

	var _interopRequireDefault = __webpack_require__(249)['default'];

	exports.__esModule = true;

	var _react = __webpack_require__(2);

	var _react2 = _interopRequireDefault(_react);

	var _DropdownToggle = __webpack_require__(410);

	var _DropdownToggle2 = _interopRequireDefault(_DropdownToggle);

	var SplitToggle = (function (_React$Component) {
	  _inherits(SplitToggle, _React$Component);

	  function SplitToggle() {
	    _classCallCheck(this, SplitToggle);

	    _React$Component.apply(this, arguments);
	  }

	  SplitToggle.prototype.render = function render() {
	    return _react2['default'].createElement(_DropdownToggle2['default'], _extends({}, this.props, {
	      useAnchor: false,
	      noCaret: false
	    }));
	  };

	  return SplitToggle;
	})(_react2['default'].Component);

	SplitToggle.defaultProps = _DropdownToggle2['default'].defaultProps;

	exports['default'] = SplitToggle;
	module.exports = exports['default'];

/***/ },
/* 494 */
/***/ function(module, exports, __webpack_require__) {

	'use strict';

	var _extends = __webpack_require__(332)['default'];

	var _inherits = __webpack_require__(254)['default'];

	var _classCallCheck = __webpack_require__(330)['default'];

	var _interopRequireDefault = __webpack_require__(249)['default'];

	exports.__esModule = true;

	var _react = __webpack_require__(2);

	var _react2 = _interopRequireDefault(_react);

	var _TabContainer = __webpack_require__(495);

	var _TabContainer2 = _interopRequireDefault(_TabContainer);

	var _TabContent = __webpack_require__(496);

	var _TabContent2 = _interopRequireDefault(_TabContent);

	var _TabPane = __webpack_require__(497);

	var _TabPane2 = _interopRequireDefault(_TabPane);

	var propTypes = _extends({}, _TabPane2['default'].propTypes, {

	  disabled: _react2['default'].PropTypes.bool,

	  title: _react2['default'].PropTypes.node,

	  /**
	   * tabClassName is used as className for the associated NavItem
	   */
	  tabClassName: _react2['default'].PropTypes.string
	});

	var Tab = (function (_React$Component) {
	  _inherits(Tab, _React$Component);

	  function Tab() {
	    _classCallCheck(this, Tab);

	    _React$Component.apply(this, arguments);
	  }

	  Tab.prototype.render = function render() {
	    var props = _extends({}, this.props);

	    // These props are for the parent `<Tabs>` rather than the `<TabPane>`.
	    delete props.title;
	    delete props.disabled;
	    delete props.tabClassName;

	    return _react2['default'].createElement(_TabPane2['default'], props);
	  };

	  return Tab;
	})(_react2['default'].Component);

	Tab.propTypes = propTypes;

	Tab.Container = _TabContainer2['default'];
	Tab.Content = _TabContent2['default'];
	Tab.Pane = _TabPane2['default'];

	exports['default'] = Tab;
	module.exports = exports['default'];

/***/ },
/* 495 */
/***/ function(module, exports, __webpack_require__) {

	'use strict';

	var _inherits = __webpack_require__(254)['default'];

	var _classCallCheck = __webpack_require__(330)['default'];

	var _objectWithoutProperties = __webpack_require__(338)['default'];

	var _interopRequireDefault = __webpack_require__(249)['default'];

	exports.__esModule = true;

	var _react = __webpack_require__(2);

	var _react2 = _interopRequireDefault(_react);

	var _uncontrollable = __webpack_require__(392);

	var _uncontrollable2 = _interopRequireDefault(_uncontrollable);

	var TAB = 'tab';
	var PANE = 'pane';

	var idPropType = _react.PropTypes.oneOfType([_react.PropTypes.string, _react.PropTypes.number]);

	var propTypes = {
	  /**
	   * HTML id attribute, required if no `generateChildId` prop
	   * is specified.
	   */
	  id: function id(props) {
	    var error = null;

	    if (!props.generateChildId) {
	      for (var _len = arguments.length, args = Array(_len > 1 ? _len - 1 : 0), _key = 1; _key < _len; _key++) {
	        args[_key - 1] = arguments[_key];
	      }

	      error = idPropType.apply(undefined, [props].concat(args));

	      if (!error && !props.id) {
	        error = new Error('In order to properly initialize Tabs in a way that is accessible ' + 'to assistive technologies (such as screen readers) an `id` or a ' + '`generateChildId` prop to TabContainer is required');
	      }
	    }

	    return error;
	  },

	  /**
	   * A function that takes an `eventKey` and `type` and returns a unique id for
	   * child tab `<NavItem>`s and `<TabPane>`s. The function _must_ be a pure
	   * function, meaning it should always return the _same_ id for the same set
	   * of inputs. The default value requires that an `id` to be set for the
	   * `<TabContainer>`.
	   *
	   * The `type` argument will either be `"tab"` or `"pane"`.
	   *
	   * @defaultValue (eventKey, type) => `${this.props.id}-${type}-${key}`
	   */
	  generateChildId: _react.PropTypes.func,

	  /**
	   * A callback fired when a tab is selected.
	   *
	   * @controllable activeKey
	   */
	  onSelect: _react.PropTypes.func,

	  /**
	   * The `eventKey` of the currently active tab.
	   *
	   * @controllable onSelect
	   */
	  activeKey: _react.PropTypes.any
	};

	var childContextTypes = {
	  $bs_tabContainer: _react2['default'].PropTypes.shape({
	    activeKey: _react.PropTypes.any,
	    onSelect: _react.PropTypes.func.isRequired,
	    getTabId: _react.PropTypes.func.isRequired,
	    getPaneId: _react.PropTypes.func.isRequired
	  })
	};

	var TabContainer = (function (_React$Component) {
	  _inherits(TabContainer, _React$Component);

	  function TabContainer() {
	    _classCallCheck(this, TabContainer);

	    _React$Component.apply(this, arguments);
	  }

	  TabContainer.prototype.getChildContext = function getChildContext() {
	    var _props = this.props;
	    var activeKey = _props.activeKey;
	    var onSelect = _props.onSelect;
	    var generateChildId = _props.generateChildId;
	    var id = _props.id;

	    var getId = generateChildId || function (key, type) {
	      return id ? id + '-' + type + '-' + key : null;
	    };

	    return {
	      $bs_tabContainer: {
	        activeKey: activeKey,
	        onSelect: onSelect,
	        getTabId: function getTabId(key) {
	          return getId(key, TAB);
	        },
	        getPaneId: function getPaneId(key) {
	          return getId(key, PANE);
	        }
	      }
	    };
	  };

	  TabContainer.prototype.render = function render() {
	    var _props2 = this.props;
	    var children = _props2.children;

	    var props = _objectWithoutProperties(_props2, ['children']);

	    delete props.generateChildId;
	    delete props.onSelect;
	    delete props.activeKey;

	    return _react2['default'].cloneElement(_react2['default'].Children.only(children), props);
	  };

	  return TabContainer;
	})(_react2['default'].Component);

	TabContainer.propTypes = propTypes;
	TabContainer.childContextTypes = childContextTypes;

	exports['default'] = _uncontrollable2['default'](TabContainer, { activeKey: 'onSelect' });
	module.exports = exports['default'];

/***/ },
/* 496 */
/***/ function(module, exports, __webpack_require__) {

	'use strict';

	var _inherits = __webpack_require__(254)['default'];

	var _classCallCheck = __webpack_require__(330)['default'];

	var _objectWithoutProperties = __webpack_require__(338)['default'];

	var _extends = __webpack_require__(332)['default'];

	var _interopRequireDefault = __webpack_require__(249)['default'];

	exports.__esModule = true;

	var _classnames = __webpack_require__(340);

	var _classnames2 = _interopRequireDefault(_classnames);

	var _react = __webpack_require__(2);

	var _react2 = _interopRequireDefault(_react);

	var _reactPropTypesLibElementType = __webpack_require__(357);

	var _reactPropTypesLibElementType2 = _interopRequireDefault(_reactPropTypesLibElementType);

	var _utilsBootstrapUtils = __webpack_require__(341);

	var propTypes = {
	  componentClass: _reactPropTypesLibElementType2['default'],

	  /**
	   * Sets a default animation strategy for all children `<TabPane>`s. Use
	   * `false` to disable, `true` to enable the default `<Fade>` animation or any
	   * `<Transition>` component.
	   */
	  animation: _react.PropTypes.oneOfType([_react.PropTypes.bool, _reactPropTypesLibElementType2['default']]),

	  /**
	   * Unmount tabs (remove it from the DOM) when they are no longer visible
	   */
	  unmountOnExit: _react.PropTypes.bool
	};

	var defaultProps = {
	  componentClass: 'div',
	  animation: true,
	  unmountOnExit: false
	};

	var contextTypes = {
	  $bs_tabContainer: _react.PropTypes.shape({
	    activeKey: _react.PropTypes.any
	  })
	};

	var childContextTypes = {
	  $bs_tabContent: _react.PropTypes.shape({
	    bsClass: _react.PropTypes.string,
	    animation: _react.PropTypes.oneOfType([_react.PropTypes.bool, _reactPropTypesLibElementType2['default']]),
	    activeKey: _react.PropTypes.any,
	    unmountOnExit: _react.PropTypes.bool,
	    onPaneEnter: _react.PropTypes.func.isRequired,
	    onPaneExited: _react.PropTypes.func.isRequired,
	    exiting: _react.PropTypes.bool.isRequired
	  })
	};

	var TabContent = (function (_React$Component) {
	  _inherits(TabContent, _React$Component);

	  function TabContent(props, context) {
	    _classCallCheck(this, TabContent);

	    _React$Component.call(this, props, context);

	    this.handlePaneEnter = this.handlePaneEnter.bind(this);
	    this.handlePaneExited = this.handlePaneExited.bind(this);

	    // Active entries in state will be `null` unless `animation` is set. Need
	    // to track active child in case keys swap and the active child changes
	    // but the active key does not.
	    this.state = {
	      activeKey: null,
	      activeChild: null
	    };
	  }

	  TabContent.prototype.getChildContext = function getChildContext() {
	    var _props = this.props;
	    var bsClass = _props.bsClass;
	    var animation = _props.animation;
	    var unmountOnExit = _props.unmountOnExit;

	    var stateActiveKey = this.state.activeKey;
	    var containerActiveKey = this.getContainerActiveKey();

	    var activeKey = stateActiveKey != null ? stateActiveKey : containerActiveKey;
	    var exiting = stateActiveKey != null && stateActiveKey !== containerActiveKey;

	    return {
	      $bs_tabContent: {
	        bsClass: bsClass,
	        animation: animation,
	        activeKey: activeKey,
	        unmountOnExit: unmountOnExit,
	        onPaneEnter: this.handlePaneEnter,
	        onPaneExited: this.handlePaneExited,
	        exiting: exiting
	      }
	    };
	  };

	  TabContent.prototype.componentWillReceiveProps = function componentWillReceiveProps(nextProps) {
	    if (!nextProps.animation && this.state.activeChild) {
	      this.setState({ activeKey: null, activeChild: null });
	    }
	  };

	  TabContent.prototype.componentWillUnmount = function componentWillUnmount() {
	    this.isUnmounted = true;
	  };

	  TabContent.prototype.handlePaneEnter = function handlePaneEnter(child, childKey) {
	    if (!this.props.animation) {
	      return false;
	    }

	    // It's possible that this child should be transitioning out.
	    if (childKey !== this.getContainerActiveKey()) {
	      return false;
	    }

	    this.setState({
	      activeKey: childKey,
	      activeChild: child
	    });

	    return true;
	  };

	  TabContent.prototype.handlePaneExited = function handlePaneExited(child) {
	    // This might happen as everything is unmounting.
	    if (this.isUnmounted) {
	      return;
	    }

	    this.setState(function (_ref) {
	      var activeChild = _ref.activeChild;

	      if (activeChild !== child) {
	        return null;
	      }

	      return {
	        activeKey: null,
	        activeChild: null
	      };
	    });
	  };

	  TabContent.prototype.getContainerActiveKey = function getContainerActiveKey() {
	    var tabContainer = this.context.$bs_tabContainer;
	    return tabContainer && tabContainer.activeKey;
	  };

	  TabContent.prototype.render = function render() {
	    var _props2 = this.props;
	    var Component = _props2.componentClass;
	    var className = _props2.className;

	    var props = _objectWithoutProperties(_props2, ['componentClass', 'className']);

	    var _splitBsPropsAndOmit = _utilsBootstrapUtils.splitBsPropsAndOmit(props, ['animation', 'unmountOnExit']);

	    var bsProps = _splitBsPropsAndOmit[0];
	    var elementProps = _splitBsPropsAndOmit[1];

	    return _react2['default'].createElement(Component, _extends({}, elementProps, {
	      className: _classnames2['default'](className, _utilsBootstrapUtils.prefix(bsProps, 'content'))
	    }));
	  };

	  return TabContent;
	})(_react2['default'].Component);

	TabContent.propTypes = propTypes;
	TabContent.defaultProps = defaultProps;
	TabContent.contextTypes = contextTypes;
	TabContent.childContextTypes = childContextTypes;

	exports['default'] = _utilsBootstrapUtils.bsClass('tab', TabContent);
	module.exports = exports['default'];

/***/ },
/* 497 */
/***/ function(module, exports, __webpack_require__) {

	/* WEBPACK VAR INJECTION */(function(process) {'use strict';

	var _inherits = __webpack_require__(254)['default'];

	var _classCallCheck = __webpack_require__(330)['default'];

	var _extends = __webpack_require__(332)['default'];

	var _objectWithoutProperties = __webpack_require__(338)['default'];

	var _interopRequireDefault = __webpack_require__(249)['default'];

	exports.__esModule = true;

	var _classnames = __webpack_require__(340);

	var _classnames2 = _interopRequireDefault(_classnames);

	var _react = __webpack_require__(2);

	var _react2 = _interopRequireDefault(_react);

	var _reactPropTypesLibElementType = __webpack_require__(357);

	var _reactPropTypesLibElementType2 = _interopRequireDefault(_reactPropTypesLibElementType);

	var _warning = __webpack_require__(178);

	var _warning2 = _interopRequireDefault(_warning);

	var _utilsBootstrapUtils = __webpack_require__(341);

	var _utilsCreateChainedFunction = __webpack_require__(347);

	var _utilsCreateChainedFunction2 = _interopRequireDefault(_utilsCreateChainedFunction);

	var _Fade = __webpack_require__(414);

	var _Fade2 = _interopRequireDefault(_Fade);

	var propTypes = {
	  /**
	   * Uniquely identify the `<TabPane>` among its siblings.
	   */
	  eventKey: _react.PropTypes.any,

	  /**
	   * Use animation when showing or hiding `<TabPane>`s. Use `false` to disable,
	   * `true` to enable the default `<Fade>` animation or any `<Transition>`
	   * component.
	   */
	  animation: _react.PropTypes.oneOfType([_react.PropTypes.bool, _reactPropTypesLibElementType2['default']]),

	  /** @private **/
	  id: _react.PropTypes.string,

	  /** @private **/
	  'aria-labelledby': _react.PropTypes.string,

	  /**
	   * If not explicitly specified and rendered in the context of a
	   * `<TabContent>`, the `bsClass` of the `<TabContent>` suffixed by `-pane`.
	   * If otherwise not explicitly specified, `tab-pane`.
	   */
	  bsClass: _react2['default'].PropTypes.string,

	  /**
	   * Transition onEnter callback when animation is not `false`
	   */
	  onEnter: _react.PropTypes.func,

	  /**
	   * Transition onEntering callback when animation is not `false`
	   */
	  onEntering: _react.PropTypes.func,

	  /**
	   * Transition onEntered callback when animation is not `false`
	   */
	  onEntered: _react.PropTypes.func,

	  /**
	   * Transition onExit callback when animation is not `false`
	   */
	  onExit: _react.PropTypes.func,

	  /**
	   * Transition onExiting callback when animation is not `false`
	   */
	  onExiting: _react.PropTypes.func,

	  /**
	   * Transition onExited callback when animation is not `false`
	   */
	  onExited: _react.PropTypes.func,

	  /**
	   * Unmount the tab (remove it from the DOM) when it is no longer visible
	   */
	  unmountOnExit: _react.PropTypes.bool
	};

	var contextTypes = {
	  $bs_tabContainer: _react.PropTypes.shape({
	    getId: _react.PropTypes.func,
	    unmountOnExit: _react.PropTypes.bool
	  }),
	  $bs_tabContent: _react.PropTypes.shape({
	    bsClass: _react.PropTypes.string,
	    animation: _react.PropTypes.oneOfType([_react.PropTypes.bool, _reactPropTypesLibElementType2['default']]),
	    activeKey: _react.PropTypes.any,
	    unmountOnExit: _react.PropTypes.bool,
	    onPaneEnter: _react.PropTypes.func.isRequired,
	    onPaneExited: _react.PropTypes.func.isRequired,
	    exiting: _react.PropTypes.bool.isRequired
	  })
	};

	/**
	 * We override the `<TabContainer>` context so `<Nav>`s in `<TabPane>`s don't
	 * conflict with the top level one.
	 */
	var childContextTypes = {
	  $bs_tabContainer: _react.PropTypes.oneOf([null])
	};

	var TabPane = (function (_React$Component) {
	  _inherits(TabPane, _React$Component);

	  function TabPane(props, context) {
	    _classCallCheck(this, TabPane);

	    _React$Component.call(this, props, context);

	    this.handleEnter = this.handleEnter.bind(this);
	    this.handleExited = this.handleExited.bind(this);

	    this['in'] = false;
	  }

	  TabPane.prototype.getChildContext = function getChildContext() {
	    return {
	      $bs_tabContainer: null
	    };
	  };

	  TabPane.prototype.componentDidMount = function componentDidMount() {
	    if (this.shouldBeIn()) {
	      // In lieu of the action event firing.
	      this.handleEnter();
	    }
	  };

	  TabPane.prototype.componentDidUpdate = function componentDidUpdate() {
	    if (this['in']) {
	      if (!this.shouldBeIn()) {
	        // We shouldn't be active any more. Notify the parent.
	        this.handleExited();
	      }
	    } else if (this.shouldBeIn()) {
	      // We are the active child. Notify the parent.
	      this.handleEnter();
	    }
	  };

	  TabPane.prototype.componentWillUnmount = function componentWillUnmount() {
	    if (this['in']) {
	      // In lieu of the action event firing.
	      this.handleExited();
	    }
	  };

	  TabPane.prototype.handleEnter = function handleEnter() {
	    var tabContent = this.context.$bs_tabContent;
	    if (!tabContent) {
	      return;
	    }

	    this['in'] = tabContent.onPaneEnter(this, this.props.eventKey);
	  };

	  TabPane.prototype.handleExited = function handleExited() {
	    var tabContent = this.context.$bs_tabContent;
	    if (!tabContent) {
	      return;
	    }

	    tabContent.onPaneExited(this);
	    this['in'] = false;
	  };

	  TabPane.prototype.getAnimation = function getAnimation() {
	    if (this.props.animation != null) {
	      return this.props.animation;
	    }

	    var tabContent = this.context.$bs_tabContent;
	    return tabContent && tabContent.animation;
	  };

	  TabPane.prototype.isActive = function isActive() {
	    var tabContent = this.context.$bs_tabContent;
	    var activeKey = tabContent && tabContent.activeKey;

	    return this.props.eventKey === activeKey;
	  };

	  TabPane.prototype.shouldBeIn = function shouldBeIn() {
	    return this.getAnimation() && this.isActive();
	  };

	  TabPane.prototype.render = function render() {
	    var _props = this.props;
	    var eventKey = _props.eventKey;
	    var className = _props.className;
	    var onEnter = _props.onEnter;
	    var onEntering = _props.onEntering;
	    var onEntered = _props.onEntered;
	    var onExit = _props.onExit;
	    var onExiting = _props.onExiting;
	    var onExited = _props.onExited;
	    var propsUnmountOnExit = _props.unmountOnExit;

	    var props = _objectWithoutProperties(_props, ['eventKey', 'className', 'onEnter', 'onEntering', 'onEntered', 'onExit', 'onExiting', 'onExited', 'unmountOnExit']);

	    var _context = this.context;
	    var tabContent = _context.$bs_tabContent;
	    var tabContainer = _context.$bs_tabContainer;

	    var _splitBsPropsAndOmit = _utilsBootstrapUtils.splitBsPropsAndOmit(props, ['animation']);

	    var bsProps = _splitBsPropsAndOmit[0];
	    var elementProps = _splitBsPropsAndOmit[1];

	    var active = this.isActive();
	    var animation = this.getAnimation();

	    var unmountOnExit = propsUnmountOnExit != null ? propsUnmountOnExit : tabContent && tabContent.unmountOnExit;

	    if (!active && !animation && unmountOnExit) {
	      return null;
	    }

	    var Transition = animation === true ? _Fade2['default'] : animation || null;

	    if (tabContent) {
	      bsProps.bsClass = _utilsBootstrapUtils.prefix(tabContent, 'pane');
	    }

	    var classes = _extends({}, _utilsBootstrapUtils.getClassSet(bsProps), {
	      active: active
	    });

	    if (tabContainer) {
	      process.env.NODE_ENV !== 'production' ? _warning2['default'](!elementProps.id && !elementProps['aria-labelledby'], 'In the context of a `<TabContainer>`, `<TabPanes>` are given ' + 'generated `id` and `aria-labelledby` attributes for the sake of ' + 'proper component accessibility. Any provided ones will be ignored. ' + 'To control these attributes directly provide a `generateChildId` ' + 'prop to the parent `<TabContainer>`.') : undefined;

	      elementProps.id = tabContainer.getPaneId(eventKey);
	      elementProps['aria-labelledby'] = tabContainer.getTabId(eventKey);
	    }

	    var pane = _react2['default'].createElement('div', _extends({}, elementProps, {
	      role: 'tabpanel',
	      'aria-hidden': !active,
	      className: _classnames2['default'](className, classes)
	    }));

	    if (Transition) {
	      var exiting = tabContent && tabContent.exiting;

	      return _react2['default'].createElement(
	        Transition,
	        {
	          'in': active && !exiting,
	          onEnter: _utilsCreateChainedFunction2['default'](this.handleEnter, onEnter),
	          onEntering: onEntering,
	          onEntered: onEntered,
	          onExit: onExit,
	          onExiting: onExiting,
	          onExited: _utilsCreateChainedFunction2['default'](this.handleExited, onExited),
	          unmountOnExit: unmountOnExit
	        },
	        pane
	      );
	    }

	    return pane;
	  };

	  return TabPane;
	})(_react2['default'].Component);

	TabPane.propTypes = propTypes;
	TabPane.contextTypes = contextTypes;
	TabPane.childContextTypes = childContextTypes;

	exports['default'] = _utilsBootstrapUtils.bsClass('tab-pane', TabPane);
	module.exports = exports['default'];
	/* WEBPACK VAR INJECTION */}.call(exports, __webpack_require__(4)))

/***/ },
/* 498 */
/***/ function(module, exports, __webpack_require__) {

	'use strict';

	var _inherits = __webpack_require__(254)['default'];

	var _classCallCheck = __webpack_require__(330)['default'];

	var _extends = __webpack_require__(332)['default'];

	var _objectWithoutProperties = __webpack_require__(338)['default'];

	var _interopRequireDefault = __webpack_require__(249)['default'];

	exports.__esModule = true;

	var _classnames = __webpack_require__(340);

	var _classnames2 = _interopRequireDefault(_classnames);

	var _react = __webpack_require__(2);

	var _react2 = _interopRequireDefault(_react);

	var _utilsBootstrapUtils = __webpack_require__(341);

	var propTypes = {
	  striped: _react2['default'].PropTypes.bool,
	  bordered: _react2['default'].PropTypes.bool,
	  condensed: _react2['default'].PropTypes.bool,
	  hover: _react2['default'].PropTypes.bool,
	  responsive: _react2['default'].PropTypes.bool
	};

	var defaultProps = {
	  bordered: false,
	  condensed: false,
	  hover: false,
	  responsive: false,
	  striped: false
	};

	var Table = (function (_React$Component) {
	  _inherits(Table, _React$Component);

	  function Table() {
	    _classCallCheck(this, Table);

	    _React$Component.apply(this, arguments);
	  }

	  Table.prototype.render = function render() {
	    var _extends2;

	    var _props = this.props;
	    var striped = _props.striped;
	    var bordered = _props.bordered;
	    var condensed = _props.condensed;
	    var hover = _props.hover;
	    var responsive = _props.responsive;
	    var className = _props.className;

	    var props = _objectWithoutProperties(_props, ['striped', 'bordered', 'condensed', 'hover', 'responsive', 'className']);

	    var _splitBsProps = _utilsBootstrapUtils.splitBsProps(props);

	    var bsProps = _splitBsProps[0];
	    var elementProps = _splitBsProps[1];

	    var classes = _extends({}, _utilsBootstrapUtils.getClassSet(bsProps), (_extends2 = {}, _extends2[_utilsBootstrapUtils.prefix(bsProps, 'striped')] = striped, _extends2[_utilsBootstrapUtils.prefix(bsProps, 'bordered')] = bordered, _extends2[_utilsBootstrapUtils.prefix(bsProps, 'condensed')] = condensed, _extends2[_utilsBootstrapUtils.prefix(bsProps, 'hover')] = hover, _extends2));

	    var table = _react2['default'].createElement('table', _extends({}, elementProps, {
	      className: _classnames2['default'](className, classes)
	    }));

	    if (responsive) {
	      return _react2['default'].createElement(
	        'div',
	        { className: _utilsBootstrapUtils.prefix(bsProps, 'responsive') },
	        table
	      );
	    }

	    return table;
	  };

	  return Table;
	})(_react2['default'].Component);

	Table.propTypes = propTypes;
	Table.defaultProps = defaultProps;

	exports['default'] = _utilsBootstrapUtils.bsClass('table', Table);
	module.exports = exports['default'];

/***/ },
/* 499 */
/***/ function(module, exports, __webpack_require__) {

	'use strict';

	var _inherits = __webpack_require__(254)['default'];

	var _classCallCheck = __webpack_require__(330)['default'];

	var _objectWithoutProperties = __webpack_require__(338)['default'];

	var _extends = __webpack_require__(332)['default'];

	var _interopRequireDefault = __webpack_require__(249)['default'];

	exports.__esModule = true;

	var _react = __webpack_require__(2);

	var _react2 = _interopRequireDefault(_react);

	var _reactPropTypesLibIsRequiredForA11y = __webpack_require__(391);

	var _reactPropTypesLibIsRequiredForA11y2 = _interopRequireDefault(_reactPropTypesLibIsRequiredForA11y);

	var _uncontrollable = __webpack_require__(392);

	var _uncontrollable2 = _interopRequireDefault(_uncontrollable);

	var _Nav = __webpack_require__(461);

	var _Nav2 = _interopRequireDefault(_Nav);

	var _NavItem = __webpack_require__(468);

	var _NavItem2 = _interopRequireDefault(_NavItem);

	var _TabContainer = __webpack_require__(495);

	var _TabContainer2 = _interopRequireDefault(_TabContainer);

	var _TabContent = __webpack_require__(496);

	var _TabContent2 = _interopRequireDefault(_TabContent);

	var _utilsBootstrapUtils = __webpack_require__(341);

	var _utilsValidComponentChildren = __webpack_require__(348);

	var _utilsValidComponentChildren2 = _interopRequireDefault(_utilsValidComponentChildren);

	var TabContainer = _TabContainer2['default'].ControlledComponent;

	var propTypes = {
	  /**
	   * Mark the Tab with a matching `eventKey` as active.
	   *
	   * @controllable onSelect
	   */
	  activeKey: _react2['default'].PropTypes.any,

	  /**
	   * Navigation style
	   */
	  bsStyle: _react2['default'].PropTypes.oneOf(['tabs', 'pills']),

	  animation: _react2['default'].PropTypes.bool,

	  id: _reactPropTypesLibIsRequiredForA11y2['default'](_react2['default'].PropTypes.oneOfType([_react2['default'].PropTypes.string, _react2['default'].PropTypes.number])),

	  /**
	   * Callback fired when a Tab is selected.
	   *
	   * ```js
	   * function (
	   * 	Any eventKey,
	   * 	SyntheticEvent event?
	   * )
	   * ```
	   *
	   * @controllable activeKey
	   */
	  onSelect: _react2['default'].PropTypes.func,

	  /**
	   * Unmount tabs (remove it from the DOM) when it is no longer visible
	   */
	  unmountOnExit: _react2['default'].PropTypes.bool
	};

	var defaultProps = {
	  bsStyle: 'tabs',
	  animation: true,
	  unmountOnExit: false
	};

	function getDefaultActiveKey(children) {
	  var defaultActiveKey = undefined;
	  _utilsValidComponentChildren2['default'].forEach(children, function (child) {
	    if (defaultActiveKey == null) {
	      defaultActiveKey = child.props.eventKey;
	    }
	  });

	  return defaultActiveKey;
	}

	var Tabs = (function (_React$Component) {
	  _inherits(Tabs, _React$Component);

	  function Tabs() {
	    _classCallCheck(this, Tabs);

	    _React$Component.apply(this, arguments);
	  }

	  Tabs.prototype.renderTab = function renderTab(child) {
	    var _child$props = child.props;
	    var title = _child$props.title;
	    var eventKey = _child$props.eventKey;
	    var disabled = _child$props.disabled;
	    var tabClassName = _child$props.tabClassName;

	    if (title == null) {
	      return null;
	    }

	    return _react2['default'].createElement(
	      _NavItem2['default'],
	      {
	        eventKey: eventKey,
	        disabled: disabled,
	        className: tabClassName
	      },
	      title
	    );
	  };

	  Tabs.prototype.render = function render() {
	    var _props = this.props;
	    var id = _props.id;
	    var onSelect = _props.onSelect;
	    var animation = _props.animation;
	    var unmountOnExit = _props.unmountOnExit;
	    var bsClass = _props.bsClass;
	    var className = _props.className;
	    var style = _props.style;
	    var children = _props.children;
	    var _props$activeKey = _props.activeKey;
	    var activeKey = _props$activeKey === undefined ? getDefaultActiveKey(children) : _props$activeKey;

	    var props = _objectWithoutProperties(_props, ['id', 'onSelect', 'animation', 'unmountOnExit', 'bsClass', 'className', 'style', 'children', 'activeKey']);

	    return _react2['default'].createElement(
	      TabContainer,
	      {
	        id: id,
	        activeKey: activeKey,
	        onSelect: onSelect,
	        className: className,
	        style: style
	      },
	      _react2['default'].createElement(
	        'div',
	        null,
	        _react2['default'].createElement(
	          _Nav2['default'],
	          _extends({}, props, {
	            role: 'tablist'
	          }),
	          _utilsValidComponentChildren2['default'].map(children, this.renderTab)
	        ),
	        _react2['default'].createElement(
	          _TabContent2['default'],
	          {
	            bsClass: bsClass,
	            animation: animation,
	            unmountOnExit: unmountOnExit
	          },
	          children
	        )
	      )
	    );
	  };

	  return Tabs;
	})(_react2['default'].Component);

	Tabs.propTypes = propTypes;
	Tabs.defaultProps = defaultProps;

	_utilsBootstrapUtils.bsClass('tab', Tabs);

	exports['default'] = _uncontrollable2['default'](Tabs, { activeKey: 'onSelect' });
	module.exports = exports['default'];

/***/ },
/* 500 */
/***/ function(module, exports, __webpack_require__) {

	'use strict';

	var _inherits = __webpack_require__(254)['default'];

	var _classCallCheck = __webpack_require__(330)['default'];

	var _objectWithoutProperties = __webpack_require__(338)['default'];

	var _extends = __webpack_require__(332)['default'];

	var _interopRequireDefault = __webpack_require__(249)['default'];

	exports.__esModule = true;

	var _classnames = __webpack_require__(340);

	var _classnames2 = _interopRequireDefault(_classnames);

	var _react = __webpack_require__(2);

	var _react2 = _interopRequireDefault(_react);

	var _SafeAnchor = __webpack_require__(356);

	var _SafeAnchor2 = _interopRequireDefault(_SafeAnchor);

	var _utilsBootstrapUtils = __webpack_require__(341);

	var propTypes = {
	  src: _react2['default'].PropTypes.string,
	  alt: _react2['default'].PropTypes.string,
	  href: _react2['default'].PropTypes.string
	};

	var Thumbnail = (function (_React$Component) {
	  _inherits(Thumbnail, _React$Component);

	  function Thumbnail() {
	    _classCallCheck(this, Thumbnail);

	    _React$Component.apply(this, arguments);
	  }

	  Thumbnail.prototype.render = function render() {
	    var _props = this.props;
	    var src = _props.src;
	    var alt = _props.alt;
	    var className = _props.className;
	    var children = _props.children;

	    var props = _objectWithoutProperties(_props, ['src', 'alt', 'className', 'children']);

	    var _splitBsProps = _utilsBootstrapUtils.splitBsProps(props);

	    var bsProps = _splitBsProps[0];
	    var elementProps = _splitBsProps[1];

	    var Component = elementProps.href ? _SafeAnchor2['default'] : 'div';
	    var classes = _utilsBootstrapUtils.getClassSet(bsProps);

	    return _react2['default'].createElement(
	      Component,
	      _extends({}, elementProps, {
	        className: _classnames2['default'](className, classes)
	      }),
	      _react2['default'].createElement('img', { src: src, alt: alt }),
	      children && _react2['default'].createElement(
	        'div',
	        { className: 'caption' },
	        children
	      )
	    );
	  };

	  return Thumbnail;
	})(_react2['default'].Component);

	Thumbnail.propTypes = propTypes;

	exports['default'] = _utilsBootstrapUtils.bsClass('thumbnail', Thumbnail);
	module.exports = exports['default'];

/***/ },
/* 501 */
/***/ function(module, exports, __webpack_require__) {

	'use strict';

	var _inherits = __webpack_require__(254)['default'];

	var _classCallCheck = __webpack_require__(330)['default'];

	var _extends = __webpack_require__(332)['default'];

	var _objectWithoutProperties = __webpack_require__(338)['default'];

	var _interopRequireDefault = __webpack_require__(249)['default'];

	exports.__esModule = true;

	var _classnames = __webpack_require__(340);

	var _classnames2 = _interopRequireDefault(_classnames);

	var _react = __webpack_require__(2);

	var _react2 = _interopRequireDefault(_react);

	var _reactPropTypesLibIsRequiredForA11y = __webpack_require__(391);

	var _reactPropTypesLibIsRequiredForA11y2 = _interopRequireDefault(_reactPropTypesLibIsRequiredForA11y);

	var _utilsBootstrapUtils = __webpack_require__(341);

	var propTypes = {
	  /**
	   * An html id attribute, necessary for accessibility
	   * @type {string|number}
	   * @required
	   */
	  id: _reactPropTypesLibIsRequiredForA11y2['default'](_react2['default'].PropTypes.oneOfType([_react2['default'].PropTypes.string, _react2['default'].PropTypes.number])),

	  /**
	   * Sets the direction the Tooltip is positioned towards.
	   */
	  placement: _react2['default'].PropTypes.oneOf(['top', 'right', 'bottom', 'left']),

	  /**
	   * The "top" position value for the Tooltip.
	   */
	  positionTop: _react2['default'].PropTypes.oneOfType([_react2['default'].PropTypes.number, _react2['default'].PropTypes.string]),
	  /**
	   * The "left" position value for the Tooltip.
	   */
	  positionLeft: _react2['default'].PropTypes.oneOfType([_react2['default'].PropTypes.number, _react2['default'].PropTypes.string]),

	  /**
	   * The "top" position value for the Tooltip arrow.
	   */
	  arrowOffsetTop: _react2['default'].PropTypes.oneOfType([_react2['default'].PropTypes.number, _react2['default'].PropTypes.string]),
	  /**
	   * The "left" position value for the Tooltip arrow.
	   */
	  arrowOffsetLeft: _react2['default'].PropTypes.oneOfType([_react2['default'].PropTypes.number, _react2['default'].PropTypes.string])
	};

	var defaultProps = {
	  placement: 'right'
	};

	var Tooltip = (function (_React$Component) {
	  _inherits(Tooltip, _React$Component);

	  function Tooltip() {
	    _classCallCheck(this, Tooltip);

	    _React$Component.apply(this, arguments);
	  }

	  Tooltip.prototype.render = function render() {
	    var _extends2;

	    var _props = this.props;
	    var placement = _props.placement;
	    var positionTop = _props.positionTop;
	    var positionLeft = _props.positionLeft;
	    var arrowOffsetTop = _props.arrowOffsetTop;
	    var arrowOffsetLeft = _props.arrowOffsetLeft;
	    var className = _props.className;
	    var style = _props.style;
	    var children = _props.children;

	    var props = _objectWithoutProperties(_props, ['placement', 'positionTop', 'positionLeft', 'arrowOffsetTop', 'arrowOffsetLeft', 'className', 'style', 'children']);

	    var _splitBsProps = _utilsBootstrapUtils.splitBsProps(props);

	    var bsProps = _splitBsProps[0];
	    var elementProps = _splitBsProps[1];

	    var classes = _extends({}, _utilsBootstrapUtils.getClassSet(bsProps), (_extends2 = {}, _extends2[placement] = true, _extends2));

	    var outerStyle = _extends({
	      top: positionTop,
	      left: positionLeft
	    }, style);

	    var arrowStyle = {
	      top: arrowOffsetTop,
	      left: arrowOffsetLeft
	    };

	    return _react2['default'].createElement(
	      'div',
	      _extends({}, elementProps, {
	        role: 'tooltip',
	        className: _classnames2['default'](className, classes),
	        style: outerStyle
	      }),
	      _react2['default'].createElement('div', { className: _utilsBootstrapUtils.prefix(bsProps, 'arrow'), style: arrowStyle }),
	      _react2['default'].createElement(
	        'div',
	        { className: _utilsBootstrapUtils.prefix(bsProps, 'inner') },
	        children
	      )
	    );
	  };

	  return Tooltip;
	})(_react2['default'].Component);

	Tooltip.propTypes = propTypes;
	Tooltip.defaultProps = defaultProps;

	exports['default'] = _utilsBootstrapUtils.bsClass('tooltip', Tooltip);
	module.exports = exports['default'];

/***/ },
/* 502 */
/***/ function(module, exports, __webpack_require__) {

	'use strict';

	var _inherits = __webpack_require__(254)['default'];

	var _classCallCheck = __webpack_require__(330)['default'];

	var _objectWithoutProperties = __webpack_require__(338)['default'];

	var _extends = __webpack_require__(332)['default'];

	var _interopRequireDefault = __webpack_require__(249)['default'];

	exports.__esModule = true;

	var _classnames = __webpack_require__(340);

	var _classnames2 = _interopRequireDefault(_classnames);

	var _react = __webpack_require__(2);

	var _react2 = _interopRequireDefault(_react);

	var _utilsBootstrapUtils = __webpack_require__(341);

	var _utilsStyleConfig = __webpack_require__(346);

	var Well = (function (_React$Component) {
	  _inherits(Well, _React$Component);

	  function Well() {
	    _classCallCheck(this, Well);

	    _React$Component.apply(this, arguments);
	  }

	  Well.prototype.render = function render() {
	    var _props = this.props;
	    var className = _props.className;

	    var props = _objectWithoutProperties(_props, ['className']);

	    var _splitBsProps = _utilsBootstrapUtils.splitBsProps(props);

	    var bsProps = _splitBsProps[0];
	    var elementProps = _splitBsProps[1];

	    var classes = _utilsBootstrapUtils.getClassSet(bsProps);

	    return _react2['default'].createElement('div', _extends({}, elementProps, {
	      className: _classnames2['default'](className, classes)
	    }));
	  };

	  return Well;
	})(_react2['default'].Component);

	exports['default'] = _utilsBootstrapUtils.bsClass('well', _utilsBootstrapUtils.bsSizes([_utilsStyleConfig.Size.LARGE, _utilsStyleConfig.Size.SMALL], Well));
	module.exports = exports['default'];

/***/ },
/* 503 */
/***/ function(module, exports, __webpack_require__) {

	'use strict';

	var _interopRequireWildcard = __webpack_require__(251)['default'];

	var _interopRequireDefault = __webpack_require__(249)['default'];

	exports.__esModule = true;

	var _bootstrapUtils2 = __webpack_require__(341);

	var _bootstrapUtils = _interopRequireWildcard(_bootstrapUtils2);

	exports.bootstrapUtils = _bootstrapUtils;

	var _createChainedFunction2 = __webpack_require__(347);

	var _createChainedFunction3 = _interopRequireDefault(_createChainedFunction2);

	exports.createChainedFunction = _createChainedFunction3['default'];

	var _ValidComponentChildren2 = __webpack_require__(348);

	var _ValidComponentChildren3 = _interopRequireDefault(_ValidComponentChildren2);

	exports.ValidComponentChildren = _ValidComponentChildren3['default'];

/***/ },
/* 504 */
/***/ function(module, exports, __webpack_require__) {

	"use strict";

	Object.defineProperty(exports, "__esModule", {
	  value: true
	});

	var _react = __webpack_require__(2);

	var _react2 = _interopRequireDefault(_react);

	function _interopRequireDefault(obj) { return obj && obj.__esModule ? obj : { default: obj }; }

	var Footer = function Footer(props) {

	  return _react2.default.createElement(
	    "div",
	    null,
	    _react2.default.createElement("div", { className: "footer-head red" }),
	    _react2.default.createElement(
	      "footer",
	      { className: "footer" },
	      "Mainstreet Footer"
	    )
	  );
	};

	exports.default = Footer;

/***/ }
/******/ ]);